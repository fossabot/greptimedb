var searchIndex = JSON.parse('{\
"api":{"doc":"","t":"DLLLLLLLLLLALLLLCAMLLALLLLLLALNDENDNDGNDLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMDLLFLFLLLLLLLLLFFFLFFFFFFFFFLLLLLFFFLADDDDDDDDDDDDDDDDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMMMMMMMAMMMLMMMAMMLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDNNDEDDDDNNDNDDDDDNNNNNDNNRDDDDDDNNNNNDNNDEDDDDNDDDDDDDDDDEDNDNNNNNNNNNNDDNNNNDDAMMMALLLAMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAMMMMMMLLLMMLMMLLMMMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAALLLMMMMAAMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMLMAMMMMMMMLMMLLLMMAAMAMMMAAMMMMMMMMMMMMMMLLLMMMMLLLLLLLLLMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNENLLLLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLDMMLLLLLMMLMMMMLLMMLLLMMMMMMMLLMMMMMMMMMLLLLMMMMLFNNNNENLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLMLLLLLLLLLLLLLIDLMLLLLLLLLLLKKMLLLLLMLMLLLLMLLLLLLNNNNENNLLLLLLLLLLLLLLLLLLNELLLLLLLLLLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLIDLMLLLLLLLLLLKMLLLLLMLMLLLLMLLLLLLDDDDDDDDDDDNDNEDDNDDENNDDDNDDDNNRDDDDDDDDDEDDDDEDDDDDDDDDDDMMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMMALLLMMLLLMAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMAAMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMAAAMMMMMMLMLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMMLLLLLLLLLLLLLMAAMALMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLMLLLLLLLLLLLLLLIDLMKLLLLLLLLLLMLLLLLMLMLLLKLMLLLLLLDLLLLLLLLLMLLLLLLLLLLLLLLIDLMLLLLLLLLLLMLLLLLMLMLLLLMKLLLLLLDLLLLLLLLLLLMLLLLLLLLLLLLLIDQLMKLLLLLLLLLLKMLLLLLMLMLLLLMLLLLLLDLLLLLLLLLMLLLLLLLLLLLLLLLIDLMLLLLLLLLLLMLLLLKLMLMLLLLMLLLLKLLNELLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLIDLMKKKLLLLLLKKLLLLMLLLLLMLMLLLKKLMLLLLLLNNNENLLLLLLLLLLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLIDLMLLLLLLLLLLKMLLLLLMLMLLLLMLLLLLLNENLLLLLLLLLLLLLLLLLLNNENLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDMMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMAMMMMMMMMMMMAAMMMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLNENNNNNNNNNLLLLLLLLLLLLLLLLLLLLIDLMLLLLLLLLLLKMLLLLLMLMLLLLMLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNELLLLLLLLLLLLLLLLLL","n":["DecodeError","as_error_source","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","from","from_ref","greptime_proto","helper","inner","into","into_request","prom_store","provide","to_owned","to_string","try_from","try_into","type_id","v1","vzip","ConvertColumnDefaultConstraint","ConvertColumnDefaultConstraintSnafu","Error","IntoColumnDataType","IntoColumnDataTypeSnafu","InvalidColumnDefaultConstraint","InvalidColumnDefaultConstraintSnafu","Result","UnknownColumnDataType","UnknownColumnDataTypeSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","column","column","datatype","debug_fmt","description","fail","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","next","provide","source","status_code","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","column","column","datatype","error","from","location","location","location","location","source","source","ColumnDataTypeWrapper","borrow","borrow_mut","convert_i128_to_interval","datatype","ddl_request_type","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","into","into_request","is_column_type_eq","is_column_type_value_eq","is_semantic_type_eq","new","pb_value_to_value_ref","pb_values_to_values","pb_values_to_vector_ref","proto_value_type","push_vals","query_request_type","request_type","to_column_data_type","to_proto_value","try_from","try_from","try_into","try_new","type_id","value_to_grpc_value","values_with_capacity","vectors_to_rows","vzip","remote","Chunk","ChunkedReadResponse","ChunkedSeries","Exemplar","Label","LabelMatcher","Labels","MetricMetadata","Query","QueryResult","ReadHints","ReadRequest","ReadResponse","Sample","TimeSeries","WriteRequest","accepted_response_types","accepted_response_types","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by","chunk","chunked_series","chunks","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","end_ms","end_timestamp_ms","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exemplars","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","func","grouping","help","hints","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","label_matcher","labels","labels","labels","labels","matchers","max_time_ms","metadata","metric_family_name","metric_metadata","min_time_ms","name","name","push_accepted_response_types","queries","query_index","range_ms","read_request","results","samples","set_type","set_type","set_type","start_ms","start_timestamp_ms","step_ms","timeseries","timeseries","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type","type","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit","value","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Encoding","Unknown","Xor","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","get_hash","hash","into","into_request","is_valid","partial_cmp","to_owned","try_from","try_from","try_into","type_id","vzip","Eq","Neq","Nre","Re","Type","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","get_hash","hash","into","into_request","is_valid","partial_cmp","to_owned","try_from","try_from","try_into","type_id","vzip","Counter","Gauge","Gaugehistogram","Histogram","Info","MetricType","Stateset","Summary","Unknown","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","get_hash","hash","into","into_request","is_valid","partial_cmp","to_owned","try_from","try_from","try_into","type_id","vzip","ResponseType","Samples","StreamedXorChunks","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","get_hash","hash","into","into_request","is_valid","partial_cmp","to_owned","try_from","try_from","try_into","type_id","vzip","AddColumn","AddColumnLocation","AddColumns","AffectedRows","AlterExpr","AuthHeader","Basic","Binary","Boolean","Column","ColumnDataType","ColumnDef","ColumnSchema","CreateDatabaseExpr","CreateTableExpr","Date","Datetime","DdlRequest","Delete","DeleteRequest","DeleteRequests","DropColumn","DropColumns","DropTableExpr","DurationMicrosecond","DurationMillisecond","DurationNanosecond","DurationSecond","Field","FlightMetadata","Float32","Float64","GREPTIME_GRPC_DESC","GreptimeRequest","GreptimeResponse","HealthCheckRequest","HealthCheckResponse","InsertRequest","InsertRequests","Int16","Int32","Int64","Int8","IntervalDayTime","IntervalMonthDayNano","IntervalMonthDayNano","IntervalYearMonth","Mutation","OpType","PromInstantQuery","PromRangeQuery","PromqlRequest","PromqlResponse","Put","QueryRequest","RenameTable","RequestHeader","ResponseHeader","Row","RowDeleteRequest","RowDeleteRequests","RowInsertRequest","RowInsertRequests","Rows","SemanticType","Status","String","TableId","Tag","TimeMicrosecond","TimeMillisecond","TimeNanosecond","TimeSecond","Timestamp","TimestampMicrosecond","TimestampMillisecond","TimestampNanosecond","TimestampSecond","Token","TruncateTableExpr","Uint16","Uint32","Uint64","Uint8","Value","WalEntry","add_column_location","add_columns","affected_rows","after_column_name","alter_expr","as_str_name","as_str_name","as_str_name","auth_header","auth_scheme","authorization","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog","catalog_name","catalog_name","catalog_name","catalog_name","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","column","column_def","column_def","column_defs","column_name","column_name","columns","comment","compare","compare","compare","create_if_not_exists","create_if_not_exists","data_type","data_type","database_name","datatype","datatype","datatype","datatype","days","dbname","ddl_request","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_constraint","deletes","deletes","desc","deserialize","drop_columns","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","end","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err_msg","expr","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","from_i32","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str_name","from_str_name","from_str_name","get_hash","get_hash","get_hash","greptime_database_client","greptime_database_server","greptime_request","greptime_response","hash","hash","hash","header","header","header","header","health_check_client","health_check_server","id","inserts","inserts","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_nullable","is_valid","is_valid","is_valid","key_columns","kind","location","location_type","location_type","meta","months","mutations","name","name","nanoseconds","new_table_name","null_mask","op_type","op_type","options","partial_cmp","partial_cmp","partial_cmp","password","primary_keys","prometheus_gateway_client","prometheus_gateway_server","promql","promql_request","query","query","query","query_request","region","request","response","row_count","row_count","rows","rows","rows","rows","schema","schema","schema_name","schema_name","schema_name","schema_name","semantic_type","semantic_type","semantic_type","semantic_type","semantic_type","semantic_type","sequence","serialize","set_data_type","set_datatype","set_datatype","set_location_type","set_op_type","set_semantic_type","set_semantic_type","set_semantic_type","span_id","start","status","status_code","step","table_id","table_id","table_id","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_options","time","time_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token","trace_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","username","value","value","value_data","values","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","After","First","LocationType","as_str_name","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_i32","from_ref","from_str_name","get_hash","hash","into","into_request","is_valid","partial_cmp","to_owned","try_from","try_from","try_into","type_id","vzip","AddColumns","DropColumns","Kind","RenameTable","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","AuthScheme","Basic","Token","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","Values","binary_values","bool_values","borrow","borrow_mut","clear","clone","clone_into","date_values","datetime_values","default","duration_microsecond_values","duration_millisecond_values","duration_nanosecond_values","duration_second_values","encoded_len","eq","f32_values","f64_values","fmt","from","from_ref","i16_values","i32_values","i64_values","i8_values","interval_day_time_values","interval_month_day_nano_values","interval_year_month_values","into","into_request","string_values","time_microsecond_values","time_millisecond_values","time_nanosecond_values","time_second_values","timestamp_microsecond_values","timestamp_millisecond_values","timestamp_nanosecond_values","timestamp_second_values","to_owned","try_from","try_into","type_id","u16_values","u32_values","u64_values","u8_values","vzip","try_as_column_schema","Alter","CreateDatabase","CreateTable","DropTable","Expr","TruncateTable","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","GreptimeDatabaseClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","handle","handle_requests","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","GreptimeDatabase","GreptimeDatabaseServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","handle","handle_requests","inner","into","into_make_service","into_make_service_with_connect_info","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","Ddl","Deletes","Inserts","Query","Request","RowDeletes","RowInserts","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","AffectedRows","Response","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","HealthCheckClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","health_check","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","HealthCheck","HealthCheckServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","health_check","inner","into","into_make_service","into_make_service_with_connect_info","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","AlterTableTask","AskLeaderRequest","AskLeaderResponse","BatchDeleteRequest","BatchDeleteResponse","BatchGetRequest","BatchGetResponse","BatchPutRequest","BatchPutResponse","CompareAndPutRequest","CompareAndPutResponse","Create","CreateTableTask","Datanode","DdlTaskType","DeleteRangeRequest","DeleteRangeResponse","Drop","DropTableTask","Error","ErrorCode","Follower","Frontend","HeartbeatRequest","HeartbeatResponse","KeyValue","Leader","LockRequest","LockResponse","MailboxMessage","NotEnoughAvailableDatanodes","NotLeader","PROTOCOL_VERSION","Partition","Peer","PeerDict","PutRequest","PutResponse","RangeRequest","RangeResponse","Region","RegionLease","RegionRole","RegionRoute","RegionStat","RequestHeader","ResponseHeader","Role","SubmitDdlTaskRequest","SubmitDdlTaskResponse","Table","TableId","TableName","TableRoute","TableRouteValue","TimeInterval","TruncateTableTask","UnlockRequest","UnlockResponse","addr","alter_table","approximate_bytes","approximate_rows","as_str_name","as_str_name","as_str_name","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog_name","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cluster_client","cluster_id","cluster_id","cluster_server","cmp","cmp","cmp","code","column_list","compare","compare","compare","create_table","ddl_task_client","ddl_task_server","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deleted","drop_table","duration_since_epoch","duration_since_epoch","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","end_timestamp_millis","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err_msg","error","expect","expire_secs","failed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","follower_peer_indexes","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","from_i32","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str_name","from_str_name","from_str_name","get_hash","get_hash","get_hash","get_hash","get_or_insert","hash","hash","hash","hash","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","header","heartbeat_client","heartbeat_server","id","id","id","id","id","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_peers","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_not_leader","is_not_leader","is_not_leader","is_valid","is_valid","is_valid","json_message","key","key","key","key","key","key","key","key","keys","keys","keys_only","kvs","kvs","kvs","leader","leader_peer_index","lease_seconds","limit","lock_client","lock_server","mailbox_message","mailbox_message","mailbox_message","member_id","more","name","name","new","node_epoch","not_enough_available_datanodes","partial_cmp","partial_cmp","partial_cmp","partition","partitions","payload","peer","peers","peers","prev_kv","prev_kv","prev_kv","prev_kv","prev_kv","prev_kv","prev_kvs","prev_kvs","prev_kvs","protocol_version","protocol_version","range_end","range_end","rcus","region","region_id","region_ids","region_lease","region_routes","region_stats","report_interval","role","role","role","role","schema_name","set_header","set_header","set_header","set_header","set_header","set_header","set_header","set_header","set_header","set_header","set_header","set_role","set_role","start_timestamp_millis","store_client","store_server","subject","submit_ddl_task_request","success","success","table","table_id","table_info","table_name","table_name","table_route","table_schema","task","timestamp_millis","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_table","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value_list","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wcus","ClusterClient","accept_compressed","batch_get","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","range","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Cluster","ClusterServer","accept_compressed","accept_compression_encodings","batch_get","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","inner","into","into_make_service","into_make_service_with_connect_info","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","range","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","DdlTaskClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","submit_ddl_task","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","DdlTask","DdlTaskServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","inner","into","into_make_service","into_make_service_with_connect_info","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","submit_ddl_task","to_owned","try_from","try_into","type_id","vzip","with_interceptor","HeartbeatClient","accept_compressed","ask_leader","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","heartbeat","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Heartbeat","HeartbeatServer","HeartbeatStream","accept_compressed","accept_compression_encodings","ask_leader","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","heartbeat","inner","into","into_make_service","into_make_service_with_connect_info","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","LockClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","inner","into","into_request","lock","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","unlock","vzip","with_interceptor","with_origin","Lock","LockServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","inner","into","into_make_service","into_make_service_with_connect_info","into_request","lock","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","unlock","vzip","with_interceptor","Json","Payload","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","StoreClient","accept_compressed","batch_delete","batch_get","batch_put","borrow","borrow_mut","clone","clone_into","compare_and_put","connect","delete_range","fmt","from","from_ref","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","put","range","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Store","StoreServer","accept_compressed","accept_compression_encodings","batch_delete","batch_get","batch_put","borrow","borrow_mut","call","call","clone","clone_into","compare_and_put","delete_range","fmt","from","from_arc","from_ref","inner","into","into_make_service","into_make_service_with_connect_info","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","put","range","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","AlterTableTask","CreateTableTask","DropTableTask","Task","TruncateTableTask","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","PrometheusGatewayClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","handle","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","PrometheusGateway","PrometheusGatewayServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","handle","inner","into","into_make_service","into_make_service_with_connect_info","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","InstantQuery","Promql","RangeQuery","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","LogicalPlan","PromRangeQuery","Query","Sql","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","AddColumn","AddColumns","AlterRequest","CloseRequest","CompactRequest","CreateRequest","DeleteRequest","DeleteRequests","DropColumn","DropColumns","DropRequest","FlushRequest","InsertRequest","InsertRequests","OpenRequest","QueryRequest","RegionColumnDef","RegionRequest","RegionRequestHeader","RegionResponse","TruncateRequest","add_columns","affected_rows","alter_request","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_def","column_def","column_defs","column_id","dbname","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","drop_columns","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","engine","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","header","header","header","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kind","location","name","options","options","path","path","plan","primary_key","region_client","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_request","region_server","requests","requests","rows","rows","schema_version","span_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trace_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddColumns","DropColumns","Kind","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","RegionClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","handle","inner","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Alter","Body","Close","Compact","Create","Deletes","Drop","Flush","Inserts","Open","Truncate","as_ref","as_uncased","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","Region","RegionServer","accept_compressed","accept_compression_encodings","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","from_arc","from_ref","handle","inner","into","into_make_service","into_make_service_with_connect_info","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","to_owned","try_from","try_into","type_id","vzip","with_interceptor","BinaryValue","BoolValue","DateValue","DatetimeValue","DurationMicrosecondValue","DurationMillisecondValue","DurationNanosecondValue","DurationSecondValue","F32Value","F64Value","I16Value","I32Value","I64Value","I8Value","IntervalDayTimeValues","IntervalMonthDayNanoValues","IntervalYearMonthValues","StringValue","TimeMicrosecondValue","TimeMillisecondValue","TimeNanosecondValue","TimeSecondValue","TimestampMicrosecondValue","TimestampMillisecondValue","TimestampNanosecondValue","TimestampSecondValue","U16Value","U32Value","U64Value","U8Value","ValueData","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"api"],[30,"api::error"],[128,"api::error::Error"],[139,"api::helper"],[176,"api::prom_store"],[177,"api::prom_store::remote"],[536,"api::prom_store::remote::chunk"],[569,"api::prom_store::remote::label_matcher"],[604,"api::prom_store::remote::metric_metadata"],[643,"api::prom_store::remote::read_request"],[676,"api::v1"],[1841,"api::v1::add_column_location"],[1874,"api::v1::alter_expr"],[1896,"api::v1::auth_header"],[1917,"api::v1::column"],[1966,"api::v1::column_def"],[1967,"api::v1::ddl_request"],[1991,"api::v1::greptime_database_client"],[2017,"api::v1::greptime_database_server"],[2053,"api::v1::greptime_request"],[2078,"api::v1::greptime_response"],[2098,"api::v1::health_check_client"],[2123,"api::v1::health_check_server"],[2158,"api::v1::meta"],[3318,"api::v1::meta::cluster_client"],[3344,"api::v1::meta::cluster_server"],[3380,"api::v1::meta::ddl_task_client"],[3405,"api::v1::meta::ddl_task_server"],[3440,"api::v1::meta::heartbeat_client"],[3466,"api::v1::meta::heartbeat_server"],[3503,"api::v1::meta::lock_client"],[3529,"api::v1::meta::lock_server"],[3565,"api::v1::meta::mailbox_message"],[3585,"api::v1::meta::store_client"],[3616,"api::v1::meta::store_server"],[3657,"api::v1::meta::submit_ddl_task_request"],[3680,"api::v1::prometheus_gateway_client"],[3705,"api::v1::prometheus_gateway_server"],[3740,"api::v1::promql_request"],[3761,"api::v1::query_request"],[3783,"api::v1::region"],[4227,"api::v1::region::alter_request"],[4248,"api::v1::region::region_client"],[4273,"api::v1::region::region_request"],[4304,"api::v1::region::region_server"],[4339,"api::v1::value"]],"d":["A Protobuf message decoding error.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::IntoColumnDataType</code> …","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::UnknownColumnDataType</code>…","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an i128 value to google protobuf type …","","Returns the type name of the DdlRequest.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Returns true if the column type is equal to expected type.","Returns true if the pb type value is valid.","Returns true if the pb semantic type is valid.","","","","","Returns the ColumnDataType of the value.","","Returns the type name of the QueryRequest.","Returns the type name of the Request.","Convert ConcreteDataType to ColumnDataType.","Convert value into proto’s value.","","","","","","","","","","","Chunk represents a TSDB chunk. Time range [min, max] is …","ChunkedReadResponse is a response when response_type …","ChunkedSeries represents single, encoded time series.","","","Matcher specifies a rule, which can match or set of labels …","","","","","","ReadRequest represents a remote read request.","ReadResponse is a response when response_type equals …","","TimeSeries represents samples and labels for a single time …","","Returns an iterator which yields the valid enum values …","accepted_response_types allows negotiating the content …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicate whether it is without or by.","Nested message and enum types in <code>Chunk</code>.","","Chunks will be in start time order and may overlap.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","End time in milliseconds.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","String representation of surrounding function or …","List of label names used in aggregation.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Nested message and enum types in <code>LabelMatcher</code>.","Optional, can be empty.","For a timeseries to be valid, and for the samples and …","","Labels should be sorted.","","","","","Nested message and enum types in <code>MetricMetadata</code>.","","","","Appends the provided enum value to <code>accepted_response_types</code>.","","query_index represents an index of the query from …","Range vector selector range in milliseconds.","Nested message and enum types in <code>ReadRequest</code>.","In same order as the request’s queries.","","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Start time in milliseconds.","","Query step size in milliseconds.","","Samples within a time series must be ordered by time.","timestamp is in ms format, see …","timestamp is in ms format, see …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Returns the enum value of <code>type</code>, or the default if the …","Represents the metric type, these match the set from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","We require this to match chunkenc.Encoding.","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Encoding</code>, or <code>None</code> if <code>value</code> is not a …","","Creates an enum from field names used in the ProtoBuf …","","","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if <code>value</code> is a variant of <code>Encoding</code>.","","","","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","","Creates an enum from field names used in the ProtoBuf …","","","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","","","","","","","","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>MetricType</code>, or <code>None</code> if <code>value</code> is not a …","","Creates an enum from field names used in the ProtoBuf …","","","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if <code>value</code> is a variant of <code>MetricType</code>.","","","","","","","","","Server will return a single ReadResponse message with …","Server will stream a delimited ChunkedReadResponse message …","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>ResponseType</code>, or <code>None</code> if <code>value</code> is not …","","Creates an enum from field names used in the ProtoBuf …","","","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if <code>value</code> is a variant of <code>ResponseType</code>.","","","","","","","","","","","","","","","","","","","","","","","","","“Data Definition Language” requests, that create, …","Delete rows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mutation contains updates to a set of rows.","Type of operation to rows.","","","","","Put rows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A WAL entry contains a list of mutations for a region to …","Nested message and enum types in <code>AddColumnLocation</code>.","","","","Nested message and enum types in <code>AlterExpr</code>.","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","Nested message and enum types in <code>AuthHeader</code>.","","The <code>authorization</code> header, much like http’s authorization …","absolutely same format as Prometheus in JSON","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>catalog</code> that is selected to be used in this request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>Column</code>.","","","","","","Data is represented here.","","","","","","","Returns the enum value of <code>data_type</code>, or the default if the …","","","Returns the enum value of <code>datatype</code>, or the default if the …","Returns the enum value of <code>datatype</code>, or the default if the …","Helpful in creating vector from column.","","","The <code>dbname</code> for the request","Nested message and enum types in <code>DdlRequest</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>SemanticType</code>, or <code>None</code> if <code>value</code> is not …","Converts an <code>i32</code> to a <code>ColumnDataType</code>, or <code>None</code> if <code>value</code> is …","Converts an <code>i32</code> to a <code>OpType</code>, or <code>None</code> if <code>value</code> is not a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","Generated client implementations.","Generated server implementations.","Nested message and enum types in <code>GreptimeRequest</code>.","Nested message and enum types in <code>GreptimeResponse</code>.","","","","","","","","Generated client implementations.","Generated server implementations.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>SemanticType</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>ColumnDataType</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>OpType</code>.","The data to delete, indexed by key columns.","","","Returns the enum value of <code>location_type</code>, or the default if …","","","","List of mutations for a region.","","","","","Mask maps the positions of null values. If a bit in …","Returns the enum value of <code>op_type</code>, or the default if the …","Type of this mutation.","","","","","","","Generated client implementations.","Generated server implementations.","","Nested message and enum types in <code>PromqlRequest</code>.","","","","Nested message and enum types in <code>QueryRequest</code>.","","","","The row_count of all columns, which include null and …","The row count of all columns above.","","Data is represented here.","The data to delete.","Row updates to write to the WAL.","The <code>schema</code> that is selected to be used in this request.","","","","","","Returns the enum value of <code>semantic_type</code>, or the default if …","Returns the enum value of <code>semantic_type</code>, or the default if …","Returns the enum value of <code>semantic_type</code>, or the default if …","","","","Start WAL sequence of this mutation.","","Sets <code>data_type</code> to the provided enum value.","Sets <code>datatype</code> to the provided enum value.","Sets <code>datatype</code> to the provided enum value.","Sets <code>location_type</code> to the provided enum value.","Sets <code>op_type</code> to the provided enum value.","Sets <code>semantic_type</code> to the provided enum value.","Sets <code>semantic_type</code> to the provided enum value.","Sets <code>semantic_type</code> to the provided enum value.","SpanID of request","","","Corresponding to the <code>StatusCode</code> definition of GreptimeDB","","","","","","","","","","The table name to delete from. Catalog name and schema …","","The table name to delete from. Catalog name and schema …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TraceID of request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>Value</code>.","","","The array of non-null values in this column.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>LocationType</code>, or <code>None</code> if <code>value</code> is not …","","Creates an enum from field names used in the ProtoBuf …","","","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if <code>value</code> is a variant of <code>LocationType</code>.","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Readonly region.","","","","","Writable region(mito2), Readonly region(file).","","","","","","","PARTITION <code>region_name</code> VALUES LESS THAN (value_list)","","","","","","","","","","","","","","","","","","","","","This message is only for saving into store. TODO(weny): …","","","","","","","Approximate bytes of this region","Approximate number of rows in this region","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …","String value of the enum field names used in the ProtoBuf …enerated client implementations.","cluster_id is the ID of the cluster which be sent to.","cluster_id is the ID of the cluster which sent the …","Generated server implementations.","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deleted is the number of keys deleted by the delete range …","","The duration since the heartbeat task’s epoch in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The unix timestamp in millis of the end of this period.","engine name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","expect is the previous value, in bytes","If the expiration time is exceeded and currently holds the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","multiple follower nodes for read task","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Converts an <code>i32</code> to a <code>Role</code>, or <code>None</code> if <code>value</code> is not a valid …","Converts an <code>i32</code> to a <code>RegionRole</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>DdlTaskType</code>, or <code>None</code> if <code>value</code> is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","Creates an enum from field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","The id is used to associate request and response.","","TODO(LFC): Maybe use message RegionNumber?","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Role</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>RegionRole</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>DdlTaskType</code>.","","key is the key in bytes. An empty key is not allowed.","Key is the identifier for the ddl task.","key is the first key for the range, If range_end is not …","key is the key, in bytes, to put into the key-value store.","key is the key, in bytes, to put into the key-value store.","key is the first key to delete in the range.","Key will exist as long as lock is held by the caller.","key is the lock ownership key granted by Lock.","","","keys_only when set returns only the keys and not the …","kvs is the list of key-value pairs matched by the range …","","","","single leader node for write task","","limit is a limit on the number of keys returned for the …","Generated client implementations.","Generated server implementations.","Nested message and enum types in <code>MailboxMessage</code>.","Mailbox send message to Metasrv","","member_id is the ID of the sender server.","more indicates if there are more keys to return in the …","","Name is the identifier for the distributed shared lock to …","","The node’s epoch","","","","","","","The message body.","Self peer","","","If prev_kv is set, gets the previous key-value pair before …","If prev_kv is set in the request, the previous key-value …","If prev_kv is set, gets the previous key-value pairs …","If prev_kv is set, gets the previous key-value pairs …","","If prev_kv is set, gets the previous key-value pairs …","If prev_kv is set in the request, the previous key-value …","If prev_kv is set in the request, the previous key-value …","If prev_kv is set in the request, the previous key-value …","","","range_end is the upper bound on the requested range [key, …","range_end is the key following the last key to delete for …","The read capacity units during this period","","","","","","Region stats on this node","Actually reported time interval","Returns the enum value of <code>role</code>, or the default if the …","Returns the enum value of <code>role</code>, or the default if the …","","Region role","","","","","","","","","","","","","Sets <code>role</code> to the provided enum value.","Sets <code>role</code> to the provided enum value.","The unix timestamp in millis of the start of this period.","Generated client implementations.","Generated server implementations.","The following information plays a bigger role in making …","Nested message and enum types in <code>SubmitDdlTaskRequest</code>.","","","","Returns if table created.","","","","","","","The unix timestamp in millisecondsvalue is the value held by the key, in bytes.","value is the value, in bytes, to associate with the key in …","value is the value, in bytes, to associate with the key in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The write capacity units during this period","Cluster service is used for communication between meta …","Enable decompressing responses.","Batch get kvs by input keys from leader’s in_memory kv …","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Range get the kvs from leader’s in_memory kv store.","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","Cluster service is used for communication between meta …","Enable decompressing requests with the given encoding.","","Batch get kvs by input keys from leader’s in_memory kv …","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Range get the kvs from leader’s in_memory kv store.","Compress responses with the given encoding, if the client …","","","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","Submits a DDL task to meta.","","","","","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","Submits a DDL task to meta.","","","","","","","","Enable decompressing responses.","Ask leader’s endpoint.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Heartbeat, there may be many contents of the heartbeat, …","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","","Server streaming response type for the Heartbeat method.","Enable decompressing requests with the given encoding.","","Ask leader’s endpoint.","","","","","","","","Returns the argument unchanged.","","","Heartbeat, there may be many contents of the heartbeat, …","","Calls <code>U::from(self)</code>.","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Lock acquires a distributed shared lock on a given named …","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","Unlock takes a key returned by Lock and releases the hold …","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Lock acquires a distributed shared lock on a given named …","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","Unlock takes a key returned by Lock and releases the hold …","","","","The message body.","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","Enable decompressing responses.","BatchDelete atomically deletes the given keys and its …","BatchGet atomically get values by the given keys from the …","BatchPut atomically puts the given keys into the key-value …","","","","","CompareAndPut atomically puts the value to the given …","Attempt to create a new client by connecting to a given …","DeleteRange deletes the given range from the key-value …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Put puts the given key into the key-value store.","Range gets the keys in the range from the key-value store.","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","BatchDelete atomically deletes the given keys and its …","BatchGet atomically get values by the given keys from the …","BatchPut atomically puts the given keys into the key-value …","","","","","","","CompareAndPut atomically puts the value to the given …","DeleteRange deletes the given range from the key-value …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Put puts the given key into the key-value store.","Range gets the keys in the range from the key-value store.","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","PrometheusGateway behaves absolutely the same as …","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","Generated trait containing gRPC methods that should be …","PrometheusGateway behaves absolutely the same as …","Enable decompressing requests with the given encoding.","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","","","","","","","","","","","","","","","","The column definition of a region. Unlike the message …","","","","","","","Nested message and enum types in <code>AlterRequest</code>.","query request is handled in flight services.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Columns in this region.","","DB Name of request, tracking only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Region engine name","Region engine name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Options of the created region.","Options of the opened region.","Region storage path","Region storage path","substrait plan to query","Column Id of primary keys.","Generated client implementations.","","","","","","","","","","","","Nested message and enum types in <code>RegionRequest</code>.","Generated server implementations.","","","","","The version of the schema before applying the alteration.","SpanID of request","","","","","","","","","","","","","","","","","","","","","","TraceID of request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","","query request is handled in flight services.","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","","","Generated trait containing gRPC methods that should be …","","Enable decompressing requests with the given encoding.","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Decodes an instance of the message from a buffer, and …","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,0,0,2,2,2,0,2,2,2,2,2,2,0,2,11,0,0,11,0,11,0,0,11,0,11,11,11,19,17,20,21,11,19,17,20,21,11,17,11,19,17,20,21,19,17,20,21,20,21,19,11,11,17,19,17,20,21,11,11,19,17,20,21,11,17,19,17,20,21,19,17,20,21,11,19,17,20,21,19,17,20,21,11,11,11,11,11,19,17,20,21,11,19,17,20,21,11,19,17,20,21,11,19,17,20,21,11,19,17,20,21,11,267,268,269,269,270,269,270,267,268,267,268,0,32,32,0,32,0,32,32,32,32,32,32,32,32,32,0,0,0,32,0,0,0,0,0,0,0,0,0,32,32,32,32,32,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,47,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,58,0,65,60,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,59,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,58,63,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,54,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,58,58,51,63,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,0,53,54,56,60,63,59,61,51,0,59,55,57,47,47,65,58,0,62,54,51,57,59,58,63,58,61,64,52,53,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,51,57,59,51,57,59,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,51,52,53,55,57,51,52,53,54,55,56,57,58,59,60,61,47,62,63,64,65,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,68,68,68,68,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,67,67,67,67,67,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,0,0,0,0,0,33,33,0,0,0,0,0,0,33,33,0,76,0,0,0,0,0,33,33,33,33,35,0,33,33,0,0,0,0,0,0,0,33,33,33,33,33,0,33,33,0,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,0,33,0,35,33,33,33,33,35,33,33,33,33,0,0,33,33,33,33,0,0,0,90,84,97,0,35,33,76,0,80,77,101,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,77,85,86,87,89,77,78,79,80,81,82,83,84,31,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,35,33,76,0,0,93,85,41,99,107,96,35,33,76,85,88,96,96,88,41,99,41,99,31,77,0,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,96,108,112,85,35,91,77,78,79,80,81,82,83,84,31,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,103,85,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,35,35,35,35,33,33,33,33,76,76,76,76,79,34,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,35,33,76,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,35,33,76,35,33,76,0,0,0,0,35,33,76,100,101,104,105,0,0,95,106,110,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,96,35,33,76,109,86,93,97,97,0,31,117,94,96,31,92,41,116,116,88,35,33,76,81,85,0,0,100,0,102,103,42,0,0,104,105,107,109,98,111,113,116,77,98,85,86,87,89,96,41,99,96,41,99,116,35,96,41,99,97,116,96,41,99,77,103,78,79,103,85,87,89,85,86,87,89,107,109,111,113,85,102,85,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,82,77,77,78,79,80,81,82,83,84,31,35,35,33,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,76,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,81,0,83,36,41,46,77,78,79,80,81,82,83,84,31,35,33,34,85,86,87,88,89,90,91,92,93,94,95,96,97,41,98,99,46,36,100,101,102,103,104,105,42,106,107,108,109,110,111,112,113,114,115,116,117,76,120,120,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,122,122,0,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,0,148,148,148,148,148,148,148,148,148,148,148,148,147,147,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,43,43,43,43,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,160,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,0,0,163,163,163,163,163,163,163,163,163,163,163,163,162,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,0,0,0,0,0,0,0,0,0,0,166,0,164,0,0,0,166,0,0,0,165,164,0,0,0,165,0,0,0,212,212,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,190,176,176,164,165,166,185,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,212,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,212,172,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,0,167,168,0,164,165,166,169,186,164,165,166,188,0,0,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,207,189,175,178,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,173,176,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,170,170,170,170,164,164,164,164,165,165,165,165,166,166,166,166,212,212,212,212,169,168,204,208,168,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,183,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,212,181,164,165,166,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,164,165,166,170,164,165,166,213,170,164,165,166,175,177,179,180,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,0,0,170,171,181,184,185,213,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,212,213,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,212,168,169,177,164,165,166,181,174,193,194,196,204,206,209,210,198,202,194,195,199,200,180,183,178,194,0,0,0,175,177,167,195,185,208,167,175,169,164,165,166,185,188,181,175,187,213,196,197,200,202,205,206,201,203,207,167,168,194,206,176,183,176,178,177,182,175,175,167,176,167,176,172,175,192,194,196,198,200,202,204,206,208,210,167,176,173,0,0,181,0,168,205,182,193,188,172,184,187,184,192,181,181,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,181,191,167,168,169,170,171,172,173,174,164,164,175,176,177,178,179,180,181,165,165,182,183,184,185,186,187,188,189,190,191,192,193,166,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,212,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,212,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,212,174,196,204,186,167,168,169,170,171,172,173,174,164,175,176,177,178,179,180,181,165,182,183,184,185,186,187,188,189,190,191,192,193,166,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,212,176,0,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,0,0,220,220,219,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,219,220,220,220,220,220,220,220,220,0,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,0,0,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,222,223,223,223,223,223,223,0,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,0,0,225,226,226,225,226,226,226,226,226,226,226,226,226,226,225,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,0,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,0,0,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,228,229,229,229,229,229,229,229,229,229,229,229,229,229,228,229,229,230,0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,0,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,0,0,233,233,232,232,232,233,233,233,233,233,233,232,232,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,232,232,233,233,233,233,233,233,233,233,234,234,234,0,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,0,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,0,0,237,237,237,237,237,237,237,237,237,237,237,237,236,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,238,0,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,239,239,0,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,242,0,241,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,255,260,248,260,240,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,254,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,248,250,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,241,242,247,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,252,255,256,248,250,248,250,247,248,0,245,246,247,248,249,250,251,252,257,258,259,0,0,243,244,245,246,252,240,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,261,0,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,0,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,263,0,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,0,0,266,266,266,266,266,266,266,266,266,266,266,266,265,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119],"f":[0,[[],1],[[]],[[]],[2,2],[[]],[[2,2],3],[[],3],[[],3],[[],3],[[],3],0,[[2,4],[[6,[5]]]],[[2,4],[[6,[5]]]],[[]],[[]],0,0,0,[[]],[[],7],0,[8],[[]],[[],9],[[],6],[[],6],[[],10],0,[[]],0,0,0,0,0,0,0,0,0,0,[11,12],[[],1],[11,[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[17,[[16,[15]]]]],11],[11,[[14,[1]]]],[[[19,[18]]],[[19,[18]]]],[[[17,[18]]],[[17,[18]]]],[[[20,[18]]],[[20,[18]]]],[[[21,[18]]],[[21,[18]]]],[[]],[[]],[[]],[[]],0,0,0,[[11,22,[23,[9]]]],[11,24],[[[17,[[16,[15]]]]],[[6,[11]]]],[[[19,[25]],4],26],[[[17,[25]],4],26],[[[20,[25]],4],26],[[[21,[25]],4],26],[[11,4],26],[[11,4],26],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[[16,[27]]]]],11],[[[17,[[16,[15]]]]],11],[[[20,[[16,[9]]]]],11],[[[21,[[16,[9]]]]],11],[[],7],[[],7],[[],7],[[],7],[[],7],[11,[[14,[28]]]],[8],[11,[[14,[1]]]],[11,29],[[]],[[]],[[]],[[]],[[],9],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[30,31],[32,33],[34,24],[[32,32],3],[[],3],[[],3],[[],3],[[],3],[[32,4],26],[[]],[[]],[[],7],[[33,15],3],[[27,15],3],[[27,35],3],[33,32],[36,37],[[15,38],[[23,[39]]]],[[15,38],40],[36,[[14,[33]]]],[[41,22,40]],[42,24],[43,24],[15,[[14,[33]]]],[39,[[14,[36]]]],[15,[[44,[32]]]],[[],6],[[],6],[27,[[44,[32]]]],[[],10],[39,36],[[33,22],38],[[45,22],[[23,[46]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[47,[[50,[[49,[[48,[27]]]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[51],[52],[53],[54],[55],[56],[57],[58],[59],[60],[61],[47],[62],[63],[64],[65],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[47,47],[62,62],[63,63],[64,64],[65,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],51],[[],52],[[],53],[[],54],[[],55],[[],56],[[],57],[[],58],[[],59],[[],60],[[],61],[[],47],[[],62],[[],63],[[],64],[[],65],[51,22],[52,22],[53,22],[54,22],[55,22],[56,22],[57,22],[58,22],[59,22],[60,22],[61,22],[47,22],[62,22],[63,22],[64,22],[65,22],0,0,[[51,51],3],[[52,52],3],[[53,53],3],[[54,54],3],[[55,55],3],[[56,56],3],[[57,57],3],[[58,58],3],[[59,59],3],[[60,60],3],[[61,61],3],[[47,47],3],[[62,62],3],[[63,63],3],[[64,64],3],[[65,65],3],0,[[51,4],[[6,[5]]]],[[52,4],[[6,[5]]]],[[53,4],[[6,[5]]]],[[54,4],[[6,[5]]]],[[55,4],[[6,[5]]]],[[56,4],[[6,[5]]]],[[57,4],[[6,[5]]]],[[58,4],[[6,[5]]]],[[59,4],[[6,[5]]]],[[60,4],[[6,[5]]]],[[61,4],[[6,[5]]]],[[47,4],[[6,[5]]]],[[62,4],[[6,[5]]]],[[63,4],[[6,[5]]]],[[64,4],[[6,[5]]]],[[65,4],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,[[47,66]],0,0,0,0,0,0,[[51,67]],[[57,68]],[[59,69]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[51,67],[57,68],[59,69],0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[69,24],[[]],[[]],[69,69],[[]],[[69,69],70],[[],70],[[],69],[[69,69],3],[[],3],[[],3],[[],3],[[],3],[[69,4],[[6,[5]]]],[[]],[27,[[14,[69]]]],[[]],[24,[[14,[69]]]],[[[0,[71,72]],73],74],[[69,75]],[[]],[[],7],[27,3],[[69,69],[[14,[70]]]],[[]],[[],6],[27,[[6,[69,2]]]],[[],6],[[],10],[[]],0,0,0,0,0,[68,24],[[]],[[]],[68,68],[[]],[[68,68],70],[[],70],[[],68],[[68,68],3],[[],3],[[],3],[[],3],[[],3],[[68,4],[[6,[5]]]],[[]],[27,[[14,[68]]]],[[]],[24,[[14,[68]]]],[[[0,[71,72]],73],74],[[68,75]],[[]],[[],7],[27,3],[[68,68],[[14,[70]]]],[[]],[27,[[6,[68,2]]]],[[],6],[[],6],[[],10],[[]],0,0,0,0,0,0,0,0,0,[67,24],[[]],[[]],[67,67],[[]],[[67,67],70],[[],70],[[],67],[[67,67],3],[[],3],[[],3],[[],3],[[],3],[[67,4],[[6,[5]]]],[[]],[27,[[14,[67]]]],[[]],[24,[[14,[67]]]],[[[0,[71,72]],73],74],[[67,75]],[[]],[[],7],[27,3],[[67,67],[[14,[70]]]],[[]],[[],6],[27,[[6,[67,2]]]],[[],6],[[],10],[[]],0,0,0,[66,24],[[]],[[]],[66,66],[[]],[[66,66],70],[[],70],[[],66],[[66,66],3],[[],3],[[],3],[[],3],[[],3],[[66,4],[[6,[5]]]],[[]],[27,[[14,[66]]]],[[]],[24,[[14,[66]]]],[[[0,[71,72]],73],74],[[66,75]],[[]],[[],7],[27,3],[[66,66],[[14,[70]]]],[[]],[[],6],[27,[[6,[66,2]]]],[[],6],[[],10],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[35,24],[33,24],[76,24],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[77],[78],[79],[80],[81],[82],[83],[84],[31],[34],[85],[86],[87],[88],[89],[90],[91],[92],[93],[94],[95],[96],[97],[41],[98],[99],[46],[36],[100],[101],[102],[103],[104],[105],[42],[106],[107],[108],[109],[110],[111],[112],[113],[114],[115],[116],[117],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[31,31],[35,35],[33,33],[34,34],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[41,41],[98,98],[99,99],[46,46],[36,36],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[42,42],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[76,76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[35,35],70],[[33,33],70],[[76,76],70],0,0,0,0,0,0,0,0,[[],70],[[],70],[[],70],0,0,[96,33],0,0,[41,33],[99,33],0,0,0,0,0,[[],77],[[],78],[[],79],[[],80],[[],81],[[],82],[[],83],[[],84],[[],31],[[],35],[[],33],[[],34],[[],85],[[],86],[[],87],[[],88],[[],89],[[],90],[[],91],[[],92],[[],93],[[],94],[[],95],[[],96],[[],97],[[],41],[[],98],[[],99],[[],46],[[],36],[[],100],[[],101],[[],102],[[],103],[[],104],[[],105],[[],42],[[],106],[[],107],[[],108],[[],109],[[],110],[[],111],[[],112],[[],113],[[],114],[[],115],[[],116],[[],117],[[],76],0,0,0,0,[118,[[6,[35]]]],0,[77,22],[78,22],[79,22],[80,22],[81,22],[82,22],[83,22],[84,22],[31,22],[34,22],[85,22],[86,22],[87,22],[88,22],[89,22],[90,22],[91,22],[92,22],[93,22],[94,22],[95,22],[96,22],[97,22],[41,22],[98,22],[99,22],[46,22],[36,22],[100,22],[101,22],[102,22],[103,22],[104,22],[105,22],[42,22],[106,22],[107,22],[108,22],[109,22],[110,22],[111,22],[112,22],[113,22],[114,22],[115,22],[116,22],[117,22],0,0,[[77,77],3],[[78,78],3],[[79,79],3],[[80,80],3],[[81,81],3],[[82,82],3],[[83,83],3],[[84,84],3],[[31,31],3],[[35,35],3],[[33,33],3],[[34,34],3],[[85,85],3],[[86,86],3],[[87,87],3],[[88,88],3],[[89,89],3],[[90,90],3],[[91,91],3],[[92,92],3],[[93,93],3],[[94,94],3],[[95,95],3],[[96,96],3],[[97,97],3],[[41,41],3],[[98,98],3],[[99,99],3],[[46,46],3],[[36,36],3],[[100,100],3],[[101,101],3],[[102,102],3],[[103,103],3],[[104,104],3],[[105,105],3],[[42,42],3],[[106,106],3],[[107,107],3],[[108,108],3],[[109,109],3],[[110,110],3],[[111,111],3],[[112,112],3],[[113,113],3],[[114,114],3],[[115,115],3],[[116,116],3],[[117,117],3],[[76,76],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[[77,4],[[6,[5]]]],[[78,4],[[6,[5]]]],[[79,4],[[6,[5]]]],[[80,4],[[6,[5]]]],[[81,4],[[6,[5]]]],[[82,4],[[6,[5]]]],[[83,4],[[6,[5]]]],[[84,4],[[6,[5]]]],[[31,4],[[6,[5]]]],[[35,4],[[6,[5]]]],[[33,4],[[6,[5]]]],[[34,4],[[6,[5]]]],[[85,4],[[6,[5]]]],[[86,4],[[6,[5]]]],[[87,4],[[6,[5]]]],[[88,4],[[6,[5]]]],[[89,4],[[6,[5]]]],[[90,4],[[6,[5]]]],[[91,4],[[6,[5]]]],[[92,4],[[6,[5]]]],[[93,4],[[6,[5]]]],[[94,4],[[6,[5]]]],[[95,4],[[6,[5]]]],[[96,4],[[6,[5]]]],[[97,4],[[6,[5]]]],[[41,4],[[6,[5]]]],[[98,4],[[6,[5]]]],[[99,4],[[6,[5]]]],[[46,4],[[6,[5]]]],[[36,4],[[6,[5]]]],[[100,4],[[6,[5]]]],[[101,4],[[6,[5]]]],[[102,4],[[6,[5]]]],[[103,4],[[6,[5]]]],[[104,4],[[6,[5]]]],[[105,4],[[6,[5]]]],[[42,4],[[6,[5]]]],[[106,4],[[6,[5]]]],[[107,4],[[6,[5]]]],[[108,4],[[6,[5]]]],[[109,4],[[6,[5]]]],[[110,4],[[6,[5]]]],[[111,4],[[6,[5]]]],[[112,4],[[6,[5]]]],[[113,4],[[6,[5]]]],[[114,4],[[6,[5]]]],[[115,4],[[6,[5]]]],[[116,4],[[6,[5]]]],[[117,4],[[6,[5]]]],[[76,4],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,[[14,[35]]]],[27,[[14,[33]]]],[27,[[14,[76]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[14,[35]]]],[24,[[14,[33]]]],[24,[[14,[76]]]],[[[0,[71,72]],73],74],[[[0,[71,72]],73],74],[[[0,[71,72]],73],74],0,0,0,0,[[35,75]],[[33,75]],[[76,75]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[27,3],[27,3],[27,3],0,0,0,[97,120],0,0,0,0,0,0,0,0,0,[116,76],0,0,[[35,35],[[14,[70]]]],[[33,33],[[14,[70]]]],[[76,76],[[14,[70]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[96,35],[41,35],[99,35],0,0,0,0,[[35,121],6],[[96,33]],[[41,33]],[[99,33]],[[97,120]],[[116,76]],[[96,35]],[[41,35]],[[99,35]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[27,[[6,[35,2]]]],[[],6],[[],6],[27,[[6,[33,2]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[27,[[6,[76,2]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[120,24],[[]],[[]],[120,120],[[]],[[120,120],70],[[],70],[[],120],[[120,120],3],[[],3],[[],3],[[],3],[[],3],[[120,4],[[6,[5]]]],[[]],[27,[[14,[120]]]],[[]],[24,[[14,[120]]]],[[[0,[71,72]],73],74],[[120,75]],[[]],[[],7],[27,3],[[120,120],[[14,[70]]]],[[]],[27,[[6,[120,2]]]],[[],6],[[],6],[[],10],[[]],0,0,0,0,[[]],[[]],[122,122],[[]],[[122,123]],[122,22],[[122,122],3],[[122,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[122]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]],0,0,0,[[]],[[]],[128,128],[[]],[[128,123]],[128,22],[[128,128],3],[[128,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[128]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]],0,0,0,[[]],[[]],[38],[38,38],[[]],0,0,[[],38],0,0,0,0,[38,22],[[38,38],3],0,0,[[38,4],[[6,[5]]]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[],7],0,0,0,0,0,0,0,0,0,[[]],[[],6],[[],6],[[],10],0,0,0,0,[[]],[96,[[44,[129]]]],0,0,0,0,0,0,[[]],[[]],[130,130],[[]],[[130,123]],[130,22],[[130,130],3],[[130,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[130]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]],0,[[[135,[[134,[[133,[131,132]]]]]],136],[[135,[[134,[[133,[131,132]]]]]]]],[[]],[[]],[[[135,[18]]],[[135,[18]]]],[[]],[[[138,[137]]],139],[[[135,[25]],4],[[6,[5]]]],[[]],[[]],[[[135,[[134,[[133,[131,132]]]]]],[140,[104]]],139],[[[135,[[134,[[133,[131,132]]]]]],141],139],0,[[]],[[],7],[[[135,[[134,[[133,[131,132]]]]]],22],[[135,[[134,[[133,[131,132]]]]]]]],[[[135,[[134,[[133,[131,132]]]]]],22],[[135,[[134,[[133,[131,132]]]]]]]],[[[134,[[133,[131,132]]]]],[[135,[[134,[[133,[131,132]]]]]]]],[[[135,[[134,[[133,[131,132]]]]]],136],[[135,[[134,[[133,[131,132]]]]]]]],[[]],[[],6],[[],6],[[],10],[[]],[[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144],[[135,[[145,[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144]]]]]],[[[134,[[133,[131,132]]]],146],[[135,[[134,[[133,[131,132]]]]]]]],0,0,[[[148,[147]],136],[[148,[147]]]],0,[[]],[[]],[[[148,[147]],[142,[[0,[149,150]]]]]],[142],[[[148,[147]]],[[148,[147]]]],[[]],[[[148,[[0,[25,147]]]],4],[[6,[5]]]],[[]],[[[152,[147,151]]],[[148,[147]]]],[[]],[[[7,[104]]],[[154,[[153,[139,151]]]]]],[[[7,[[155,[104]]]]],[[154,[[153,[139,151]]]]]],0,[[]],[[],156],[[],157],[[],7],[[[148,[147]],22],[[148,[147]]]],0,[[[148,[147]],22],[[148,[147]]]],0,[147,[[148,[147]]]],[158,[[159,[6]]]],[[[148,[147]],158],[[159,[6]]]],[[[148,[147]],136],[[148,[147]]]],0,[[]],[[],6],[[],6],[[],10],[[]],[[147,144],[[145,[[148,[147]],144]]]],0,0,0,0,0,0,0,[[]],[[]],[43,43],[[]],[[43,123]],[43,22],[[43,43],3],[[43,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[43]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]],0,0,[[]],[[]],[160,160],[[]],[[160,123]],[160,22],[[160,160],3],[[160,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[160]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]],0,[[[161,[[134,[[133,[131,132]]]]]],136],[[161,[[134,[[133,[131,132]]]]]]]],[[]],[[]],[[[161,[18]]],[[161,[18]]]],[[]],[[[138,[137]]],139],[[[161,[25]],4],[[6,[5]]]],[[]],[[]],[[[161,[[134,[[133,[131,132]]]]]],[140,[114]]],139],0,[[]],[[],7],[[[161,[[134,[[133,[131,132]]]]]],22],[[161,[[134,[[133,[131,132]]]]]]]],[[[161,[[134,[[133,[131,132]]]]]],22],[[161,[[134,[[133,[131,132]]]]]]]],[[[134,[[133,[131,132]]]]],[[161,[[134,[[133,[131,132]]]]]]]],[[[161,[[134,[[133,[131,132]]]]]],136],[[161,[[134,[[133,[131,132]]]]]]]],[[]],[[],6],[[],6],[[],10],[[]],[[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144],[[161,[[145,[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144]]]]]],[[[134,[[133,[131,132]]]],146],[[161,[[134,[[133,[131,132]]]]]]]],0,0,[[[163,[162]],136],[[163,[162]]]],0,[[]],[[]],[[[163,[162]],[142,[[0,[149,150]]]]]],[142],[[[163,[162]]],[[163,[162]]]],[[]],[[[163,[[0,[25,162]]]],4],[[6,[5]]]],[[]],[[[152,[162,151]]],[[163,[162]]]],[[]],[[[7,[114]]],[[154,[[153,[139,151]]]]]],0,[[]],[[],156],[[],157],[[],7],[[[163,[162]],22],[[163,[162]]]],0,[[[163,[162]],22],[[163,[162]]]],0,[162,[[163,[162]]]],[158,[[159,[6]]]],[[[163,[162]],158],[[159,[6]]]],[[[163,[162]],136],[[163,[162]]]],0,[[]],[[],6],[[],6],[[],10],[[]],[[162,144],[[145,[[163,[162]],144]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[164,24],[165,24],[166,24],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[167],[168],[169],[170],[171],[172],[173],[174],[175],[176],[177],[178],[179],[180],[181],[182],[183],[184],[185],[186],[187],[188],[189],[190],[191],[192],[193],[194],[195],[196],[197],[198],[199],[200],[201],[202],[203],[204],[205],[206],[207],[208],[209],[210],[211],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[164,164],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[165,165],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[166,166],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[164,164],70],[[165,165],70],[[166,166],70],0,0,[[],70],[[],70],[[],70],0,0,0,[[],167],[[],168],[[],169],[[],170],[[],171],[[],172],[[],173],[[],174],[[],164],[[],175],[[],176],[[],177],[[],178],[[],179],[[],180],[[],181],[[],165],[[],182],[[],183],[[],184],[[],185],[[],186],[[],187],[[],188],[[],189],[[],190],[[],191],[[],192],[[],193],[[],166],[[],194],[[],195],[[],196],[[],197],[[],198],[[],199],[[],200],[[],201],[[],202],[[],203],[[],204],[[],205],[[],206],[[],207],[[],208],[[],209],[[],210],[[],211],[[],213],0,0,0,0,[167,22],[168,22],[169,22],[170,22],[171,22],[172,22],[173,22],[174,22],[175,22],[176,22],[177,22],[178,22],[179,22],[180,22],[181,22],[182,22],[183,22],[184,22],[185,22],[186,22],[187,22],[188,22],[189,22],[190,22],[191,22],[192,22],[193,22],[194,22],[195,22],[196,22],[197,22],[198,22],[199,22],[200,22],[201,22],[202,22],[203,22],[204,22],[205,22],[206,22],[207,22],[208,22],[209,22],[210,22],[211,22],0,0,[[167,167],3],[[168,168],3],[[169,169],3],[[170,170],3],[[171,171],3],[[172,172],3],[[173,173],3],[[174,174],3],[[164,164],3],[[175,175],3],[[176,176],3],[[177,177],3],[[178,178],3],[[179,179],3],[[180,180],3],[[181,181],3],[[165,165],3],[[182,182],3],[[183,183],3],[[184,184],3],[[185,185],3],[[186,186],3],[[187,187],3],[[188,188],3],[[189,189],3],[[190,190],3],[[191,191],3],[[192,192],3],[[193,193],3],[[166,166],3],[[194,194],3],[[195,195],3],[[196,196],3],[[197,197],3],[[198,198],3],[[199,199],3],[[200,200],3],[[201,201],3],[[202,202],3],[[203,203],3],[[204,204],3],[[205,205],3],[[206,206],3],[[207,207],3],[[208,208],3],[[209,209],3],[[210,210],3],[[211,211],3],[[212,212],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,[[74,169],168],[[167,4],[[6,[5]]]],[[168,4],[[6,[5]]]],[[169,4],[[6,[5]]]],[[170,4],[[6,[5]]]],[[171,4],[[6,[5]]]],[[172,4],[[6,[5]]]],[[173,4],[[6,[5]]]],[[174,4],[[6,[5]]]],[[164,4],[[6,[5]]]],[[175,4],[[6,[5]]]],[[176,4],[[6,[5]]]],[[177,4],[[6,[5]]]],[[178,4],[[6,[5]]]],[[179,4],[[6,[5]]]],[[180,4],[[6,[5]]]],[[181,4],[[6,[5]]]],[[181,4],[[6,[5]]]],[[165,4],[[6,[5]]]],[[182,4],[[6,[5]]]],[[183,4],[[6,[5]]]],[[184,4],[[6,[5]]]],[[185,4],[[6,[5]]]],[[186,4],[[6,[5]]]],[[187,4],[[6,[5]]]],[[188,4],[[6,[5]]]],[[189,4],[[6,[5]]]],[[190,4],[[6,[5]]]],[[191,4],[[6,[5]]]],[[192,4],[[6,[5]]]],[[193,4],[[6,[5]]]],[[166,4],[[6,[5]]]],[[194,4],[[6,[5]]]],[[195,4],[[6,[5]]]],[[196,4],[[6,[5]]]],[[197,4],[[6,[5]]]],[[198,4],[[6,[5]]]],[[199,4],[[6,[5]]]],[[200,4],[[6,[5]]]],[[201,4],[[6,[5]]]],[[202,4],[[6,[5]]]],[[203,4],[[6,[5]]]],[[204,4],[[6,[5]]]],[[205,4],[[6,[5]]]],[[206,4],[[6,[5]]]],[[207,4],[[6,[5]]]],[[208,4],[[6,[5]]]],[[209,4],[[6,[5]]]],[[210,4],[[6,[5]]]],[[211,4],[[6,[5]]]],[[212,4],[[6,[5]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[27,[[14,[164]]]],[27,[[14,[165]]]],[27,[[14,[166]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[14,[164]]]],[24,[[14,[165]]]],[24,[[14,[166]]]],[[[0,[71,72]],73],74],[[[0,[71,72]],73],74],[[[0,[71,72]],73],74],[[[0,[71,72]],73],74],[[213,170],22],[[170,75]],[[164,75]],[[165,75]],[[166,75]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[213,[[23,[170,151]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[168,3],[[],169],[177,3],[27,3],[27,3],[27,3],[[24,24,24,214,[0,[215,216,72]]],[[6,[181,217]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[164,167],0,[[22,22],169],[[164,164],[[14,[70]]]],[[165,165],[[14,[70]]]],[[166,166],[[14,[70]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[167,164],[176,165],0,0,0,[[175,164]],[[192,164]],[[194,164]],[[196,164]],[[198,164]],[[200,164]],[[202,164]],[[204,164]],[[206,164]],[[208,164]],[[210,164]],[[167,164]],[[176,165]],0,0,0,0,0,[74,168],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[27,[[6,[164,2]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[27,[[6,[165,2]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[27,[[6,[166,2]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[218,[[134,[[133,[131,132]]]]]],136],[[218,[[134,[[133,[131,132]]]]]]]],[[[218,[[134,[[133,[131,132]]]]]],[140,[198]]],139],[[]],[[]],[[[218,[18]]],[[218,[18]]]],[[]],[[[138,[137]]],139],[[[218,[25]],4],[[6,[5]]]],[[]],[[]],0,[[]],[[],7],[[[218,[[134,[[133,[131,132]]]]]],22],[[218,[[134,[[133,[131,132]]]]]]]],[[[218,[[134,[[133,[131,132]]]]]],22],[[218,[[134,[[133,[131,132]]]]]]]],[[[134,[[133,[131,132]]]]],[[218,[[134,[[133,[131,132]]]]]]]],[[[218,[[134,[[133,[131,132]]]]]],[140,[194]]],139],[[[218,[[134,[[133,[131,132]]]]]],136],[[218,[[134,[[133,[131,132]]]]]]]],[[]],[[],6],[[],6],[[],10],[[]],[[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144],[[218,[[145,[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144]]]]]],[[[134,[[133,[131,132]]]],146],[[218,[[134,[[133,[131,132]]]]]]]],0,0,[[[220,[219]],136],[[220,[219]]]],0,[[[7,[198]]],[[154,[[153,[139,151]]]]]],[[]],[[]],[142],[[[220,[219]],[142,[[0,[149,150]]]]]],[[[220,[219]]],[[220,[219]]]],[[]],[[[220,[[0,[25,219]]]],4],[[6,[5]]]],[[]],[[[152,[219,151]]],[[220,[219]]]],[[]],0,[[]],[[],156],[[],157],[[],7],[[[220,[219]],22],[[220,[219]]]],0,[[[220,[219]],22],[[220,[219]]]],0,[219,[[220,[219]]]],[[[220,[219]],158],[[159,[6]]]],[158,[[159,[6]]]],[[[7,[194]]],[[154,[[153,[139,151]]]]]],[[[220,[219]],136],[[220,[219]]]],0,[[]],[[],6],[[],6],[[],10],[[]],[[219,144],[[145,[[220,[219]],144]]]],0,[[[221,[[134,[[133,[131,132]]]]]],136],[[221,[[134,[[133,[131,132]]]]]]]],[[]],[[]],[[[221,[18]]],[[221,[18]]]],[[]],[[[138,[137]]],139],[[[221,[25]],4],[[6,[5]]]],[[]],[[]],0,[[]],[[],7],[[[221,[[134,[[133,[131,132]]]]]],22],[[221,[[134,[[133,[131,132]]]]]]]],[[[221,[[134,[[133,[131,132]]]]]],22],[[221,[[134,[[133,[131,132]]]]]]]],[[[134,[[133,[131,132]]]]],[[221,[[134,[[133,[131,132]]]]]]]],[[[221,[[134,[[133,[131,132]]]]]],136],[[221,[[134,[[133,[131,132]]]]]]]],[[[221,[[134,[[133,[131,132]]]]]],[140,[192]]],139],[[]],[[],6],[[],6],[[],10],[[]],[[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144],[[221,[[145,[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144]]]]]],[[[134,[[133,[131,132]]]],146],[[221,[[134,[[133,[131,132]]]]]]]],0,0,[[[223,[222]],136],[[223,[222]]]],0,[[]],[[]],[[[223,[222]],[142,[[0,[149,150]]]]]],[142],[[[223,[222]]],[[223,[222]]]],[[]],[[[223,[[0,[25,222]]]],4],[[6,[5]]]],[[]],[[[152,[222,151]]],[[223,[222]]]],[[]],0,[[]],[[],156],[[],157],[[],7],[[[223,[222]],22],[[223,[222]]]],0,[[[223,[222]],22],[[223,[222]]]],0,[222,[[223,[222]]]],[158,[[159,[6]]]],[[[223,[222]],158],[[159,[6]]]],[[[223,[222]],136],[[223,[222]]]],0,[[[7,[192]]],[[154,[[153,[139,151]]]]]],[[]],[[],6],[[],6],[[],10],[[]],[[222,144],[[145,[[223,[222]],144]]]],0,[[[224,[[134,[[133,[131,132]]]]]],136],[[224,[[134,[[133,[131,132]]]]]]]],[[[224,[[134,[[133,[131,132]]]]]],[140,[179]]],139],[[]],[[]],[[[224,[18]]],[[224,[18]]]],[[]],[[[138,[137]]],139],[[[224,[25]],4],[[6,[5]]]],[[]],[[]],[[[224,[[134,[[133,[131,132]]]]]],141],139],0,[[]],[[],7],[[[224,[[134,[[133,[131,132]]]]]],22],[[224,[[134,[[133,[131,132]]]]]]]],[[[224,[[134,[[133,[131,132]]]]]],22],[[224,[[134,[[133,[131,132]]]]]]]],[[[134,[[133,[131,132]]]]],[[224,[[134,[[133,[131,132]]]]]]]],[[[224,[[134,[[133,[131,132]]]]]],136],[[224,[[134,[[133,[131,132]]]]]]]],[[]],[[],6],[[],6],[[],10],[[]],[[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144],[[224,[[145,[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144]]]]]],[[[134,[[133,[131,132]]]],146],[[224,[[134,[[133,[131,132]]]]]]]],0,0,0,[[[226,[225]],136],[[226,[225]]]],0,[[[7,[179]]],[[154,[[153,[139,151]]]]]],[[]],[[]],[142],[[[226,[225]],[142,[[0,[149,150]]]]]],[[[226,[225]]],[[226,[225]]]],[[]],[[[226,[[0,[25,225]]]],4],[[6,[5]]]],[[]],[[[152,[225,151]]],[[226,[225]]]],[[]],[[[7,[[155,[175]]]]],[[154,[[153,[139,151]]]]]],0,[[]],[[],156],[[],157],[[],7],[[[226,[225]],22],[[226,[225]]]],0,[[[226,[225]],22],[[226,[225]]]],0,[225,[[226,[225]]]],[[[226,[225]],158],[[159,[6]]]],[158,[[159,[6]]]],[[[226,[225]],136],[[226,[225]]]],0,[[]],[[],6],[[],6],[[],10],[[]],[[225,144],[[145,[[226,[225]],144]]]],0,[[[227,[[134,[[133,[131,132]]]]]],136],[[227,[[134,[[133,[131,132]]]]]]]],[[]],[[]],[[[227,[18]]],[[227,[18]]]],[[]],[[[138,[137]]],139],[[[227,[25]],4],[[6,[5]]]],[[]],[[]],0,[[]],[[],7],[[[227,[[134,[[133,[131,132]]]]]],[140,[208]]],139],[[[227,[[134,[[133,[131,132]]]]]],22],[[227,[[134,[[133,[131,132]]]]]]]],[[[227,[[134,[[133,[131,132]]]]]],22],[[227,[[134,[[133,[131,132]]]]]]]],[[[134,[[133,[131,132]]]]],[[227,[[134,[[133,[131,132]]]]]]]],[[[227,[[134,[[133,[131,132]]]]]],136],[[227,[[134,[[133,[131,132]]]]]]]],[[]],[[],6],[[],6],[[],10],[[[227,[[134,[[133,[131,132]]]]]],[140,[210]]],139],[[]],[[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144],[[227,[[145,[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144]]]]]],[[[134,[[133,[131,132]]]],146],[[227,[[134,[[133,[131,132]]]]]]]],0,0,[[[229,[228]],136],[[229,[228]]]],0,[[]],[[]],[[[229,[228]],[142,[[0,[149,150]]]]]],[142],[[[229,[228]]],[[229,[228]]]],[[]],[[[229,[[0,[25,228]]]],4],[[6,[5]]]],[[]],[[[152,[228,151]]],[[229,[228]]]],[[]],0,[[]],[[],156],[[],157],[[],7],[[[7,[208]]],[[154,[[153,[139,151]]]]]],[[[229,[228]],22],[[229,[228]]]],0,[[[229,[228]],22],[[229,[228]]]],0,[228,[[229,[228]]]],[[[229,[228]],158],[[159,[6]]]],[158,[[159,[6]]]],[[[229,[228]],136],[[229,[228]]]],0,[[]],[[],6],[[],6],[[],10],[[[7,[210]]],[[154,[[153,[139,151]]]]]],[[]],[[228,144],[[145,[[229,[228]],144]]]],0,0,[[]],[[]],[230,230],[[]],[[230,123]],[230,22],[[230,230],3],[[230,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[230]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]],0,[[[231,[[134,[[133,[131,132]]]]]],136],[[231,[[134,[[133,[131,132]]]]]]]],[[[231,[[134,[[133,[131,132]]]]]],[140,[202]]],139],[[[231,[[134,[[133,[131,132]]]]]],[140,[198]]],139],[[[231,[[134,[[133,[131,132]]]]]],[140,[200]]],139],[[]],[[]],[[[231,[18]]],[[231,[18]]]],[[]],[[[231,[[134,[[133,[131,132]]]]]],[140,[204]]],139],[[[138,[137]]],139],[[[231,[[134,[[133,[131,132]]]]]],[140,[206]]],139],[[[231,[25]],4],[[6,[5]]]],[[]],[[]],0,[[]],[[],7],[[[231,[[134,[[133,[131,132]]]]]],22],[[231,[[134,[[133,[131,132]]]]]]]],[[[231,[[134,[[133,[131,132]]]]]],22],[[231,[[134,[[133,[131,132]]]]]]]],[[[134,[[133,[131,132]]]]],[[231,[[134,[[133,[131,132]]]]]]]],[[[231,[[134,[[133,[131,132]]]]]],[140,[196]]],139],[[[231,[[134,[[133,[131,132]]]]]],[140,[194]]],139],[[[231,[[134,[[133,[131,132]]]]]],136],[[231,[[134,[[133,[131,132]]]]]]]],[[]],[[],6],[[],6],[[],10],[[]],[[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144],[[231,[[145,[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144]]]]]],[[[134,[[133,[131,132]]]],146],[[231,[[134,[[133,[131,132]]]]]]]],0,0,[[[233,[232]],136],[[233,[232]]]],0,[[[7,[202]]],[[154,[[153,[139,151]]]]]],[[[7,[198]]],[[154,[[153,[139,151]]]]]],[[[7,[200]]],[[154,[[153,[139,151]]]]]],[[]],[[]],[142],[[[233,[232]],[142,[[0,[149,150]]]]]],[[[233,[232]]],[[233,[232]]]],[[]],[[[7,[204]]],[[154,[[153,[139,151]]]]]],[[[7,[206]]],[[154,[[153,[139,151]]]]]],[[[233,[[0,[25,232]]]],4],[[6,[5]]]],[[]],[[[152,[232,151]]],[[233,[232]]]],[[]],0,[[]],[[],156],[[],157],[[],7],[[[233,[232]],22],[[233,[232]]]],0,[[[233,[232]],22],[[233,[232]]]],0,[232,[[233,[232]]]],[158,[[159,[6]]]],[[[233,[232]],158],[[159,[6]]]],[[[7,[196]]],[[154,[[153,[139,151]]]]]],[[[7,[194]]],[[154,[[153,[139,151]]]]]],[[[233,[232]],136],[[233,[232]]]],0,[[]],[[],6],[[],6],[[],10],[[]],[[232,144],[[145,[[233,[232]],144]]]],0,0,0,0,0,[[]],[[]],[234,234],[[]],[[234,123]],[234,22],[[234,234],3],[[234,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[234]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]],0,[[[235,[[134,[[133,[131,132]]]]]],136],[[235,[[134,[[133,[131,132]]]]]]]],[[]],[[]],[[[235,[18]]],[[235,[18]]]],[[]],[[[138,[137]]],139],[[[235,[25]],4],[[6,[5]]]],[[]],[[]],[[[235,[[134,[[133,[131,132]]]]]],[140,[100]]],139],0,[[]],[[],7],[[[235,[[134,[[133,[131,132]]]]]],22],[[235,[[134,[[133,[131,132]]]]]]]],[[[235,[[134,[[133,[131,132]]]]]],22],[[235,[[134,[[133,[131,132]]]]]]]],[[[134,[[133,[131,132]]]]],[[235,[[134,[[133,[131,132]]]]]]]],[[[235,[[134,[[133,[131,132]]]]]],136],[[235,[[134,[[133,[131,132]]]]]]]],[[]],[[],6],[[],6],[[],10],[[]],[[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144],[[235,[[145,[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144]]]]]],[[[134,[[133,[131,132]]]],146],[[235,[[134,[[133,[131,132]]]]]]]],0,0,[[[237,[236]],136],[[237,[236]]]],0,[[]],[[]],[[[237,[236]],[142,[[0,[149,150]]]]]],[142],[[[237,[236]]],[[237,[236]]]],[[]],[[[237,[[0,[25,236]]]],4],[[6,[5]]]],[[]],[[[152,[236,151]]],[[237,[236]]]],[[]],[[[7,[100]]],[[154,[[153,[139,151]]]]]],0,[[]],[[],156],[[],157],[[],7],[[[237,[236]],22],[[237,[236]]]],0,[[[237,[236]],22],[[237,[236]]]],0,[236,[[237,[236]]]],[[[237,[236]],158],[[159,[6]]]],[158,[[159,[6]]]],[[[237,[236]],136],[[237,[236]]]],0,[[]],[[],6],[[],6],[[],10],[[]],[[236,144],[[145,[[237,[236]],144]]]],0,0,0,[[]],[[]],[238,238],[[]],[[238,123]],[238,22],[[238,238],3],[[238,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[238]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]],0,0,0,0,[[]],[[]],[239,239],[[]],[[239,123]],[239,22],[[239,239],3],[[239,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[239]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[240],[241],[242],[243],[244],[245],[246],[247],[248],[249],[250],[251],[252],[253],[254],[255],[256],[257],[258],[259],[260],[240,240],[241,241],[242,242],[243,243],[244,244],[245,245],[246,246],[247,247],[248,248],[249,249],[250,250],[251,251],[252,252],[253,253],[254,254],[255,255],[256,256],[257,257],[258,258],[259,259],[260,260],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],240],[[],241],[[],242],[[],243],[[],244],[[],245],[[],246],[[],247],[[],248],[[],249],[[],250],[[],251],[[],252],[[],253],[[],254],[[],255],[[],256],[[],257],[[],258],[[],259],[[],260],0,[240,22],[241,22],[242,22],[243,22],[244,22],[245,22],[246,22],[247,22],[248,22],[249,22],[250,22],[251,22],[252,22],[253,22],[254,22],[255,22],[256,22],[257,22],[258,22],[259,22],[260,22],0,0,[[240,240],3],[[241,241],3],[[242,242],3],[[243,243],3],[[244,244],3],[[245,245],3],[[246,246],3],[[247,247],3],[[248,248],3],[[249,249],3],[[250,250],3],[[251,251],3],[[252,252],3],[[253,253],3],[[254,254],3],[[255,255],3],[[256,256],3],[[257,257],3],[[258,258],3],[[259,259],3],[[260,260],3],[[240,4],[[6,[5]]]],[[241,4],[[6,[5]]]],[[242,4],[[6,[5]]]],[[243,4],[[6,[5]]]],[[244,4],[[6,[5]]]],[[245,4],[[6,[5]]]],[[246,4],[[6,[5]]]],[[247,4],[[6,[5]]]],[[248,4],[[6,[5]]]],[[249,4],[[6,[5]]]],[[250,4],[[6,[5]]]],[[251,4],[[6,[5]]]],[[252,4],[[6,[5]]]],[[253,4],[[6,[5]]]],[[254,4],[[6,[5]]]],[[255,4],[[6,[5]]]],[[256,4],[[6,[5]]]],[[257,4],[[6,[5]]]],[[258,4],[[6,[5]]]],[[259,4],[[6,[5]]]],[[260,4],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[261,261],[[]],[[261,123]],[261,22],[[261,261],3],[[261,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[261]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]],0,[[[262,[[134,[[133,[131,132]]]]]],136],[[262,[[134,[[133,[131,132]]]]]]]],[[]],[[]],[[[262,[18]]],[[262,[18]]]],[[]],[[[138,[137]]],139],[[[262,[25]],4],[[6,[5]]]],[[]],[[]],[[[262,[[134,[[133,[131,132]]]]]],[140,[241]]],139],0,[[]],[[],7],[[[262,[[134,[[133,[131,132]]]]]],22],[[262,[[134,[[133,[131,132]]]]]]]],[[[262,[[134,[[133,[131,132]]]]]],22],[[262,[[134,[[133,[131,132]]]]]]]],[[[134,[[133,[131,132]]]]],[[262,[[134,[[133,[131,132]]]]]]]],[[[262,[[134,[[133,[131,132]]]]]],136],[[262,[[134,[[133,[131,132]]]]]]]],[[]],[[],6],[[],6],[[],10],[[]],[[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144],[[262,[[145,[[143,[[142,[[133,[131,132]]]]]],[134,[[133,[131,132]]]],144]]]]]],[[[134,[[133,[131,132]]]],146],[[262,[[134,[[133,[131,132]]]]]]]],0,0,0,0,0,0,0,0,0,0,0,[263,24],[[],264],[[]],[[]],[263,263],[[]],[[263,123]],[263,22],[[263,263],3],[[263,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[263]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]],0,0,[[[266,[265]],136],[[266,[265]]]],0,[[]],[[]],[[[266,[265]],[142,[[0,[149,150]]]]]],[142],[[[266,[265]]],[[266,[265]]]],[[]],[[[266,[[0,[25,265]]]],4],[[6,[5]]]],[[]],[[[152,[265,151]]],[[266,[265]]]],[[]],[[[7,[241]]],[[154,[[153,[139,151]]]]]],0,[[]],[[],156],[[],157],[[],7],[[[266,[265]],22],[[266,[265]]]],0,[[[266,[265]],22],[[266,[265]]]],0,[265,[[266,[265]]]],[158,[[159,[6]]]],[[[266,[265]],158],[[159,[6]]]],[[[266,[265]],136],[[266,[265]]]],0,[[]],[[],6],[[],6],[[],10],[[]],[[265,144],[[145,[[266,[265]],144]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[119,119],[[]],[[119,123]],[119,22],[[119,119],3],[[119,4],[[6,[5]]]],[[]],[[]],[[]],[[],7],[[[14,[119]],124,125,126,127],[[6,[2]]]],[[]],[[],6],[[],6],[[],10],[[]]],"c":[554,589,628,661,1322,1323,1324,1859,2760,2761,2762],"p":[[8,"Error"],[3,"DecodeError"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Request"],[3,"Demand"],[3,"String"],[3,"TypeId"],[4,"Error"],[8,"Any"],[3,"Backtrace"],[4,"Option"],[4,"ConcreteDataType"],[8,"Into"],[3,"IntoColumnDataTypeSnafu"],[8,"Clone"],[3,"UnknownColumnDataTypeSnafu"],[3,"ConvertColumnDefaultConstraintSnafu"],[3,"InvalidColumnDefaultConstraintSnafu"],[15,"usize"],[3,"Vec"],[15,"str"],[8,"Debug"],[6,"Result"],[15,"i32"],[8,"StackError"],[4,"StatusCode"],[15,"i128"],[3,"IntervalMonthDayNano"],[3,"ColumnDataTypeWrapper"],[4,"ColumnDataType"],[3,"DdlRequest"],[4,"SemanticType"],[3,"Value"],[4,"ValueRef"],[3,"Values"],[4,"Value"],[6,"VectorRef"],[3,"Column"],[3,"QueryRequest"],[4,"Request"],[6,"Result"],[8,"Iterator"],[3,"Row"],[3,"ReadRequest"],[3,"Iter"],[3,"Cloned"],[3,"FilterMap"],[3,"MetricMetadata"],[3,"Sample"],[3,"Exemplar"],[3,"TimeSeries"],[3,"Label"],[3,"Labels"],[3,"LabelMatcher"],[3,"ReadHints"],[3,"Chunk"],[3,"ChunkedSeries"],[3,"WriteRequest"],[3,"ReadResponse"],[3,"Query"],[3,"QueryResult"],[3,"ChunkedReadResponse"],[4,"ResponseType"],[4,"MetricType"],[4,"Type"],[4,"Encoding"],[4,"Ordering"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[4,"OpType"],[3,"RequestHeader"],[3,"ResponseHeader"],[3,"Status"],[3,"AuthHeader"],[3,"Basic"],[3,"Token"],[3,"AffectedRows"],[3,"FlightMetadata"],[3,"CreateTableExpr"],[3,"AlterExpr"],[3,"DropTableExpr"],[3,"CreateDatabaseExpr"],[3,"TruncateTableExpr"],[3,"AddColumns"],[3,"DropColumns"],[3,"RenameTable"],[3,"AddColumn"],[3,"DropColumn"],[3,"TableId"],[3,"ColumnDef"],[3,"AddColumnLocation"],[3,"Rows"],[3,"ColumnSchema"],[3,"PromqlRequest"],[3,"PromqlResponse"],[3,"PromInstantQuery"],[3,"PromRangeQuery"],[3,"GreptimeRequest"],[3,"GreptimeResponse"],[3,"InsertRequests"],[3,"InsertRequest"],[3,"DeleteRequests"],[3,"DeleteRequest"],[3,"RowInsertRequests"],[3,"RowInsertRequest"],[3,"RowDeleteRequests"],[3,"RowDeleteRequest"],[3,"HealthCheckRequest"],[3,"HealthCheckResponse"],[3,"Mutation"],[3,"WalEntry"],[8,"Deserializer"],[4,"ValueData"],[4,"LocationType"],[8,"Serializer"],[4,"Kind"],[8,"BufMut"],[15,"u32"],[4,"WireType"],[8,"Buf"],[3,"DecodeContext"],[4,"AuthScheme"],[3,"ColumnSchema"],[4,"Expr"],[3,"Bytes"],[3,"Status"],[3,"UnsyncBoxBody"],[8,"GrpcService"],[3,"GreptimeDatabaseClient"],[4,"CompressionEncoding"],[3,"Endpoint"],[8,"TryInto"],[8,"Future"],[8,"IntoRequest"],[8,"IntoStreamingRequest"],[3,"Request"],[8,"Service"],[8,"Interceptor"],[3,"InterceptedService"],[3,"Uri"],[8,"GreptimeDatabase"],[3,"GreptimeDatabaseServer"],[8,"Body"],[8,"Send"],[3,"Global"],[3,"Arc"],[3,"Box"],[3,"Pin"],[3,"Streaming"],[3,"IntoMakeService"],[3,"IntoMakeServiceWithConnectInfo"],[3,"Context"],[4,"Poll"],[4,"Response"],[3,"HealthCheckClient"],[8,"HealthCheck"],[3,"HealthCheckServer"],[4,"Role"],[4,"RegionRole"],[4,"DdlTaskType"],[3,"RequestHeader"],[3,"ResponseHeader"],[3,"Error"],[3,"Peer"],[3,"TableId"],[3,"TableName"],[3,"TimeInterval"],[3,"KeyValue"],[3,"HeartbeatRequest"],[3,"RegionStat"],[3,"HeartbeatResponse"],[3,"RegionLease"],[3,"AskLeaderRequest"],[3,"AskLeaderResponse"],[3,"MailboxMessage"],[3,"TableRoute"],[3,"RegionRoute"],[3,"Table"],[3,"Region"],[3,"Partition"],[3,"TableRouteValue"],[3,"CreateTableTask"],[3,"DropTableTask"],[3,"AlterTableTask"],[3,"TruncateTableTask"],[3,"SubmitDdlTaskRequest"],[3,"SubmitDdlTaskResponse"],[3,"RangeRequest"],[3,"RangeResponse"],[3,"PutRequest"],[3,"PutResponse"],[3,"BatchGetRequest"],[3,"BatchGetResponse"],[3,"BatchPutRequest"],[3,"BatchPutResponse"],[3,"BatchDeleteRequest"],[3,"BatchDeleteResponse"],[3,"CompareAndPutRequest"],[3,"CompareAndPutResponse"],[3,"DeleteRangeRequest"],[3,"DeleteRangeResponse"],[3,"LockRequest"],[3,"LockResponse"],[3,"UnlockRequest"],[3,"UnlockResponse"],[4,"ErrorCode"],[3,"PeerDict"],[15,"i64"],[8,"Serialize"],[8,"Display"],[3,"Error"],[3,"ClusterClient"],[8,"Cluster"],[3,"ClusterServer"],[3,"DdlTaskClient"],[8,"DdlTask"],[3,"DdlTaskServer"],[3,"HeartbeatClient"],[8,"Heartbeat"],[3,"HeartbeatServer"],[3,"LockClient"],[8,"Lock"],[3,"LockServer"],[4,"Payload"],[3,"StoreClient"],[8,"Store"],[3,"StoreServer"],[4,"Task"],[3,"PrometheusGatewayClient"],[8,"PrometheusGateway"],[3,"PrometheusGatewayServer"],[4,"Promql"],[4,"Query"],[3,"RegionRequestHeader"],[3,"RegionRequest"],[3,"RegionResponse"],[3,"InsertRequests"],[3,"DeleteRequests"],[3,"InsertRequest"],[3,"DeleteRequest"],[3,"QueryRequest"],[3,"CreateRequest"],[3,"DropRequest"],[3,"OpenRequest"],[3,"CloseRequest"],[3,"AlterRequest"],[3,"AddColumns"],[3,"DropColumns"],[3,"AddColumn"],[3,"DropColumn"],[3,"FlushRequest"],[3,"CompactRequest"],[3,"TruncateRequest"],[3,"RegionColumnDef"],[4,"Kind"],[3,"RegionClient"],[4,"Body"],[3,"UncasedStr"],[8,"Region"],[3,"RegionServer"],[13,"ConvertColumnDefaultConstraint"],[13,"InvalidColumnDefaultConstraint"],[13,"UnknownColumnDataType"],[13,"IntoColumnDataType"]]},\
"auth":{"doc":"","t":"NNGENNNNEIGEENNNNNNNNIGIGKFKKKAAKAAAFFKRGGENENNGNGFLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLFFLLLLLLLLLLLFFLLNDNDENDNDNDNDNDGNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLMMMMMMMMMMMMMMMNNNNNIEENNNNNLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIKLLLLLLLLLLLLLLLLLLLLLKLMLLILLKKKARDLLLLLLLLLLLLLLLLLLLLLLLML","n":["Allow","GrpcRequest","HashedPassword","Identity","LineProtocol","MysqlNativePassword","Opentsdb","Otlp","Password","PermissionChecker","PermissionCheckerRef","PermissionReq","PermissionResp","PgMD5","PlainText","PromQuery","PromStoreRead","PromStoreWrite","Reject","SqlStatement","UserId","UserInfo","UserInfoRef","UserProvider","UserProviderRef","as_any","auth_mysql","authenticate","authorize","check_permission","common","error","name","permission","user_info","user_provider","user_provider_from_option","userinfo_by_name","username","DEFAULT_USERNAME","HashedPassword","HostOrIp","Identity","MysqlNativePassword","Password","PgMD5","PlainText","Salt","UserId","Username","auth_mysql","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","double_sha1","drop","drop","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","sha1_one","sha1_two","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","user_provider_from_option","userinfo_by_name","vzip","vzip","AccessDenied","AccessDeniedSnafu","AuthBackend","AuthBackendSnafu","Error","IllegalParam","IllegalParamSnafu","InternalState","InternalStateSnafu","InvalidConfig","InvalidConfigSnafu","Io","IoSnafu","PermissionDenied","PermissionDeniedSnafu","Result","UnsupportedPasswordType","UnsupportedPasswordTypeSnafu","UserNotFound","UserNotFoundSnafu","UserPasswordMismatch","UserPasswordMismatchSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","msg","msg","msg","next","password_type","provide","schema","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","username","username","username","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","catalog","error","location","location","location","msg","msg","msg","password_type","schema","source","username","username","username","value","Allow","GrpcRequest","LineProtocol","Opentsdb","Otlp","PermissionChecker","PermissionReq","PermissionResp","PromQuery","PromStoreRead","PromStoreWrite","Reject","SqlStatement","borrow","borrow","borrow_mut","borrow_mut","check_permission","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DefaultUserInfo","UserInfo","as_any","as_any","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","username","username","username","vzip","with_name","UserProvider","auth","auth","authenticate","authorize","name","static_user_provider","STATIC_USER_PROVIDER","StaticUserProvider","authenticate","authorize","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","name","to_subset","to_subset_unchecked","try_from","try_from","try_into","type_id","users","vzip"],"q":[[0,"auth"],[39,"auth::common"],[101,"auth::error"],[442,"auth::error::Error"],[457,"auth::permission"],[517,"auth::user_info"],[546,"auth::user_provider"],[553,"auth::user_provider::static_user_provider"]],"d":["","","","","","","","","Authentication information sent by the client.","","","","","","","","","","","","","","pub type alias","","","","","Checks whether a user is valid and allowed to access the …","Checks whether a connection request from a certain user to …","","","","","","","","","construct a <code>UserInfo</code> impl with name use default username …","","","","","","","Authentication information sent by the client.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","construct a <code>UserInfo</code> impl with name use default username …","","","","SNAFU context selector for the <code>Error::AccessDenied</code> variant","","SNAFU context selector for the <code>Error::AuthBackend</code> variant","","","SNAFU context selector for the <code>Error::IllegalParam</code> variant","","SNAFU context selector for the <code>Error::InternalState</code> variant","","SNAFU context selector for the <code>Error::InvalidConfig</code> variant","","SNAFU context selector for the <code>Error::Io</code> variant","","SNAFU context selector for the <code>Error::PermissionDenied</code> …","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UserNotFound</code> variant","","SNAFU context selector for the <code>Error::UserPasswordMismatch</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Combination of authenticate() and authorize(). In most …","Combination of authenticate() and authorize(). In most …","Checks whether a user is valid and allowed to access the …","Checks whether a connection request from a certain user to …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[15,14,0,0,14,8,14,14,0,0,0,0,0,8,8,14,14,14,15,14,7,0,0,0,0,48,0,49,49,50,0,0,49,0,0,0,0,0,48,0,0,0,0,8,0,8,8,0,7,0,0,8,7,8,7,7,7,8,7,8,7,8,7,8,7,8,7,0,8,7,7,8,7,7,8,7,8,7,8,7,8,7,8,7,0,0,7,8,7,8,7,8,7,8,7,8,7,0,0,8,7,27,0,27,0,0,27,0,27,0,27,0,27,0,27,0,0,27,0,27,0,27,0,27,27,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,34,35,36,37,38,37,27,31,32,33,40,41,34,35,36,37,38,31,32,33,40,41,34,35,36,37,38,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,34,35,36,37,38,31,32,33,40,41,34,35,36,37,38,27,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,27,35,27,37,27,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,31,32,33,40,41,34,35,36,37,38,27,34,36,37,31,31,32,33,40,41,34,35,36,37,38,27,51,52,52,53,54,55,56,57,58,51,53,59,60,51,55,15,14,14,14,14,0,0,0,14,14,14,15,14,14,15,14,15,50,14,14,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,14,15,14,15,14,15,14,15,14,15,14,14,15,14,15,14,15,14,15,14,15,14,15,0,0,48,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,48,46,46,46,46,0,49,49,49,49,49,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[2,[4,[3]],5,[4,[3]]],6],[[7,8],[[11,[[10,[9]]]]]],[[5,5,12],[[11,[[10,[9]]]]]],[[[13,[12]],14],[[6,[15]]]],0,0,[[],5],0,0,0,[16,[[6,[17]]]],[[[13,[16]]],12],[[],5],0,0,0,0,0,0,0,0,0,0,0,[[2,[4,[3]],5,[4,[3]]],6],[[]],[[]],[[]],[[]],[7,7],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[19],[19],[19],[19],[[[4,[3]]],[[20,[3]]]],[19],[19],[[7,21],22],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[]],[[]],[[],23],[[],23],[[],24],[[],24],[[[4,[3]]],[[20,[3]]]],[[[4,[3]],[4,[3]]],[[20,[3]]]],[[]],[[],13],[[],13],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[16,[[6,[17]]]],[[[13,[16]]],12],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[27,1],[[],28],[27,[[13,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[[30,[16]],[30,[16]]]]],27],[[[32,[[30,[16]]]]],27],[[[33,[[30,[16]]]]],27],[[[34,[[30,[16]]]]],27],[[[35,[[30,[16]]]]],27],[[[36,[[30,[16]]]]],27],[[[37,[[30,[16]],[30,[16]],[30,[16]]]]],27],[38,27],0,[27,[[13,[28]]]],[[[31,[39,39]]],[[31,[39,39]]]],[[[32,[39]]],[[32,[39]]]],[[[33,[39]]],[[33,[39]]]],[40,40],[41,41],[[[34,[39]]],[[34,[39]]]],[[[35,[39]]],[[35,[39]]]],[[[36,[39]]],[[36,[39]]]],[[[37,[39,39,39]]],[[37,[39,39,39]]]],[38,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[27,19,[20,[16]]]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[27,5],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[[31,[[30,[16]],[30,[16]]]]],[[25,[27]]]],[[[32,[[30,[16]]]]],[[25,[27]]]],[[[33,[[30,[16]]]]],[[25,[27]]]],[[[34,[[30,[16]]]]],[[25,[27]]]],[[[35,[[30,[16]]]]],[[25,[27]]]],[[[36,[[30,[16]]]]],[[25,[27]]]],[[[37,[[30,[16]],[30,[16]],[30,[16]]]]],[[25,[27]]]],[38,[[25,[27]]]],[[[31,[42,42]],21],22],[[[32,[42]],21],22],[[[33,[42]],21],22],[[40,21],22],[[41,21],22],[[[34,[42]],21],22],[[[35,[42]],21],22],[[[36,[42]],21],22],[[[37,[42,42,42]],21],22],[[38,21],22],[[27,21],22],[[27,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[31,[[30,[16]],[30,[16]]]]],27],[[[32,[[30,[16]]]]],27],[[[33,[[30,[16]]]]],27],[40,27],[41,27],[[[34,[[30,[16]]]]],27],[[[35,[[30,[16]]]]],27],[[[36,[[30,[16]]]]],27],[[[37,[[30,[16]],[30,[16]],[30,[16]]]]],27],[38,27],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,[27,[[13,[43]]]],0,[44],0,[27,[[13,[28]]]],[27,45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[13,[12]],14],[[6,[15]]]],[14,14],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[19],[19],[19],[19],[19],[19],[[14,21],22],[[15,21],22],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[]],[[]],[[],23],[[],23],[[],24],[[],24],[[]],[[],13],[[],13],[[]],[[]],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[]],[[]],0,0,[[],1],[46,1],[[]],[[]],[[],18],[[],18],[[],18],[19],[19],[19],[[46,21],22],[[]],[[]],[[],19],[[]],[[],23],[[],24],[[],13],[[]],[[],25],[[],25],[[],26],[[],5],[46,5],0,[[]],[[[30,[16]]],12],0,[[7,8,5,5],[[11,[[10,[9]]]]]],[[7,8,5,5],[[11,[[10,[9]]]]]],[[7,8],[[11,[[10,[9]]]]]],[[5,5,12],[[11,[[10,[9]]]]]],[[],5],0,0,0,[[47,7,8],[[11,[[10,[9]]]]]],[[47,5,5,12],[[11,[[10,[9]]]]]],[[]],[[]],[[],18],[[],18],[[],18],[19],[19],[19],[[]],[[]],[[],19],[[]],[[],23],[[],24],[47,5],[[],13],[[]],[5,[[6,[47]]]],[[],25],[[],25],[[],26],0,[[]]],"c":[],"p":[[8,"Any"],[6,"HashedPassword"],[15,"u8"],[15,"slice"],[15,"str"],[6,"Result"],[4,"Identity"],[4,"Password"],[8,"Future"],[3,"Box"],[3,"Pin"],[6,"UserInfoRef"],[4,"Option"],[4,"PermissionReq"],[4,"PermissionResp"],[3,"String"],[6,"UserProviderRef"],[3,"Compat"],[15,"usize"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[3,"Request"],[15,"bool"],[4,"Result"],[3,"TypeId"],[4,"Error"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"InvalidConfigSnafu"],[3,"IllegalParamSnafu"],[3,"InternalStateSnafu"],[3,"UserNotFoundSnafu"],[3,"UnsupportedPasswordTypeSnafu"],[3,"UserPasswordMismatchSnafu"],[3,"AccessDeniedSnafu"],[3,"PermissionDeniedSnafu"],[8,"Clone"],[3,"IoSnafu"],[3,"AuthBackendSnafu"],[8,"Debug"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"DefaultUserInfo"],[3,"StaticUserProvider"],[8,"UserInfo"],[8,"UserProvider"],[8,"PermissionChecker"],[13,"AccessDenied"],[13,"Io"],[13,"AuthBackend"],[13,"PermissionDenied"],[13,"InvalidConfig"],[13,"IllegalParam"],[13,"InternalState"],[13,"UnsupportedPasswordType"],[13,"UserNotFound"],[13,"UserPasswordMismatch"]]},\
"catalog":{"doc":"","t":"IGDDGDDDDKLLLLLLLLLLLLMMMMMKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLAAAMMMMMMMKKKMKMMMMMKALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNNDDNDNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMLMMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMRDIDGRLLLLLMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMKLKLAKLLLLLLLLLLLLLRRDDRRRRLLLLLLMMMMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMLLLLLLLLLLLLLDDLLLLLLMMMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMLMLMMLLLLLLLLLLLLLDDDMMAMMMAMMMMRRRGDDLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLDDLLLLLMLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLMLLLLLLLLLLLLLLLLLCACDGLLLLLLMLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLDDDDDRMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLMLLLMMLLMLLLLLLLLLLMLLLLLL","n":["CatalogManager","CatalogManagerRef","DeregisterSchemaRequest","DeregisterTableRequest","OpenSystemTableHook","RegisterSchemaRequest","RegisterSystemTableRequest","RegisterTableRequest","RenameTableRequest","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog","catalog","catalog","catalog","catalog","catalog_exists","catalog_names","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_table_request","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","information_schema","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kvbackend","memory","metrics","new_table_name","open_hook","schema","schema","schema","schema","schema","schema_exists","schema_names","table","table","table_exists","table_id","table_id","table_name","table_name","table_name","table_names","table_source","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","CatalogNotFound","CatalogNotFoundSnafu","CompileScriptInternal","CompileScriptInternalSnafu","CreateRecordBatch","CreateRecordBatchSnafu","CreateSystemCatalog","CreateSystemCatalogSnafu","CreateTable","CreateTableSnafu","Datafusion","DatafusionSnafu","EmptyValue","EmptyValueSnafu","Error","Generic","GenericSnafu","InsertCatalogRecord","InsertCatalogRecordSnafu","Internal","InternalSnafu","InvalidCatalogValue","InvalidCatalogValueSnafu","InvalidEntryType","InvalidEntryTypeSnafu","InvalidKey","InvalidKeySnafu","InvalidTableInfoInCatalog","InvalidTableInfoInCatalogSnafu","ListCatalogs","ListCatalogsSnafu","ListSchemas","ListSchemasSnafu","MetaSrv","MetaSrvSnafu","NotSupported","NotSupportedSnafu","OpenSystemCatalog","OpenSystemCatalogSnafu","OpenTable","OpenTableSnafu","ParallelOpenTable","ParallelOpenTableSnafu","QueryAccessDenied","QueryAccessDeniedSnafu","ReadSystemCatalog","ReadSystemCatalogSnafu","Result","SchemaExists","SchemaExistsSnafu","SchemaNotFound","SchemaNotFoundSnafu","SystemCatalog","SystemCatalogSnafu","SystemCatalogTableScan","SystemCatalogTableScanExec","SystemCatalogTableScanExecSnafu","SystemCatalogTableScanSnafu","SystemCatalogTypeMismatch","SystemCatalogTypeMismatchSnafu","TableEngineNotFound","TableEngineNotFoundSnafu","TableExists","TableExistsSnafu","TableMetadataManager","TableMetadataManagerSnafu","TableNotExist","TableNotExistSnafu","TableNotFound","TableNotFoundSnafu","TableSchemaMismatch","TableSchemaMismatchSnafu","Unimplemented","UnimplementedSnafu","UpgradeWeakCatalogManagerRef","UpgradeWeakCatalogManagerRefSnafu","ValueDeserialize","ValueDeserializeSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","catalog","catalog","catalog_name","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","data_type","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine_name","entry_type","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","msg","msg","next","op","operation","provide","schema","schema","schema","source","status_code","table","table","table_id","table_info","table_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","catalog","catalog","catalog","catalog_name","data_type","engine_name","entry_type","error","error","error","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","op","operation","schema","schema","schema","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","table","table","table_id","table_info","table_info","COLUMNS","InformationSchemaProvider","InformationTable","InformationTableDataSource","InformationTableRef","TABLES","borrow","borrow","borrow_mut","borrow_mut","build","catalog_manager","catalog_name","columns","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","get_stream","information_table","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","new","schema","table","table","table_id","table_info","table_name","table_type","tables","to_stream","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_project","type_id","type_id","vzip","vzip","COLUMN_NAME","DATA_TYPE","InformationSchemaColumns","InformationSchemaColumnsBuilder","SEMANTIC_TYPE","TABLE_CATALOG","TABLE_NAME","TABLE_SCHEMA","add_column","borrow","borrow","borrow_mut","borrow_mut","builder","catalog_manager","catalog_manager","catalog_name","catalog_name","catalog_names","column_names","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","data_types","deref","deref","deref_mut","deref_mut","drop","drop","execute","finish","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","make_tables","new","new","schema","schema","schema","schema","schema","schema_names","semantic_types","table_id","table_name","table_names","to_stream","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","InformationSchemaTables","InformationSchemaTablesBuilder","add_table","borrow","borrow","borrow_mut","borrow_mut","builder","catalog_manager","catalog_manager","catalog_name","catalog_name","catalog_names","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","engines","execute","finish","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","make_tables","new","new","schema","schema","schema","schema","schema","schema_names","table_id","table_ids","table_name","table_names","table_types","to_stream","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CachedMetaKvBackend","KvBackendCatalogManager","MetaKvBackend","cache","cache_invalidator","client","client","datanode_manager","kv_backend","manager","name","partition_manager","system_catalog","table_metadata_manager","CACHE_MAX_CAPACITY","CACHE_TTI_SECOND","CACHE_TTL_SECOND","CacheBackendRef","CachedMetaKvBackend","MetaKvBackend","as_any","as_any","batch_delete","batch_delete","batch_get","batch_get","batch_put","batch_put","borrow","borrow","borrow_mut","borrow_mut","cache","cache","client","compare_and_put","compare_and_put","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","delete_range","delete_range","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_subset","from_subset","get","get","init","init","into","into","into_request","into_request","invalidate_key","invalidate_table_id","invalidate_table_name","is_in_subset","is_in_subset","kv_backend","name","name","name","new","put","put","range","range","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wrap","KvBackendCatalogManager","SystemCatalog","as_any","borrow","borrow","borrow_mut","borrow_mut","cache_invalidator","catalog_exists","catalog_manager","catalog_names","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","datanode_manager","datanode_manager","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","invalidate_table_id","invalidate_table_name","is_in_subset","is_in_subset","new","partition_manager","partition_manager","schema_exist","schema_exists","schema_names","schema_names","system_catalog","table","table","table_exist","table_exists","table_metadata_manager","table_metadata_manager_ref","table_names","table_names","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MemoryCatalogManager","manager","new_memory_catalog_manager","MemoryCatalogManager","SchemaEntries","as_any","borrow","borrow_mut","catalog_exist_sync","catalog_exists","catalog_names","catalogs","clone","clone_into","compat","compat_mut","compat_ref","create_catalog_entry","deref","deref_mut","deregister_table_sync","drop","from","from_ref","from_subset","init","into","into_request","is_in_subset","new","new_memory_catalog_manager","register_catalog_sync","register_schema_sync","register_table_sync","schema_exist_sync","schema_exists","schema_names","table","table_exists","table_names","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_default_setup","METRIC_CATALOG_KV_GET","METRIC_CATALOG_KV_REMOTE_GET","METRIC_CATALOG_MANAGER_CATALOG_COUNT","METRIC_CATALOG_MANAGER_SCHEMA_COUNT","METRIC_CATALOG_MANAGER_TABLE_COUNT","METRIC_DB_LABEL","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","DfTableSourceProvider","borrow","borrow_mut","catalog_manager","compat","compat_mut","compat_ref","default_catalog","default_schema","deref","deref_mut","disallow_cross_schema_query","drop","from","from_subset","init","into","into_request","is_in_subset","new","resolve_table","resolve_table_ref","resolved_tables","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"catalog"],[187,"catalog::error"],[1338,"catalog::error::Error"],[1416,"catalog::information_schema"],[1480,"catalog::information_schema::columns"],[1553,"catalog::information_schema::tables"],[1620,"catalog::kvbackend"],[1634,"catalog::kvbackend::client"],[1711,"catalog::kvbackend::manager"],[1786,"catalog::memory"],[1789,"catalog::memory::manager"],[1834,"catalog::metrics"],[1950,"catalog::table_source"]],"d":["","","","","Hook called after system table opening.","","Register system table request:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the table by catalog, schema and table name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::CatalogNotFound</code> …","","SNAFU context selector for the <code>Error::CompileScriptInternal</code>…","","SNAFU context selector for the <code>Error::CreateRecordBatch</code> …","","SNAFU context selector for the <code>Error::CreateSystemCatalog</code> …","","SNAFU context selector for the <code>Error::CreateTable</code> variant","","SNAFU context selector for the <code>Error::Datafusion</code> variant","","SNAFU context selector for the <code>Error::EmptyValue</code> variant","","","SNAFU context selector for the <code>Error::Generic</code> variant","","SNAFU context selector for the <code>Error::InsertCatalogRecord</code> …","","SNAFU context selector for the <code>Error::Internal</code> variant","","SNAFU context selector for the <code>Error::InvalidCatalogValue</code> …","","SNAFU context selector for the <code>Error::InvalidEntryType</code> …","","SNAFU context selector for the <code>Error::InvalidKey</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ListCatalogs</code> variant","","SNAFU context selector for the <code>Error::ListSchemas</code> variant","","SNAFU context selector for the <code>Error::MetaSrv</code> variant","","SNAFU context selector for the <code>Error::NotSupported</code> variant","","SNAFU context selector for the <code>Error::OpenSystemCatalog</code> …","","SNAFU context selector for the <code>Error::OpenTable</code> variant","","SNAFU context selector for the <code>Error::ParallelOpenTable</code> …","","SNAFU context selector for the <code>Error::QueryAccessDenied</code> …","","SNAFU context selector for the <code>Error::ReadSystemCatalog</code> …","","","SNAFU context selector for the <code>Error::SchemaExists</code> variant","","SNAFU context selector for the <code>Error::SchemaNotFound</code> …","","SNAFU context selector for the <code>Error::SystemCatalog</code> variant","","","SNAFU context selector for the …","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::TableEngineNotFound</code> …","","SNAFU context selector for the <code>Error::TableExists</code> variant","","SNAFU context selector for the <code>Error::TableMetadataManager</code> …","","SNAFU context selector for the <code>Error::TableNotExist</code> variant","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::TableSchemaMismatch</code> …","","SNAFU context selector for the <code>Error::Unimplemented</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ValueDeserialize</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeuild a map of TableRef in information schema. Including …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Construct the <code>information_schema.tables</code> virtual table","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the <code>information_schema.TABLE</code> table row by row","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Construct the <code>information_schema.tables</code> virtual table","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access all existing catalog, schema and tables.","","","","","","","","","","","A sub-CatalogManager that handles system tables","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access all existing catalog, schema and tables.","Existing system tables:","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","A sub-CatalogManager that handles system tables","","","","","","","","","","","","","","","","","","","","","","","","","","Simple in-memory list of catalogs","","","","","","","","Collection of catalogs containing schemas and ultimately …","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Create a memory catalog list contains a numbers table for …","Registers a catalog if it does not exist and returns false …","Registers a schema if it does not exist. It returns an …","Registers a schema and returns an error if the catalog or …","","","","","","","","","","","","","","Creates a manager with some default setups (e.g. default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,72,135,6,7,8,9,10,135,6,7,8,9,10,6,7,8,9,10,72,72,6,7,8,9,10,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,0,6,7,8,9,10,135,6,7,8,9,10,6,7,8,9,10,135,6,7,8,9,10,0,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,0,0,0,7,135,6,7,8,9,10,72,72,72,6,72,6,7,6,7,8,72,0,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,135,6,7,8,9,10,20,0,20,0,20,0,20,0,20,0,20,0,20,0,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,0,20,0,20,0,20,0,20,20,0,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,20,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,33,41,32,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,27,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,51,29,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,30,25,42,20,38,37,20,33,36,41,20,20,34,35,52,49,39,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,43,45,46,47,48,49,25,27,29,30,31,50,51,32,33,34,35,36,37,38,52,53,39,54,55,56,57,58,40,59,60,61,62,41,63,64,42,65,20,136,137,138,139,140,141,142,143,144,145,146,147,136,148,149,150,151,152,140,142,146,153,143,141,139,137,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,145,171,172,173,152,172,158,157,137,156,138,147,136,148,149,150,151,141,159,161,162,163,164,165,167,168,169,170,171,173,154,155,159,151,160,0,0,0,0,0,0,80,76,80,76,80,80,80,0,80,76,80,76,80,76,80,76,80,76,80,76,80,76,80,76,76,80,80,76,80,76,80,76,80,76,80,76,81,80,76,81,80,81,81,0,81,80,76,80,76,80,76,80,76,76,80,76,80,76,0,0,0,0,0,0,0,0,89,90,89,90,89,90,90,89,90,89,89,89,90,89,90,89,90,89,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,90,89,89,90,89,90,90,90,90,89,89,89,90,90,89,90,90,89,90,89,90,89,90,89,90,89,90,89,0,0,95,97,95,97,95,97,97,95,97,95,95,97,95,97,95,97,95,97,95,97,95,97,95,95,97,95,97,95,97,95,97,95,97,95,97,95,97,95,95,97,95,97,97,97,97,95,95,97,95,97,95,95,97,97,95,97,95,97,95,97,95,97,95,97,95,0,0,0,98,114,0,99,114,98,0,98,114,114,114,0,0,0,0,0,0,98,99,98,99,98,99,98,99,98,99,98,99,98,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,99,98,99,98,99,98,99,98,99,98,99,98,99,98,98,98,98,99,98,98,99,98,98,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,99,98,0,0,114,114,115,114,115,114,114,115,114,114,115,114,115,114,115,114,115,114,115,114,114,114,115,114,115,114,115,114,115,114,115,114,115,114,115,114,115,114,115,114,114,114,115,114,114,114,115,114,114,115,114,114,115,115,114,114,114,114,115,114,115,114,115,114,115,114,115,114,115,114,115,114,115,0,0,0,0,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0,0,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,121,123,123,124,124,126,126,128,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,121,123,124,126,128,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131],"f":[0,0,0,0,0,0,0,0,0,[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[2,[[5,[[4,[3]]]]]],[[],[[5,[[4,[3]]]]]],[6,6],[7,7],[8,8],[9,9],[10,10],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,[[6,13],14],[[7,13],14],[[8,13],14],[[9,13],14],[[10,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,[[2,2],[[5,[[4,[3]]]]]],[2,[[5,[[4,[3]]]]]],[[2,2,2],[[5,[[4,[3]]]]]],0,[[2,2,2],[[5,[[4,[3]]]]]],0,0,0,0,0,[[2,2],[[5,[[4,[3]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20,1],[[],21],[20,[[17,[22]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[25,[[24,[23]]]]],20],[[[27,[[24,[26]]]]],20],[[[29,[[24,[[17,[28]]]]]]],20],[[[30,[[24,[[17,[23]]]]]]],20],[31,20],[[[32,[[24,[23]]]]],20],[[[33,[[24,[23]],[24,[23]]]]],20],[[[34,[[24,[23]]]]],20],[[[35,[[24,[23]]]]],20],[[[36,[[24,[23]]]]],20],[[[37,[[24,[23]]]]],20],[[[38,[[24,[23]]]]],20],[[[39,[[24,[23]]]]],20],[40,20],[[[41,[[24,[23]],[24,[23]]]]],20],[[[42,[[24,[23]]]]],20],0,0,0,0,[20,[[17,[21]]]],[43,43],[[[45,[44]]],[[45,[44]]]],[46,46],[47,47],[48,48],[[[49,[44]]],[[49,[44]]]],[[[25,[44]]],[[25,[44]]]],[[[27,[44]]],[[27,[44]]]],[[[29,[44]]],[[29,[44]]]],[[[30,[44]]],[[30,[44]]]],[31,31],[50,50],[[[51,[44]]],[[51,[44]]]],[[[32,[44]]],[[32,[44]]]],[[[33,[44,44]]],[[33,[44,44]]]],[[[34,[44]]],[[34,[44]]]],[[[35,[44]]],[[35,[44]]]],[[[36,[44]]],[[36,[44]]]],[[[37,[44]]],[[37,[44]]]],[[[38,[44]]],[[38,[44]]]],[[[52,[44]]],[[52,[44]]]],[53,53],[[[39,[44]]],[[39,[44]]]],[54,54],[55,55],[56,56],[57,57],[58,58],[40,40],[59,59],[60,60],[61,61],[62,62],[[[41,[44,44]]],[[41,[44,44]]]],[63,63],[64,64],[[[42,[44]]],[[42,[44]]]],[65,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[20,12,[66,[23]]]],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[20,2],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],0,0,[[[25,[[24,[23]]]]],[[18,[20]]]],[[[27,[[24,[26]]]]],[[18,[20]]]],[[[29,[[24,[[17,[28]]]]]]],[[18,[20]]]],[[[30,[[24,[[17,[23]]]]]]],[[18,[20]]]],[31,[[18,[20]]]],[[[32,[[24,[23]]]]],[[18,[20]]]],[[[33,[[24,[23]],[24,[23]]]]],[[18,[20]]]],[[[34,[[24,[23]]]]],[[18,[20]]]],[[[35,[[24,[23]]]]],[[18,[20]]]],[[[36,[[24,[23]]]]],[[18,[20]]]],[[[37,[[24,[23]]]]],[[18,[20]]]],[[[38,[[24,[23]]]]],[[18,[20]]]],[[[39,[[24,[23]]]]],[[18,[20]]]],[40,[[18,[20]]]],[[[41,[[24,[23]],[24,[23]]]]],[[18,[20]]]],[[[42,[[24,[23]]]]],[[18,[20]]]],[[43,13],14],[[[45,[67]],13],14],[[46,13],14],[[47,13],14],[[48,13],14],[[[49,[67]],13],14],[[[25,[67]],13],14],[[[27,[67]],13],14],[[[29,[67]],13],14],[[[30,[67]],13],14],[[31,13],14],[[50,13],14],[[[51,[67]],13],14],[[[32,[67]],13],14],[[[33,[67,67]],13],14],[[[34,[67]],13],14],[[[35,[67]],13],14],[[[36,[67]],13],14],[[[37,[67]],13],14],[[[38,[67]],13],14],[[[52,[67]],13],14],[[53,13],14],[[[39,[67]],13],14],[[54,13],14],[[55,13],14],[[56,13],14],[[57,13],14],[[58,13],14],[[40,13],14],[[59,13],14],[[60,13],14],[[61,13],14],[[62,13],14],[[[41,[67,67]],13],14],[[63,13],14],[[64,13],14],[[[42,[67]],13],14],[[65,13],14],[[20,13],14],[[20,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,20],[[[45,[[24,[23]]]]],20],[46,20],[47,20],[48,20],[[[49,[[24,[23]]]]],20],[[[25,[[24,[23]]]]],20],[[[27,[[24,[26]]]]],20],[[[29,[[24,[[17,[28]]]]]]],20],[[[30,[[24,[[17,[23]]]]]]],20],[31,20],[50,20],[[[51,[[24,[23]]]]],20],[[[32,[[24,[23]]]]],20],[[[33,[[24,[23]],[24,[23]]]]],20],[[[34,[[24,[23]]]]],20],[[[35,[[24,[23]]]]],20],[[[36,[[24,[23]]]]],20],[[[37,[[24,[23]]]]],20],[[[38,[[24,[23]]]]],20],[[[52,[[24,[68]]]]],20],[53,20],[[[39,[[24,[23]]]]],20],[54,20],[55,20],[56,20],[57,20],[58,20],[40,20],[59,20],[60,20],[61,20],[62,20],[[[41,[[24,[23]],[24,[23]]]]],20],[63,20],[64,20],[[[42,[[24,[23]]]]],20],[65,20],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,[20,[[17,[69]]]],0,0,[70],0,0,0,[20,[[17,[21]]]],[20,71],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[23,[73,[72]]],[[75,[23,74]]]],0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[76,77],[[18,[78,79]]]],[[80,2],[[17,[[82,[81]]]]]],[[],12],[[],12],[[]],[[]],[[],15],[[],15],[[],16],[[],16],[[23,[73,[72]]],80],[[[82,[81]]],76],[[],83],[[80,2],[[17,[74]]]],0,[[],84],[[23,[82,[81]]],85],[[],2],[[],86],0,[[],[[87,[78]]]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[76,[88,[12]]],[[18,[83,79]]]],[[],19],[[],19],[[]],[[]],0,0,0,0,0,0,0,0,[[89,2,2,2,2,2,2]],[[]],[[]],[[]],[[]],[90,89],0,0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[12],[12],[12],[12],[12],[12],[[90,[82,[91]]],92],[89,[[87,[93]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[]],[[]],[[],15],[[],15],[[],16],[[],16],[89,[[87,[93]]]],[[23,[73,[72]]],90],[[83,23,[73,[72]]],89],[90,94],[[],83],[90,83],0,0,0,0,[90,84],[90,2],0,[90,[[87,[78]]]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],0,0,[[95,2,2,2,86,[17,[96]],[17,[2]]]],[[]],[[]],[[]],[[]],[97,95],0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[12],[12],[12],[12],[12],[12],0,[[97,[82,[91]]],92],[95,[[87,[93]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[]],[[]],[[],15],[[],15],[[],16],[[],16],[95,[[87,[93]]]],[[23,[73,[72]]],97],[[83,23,[73,[72]]],95],[97,83],[97,94],[[],83],0,0,0,[97,84],0,[97,2],0,0,[97,[[87,[78]]]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[98,1],[99,1],[[98,100],[[5,[[4,[3]]]]]],[[99,100],[[5,[[4,[3]]]]]],[[98,101],[[5,[[4,[3]]]]]],[[99,101],[[5,[[4,[3]]]]]],[[98,102],[[5,[[4,[3]]]]]],[[99,102],[[5,[[4,[3]]]]]],[[]],[[]],[[]],[[]],[98,[[82,[[104,[[66,[28]],103]]]]]],0,0,[[98,105],[[5,[[4,[3]]]]]],[[99,105],[[5,[[4,[3]]]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[98,106],[[5,[[4,[3]]]]]],[[99,106],[[5,[[4,[3]]]]]],[12],[12],[12],[12],[12],[12],[[99,13],14],[[]],[[]],[[]],[[]],[[98,[88,[28]]],[[5,[[4,[3]]]]]],[[99,[88,[28]]],[[5,[[4,[3]]]]]],[[],12],[[],12],[[]],[[]],[[],15],[[],15],[[98,[88,[28]]],[[5,[[4,[3]]]]]],[[107,96],[[5,[[4,[3,108]]]]]],[[107,109],[[5,[[4,[3,108]]]]]],[[],16],[[],16],0,[98,2],[99,2],0,[[[82,[110]]],98],[[98,111],[[5,[[4,[3]]]]]],[[99,111],[[5,[[4,[3]]]]]],[[98,112],[[5,[[4,[3]]]]]],[[99,112],[[5,[[4,[3]]]]]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[113,98],0,0,[114,1],[[]],[[]],[[]],[[]],0,[[114,2],[[5,[[4,[3]]]]]],0,[114,[[5,[[4,[3]]]]]],[114,114],[115,115],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[114,116],0,[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[]],[[]],[[],15],[[],15],[[114,107,68],[[5,[[4,[3]]]]]],[[114,107,109],[[5,[[4,[3]]]]]],[[],16],[[],16],[[113,117,116],[[82,[114]]]],[114,118],0,[[115,2],16],[[114,2,2],[[5,[[4,[3]]]]]],[[114,2],[[5,[[4,[3]]]]]],[115,[[66,[23]]]],0,[[114,2,2,2],[[5,[[4,[3]]]]]],[[115,2,2,2],[[17,[74]]]],[[115,2,2],16],[[114,2,2,2],[[5,[[4,[3]]]]]],0,[114,119],[[114,2,2],[[5,[[4,[3]]]]]],[[115,2],[[66,[23]]]],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],0,0,0,0,0,[120,1],[[]],[[]],[[120,2],[[87,[16]]]],[[120,2],[[5,[[4,[3]]]]]],[120,[[5,[[4,[3]]]]]],0,[120,120],[[]],[[],11],[[],11],[[],11],[[[82,[120]],23],[[75,[23,[75,[23,74]]]]]],[12],[12],[[120,8],87],[12],[[]],[[]],[[]],[[],12],[[]],[[],15],[[],16],[[],[[82,[120]]]],[[],[[87,[[82,[120]]]]]],[[120,2],[[87,[16]]]],[[120,10],[[87,[16]]]],[[120,6],[[87,[16]]]],[[120,2,2],[[87,[16]]]],[[120,2,2],[[5,[[4,[3]]]]]],[[120,2],[[5,[[4,[3]]]]]],[[120,2,2,2],[[5,[[4,[3]]]]]],[[120,2,2,2],[[5,[[4,[3]]]]]],[[120,2,2],[[5,[[4,[3]]]]]],[[]],[[],17],[[]],[[],18],[[],18],[[],19],[[]],[[],[[82,[120]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[121,122],[12],[123,122],[12],[124,125],[12],[126,127],[12],[128,127],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[[],11],[[],11],[[],11],0,0,[12],[12],0,[12],[[]],[[]],[[],12],[[]],[[],15],[[],16],[[129,16,130],131],[[131,132],[[87,[[82,[133]]]]]],[[131,132],[[87,[134]]]],0,[[],17],[[]],[[],18],[[],18],[[],19],[[]]],"c":[],"p":[[8,"Any"],[15,"str"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"RegisterTableRequest"],[3,"RenameTableRequest"],[3,"DeregisterTableRequest"],[3,"DeregisterSchemaRequest"],[3,"RegisterSchemaRequest"],[3,"Compat"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Request"],[15,"bool"],[4,"Option"],[4,"Result"],[3,"TypeId"],[4,"Error"],[8,"Error"],[3,"Backtrace"],[3,"String"],[8,"Into"],[3,"SystemCatalogSnafu"],[4,"ConcreteDataType"],[3,"SystemCatalogTypeMismatchSnafu"],[15,"u8"],[3,"InvalidEntryTypeSnafu"],[3,"InvalidKeySnafu"],[3,"EmptyValueSnafu"],[3,"CatalogNotFoundSnafu"],[3,"SchemaNotFoundSnafu"],[3,"TableExistsSnafu"],[3,"TableNotExistSnafu"],[3,"SchemaExistsSnafu"],[3,"UnimplementedSnafu"],[3,"NotSupportedSnafu"],[3,"TableNotFoundSnafu"],[3,"UpgradeWeakCatalogManagerRefSnafu"],[3,"QueryAccessDeniedSnafu"],[3,"GenericSnafu"],[3,"ListCatalogsSnafu"],[8,"Clone"],[3,"ListSchemasSnafu"],[3,"CompileScriptInternalSnafu"],[3,"OpenSystemCatalogSnafu"],[3,"CreateSystemCatalogSnafu"],[3,"CreateTableSnafu"],[3,"ValueDeserializeSnafu"],[3,"TableEngineNotFoundSnafu"],[3,"OpenTableSnafu"],[3,"ParallelOpenTableSnafu"],[3,"ReadSystemCatalogSnafu"],[3,"CreateRecordBatchSnafu"],[3,"InsertCatalogRecordSnafu"],[3,"SystemCatalogTableScanSnafu"],[3,"InternalSnafu"],[3,"SystemCatalogTableScanExecSnafu"],[3,"InvalidCatalogValueSnafu"],[3,"MetaSrvSnafu"],[3,"InvalidTableInfoInCatalogSnafu"],[3,"DatafusionSnafu"],[3,"TableSchemaMismatchSnafu"],[3,"TableMetadataManagerSnafu"],[3,"Vec"],[8,"Debug"],[6,"TableId"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[8,"CatalogManager"],[3,"Weak"],[6,"TableRef"],[3,"HashMap"],[3,"InformationTableDataSource"],[3,"ScanRequest"],[6,"SendableRecordBatchStream"],[3,"BoxedError"],[3,"InformationSchemaProvider"],[8,"InformationTable"],[3,"Arc"],[6,"SchemaRef"],[6,"TableId"],[6,"TableInfoRef"],[4,"TableType"],[6,"Result"],[15,"slice"],[3,"InformationSchemaColumnsBuilder"],[3,"InformationSchemaColumns"],[3,"TaskContext"],[6,"SendableRecordBatchStream"],[3,"RecordBatch"],[6,"SchemaRef"],[3,"InformationSchemaTablesBuilder"],[15,"u32"],[3,"InformationSchemaTables"],[3,"CachedMetaKvBackend"],[3,"MetaKvBackend"],[3,"BatchDeleteRequest"],[3,"BatchGetRequest"],[3,"BatchPutRequest"],[3,"KeyValue"],[3,"Cache"],[3,"CompareAndPutRequest"],[3,"DeleteRangeRequest"],[3,"Context"],[3,"Global"],[3,"TableName"],[3,"MetaClient"],[3,"PutRequest"],[3,"RangeRequest"],[6,"KvBackendRef"],[3,"KvBackendCatalogManager"],[3,"SystemCatalog"],[6,"DatanodeManagerRef"],[6,"CacheInvalidatorRef"],[6,"PartitionRuleManagerRef"],[6,"TableMetadataManagerRef"],[3,"MemoryCatalogManager"],[3,"METRIC_CATALOG_MANAGER_CATALOG_COUNT"],[6,"IntGauge"],[3,"METRIC_CATALOG_MANAGER_SCHEMA_COUNT"],[3,"METRIC_CATALOG_MANAGER_TABLE_COUNT"],[6,"IntGaugeVec"],[3,"METRIC_CATALOG_KV_REMOTE_GET"],[3,"Histogram"],[3,"METRIC_CATALOG_KV_GET"],[6,"CatalogManagerRef"],[3,"QueryContext"],[3,"DfTableSourceProvider"],[4,"TableReference"],[8,"TableSource"],[3,"ResolvedTableReference"],[3,"RegisterSystemTableRequest"],[13,"ListSchemas"],[13,"SchemaNotFound"],[13,"QueryAccessDenied"],[13,"CatalogNotFound"],[13,"SystemCatalogTypeMismatch"],[13,"TableEngineNotFound"],[13,"InvalidEntryType"],[13,"ValueDeserialize"],[13,"ParallelOpenTable"],[13,"Datafusion"],[13,"InvalidKey"],[13,"ListCatalogs"],[13,"CompileScriptInternal"],[13,"OpenSystemCatalog"],[13,"CreateSystemCatalog"],[13,"CreateTable"],[13,"SystemCatalog"],[13,"EmptyValue"],[13,"TableExists"],[13,"TableNotExist"],[13,"SchemaExists"],[13,"Unimplemented"],[13,"NotSupported"],[13,"OpenTable"],[13,"TableNotFound"],[13,"ReadSystemCatalog"],[13,"CreateRecordBatch"],[13,"InsertCatalogRecord"],[13,"SystemCatalogTableScan"],[13,"Internal"],[13,"UpgradeWeakCatalogManagerRef"],[13,"SystemCatalogTableScanExec"],[13,"InvalidCatalogValue"],[13,"MetaSrv"],[13,"InvalidTableInfoInCatalog"],[13,"TableSchemaMismatch"],[13,"Generic"],[13,"TableMetadataManager"]]},\
"client":{"doc":"","t":"NDRRDCEDNCGNDCLMMLLLLMAMALLLLLLMAMMLLLLLLLLALLLLFLLLLMLLLLLLLLLMAALALMMMALLLLLLLLLLLLLLLLDDDDLMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLMMLLLLLLLLLLLLLLLLLLLLLLLLDDLMLLLLLMMLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDENDNDNDNDNDNDNDGNDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMIEDNLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLFMLLLLLLLLLLLLLLLLLLLLLLLLLDMLLLLLMLLLLLLLLLLLMLLMLLLLLLL","n":["AffectedRows","Client","DEFAULT_CATALOG_NAME","DEFAULT_SCHEMA_NAME","Database","Error","Output","RecordBatches","RecordBatches","Result","SendableRecordBatchStream","Stream","StreamInserter","api","as_stream","auth_header","batches","borrow","borrow","borrow_mut","borrow_mut","catalog","client","client","client_manager","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","ctx","database","dbname","dbname","deref","deref","deref_mut","deref_mut","drop","drop","empty","eq","error","fmt","fmt","from","from","from_grpc_response","from_subset","from_subset","init","init","inner","into","into","into_df_stream","into_iter","into_request","into_request","is_in_subset","is_in_subset","iter","join","load_balance","metrics","pretty_print","region","schema","schema","schema","sender","stream_insert","take","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_collect","try_from","try_from","try_from_columns","try_into","try_into","try_new","type_id","type_id","vzip","vzip","Client","DatabaseClient","FlightClient","Inner","addr","addr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_manager","client","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","find_channel","fmt","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","get_peer","health_check","init","init","init","init","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","load_balance","make_database_client","make_flight_client","make_prometheus_gateway_client","max_grpc_recv_message_size","max_grpc_send_message_size","mut_inner","new","peers","raw_region_client","set_peers","start","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_manager","with_manager_and_urls","with_urls","DatanodeClients","borrow","borrow_mut","channel_manager","clients","compat","compat_mut","compat_ref","datanode","default","deref","deref_mut","drop","fmt","from","from_subset","get_client","init","insert_client","into","into_request","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Database","FlightContext","alter","auth_header","borrow","borrow","borrow_mut","borrow_mut","catalog","catalog","client","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create","ctx","dbname","dbname","default","default","delete","deref","deref","deref_mut","deref_mut","do_get","drop","drop","drop_table","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","handle","init","init","insert","into","into","into_request","into_request","is_in_subset","is_in_subset","logical_plan","new","new_with_dbname","prom_range_query","row_insert","schema","schema","set_auth","set_catalog","set_dbname","set_schema","sql","streaming_inserter","streaming_inserter_with_channel_size","to_owned","to_owned","to_rpc_request","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","truncate_table","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ClientStreaming","ClientStreamingSnafu","ColumnDataType","ColumnDataTypeSnafu","ConvertFlightData","ConvertFlightDataSnafu","CreateChannel","CreateChannelSnafu","Error","FlightGet","FlightGetSnafu","HandleRequest","HandleRequestSnafu","IllegalDatabaseResponse","IllegalDatabaseResponseSnafu","IllegalFlightMessages","IllegalFlightMessagesSnafu","IllegalGrpcClientState","IllegalGrpcClientStateSnafu","MissingField","MissingFieldSnafu","RegionServer","RegionServerSnafu","Result","Server","ServerSnafu","addr","addr","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","err_msg","fail","fail","fail","fail","fail","fail","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","msg","next","provide","reason","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","tonic_code","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","addr","addr","code","code","err_msg","err_msg","err_msg","field","location","location","location","location","location","location","location","location","msg","reason","source","source","source","source","source","source","tonic_code","LoadBalance","Loadbalancer","Random","Random","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from_subset","from_subset","get_peer","get_peer","get_peer","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","type_id","type_id","vzip","vzip","METRIC_GRPC_ALTER","METRIC_GRPC_CREATE_TABLE","METRIC_GRPC_DELETE","METRIC_GRPC_DO_GET","METRIC_GRPC_DROP_TABLE","METRIC_GRPC_INSERT","METRIC_GRPC_LOGICAL_PLAN","METRIC_GRPC_PROMQL_RANGE_QUERY","METRIC_GRPC_SQL","METRIC_GRPC_TRUNCATE_TABLE","METRIC_REGION_REQUEST_GRPC","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","RegionRequester","borrow","borrow_mut","check_response_header","client","compat","compat_mut","compat_ref","deref","deref_mut","do_get_inner","drop","fmt","from","from_subset","handle","handle","handle_inner","handle_query","init","into","into_request","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","StreamInserter","auth_header","borrow","borrow_mut","compat","compat_mut","compat_ref","dbname","deref","deref_mut","drop","finish","from","from_subset","init","insert","into","into_request","is_in_subset","join","new","row_insert","sender","to_rpc_request","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"client"],[89,"client::client"],[205,"client::client_manager"],[234,"client::database"],[318,"client::error"],[713,"client::error::Error"],[738,"client::load_balance"],[790,"client::metrics"],[1043,"client::region"],[1073,"client::stream_insert"]],"d":["","","","","","","","","","","","","A structure that provides some methods for streaming data …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Create database service client using catalog and schema","Create database service client using dbname.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::ClientStreaming</code> …","","SNAFU context selector for the <code>Error::ColumnDataType</code> …","","SNAFU context selector for the <code>Error::ConvertFlightData</code> …","","SNAFU context selector for the <code>Error::CreateChannel</code> variant","","","SNAFU context selector for the <code>Error::FlightGet</code> variant","","SNAFU context selector for the <code>Error::HandleRequest</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::IllegalFlightMessages</code>…","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MissingField</code> variant","","SNAFU context selector for the <code>Error::RegionServer</code> variant","","","SNAFU context selector for the <code>Error::Server</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","A structure that provides some methods for streaming data …","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[9,0,0,0,0,0,0,0,9,0,0,9,0,0,1,58,1,9,1,9,1,45,0,45,0,9,1,9,1,9,1,45,0,58,45,9,1,9,1,9,1,1,1,0,9,1,9,1,0,9,1,9,1,31,9,1,1,1,9,1,9,1,1,58,0,0,1,0,1,45,1,58,0,1,9,1,9,1,1,9,1,1,9,1,1,9,1,9,1,0,0,0,0,29,29,34,29,31,32,34,29,31,32,32,29,31,31,34,29,31,32,34,29,31,32,34,29,31,32,31,32,34,29,31,32,34,29,31,32,34,29,31,32,31,31,32,34,29,31,32,31,34,29,31,32,32,31,34,29,31,32,34,31,34,29,31,32,34,29,31,32,34,29,31,32,32,31,31,31,31,31,29,31,32,31,32,31,31,34,29,31,32,34,29,31,32,34,29,31,32,34,29,31,32,34,29,31,32,34,29,31,32,32,31,31,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,45,47,45,47,45,47,45,45,45,45,47,45,47,45,47,45,47,45,47,45,45,45,45,45,47,45,45,47,45,47,45,45,47,45,45,47,45,47,45,47,45,47,45,45,47,45,45,47,45,47,45,47,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,47,45,45,47,45,47,45,45,47,45,47,45,47,45,47,61,0,61,0,61,0,61,0,0,61,0,61,0,61,0,61,0,61,0,61,0,61,0,0,61,0,73,77,61,61,61,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,65,66,67,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,65,73,74,75,76,66,67,77,78,69,70,71,78,69,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,61,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,61,65,73,74,75,76,66,67,77,78,69,70,71,61,66,70,71,65,66,67,69,70,71,67,65,73,74,75,76,66,67,77,78,69,70,71,61,61,65,73,74,75,76,66,67,77,78,69,70,71,61,61,65,73,74,75,76,66,67,77,78,69,70,71,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,69,61,61,65,61,61,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,73,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,65,73,74,75,76,66,67,77,78,69,70,71,61,110,111,112,113,114,115,116,117,118,119,120,121,114,117,111,116,113,118,110,119,120,121,111,112,110,0,0,0,84,84,85,84,85,84,85,84,85,84,85,84,84,85,84,85,84,85,84,85,84,84,85,84,85,122,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,84,85,84,85,84,85,0,0,0,0,0,0,0,0,0,0,0,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,86,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,86,88,89,90,91,92,93,94,95,96,97,0,100,100,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[5,[[4,[2,3]]]]]],0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,0,[7],[7],[7],[7],[7],[7],[[],1],[[1,1],8],0,[[9,10],[[12,[11]]]],[[1,10],[[12,[11]]]],[[]],[[]],[13,[[15,[14]]]],[[]],[[]],[[],7],[[],7],0,[[]],[[]],[1,[[5,[[4,[16,3]]]]]],[1],[[],17],[[],17],[[],8],[[],8],[1,18],0,0,0,[1,[[12,[19,20]]]],0,[1,[[22,[21,3]]]],0,0,0,0,[1,[[24,[23,3]]]],[[],25],[[],25],[[]],[[]],[[[5,[[4,[2,3]]]]],26],[[],12],[[],12],[[[22,[21,3]],27],[[12,[1,20]]]],[[],12],[[],12],[[[22,[21,3]],[24,[23,3]]],[[12,[1,20]]]],[[],28],[[],28],[[]],[[]],0,0,0,0,[29,30],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[31,31],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],32],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[31,15],[[31,10],33],[[32,10],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,[[25,[19]]]],[31,15],[[],7],[[],7],[[],7],[[],7],0,0,[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],8],[[],8],[[],8],[[],8],0,[31,[[15,[34]]]],[31,[[15,[29]]]],[31,[[15,[[36,[35]]]]]],[31,7],[31,7],[29,[[37,[35]]]],[[],31],0,[31,[[15,[[38,[35]]]]]],[[32,[24,[19]]]],[[31,[39,[[40,[[39,[30]]]]]]]],[[]],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[41,32],[[41,[39,[[40,[[39,[30]]]]]]],31],[[[39,[[40,[[39,[30]]]]]]],31],0,[[]],[[]],0,0,[[],6],[[],6],[[],6],[[42,43],[[5,[[4,[26]]]]]],[[],42],[7],[7],[7],[[42,10],33],[[]],[[]],[[42,43],31],[[],7],[[42,43,31]],[[]],[[],17],[[],8],[44,42],[[],25],[[]],[[],12],[[],12],[[],28],[[]],0,0,[[45,46],[[15,[9]]]],0,[[]],[[]],[[]],[[]],[45,19],0,0,[45,45],[47,47],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[45,48],[[15,[9]]]],0,[45,19],0,[[],45],[[],47],[[45,49],[[15,[14]]]],[7],[7],[7],[7],[[45,50,51],[[15,[9]]]],[7],[7],[[45,52],[[15,[9]]]],[[45,10],33],[[47,10],33],[[]],[[]],[[]],[[]],[[]],[[]],[[45,50],[[15,[14]]]],[[],7],[[],7],[[45,53],[[15,[14]]]],[[]],[[]],[[],17],[[],17],[[],8],[[],8],[[45,[24,[54]],51],[[15,[9]]]],[[[55,[19]],[55,[19]],31],45],[[[55,[19]],31],45],[[45,30,30,30,30],[[15,[9]]]],[[45,56],[[15,[14]]]],[45,19],0,[[45,57]],[[45,[55,[19]]]],[[45,[55,[19]]]],[[45,[55,[19]]]],[[45,[39,[30]]],[[15,[9]]]],[45,[[15,[58]]]],[[45,7],[[15,[58]]]],[[]],[[]],[[45,50,51],59],[[],25],[[],25],[[]],[[]],[[45,60],[[15,[9]]]],[[],12],[[],12],[[],12],[[],12],[[],28],[[],28],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,62],[[],63],[61,[[25,[64]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[65,[[55,[19]]]]],61],[[[66,[[55,[19]]]]],61],[[[67,[[55,[19]]]]],61],[[[69,[[55,[68]],[55,[19]]]]],61],[[[70,[[55,[19]]]]],61],[[[71,[[55,[19]]]]],61],[61,[[25,[63]]]],[[[65,[72]]],[[65,[72]]]],[[[73,[72,72]]],[[73,[72,72]]]],[74,74],[75,75],[76,76],[[[66,[72]]],[[66,[72]]]],[[[67,[72]]],[[67,[72]]]],[[[77,[72]]],[[77,[72]]]],[[[78,[72]]],[[78,[72]]]],[[[69,[72,72]]],[[69,[72,72]]]],[[[70,[72]]],[[70,[72]]]],[[[71,[72]]],[[71,[72]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[61,7,[24,[19]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[61,30],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,0,0,[[[65,[[55,[19]]]]],[[12,[61]]]],[[[66,[[55,[19]]]]],[[12,[61]]]],[[[67,[[55,[19]]]]],[[12,[61]]]],[[[69,[[55,[68]],[55,[19]]]]],[[12,[61]]]],[[[70,[[55,[19]]]]],[[12,[61]]]],[[[71,[[55,[19]]]]],[[12,[61]]]],0,[[[65,[79]],10],33],[[[73,[79,79]],10],33],[[74,10],33],[[75,10],33],[[76,10],33],[[[66,[79]],10],33],[[[67,[79]],10],33],[[[77,[79]],10],33],[[[78,[79]],10],33],[[[69,[79,79]],10],33],[[[70,[79]],10],33],[[[71,[79]],10],33],[[61,10],33],[[61,10],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[65,[[55,[19]]]]],61],[[[73,[[55,[19]],[55,[81]]]]],61],[74,61],[75,61],[76,61],[[[66,[[55,[19]]]]],61],[[[67,[[55,[19]]]]],61],[[[77,[[55,[19]]]]],61],[[[78,[[55,[81]]]]],61],[[[69,[[55,[68]],[55,[19]]]]],61],[[[70,[[55,[19]]]]],61],[[[71,[[55,[19]]]]],61],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[61,[[25,[82]]]],[83],0,[61,[[25,[63]]]],[61,68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],84],[7],[7],[7],[7],[7],[7],[[84,10],33],[[85,10],33],[[]],[85,84],[[]],[[]],[[]],[[[40,[19]]],[[25,[19]]]],[[84,[40,[19]]],[[25,[19]]]],[[85,[40,[19]]],[[25,[19]]]],[[],7],[[],7],[[]],[[]],[[],17],[[],17],[[],8],[[],8],[[],25],[[],25],[[]],[[]],[[],12],[[],12],[[],12],[84,[[12,[85]]]],[[],12],[[],28],[[],28],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[86,87],[7],[88,87],[7],[89,87],[7],[7],[90,87],[91,87],[7],[92,87],[7],[7],[93,87],[7],[94,87],[95,87],[7],[96,87],[7],[7],[97,98],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[[25,[99]]],15],0,[[],6],[[],6],[[],6],[7],[7],[[100,101],[[15,[102]]]],[7],[[100,10],33],[[]],[[]],[[100,103],[[15,[104]]]],[[100,103],[[5,[[4,[26]]]]]],[[100,103],[[15,[104]]]],[[100,105],[[5,[[4,[26]]]]]],[[],7],[[]],[[],17],[[],8],[31,100],[[],25],[[]],[[],12],[[],12],[[],28],[[]],0,0,[[]],[[]],[[],6],[[],6],[[],6],0,[7],[7],[7],[58,[[15,[14]]]],[[]],[[]],[[],7],[[58,[24,[106]]],15],[[]],[[],17],[[],8],0,[[[107,[35]],19,[25,[108]],7],58],[[58,[24,[109]]],15],0,[[58,50],59],[[],25],[[]],[[],12],[[],12],[[],28],[[]]],"c":[],"p":[[3,"RecordBatches"],[8,"RecordBatchStream"],[3,"Global"],[3,"Box"],[3,"Pin"],[3,"Compat"],[15,"usize"],[15,"bool"],[4,"Output"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"GreptimeResponse"],[15,"u32"],[6,"Result"],[8,"RecordBatchStream"],[3,"Request"],[8,"Iterator"],[3,"String"],[4,"Error"],[3,"Schema"],[3,"Arc"],[3,"RecordBatch"],[3,"Vec"],[4,"Option"],[8,"Future"],[8,"IntoIterator"],[3,"TypeId"],[3,"FlightClient"],[15,"str"],[3,"Client"],[3,"Inner"],[6,"Result"],[3,"DatabaseClient"],[3,"Channel"],[3,"PrometheusGatewayClient"],[3,"FlightServiceClient"],[3,"RegionClient"],[8,"AsRef"],[15,"slice"],[3,"ChannelManager"],[3,"DatanodeClients"],[3,"Peer"],[3,"ChannelConfig"],[3,"Database"],[3,"AlterExpr"],[3,"FlightContext"],[3,"CreateTableExpr"],[3,"DeleteRequests"],[4,"Request"],[15,"u64"],[3,"DropTableExpr"],[3,"InsertRequests"],[15,"u8"],[8,"Into"],[3,"RowInsertRequests"],[4,"AuthScheme"],[3,"StreamInserter"],[3,"GreptimeRequest"],[3,"TruncateTableExpr"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[3,"IllegalFlightMessagesSnafu"],[3,"IllegalGrpcClientStateSnafu"],[3,"MissingFieldSnafu"],[4,"StatusCode"],[3,"ServerSnafu"],[3,"IllegalDatabaseResponseSnafu"],[3,"ClientStreamingSnafu"],[8,"Clone"],[3,"FlightGetSnafu"],[3,"HandleRequestSnafu"],[3,"ConvertFlightDataSnafu"],[3,"ColumnDataTypeSnafu"],[3,"CreateChannelSnafu"],[3,"RegionServerSnafu"],[8,"Debug"],[3,"Status"],[4,"Code"],[8,"StackError"],[3,"Demand"],[4,"Loadbalancer"],[3,"Random"],[3,"METRIC_GRPC_CREATE_TABLE"],[3,"Histogram"],[3,"METRIC_GRPC_PROMQL_RANGE_QUERY"],[3,"METRIC_GRPC_INSERT"],[3,"METRIC_GRPC_DELETE"],[3,"METRIC_GRPC_SQL"],[3,"METRIC_GRPC_LOGICAL_PLAN"],[3,"METRIC_GRPC_ALTER"],[3,"METRIC_GRPC_DROP_TABLE"],[3,"METRIC_GRPC_TRUNCATE_TABLE"],[3,"METRIC_GRPC_DO_GET"],[3,"METRIC_REGION_REQUEST_GRPC"],[6,"HistogramVec"],[3,"ResponseHeader"],[3,"RegionRequester"],[3,"Ticket"],[6,"SendableRecordBatchStream"],[3,"RegionRequest"],[6,"AffectedRows"],[3,"QueryRequest"],[3,"InsertRequest"],[3,"GreptimeDatabaseClient"],[3,"AuthHeader"],[3,"RowInsertRequest"],[13,"FlightGet"],[13,"CreateChannel"],[13,"RegionServer"],[13,"Server"],[13,"IllegalGrpcClientState"],[13,"IllegalDatabaseResponse"],[13,"ClientStreaming"],[13,"MissingField"],[13,"IllegalFlightMessages"],[13,"HandleRequest"],[13,"ConvertFlightData"],[13,"ColumnDataType"],[8,"LoadBalance"]]},\
"cmd":{"doc":"","t":"AAAAAAADNDNEDNEINNLLLLLLLLLLALLLLLLLLLLLAMLLLLLLLLLLLLMLLLLLLLLMKLLLLALLLLLLLLLLLLLLLMLALLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLDDLLLLFLLLLLLLLLLLMMFFLLLLLLLLMLLLLLLLLLLLLLLLLLLLALLLLLLMLLLLLLLLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLNNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNDDENGLMLLLLLMLLLLLLLMMLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMMLLLLFLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLDLLLLLLFMLLLLLLLLFLLLLLLLLMMMLLLLLLLLLLLDRDLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLALLDRDDRDRDDDLMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMMLLLLLLMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLDDNDELLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLNNRRNNDENDLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDNDELLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLMMMMMMMLLLLLLLLMMLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLM","n":["cli","datanode","error","frontend","metasrv","options","standalone","AttachCommand","Bench","Command","Export","Instance","Repl","Repl","SubCommand","Tool","Tool","Upgrade","and","and","and","and","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","bench","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","cmd","cmd","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","database","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","disable_helper","do_work","drop","drop","drop","drop","export","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_subset","from_subset","from_subset","from_subset","grpc_addr","has_subcommand","helper","init","init","init","init","into","into","into","into","into_app","into_app","into_app","into_app_for_update","into_app_for_update","into_app_for_update","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","load_options","meta_addr","or","or","or","or","prompt","query_engine","repl","rl","sculpt","sculpt","sculpt","sculpt","start","stop","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","upgrade","vzip","vzip","vzip","vzip","BenchTableMetadata","BenchTableMetadataCommand","and","and","augment_args","augment_args_for_update","bench_self_recorded","borrow","borrow","borrow_mut","borrow_mut","build","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","count","count","create_region_routes","create_table_info","default","deref","deref","deref_mut","deref_mut","do_work","drop","drop","etcd_addr","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_subset","from_subset","init","init","into","into","into_app","into_app_for_update","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","metadata","or","or","sculpt","sculpt","subset","subset","table_metadata_manager","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","TableMetadataBencher","and","bench_create","bench_delete","bench_get","bench_rename","borrow","borrow_mut","compat","compat_mut","compat_ref","count","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","new","or","sculpt","subset","table_metadata_manager","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Exit","Help","ReplCommand","Sql","UseDatabase","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","fmt","from","from_subset","help","init","into","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","vzip","db_name","sql","CreateTable","Export","ExportCommand","ExportTarget","TableData","TableReference","__clone_box","addr","and","and","and","augment_args","augment_args_for_update","auth_basic","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","catalog","client","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","database","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","do_work","drop","drop","drop","export_create_table","export_jobs","export_table_data","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","from_ref","from_subset","from_subset","from_subset","get_table_list","init","init","init","into","into","into","into_app","into_app_for_update","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","iter_db_names","lift_into","lift_into","lift_into","max_retry","or","or","or","output_dir","output_dir","parallelism","schema","sculpt","sculpt","sculpt","show_create_table","split_database","subset","subset","subset","target","target","to_owned","to_possible_value","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","vzip","vzip","RustylineHelper","and","borrow","borrow_mut","compat","compat_mut","compat_ref","complete","default","deref","deref_mut","drop","from","from_subset","highlight","highlight_candidate","highlight_char","highlight_hint","highlight_prompt","highlighter","hint","hinter","init","into","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","validate","vzip","Repl","and","borrow","borrow_mut","compat","compat_mut","compat_ref","create_query_engine","database","deref","deref_mut","do_execute_sql","drop","drop","execute_sql","from","from_subset","history_file","init","into","into_request","is_in_subset","lift_into","next_command","or","print_help","prompt","query_engine","rl","run","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_new","type_id","vzip","MigrateTableMetadata","PAGE_SIZE","UpgradeCommand","and","and","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","build","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_datanode_table_keys","create_table_name_key","default","delete_migrated_keys","deref","deref","deref_mut","deref_mut","do_work","drop","drop","dryrun","dryrun","etcd_addr","etcd_store","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_subset","from_subset","init","init","into","into","into_app","into_app_for_update","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","migrate_catalog_key","migrate_catalog_keys","migrate_schema_key","migrate_schema_keys","migrate_table_global_values","migrate_table_route_key","migrate_table_route_keys","or","or","sculpt","sculpt","skip_catalog_keys","skip_catalog_keys","skip_schema_keys","skip_schema_keys","skip_table_global_keys","skip_table_global_keys","skip_table_route_keys","skip_table_route_keys","split_table_global_value","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","v1_helper","vzip","vzip","CATALOG_KEY_PATTERN","CATALOG_KEY_PREFIX","CatalogKey","CatalogValue","NAME_PATTERN","SCHEMA_KEY_PATTERN","SCHEMA_KEY_PREFIX","SchemaKey","SchemaValue","TableGlobalValue","__clone_box","__private_field","__private_field","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog_name","catalog_name","clone","clone_into","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","define_catalog_value","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","err","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","node_id","or","or","or","or","or","or","or","parse","parse","parse","regions_id_map","schema_name","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","subset","subset","subset","subset","subset","subset","subset","table_id","table_info","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","DeserializeCatalogEntryValue","DeserializeCatalogEntryValueSnafu","Error","InvalidCatalog","InvalidCatalogSnafu","__clone_box","__clone_box","and","and","and","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","fail","fmt","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_error","into_error","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","key","lift_into","lift_into","lift_into","or","or","or","provide","raw","sculpt","sculpt","sculpt","source","subset","subset","subset","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","key","location","location","raw","source","Command","Instance","Start","StartCommand","SubCommand","and","and","and","and","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","config_file","data_home","datanode","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","env_prefix","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_subset","from_subset","from_subset","from_subset","has_subcommand","http_addr","http_timeout","init","init","init","init","into","into","into","into","into_app","into_app","into_app","into_app_for_update","into_app_for_update","into_app_for_update","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","load_options","load_options","load_options","metasrv_addr","node_id","or","or","or","or","rpc_addr","rpc_hostname","sculpt","sculpt","sculpt","sculpt","start","stop","subcmd","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","wal_dir","BuildMetaServer","BuildMetaServerSnafu","CollectRecordBatches","CollectRecordBatchesSnafu","ConnectEtcd","ConnectEtcdSnafu","ConnectServer","ConnectServerSnafu","CreateDir","CreateDirSnafu","EmptyResult","EmptyResultSnafu","Error","FileIo","FileIoSnafu","IllegalConfig","IllegalConfigSnafu","InitMetadata","InitMetadataSnafu","InvalidDatabaseName","InvalidDatabaseNameSnafu","InvalidReplCommand","InvalidReplCommandSnafu","IterStream","IterStreamSnafu","LoadLayeredConfig","LoadLayeredConfigSnafu","MissingConfig","MissingConfigSnafu","NotDataFromOutput","NotDataFromOutputSnafu","ParseSql","ParseSqlSnafu","PlanStatement","PlanStatementSnafu","PrettyPrintRecordBatches","PrettyPrintRecordBatchesSnafu","Readline","ReadlineSnafu","ReplCreation","ReplCreationSnafu","RequestDatabase","RequestDatabaseSnafu","Result","SerdeJson","SerdeJsonSnafu","ShutdownDatanode","ShutdownDatanodeSnafu","ShutdownFrontend","ShutdownFrontendSnafu","ShutdownMetaServer","ShutdownMetaServerSnafu","StartCatalogManager","StartCatalogManagerSnafu","StartDatanode","StartDatanodeSnafu","StartFrontend","StartFrontendSnafu","StartMetaClient","StartMetaClientSnafu","StartMetaServer","StartMetaServerSnafu","StartProcedureManager","StartProcedureManagerSnafu","StopProcedureManager","StopProcedureManagerSnafu","SubstraitEncodeLogicalPlan","SubstraitEncodeLogicalPlanSnafu","UnsupportedSelectorType","UnsupportedSelectorTypeSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","addr","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","database","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","dir","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","etcd_addr","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","msg","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","provide","reason","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","selector_type","source","sql","sql","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","addr","database","dir","error","error","error","error","error","error","error","etcd_addr","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","reason","selector_type","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","sql","sql","Command","Instance","Start","StartCommand","SubCommand","and","and","and","and","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","config_file","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","disable_dashboard","drop","drop","drop","drop","env_prefix","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_subset","from_subset","from_subset","from_subset","frontend","has_subcommand","http_addr","http_timeout","influxdb_enable","init","init","init","init","into","into","into","into","into_app","into_app","into_app","into_app_for_update","into_app_for_update","into_app_for_update","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","load_options","load_options","load_options","metasrv_addr","mysql_addr","opentsdb_addr","or","or","or","or","postgres_addr","rpc_addr","sculpt","sculpt","sculpt","sculpt","start","stop","subcmd","subset","subset","subset","subset","tls_cert_path","tls_key_path","tls_mode","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","user_provider","vzip","vzip","vzip","vzip","Command","Instance","Start","StartCommand","SubCommand","and","and","and","and","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","bind_addr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","config_file","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","enable_region_failover","env_prefix","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_subset","from_subset","from_subset","from_subset","has_subcommand","http_addr","http_timeout","init","init","init","init","instance","into","into","into","into","into_app","into_app","into_app","into_app_for_update","into_app_for_update","into_app_for_update","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","load_options","load_options","load_options","or","or","or","or","sculpt","sculpt","sculpt","sculpt","selector","server_addr","start","stop","store_addr","subcmd","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","use_memory_store","vzip","vzip","vzip","vzip","Cli","Datanode","ENV_LIST_SEP","ENV_VAR_SEP","Frontend","Metasrv","MixOptions","Options","Standalone","TopLevelOptions","__clone_box","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","data_home","datanode","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","frontend","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","load_layered_options","log_dir","log_level","logging","logging_options","metadata_store","or","or","or","procedure","sculpt","sculpt","sculpt","subset","subset","subset","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Command","Instance","StandaloneOptions","Start","StartCommand","SubCommand","__clone_box","and","and","and","and","and","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build_frontend","clone","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","config_file","datanode","datanode_options","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","enable_telemetry","env_prefix","erased_serialize","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","frontend","frontend_options","grpc","has_subcommand","http","http_addr","influxdb","influxdb_enable","init","init","init","init","init","into","into","into","into","into","into_app","into_app","into_app","into_app_for_update","into_app_for_update","into_app_for_update","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","load_options","load_options","load_options","logging","metadata_store","mode","mysql","mysql_addr","opentsdb","opentsdb_addr","or","or","or","or","or","postgres","postgres_addr","procedure","procedure_manager","prom_store","region_engine","rpc_addr","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","start","stop","storage","subcmd","subset","subset","subset","subset","subset","tls_cert_path","tls_key_path","tls_mode","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","user_provider","user_provider","vzip","vzip","vzip","vzip","vzip","wal"],"q":[[0,"cmd"],[7,"cmd::cli"],[169,"cmd::cli::bench"],[243,"cmd::cli::bench::metadata"],[277,"cmd::cli::cmd"],[312,"cmd::cli::cmd::ReplCommand"],[314,"cmd::cli::export"],[438,"cmd::cli::helper"],[476,"cmd::cli::repl"],[516,"cmd::cli::upgrade"],[607,"cmd::cli::upgrade::v1_helper"],[843,"cmd::cli::upgrade::v1_helper::err"],[953,"cmd::cli::upgrade::v1_helper::err::Error"],[958,"cmd::datanode"],[1114,"cmd::error"],[2367,"cmd::error::Error"],[2437,"cmd::frontend"],[2598,"cmd::metasrv"],[2754,"cmd::options"],[2859,"cmd::standalone"]],"d":["","","","","","","","","","","","","Captures the state of the repl, gathers commands and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client for interacting with GreptimeDB","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Current prompt","","","Rustyline editor for interacting with user on command line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Represents the parsed command from the user (which may be …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Corresponding to <code>SHOW CREATE TABLE</code>","","","","Corresponding to <code>EXPORT TABLE</code>","","","Server address to connect","","","","","","basic authentication for connecting to the server","","","","","","","","","","","","","","","","","","","","","The name of the catalog to export. Default to “greptime-*…","","","","","","","","","","","","","","Parallelism of the export.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Return a list of <code>TableReference</code> to be exported. Includes …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Iterate over all db names.","","","","Max retry times for each job.","","","","","Directory to put the exported data. E.g.: …","","","","","","","Split at <code>-</code>.","","","","","Things to export","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Captures the state of the repl, gathers commands and …","","","","","","","","Client for interacting with GreptimeDB","","","","","","","Returns the argument unchanged.","","Return the location of the history file (defaults to $HOME/…","","Calls <code>U::from(self)</code>.","","","","Parse the next command","","","Current prompt","","Rustyline editor for interacting with user on command line","Read Evaluate Print Loop (interactive command line) for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The pattern of a valid catalog, schema or table name.","","","","","Table global info contains necessary info for a datanode …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Id of datanode that created the global table info kv. only …","","","","","","","","","","","Allocation of region ids across all datanodes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::InvalidCatalog</code> …","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BuildMetaServer</code> …","","SNAFU context selector for the <code>Error::CollectRecordBatches</code> …","","SNAFU context selector for the <code>Error::ConnectEtcd</code> variant","","SNAFU context selector for the <code>Error::ConnectServer</code> variant","","SNAFU context selector for the <code>Error::CreateDir</code> variant","","SNAFU context selector for the <code>Error::EmptyResult</code> variant","","","SNAFU context selector for the <code>Error::FileIo</code> variant","","SNAFU context selector for the <code>Error::IllegalConfig</code> variant","","SNAFU context selector for the <code>Error::InitMetadata</code> variant","","SNAFU context selector for the <code>Error::InvalidDatabaseName</code> …","","SNAFU context selector for the <code>Error::InvalidReplCommand</code> …","","SNAFU context selector for the <code>Error::IterStream</code> variant","","SNAFU context selector for the <code>Error::LoadLayeredConfig</code> …","","SNAFU context selector for the <code>Error::MissingConfig</code> variant","","SNAFU context selector for the <code>Error::NotDataFromOutput</code> …","","SNAFU context selector for the <code>Error::ParseSql</code> variant","","SNAFU context selector for the <code>Error::PlanStatement</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::Readline</code> variant","","SNAFU context selector for the <code>Error::ReplCreation</code> variant","","SNAFU context selector for the <code>Error::RequestDatabase</code> …","","","SNAFU context selector for the <code>Error::SerdeJson</code> variant","","SNAFU context selector for the <code>Error::ShutdownDatanode</code> …","","SNAFU context selector for the <code>Error::ShutdownFrontend</code> …","","SNAFU context selector for the <code>Error::ShutdownMetaServer</code> …","","SNAFU context selector for the <code>Error::StartCatalogManager</code> …","","SNAFU context selector for the <code>Error::StartDatanode</code> variant","","SNAFU context selector for the <code>Error::StartFrontend</code> variant","","SNAFU context selector for the <code>Error::StartMetaClient</code> …","","SNAFU context selector for the <code>Error::StartMetaServer</code> …","","SNAFU context selector for the <code>Error::StartProcedureManager</code>…","","SNAFU context selector for the <code>Error::StopProcedureManager</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options mixed up from datanode, frontend and metasrv.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Load the configuration from multiple sources and merge …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build frontend instance in standalone mode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options for different store engines.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,7,0,7,0,0,5,0,0,5,7,5,4,7,8,4,8,4,8,7,7,0,5,4,7,8,5,4,7,8,4,7,8,0,4,5,4,7,8,5,4,7,8,5,4,7,8,55,5,4,7,8,5,4,7,8,8,153,5,4,7,8,0,8,5,4,7,8,4,7,8,4,7,8,5,4,7,8,8,7,0,5,4,7,8,5,4,7,8,4,7,8,4,7,8,5,4,7,8,5,4,7,8,5,4,7,8,4,8,5,4,7,8,55,55,0,55,5,4,7,8,5,5,5,4,7,8,5,4,7,8,5,4,7,8,5,4,7,8,5,5,4,4,7,7,8,8,5,4,7,8,4,7,8,4,7,8,0,5,4,7,8,0,0,36,30,30,30,0,36,30,36,30,30,36,30,36,30,36,30,36,30,0,0,30,36,30,36,30,36,36,30,30,30,36,30,30,30,36,30,36,30,36,30,30,30,36,30,36,30,36,30,0,36,30,36,30,36,30,36,36,30,36,30,36,30,36,36,30,30,36,30,30,30,36,30,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,39,39,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,154,155,42,0,0,0,42,0,42,41,43,42,41,41,41,41,43,42,41,43,42,41,41,43,43,42,42,43,42,41,43,42,41,43,42,41,41,42,41,43,42,41,43,42,41,43,43,42,41,43,41,43,42,41,43,42,41,41,41,42,43,42,41,43,43,42,41,43,42,41,41,41,43,42,41,43,42,41,43,43,42,41,41,43,42,41,43,41,43,43,43,42,41,43,0,43,42,41,43,41,42,42,43,42,41,43,42,41,43,42,41,43,43,42,42,41,41,43,42,41,41,41,42,43,42,41,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,58,57,57,57,58,57,58,57,57,58,57,58,57,58,57,58,58,57,58,58,57,58,57,58,58,57,58,57,57,58,57,58,57,57,57,58,57,58,57,58,57,57,57,58,57,58,57,58,57,58,58,58,58,58,58,58,58,57,58,57,58,57,58,57,58,57,58,57,58,58,57,58,57,58,57,58,57,58,58,57,57,58,57,57,57,0,58,57,0,0,0,0,0,0,0,0,0,0,59,64,66,61,62,64,66,59,68,69,61,62,64,66,59,68,69,61,62,64,66,59,68,69,61,62,59,59,61,62,64,66,59,68,69,61,62,64,66,59,68,69,61,62,64,66,59,68,69,0,61,62,64,64,66,66,59,68,69,61,62,64,66,59,68,69,59,68,69,61,62,64,66,59,68,69,59,59,59,59,59,59,59,68,69,0,61,62,59,68,69,61,62,64,66,59,68,69,59,59,61,62,64,66,59,68,69,61,62,64,66,59,68,69,61,62,64,66,59,68,69,61,62,64,66,59,68,69,61,62,64,66,59,68,69,61,62,64,66,59,68,69,59,61,62,64,66,59,68,69,61,62,59,59,62,61,62,64,66,59,68,69,59,68,69,61,62,64,66,59,68,69,59,59,59,61,62,61,62,64,66,59,68,69,61,62,64,66,59,68,69,61,62,64,66,59,68,69,61,61,62,62,64,64,66,66,59,59,68,68,69,69,61,62,64,66,59,68,69,61,62,64,66,59,68,69,74,0,0,74,0,79,81,79,81,74,74,74,79,81,74,79,81,74,79,74,79,81,79,81,79,81,74,79,81,74,79,81,74,79,81,74,79,81,74,74,79,81,74,79,79,81,74,74,79,81,74,79,81,79,81,74,79,81,74,79,81,74,79,81,79,81,74,79,81,74,79,79,81,74,79,81,74,74,81,79,81,74,74,79,81,74,79,81,74,79,81,74,79,81,74,79,81,74,79,79,81,81,74,74,79,81,74,79,81,74,156,156,157,157,157,0,0,87,0,0,86,84,87,88,84,88,84,88,87,87,86,84,87,88,86,84,87,88,84,87,88,86,84,87,88,86,84,87,88,86,84,87,88,88,88,86,88,86,84,87,88,86,84,87,88,86,84,87,88,88,88,86,84,87,88,84,87,88,84,87,88,86,84,87,88,87,88,88,86,84,87,88,86,84,87,88,84,87,88,84,87,88,86,84,87,88,86,84,87,88,86,84,87,88,84,87,88,88,88,86,84,87,88,88,88,86,84,87,88,86,86,84,86,84,87,88,86,84,87,88,86,84,87,88,86,84,87,88,86,86,84,84,87,87,88,88,86,84,87,88,84,87,88,84,87,88,86,84,87,88,88,89,0,89,0,89,0,89,0,89,0,89,0,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,89,0,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,121,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,89,89,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,91,92,93,94,95,96,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,96,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,89,124,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,120,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,91,92,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,89,93,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,108,89,111,115,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,91,91,92,92,108,108,93,93,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,94,94,95,95,123,123,96,96,124,124,89,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,97,98,99,100,101,102,103,104,105,106,107,91,92,108,93,109,110,111,112,113,114,115,116,117,118,119,120,121,122,94,95,123,96,124,89,158,159,160,161,162,163,164,165,166,160,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,161,162,181,182,183,184,185,186,187,163,188,164,158,165,189,190,166,159,178,179,191,180,167,168,169,170,171,172,173,174,175,176,177,180,181,182,183,184,185,186,187,188,158,181,185,0,0,130,0,0,129,127,130,131,127,131,127,131,130,130,129,127,130,131,129,127,130,131,127,130,131,129,127,130,131,129,127,130,131,129,127,130,131,131,131,129,127,130,131,129,127,130,131,131,129,127,130,131,131,131,129,127,130,131,127,130,131,127,130,131,129,127,130,131,129,130,131,131,131,129,127,130,131,129,127,130,131,127,130,131,127,130,131,129,127,130,131,129,127,130,131,129,127,130,131,127,130,131,131,131,131,129,127,130,131,131,131,129,127,130,131,129,129,127,129,127,130,131,131,131,131,129,127,130,131,129,127,130,131,129,127,130,131,129,129,127,127,130,130,131,131,129,127,130,131,127,130,131,127,130,131,131,129,127,130,131,0,0,135,0,0,134,132,135,136,132,136,132,136,135,135,136,134,132,135,136,134,132,135,136,132,135,136,134,132,135,136,134,132,135,136,134,132,135,136,136,136,134,132,135,136,134,132,135,136,134,132,135,136,136,136,136,134,132,135,136,132,135,136,132,135,136,134,132,135,136,135,136,136,134,132,135,136,134,134,132,135,136,132,135,136,132,135,136,134,132,135,136,134,132,135,136,134,132,135,136,132,135,136,134,132,135,136,134,132,135,136,136,136,134,134,136,132,134,132,135,136,134,132,135,136,134,132,135,136,134,132,135,136,134,134,132,132,135,135,136,136,134,132,135,136,132,135,136,132,135,136,136,134,132,135,136,23,23,0,0,23,23,0,0,23,0,22,142,23,22,142,23,22,142,23,22,22,22,142,23,22,142,23,22,142,23,22,142,142,22,142,23,22,142,23,22,142,23,22,22,142,23,22,22,142,23,22,142,142,23,22,142,23,22,142,23,22,142,23,22,142,23,22,23,22,22,142,23,142,142,23,22,142,142,23,22,142,23,22,22,142,23,22,142,23,22,142,23,22,142,142,23,23,22,22,142,23,22,142,23,22,0,0,0,144,0,0,152,143,141,144,152,145,141,145,141,145,144,144,143,141,144,152,145,143,141,144,152,145,141,144,145,0,152,152,143,141,144,152,145,143,141,144,152,145,143,141,144,152,145,145,143,152,152,145,143,141,144,152,145,143,141,144,152,145,152,143,141,144,152,145,152,145,152,152,145,143,141,144,152,145,141,144,145,141,144,145,152,143,141,144,152,145,143,152,152,144,152,145,152,145,143,141,144,152,145,143,141,144,152,145,141,144,145,141,144,145,143,141,144,152,145,143,141,144,152,145,143,141,144,152,145,141,144,145,152,152,152,152,145,152,145,143,141,144,152,145,152,145,152,143,152,152,145,143,141,144,152,145,152,143,143,152,141,143,141,144,152,145,145,145,145,152,143,141,144,152,145,143,141,144,152,145,143,141,144,152,145,143,143,141,141,144,144,152,152,145,145,143,141,144,152,145,141,144,145,141,144,145,152,145,143,141,144,152,145,152],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[6,[5]]]],[7,[[6,[5]]]],[8,[[6,[5]]]],0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[10],[10],[10],[10],[10],[10],[10],[10],0,[[],[[13,[[12,[11]]]]]],[10],[10],[10],[10],0,[[8,14],15],[[]],[[]],[[]],[[]],[16,[[18,[4,17]]]],[16,[[18,[7,17]]]],[16,[[18,[8,17]]]],[16,[[18,[4,17]]]],[16,[[18,[7,17]]]],[16,[[18,[8,17]]]],[[]],[[]],[[]],[[]],0,[19,20],0,[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],21],[[],21],[[],21],[[],21],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[4,22],[[6,[23]]]],0,[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],0,0,0,0,[[]],[[]],[[]],[[]],[5,6],[5,6],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[],27],[[4,16],[[18,[17]]]],[[7,16],[[18,[17]]]],[[8,16],[[18,[17]]]],[[4,16],[[18,[17]]]],[[7,16],[[18,[17]]]],[[8,16],[[18,[17]]]],0,[[]],[[]],[[]],[[]],0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[3,3],[3,3],[[19,28,29]],[[]],[[]],[[]],[[]],[30,[[6,[5]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[],[[32,[31]]]],[[33,34],35],[[],30],[10],[10],[10],[10],[36,[[13,[[12,[11]]]]]],[10],[10],0,[[30,14],15],[[]],[[]],[16,[[18,[30,17]]]],[16,[[18,[30,17]]]],[[]],[[]],[[],10],[[],10],[[]],[[]],[[],3],[[],3],[[],21],[[],21],[[],20],[[],20],[[]],[[]],0,[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[[]],[[]],[[],[[18,[25]]]],[[],[[18,[25]]]],0,[[],26],[[],26],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[30,16],[[18,[17]]]],[[30,16],[[18,[17]]]],[[]],[[]],0,[1,[[2,[1,1]]]],[37],[37],[37],[37],[[]],[[]],[[],9],[[],9],[[],9],0,[10],[10],[10],[[]],[[]],[[],10],[[]],[[],21],[[],20],[[]],[[38,29],37],[1,[[24,[1,1]]]],[[]],[[],[[18,[25]]]],0,[[],26],[[]],[[],18],[[],18],[[],18],[[],27],[[]],0,0,0,0,0,[1,[[2,[1,1]]]],[[]],[[]],[[],9],[[],9],[[],9],[10],[10],[10],[[39,39],20],[[39,14],15],[[]],[[]],[[],19],[[],10],[[]],[[],21],[[],20],[[]],[1,[[24,[1,1]]]],[[]],[[],[[18,[25]]]],[[],26],[[]],[[],18],[19,[[6,[39]]]],[[],18],[[],18],[[],27],[[]],0,0,0,0,0,0,0,0,[40],0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[3,3],[3,3],0,[[]],[[]],[[]],[[]],[[]],[[]],[41,[[6,[5]]]],0,0,[42,42],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],42],[[],41],[10],[10],[10],[10],[10],[10],[43,[[13,[[12,[11]]]]]],[10],[10],[10],[43,6],0,[43,6],[[42,14],15],[[41,14],15],[[]],[[]],[[]],[16,[[18,[41,17]]]],[16,[[18,[41,17]]]],[[]],[[]],[[]],[[]],[[43,19,19],[[6,[32]]]],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[],3],[[],3],[[],21],[[],21],[[],21],[[],20],[[],20],[[],20],[43,[[6,[32]]]],[[]],[[]],[[]],0,[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],0,0,0,0,[[]],[[]],[[]],[[43,19,19,19],[[6,[44]]]],[19,6],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],0,0,[[]],[42,[[26,[45]]]],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[41,16],[[18,[17]]]],[[41,16],[[18,[17]]]],[[],[[46,[42]]]],[[]],[[]],[[]],0,[1,[[2,[1,1]]]],[[]],[[]],[[],9],[[],9],[[],9],[[47,19,10,48],49],[[],47],[10],[10],[10],[[]],[[]],[[47,19,10],[[50,[19]]]],[[47,19,51],[[50,[19]]]],[[47,19,10],20],[[47,19],[[50,[19]]]],[[47,19,20],[[50,[19]]]],0,[[47,19,10,48],26],0,[[],10],[[]],[[],21],[[],20],[[]],[1,[[24,[1,1]]]],[[]],[[],[[18,[25]]]],[[],26],[[]],[[],18],[[],18],[[],18],[[],27],[[47,52],[[49,[53]]]],[[]],0,[1,[[2,[1,1]]]],[[]],[[]],[[],9],[[],9],[[],9],[19,[[6,[54]]]],0,[10],[10],[[55,44],6],[55],[10],[[55,44],20],[[]],[[]],[[],56],[[],10],[[]],[[],21],[[],20],[[]],[55,[[6,[39]]]],[1,[[24,[1,1]]]],[55],0,0,0,[55,6],[[]],[[],[[18,[25]]]],[[],26],[[]],[[],18],[[],18],[[],18],[8,[[6,[55]]]],[[],27],[[]],0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[3,3],[3,3],[[]],[[]],[[]],[[]],[57,[[6,[5]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[58,59]],[[58,59]],[[],57],[[58,[32,[[32,[60]]]]]],[10],[10],[10],[10],[58,[[13,[[12,[11]]]]]],[10],[10],0,0,0,0,[[57,14],15],[[]],[[]],[16,[[18,[57,17]]]],[16,[[18,[57,17]]]],[[]],[[]],[[],10],[[],10],[[]],[[]],[[],3],[[],3],[[],21],[[],21],[[],20],[[],20],[[]],[[]],[[58,61]],[58,6],[[58,62],6],[58,6],[58,6],[[58,63],[[6,[29]]]],[58,6],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[[]],[[]],0,0,0,0,0,0,0,0,[[58,19,59]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],26],[[],26],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[57,16],[[18,[17]]]],[[57,16],[[18,[17]]]],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,[40],0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[59,59],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[10],[10],[10],[64,65],[10],[66,65],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[67,[[18,[59]]]],[67,[[18,[68]]]],[67,[[18,[69]]]],[10],[10],[10],[10],[10],[10],[10],[[59,59],20],[[],20],[[],20],[[],20],[[],20],[[],20],[70,[[18,[71,72]]]],[70,[[18,[71,72]]]],[70,[[18,[71,72]]]],0,[[61,14],15],[[62,14],15],[[59,14],15],[[68,14],15],[[69,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[73,[[46,[60]]]]],[[18,[59,74]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[[[73,[19]]],[[18,[61,74]]]],[[[73,[19]]],[[18,[62,74]]]],[[[73,[19]]],[[18,[59,74]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[59,75],18],[[68,75],18],[[69,75],18],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[59,33],0,[[]],[[],44],[[],44],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[40],[40],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[],76],[74,[[26,[77]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[79,[[78,[44]]]]],74],[74,[[26,[76]]]],[[[79,[80]]],[[79,[80]]]],[[[81,[80]]],[[81,[80]]]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[10],[10],[10],[10],[10],[10],[74,19],[10],[10],[10],[[[79,[[78,[44]]]]],[[18,[74]]]],[[[79,[82]],14],15],[[[81,[82]],14],15],[[74,14],15],[[74,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[[79,[[78,[44]]]]],74],[[[81,[[78,[44]]]]],74],[[],21],[[],21],[[],21],[[],20],[[],20],[[],20],0,[[]],[[]],[[]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[83],0,[[]],[[]],[[]],[74,[[26,[76]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[]],[[]],[[],44],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[84,85],[[6,[86]]]],[[87,85],[[6,[86]]]],[[88,85],[[6,[86]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[],88],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],0,[[88,14],15],[[]],[[]],[[]],[[]],[16,[[18,[84,17]]]],[16,[[18,[87,17]]]],[16,[[18,[88,17]]]],[16,[[18,[84,17]]]],[16,[[18,[87,17]]]],[16,[[18,[88,17]]]],[[]],[[]],[[]],[[]],[19,20],0,0,[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],21],[[],21],[[],21],[[],21],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[84,22],[[6,[23]]]],[[87,22],[[6,[23]]]],[[88,22],[[6,[23]]]],0,0,[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],0,0,[[]],[[]],[[]],[[]],[86,6],[86,6],0,[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[],27],[[84,16],[[18,[17]]]],[[87,16],[[18,[17]]]],[[88,16],[[18,[17]]]],[[84,16],[[18,[17]]]],[[87,16],[[18,[17]]]],[[88,16],[[18,[17]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[89,90],[[],76],[89,[[26,[77]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[91,[[78,[44]]]]],89],[[[92,[[78,[44]]]]],89],[[[93,[[78,[44]]]]],89],[94,89],[95,89],[[[96,[[78,[44]]]]],89],[89,[[26,[76]]]],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[[[91,[80]]],[[91,[80]]]],[[[92,[80]]],[[92,[80]]]],[[[108,[80]]],[[108,[80]]]],[[[93,[80]]],[[93,[80]]]],[109,109],[110,110],[[[111,[80]]],[[111,[80]]]],[112,112],[113,113],[114,114],[[[115,[80]]],[[115,[80]]]],[116,116],[117,117],[118,118],[119,119],[[[120,[80]]],[[120,[80]]]],[[[121,[80]]],[[121,[80]]]],[122,122],[94,94],[95,95],[123,123],[[[96,[80]]],[[96,[80]]]],[[[124,[80]]],[[124,[80]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[89,10,[32,[44]]]],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[89,19],0,[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],0,[[[91,[[78,[44]]]]],[[18,[89]]]],[[[92,[[78,[44]]]]],[[18,[89]]]],[[[93,[[78,[44]]]]],[[18,[89]]]],[94,[[18,[89]]]],[95,[[18,[89]]]],[[[96,[[78,[44]]]]],[[18,[89]]]],[[97,14],15],[[98,14],15],[[99,14],15],[[100,14],15],[[101,14],15],[[102,14],15],[[103,14],15],[[104,14],15],[[105,14],15],[[106,14],15],[[107,14],15],[[[91,[82]],14],15],[[[92,[82]],14],15],[[[108,[82]],14],15],[[[93,[82]],14],15],[[109,14],15],[[110,14],15],[[[111,[82]],14],15],[[112,14],15],[[113,14],15],[[114,14],15],[[[115,[82]],14],15],[[116,14],15],[[117,14],15],[[118,14],15],[[119,14],15],[[[120,[82]],14],15],[[[121,[82]],14],15],[[122,14],15],[[94,14],15],[[95,14],15],[[123,14],15],[[[96,[82]],14],15],[[[124,[82]],14],15],[[89,14],15],[[89,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[97,89],[98,89],[99,89],[100,89],[101,89],[102,89],[103,89],[104,89],[105,89],[106,89],[107,89],[[[91,[[78,[44]]]]],89],[[[92,[[78,[44]]]]],89],[[[108,[[78,[44]]]]],89],[[[93,[[78,[44]]]]],89],[109,89],[110,89],[[[111,[[78,[44]]]]],89],[112,89],[113,89],[114,89],[[[115,[[78,[44]]]]],89],[116,89],[117,89],[118,89],[119,89],[[[120,[[78,[44]]]]],89],[[[121,[[78,[44]]]]],89],[122,89],[94,89],[95,89],[123,89],[[[96,[[78,[44]]]]],89],[[[124,[[78,[44]]]]],89],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[89,[[26,[125]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[83],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[89,[[26,[76]]]],0,0,[89,126],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],44],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[127,128],[[6,[129]]]],[[130,128],[[6,[129]]]],[[131,128],[[6,[129]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],131],[10],[10],[10],[10],[10],[10],[10],[10],0,[10],[10],[10],[10],0,[[131,14],15],[[]],[[]],[[]],[[]],[16,[[18,[127,17]]]],[16,[[18,[130,17]]]],[16,[[18,[131,17]]]],[16,[[18,[127,17]]]],[16,[[18,[130,17]]]],[16,[[18,[131,17]]]],[[]],[[]],[[]],[[]],0,[19,20],0,0,0,[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],21],[[],21],[[],21],[[],21],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[127,22],[[6,[23]]]],[[130,22],[[6,[23]]]],[[131,22],[[6,[23]]]],0,0,0,[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],0,0,[[]],[[]],[[]],[[]],[129,6],[129,6],0,[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],0,0,0,[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[],27],[[127,16],[[18,[17]]]],[[130,16],[[18,[17]]]],[[131,16],[[18,[17]]]],[[127,16],[[18,[17]]]],[[130,16],[[18,[17]]]],[[131,16],[[18,[17]]]],0,[[]],[[]],[[]],[[]],0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[132,133],[[6,[134]]]],[[135,133],[[6,[134]]]],[[136,133],[[6,[134]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],136],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],0,0,[[136,14],15],[[]],[[]],[[]],[[]],[16,[[18,[132,17]]]],[16,[[18,[135,17]]]],[16,[[18,[136,17]]]],[16,[[18,[132,17]]]],[16,[[18,[135,17]]]],[16,[[18,[136,17]]]],[[]],[[]],[[]],[[]],[19,20],0,0,[[],10],[[],10],[[],10],[[],10],0,[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],21],[[],21],[[],21],[[],21],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[132,22],[[6,[23]]]],[[135,22],[[6,[23]]]],[[136,22],[[6,[23]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[[]],[[]],[[]],[[]],0,0,[134,6],[134,6],0,0,[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[],27],[[132,16],[[18,[17]]]],[[135,16],[[18,[17]]]],[[136,16],[[18,[17]]]],[[132,16],[[18,[17]]]],[[135,16],[[18,[17]]]],[[136,16],[[18,[17]]]],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[40],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[22,22],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[],22],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[22,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[[26,[19]],19,[26,[[46,[19]]]]],[[6,[[0,[137,138,139]]]]]],0,0,0,[23,140],0,[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],0,[[]],[[]],[[]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[]],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[]],[[]],[[]],0,0,0,0,0,0,[40],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[3,3],[3,3],[3,3],[3,3],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[141,142],[[6,[143]]]],[[144,142],[[6,[143]]]],[[145,142],[[6,[143]]]],[[146,147,148,149,150],[[6,[151]]]],[152,152],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[152,85],[[],152],[[],145],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[67,[[18,[152]]]],[10],[10],[10],[10],[10],0,0,[70,[[18,[71,72]]]],[[152,14],15],[[145,14],15],[[]],[[]],[[]],[[]],[[]],[16,[[18,[141,17]]]],[16,[[18,[144,17]]]],[16,[[18,[145,17]]]],[16,[[18,[141,17]]]],[16,[[18,[144,17]]]],[16,[[18,[145,17]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[152,128],0,[19,20],0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],21],[[],21],[[],21],[[],21],[[],21],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[141,22],[[6,[23]]]],[[144,22],[[6,[23]]]],[[145,22],[[6,[23]]]],0,0,0,0,0,0,0,[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],[1,[[24,[1,1]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[152,75],18],[143,6],[143,6],0,0,[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],[[],[[18,[25]]]],0,0,0,[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],27],[[],27],[[],27],[[],27],[[],27],[[141,16],[[18,[17]]]],[[144,16],[[18,[17]]]],[[145,16],[[18,[17]]]],[[141,16],[[18,[17]]]],[[144,16],[[18,[17]]]],[[145,16],[[18,[17]]]],0,0,[[]],[[]],[[]],[[]],[[]],0],"c":[604,607,608,609,610,611,612,613,614,615,616,618,619,641,642,643,666,670,672,683,684,685,693,702,703,704,705,706,707,715,759,767,768,769,770,771,779,780,781,789,790,843,844,845,846,847,854,861,862,863,864,882,886,887,888,889,890,905,906,913,921,925,953,954,955,956,957],"p":[[8,"Policy"],[3,"And"],[6,"Command"],[3,"Command"],[4,"Instance"],[6,"Result"],[4,"SubCommand"],[3,"AttachCommand"],[3,"Compat"],[15,"usize"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[15,"str"],[15,"bool"],[3,"Request"],[3,"TopLevelOptions"],[4,"Options"],[3,"Or"],[4,"CNil"],[4,"Option"],[3,"TypeId"],[8,"Fn"],[15,"u32"],[3,"BenchTableMetadataCommand"],[3,"RegionRoute"],[3,"Vec"],[6,"TableId"],[3,"TableName"],[3,"RawTableInfo"],[3,"BenchTableMetadata"],[3,"TableMetadataBencher"],[6,"TableMetadataManagerRef"],[4,"ReplCommand"],[3,"Private"],[3,"ExportCommand"],[4,"ExportTarget"],[3,"Export"],[3,"String"],[3,"PossibleValue"],[15,"slice"],[3,"RustylineHelper"],[3,"Context"],[6,"Result"],[4,"Cow"],[4,"CompletionType"],[3,"ValidationContext"],[4,"ValidationResult"],[3,"DatafusionQueryEngine"],[3,"Repl"],[3,"PathBuf"],[3,"UpgradeCommand"],[3,"MigrateTableMetadata"],[3,"TableGlobalValue"],[15,"u8"],[3,"CatalogKey"],[3,"SchemaKey"],[3,"TableRouteValue"],[3,"CATALOG_KEY_PATTERN"],[3,"Regex"],[3,"SCHEMA_KEY_PATTERN"],[8,"Deserializer"],[3,"CatalogValue"],[3,"SchemaValue"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[8,"AsRef"],[4,"Error"],[8,"Serializer"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"InvalidCatalogSnafu"],[8,"Clone"],[3,"DeserializeCatalogEntryValueSnafu"],[8,"Debug"],[3,"Demand"],[3,"Command"],[3,"DatanodeOptions"],[3,"Instance"],[4,"SubCommand"],[3,"StartCommand"],[4,"Error"],[8,"Any"],[3,"MissingConfigSnafu"],[3,"IllegalConfigSnafu"],[3,"InvalidReplCommandSnafu"],[3,"NotDataFromOutputSnafu"],[3,"EmptyResultSnafu"],[3,"InvalidDatabaseNameSnafu"],[3,"InitMetadataSnafu"],[3,"IterStreamSnafu"],[3,"StartProcedureManagerSnafu"],[3,"StopProcedureManagerSnafu"],[3,"StartDatanodeSnafu"],[3,"ShutdownDatanodeSnafu"],[3,"StartFrontendSnafu"],[3,"ShutdownFrontendSnafu"],[3,"BuildMetaServerSnafu"],[3,"StartMetaServerSnafu"],[3,"ShutdownMetaServerSnafu"],[3,"UnsupportedSelectorTypeSnafu"],[3,"ReplCreationSnafu"],[3,"ReadlineSnafu"],[3,"RequestDatabaseSnafu"],[3,"CollectRecordBatchesSnafu"],[3,"PrettyPrintRecordBatchesSnafu"],[3,"StartMetaClientSnafu"],[3,"ParseSqlSnafu"],[3,"PlanStatementSnafu"],[3,"SubstraitEncodeLogicalPlanSnafu"],[3,"LoadLayeredConfigSnafu"],[3,"StartCatalogManagerSnafu"],[3,"ConnectEtcdSnafu"],[3,"ConnectServerSnafu"],[3,"SerdeJsonSnafu"],[3,"FileIoSnafu"],[3,"CreateDirSnafu"],[8,"StackError"],[4,"StatusCode"],[3,"Command"],[3,"FrontendOptions"],[3,"Instance"],[4,"SubCommand"],[3,"StartCommand"],[3,"Command"],[3,"MetaSrvOptions"],[3,"Instance"],[4,"SubCommand"],[3,"StartCommand"],[8,"Serialize"],[8,"Deserialize"],[8,"Default"],[3,"LoggingOptions"],[3,"Command"],[3,"MixOptions"],[3,"Instance"],[4,"SubCommand"],[3,"StartCommand"],[3,"Plugins"],[6,"KvBackendRef"],[6,"ProcedureManagerRef"],[6,"CatalogManagerRef"],[3,"RegionServer"],[3,"Instance"],[3,"StandaloneOptions"],[8,"Tool"],[13,"UseDatabase"],[13,"Sql"],[13,"InvalidCatalog"],[13,"DeserializeCatalogEntryValue"],[13,"ConnectServer"],[13,"InvalidDatabaseName"],[13,"CreateDir"],[13,"ReplCreation"],[13,"Readline"],[13,"LoadLayeredConfig"],[13,"ConnectEtcd"],[13,"SerdeJson"],[13,"FileIo"],[13,"InitMetadata"],[13,"IterStream"],[13,"StartProcedureManager"],[13,"StopProcedureManager"],[13,"StartDatanode"],[13,"ShutdownDatanode"],[13,"StartFrontend"],[13,"ShutdownFrontend"],[13,"BuildMetaServer"],[13,"StartMetaServer"],[13,"ShutdownMetaServer"],[13,"MissingConfig"],[13,"IllegalConfig"],[13,"UnsupportedSelectorType"],[13,"RequestDatabase"],[13,"CollectRecordBatches"],[13,"PrettyPrintRecordBatches"],[13,"StartMetaClient"],[13,"ParseSql"],[13,"PlanStatement"],[13,"SubstraitEncodeLogicalPlan"],[13,"StartCatalogManager"],[13,"NotDataFromOutput"],[13,"EmptyResult"],[13,"InvalidReplCommand"]]},\
"common_base":{"doc":"","t":"CDALLAALLLLLMLLLLLLLLALLLLGASSQQIIODDIDDDDIDSSSDDSSQDQQSSSIIIMMMMMMLLLLLLLLLLLKLLLLLLLLLLLLLKLLLLLLLLLLLKLLLKLLLLLLLLLLLLKLLLMLLLLLLLLLLLLLLLOOLLLLLLLLLLLLLMOMMOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLKLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLKKLLLLLLLLLLIINDENDGNDKLLKLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLOOOLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLLLLLLLLKLLLLLLLLMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRDRRLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BitVec","Plugins","bit_vec","borrow","borrow_mut","buffer","bytes","clone","clone_into","default","from","get","inner","insert","into","is_empty","len","lock","map","map_mut","new","readable_size","to_owned","try_from","try_into","type_id","BitVec","prelude","ALIAS_WIDTH","ALIGNED_TO_SIZE","Access","Alias","AsBits","AsMutBits","BitArr","BitArray","BitBox","BitOrder","BitPtr","BitPtrRange","BitRef","BitSlice","BitStore","BitVec","DANGLING","EMPTY","EMPTY","LocalBits","Lsb0","MAX_BITS","MAX_ELTS","Mem","Msb0","Store","Unalias","ZERO","ZERO","ZERO","_","_","_","_mem","_or","_ord","_ord","_ref","_typ","add","address","align_offset","align_to","align_to_mut","all","any","append","as_bitptr","as_bitptr","as_bitptr_range","as_bits","as_bitslice","as_bitslice","as_bitslice","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut_bitptr","as_mut_bitptr","as_mut_bitptr_range","as_mut_bits","as_mut_bitslice","as_mut_bitslice","as_mut_bitslice","as_mut_ptr","as_mut_ptr","as_mut_ptr_range","as_mut_slice","as_mut_slice","as_ptr","as_ptr","as_ptr_range","as_raw_mut_slice","as_raw_mut_slice","as_raw_mut_slice","as_raw_mut_slice","as_raw_slice","as_raw_slice","as_raw_slice","as_raw_slice","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_slice","as_slice","at","at","at","bit","bit","bit_domain","bit_domain_mut","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitarr","bitbox","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitptr","bits","bitspan","bitspan","bitvec","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","cast","chunks","chunks_exact","chunks_exact_mut","chunks_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_from_bitslice","clone_from_slice","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","commit","contains","contains","copy_from","copy_from_bitslice","copy_from_nonoverlapping","copy_from_slice","copy_to","copy_to_nonoverlapping","copy_within","copy_within_unchecked","count","count_ones","count_zeros","data","data","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","domain","domain_mut","drain","drop","drop","drop","drop_in_place","empty","empty_mut","end","end_bound","ends_with","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extend","extend_from_bitslice","extend_from_raw_slice","extend_from_slice","extend_from_within","fill","fill_uninitialized","fill_with","first","first_mut","first_one","first_zero","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_align","force_align","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bitptr","from_bitslice","from_bitslice","from_boxed_slice","from_element","from_element","from_element_mut","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_mut","from_mut_slice","from_range","from_raw","from_raw_parts","from_ref","from_slice","from_slice","from_slice","from_slice_mut","from_slice_mut","from_slice_unchecked","from_slice_unchecked_mut","from_vec","get","get_bit","get_mut","get_unchecked","get_unchecked_mut","hash","hash","hash","hash","hash","hash","hash","hash","hash","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","insert","into","into","into","into","into","into","into","into","into","into_bitarray","into_bitptr","into_bitvec","into_boxed_bitslice","into_boxed_slice","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_range","into_raw","into_raw_parts","into_vec","is_empty","is_empty","is_empty","is_empty","is_null","iter","iter_mut","iter_ones","iter_zeros","last","last","last_mut","last_one","last_zero","leading_ones","leading_zeros","leak","leak","len","len","len","len","load","load_be","load_be","load_be","load_be","load_be","load_be","load_le","load_le","load_le","load_le","load_le","load_le","load_value","mask","mask","mask","new","new","new","new","new_unchecked","next","next_back","not","not","not","not","not","not_all","not_any","nth","nth_back","offset","offset_from","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pointer","pointer","pop","ptr","push","raw_parts","rchunks","rchunks_exact","rchunks_exact_mut","rchunks_mut","read","read","read","read_unaligned","read_volatile","remove","repeat","repeat","replace","replace","replace","replace_unchecked","reserve","reserve_exact","resize","resize_with","retain","reverse","rotate_left","rotate_right","rsplit","rsplit_mut","rsplitn","rsplitn_mut","select","select","select","set","set","set_aliased","set_aliased_unchecked","set_elements","set_len","set_unchecked","set_uninitialized","shift_left","shift_right","shrink_to_fit","size_hint","some","splice","split","split_at","split_at_mut","split_at_unchecked","split_at_unchecked_mut","split_first","split_first_mut","split_inclusive","split_inclusive_mut","split_last","split_last_mut","split_mut","split_off","splitn","splitn_mut","start","start_bound","starts_with","store","store_be","store_be","store_be","store_be","store_be","store_be","store_le","store_le","store_le","store_le","store_le","store_le","store_value","strip_prefix","strip_suffix","sub","swap","swap","swap","swap_remove","swap_unchecked","swap_with_bitslice","swap_with_slice","to_bitvec","to_const","to_mut","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw_parts","to_string","to_string","to_string","to_string","to_string","to_vec","trailing_ones","trailing_zeros","truncate","try_as_bits","try_as_mut_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_boxed_slice","try_from_slice","try_from_slice","try_from_slice_mut","try_from_vec","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_view_bits","try_view_bits_mut","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_bits","view_bits_mut","windows","with_capacity","wrapping_add","wrapping_offset","wrapping_sub","write","write","write","write_unaligned","write_volatile","Buffer","BufferMut","Eof","EofSnafu","Error","Overflow","OverflowSnafu","Result","Underflow","UnderflowSnafu","advance_by","as_any","as_error_source","as_slice","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone_into","clone_into","clone_into","debug_fmt","description","dst_len","fail","fail","fmt","fmt","fmt","fmt","fmt","from","from","from","from","impl_buffer_for_bytes","impl_read_le","impl_write_le","into","into","into","into","into_error","into_error","into_error","is_empty","location_opt","next","peek_f32_le","peek_f64_le","peek_i16_le","peek_i32_le","peek_i64_le","peek_i8_le","peek_to_slice","peek_u16_le","peek_u32_le","peek_u64_le","peek_u8_le","provide","read_f32_le","read_f64_le","read_i16_le","read_i32_le","read_i64_le","read_i8_le","read_to_slice","read_u16_le","read_u32_le","read_u64_le","read_u8_le","remaining_size","source","src_len","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write_f32_le","write_f64_le","write_from_slice","write_i16_le","write_i32_le","write_i64_le","write_i8_le","write_u16_le","write_u32_le","write_u64_le","write_u8_le","dst_len","error","location","location","location","src_len","Bytes","StringBytes","as_utf8","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deref","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","from","hash","hash","into","into","is_empty","len","partial_cmp","partial_cmp","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","B","BINARY_DATA_MAGNITUDE","GIB","KIB","MIB","PIB","ReadableSize","TIB","UNIT","as_bytes","as_mb","borrow","borrow_mut","clone","clone_into","deserialize","div","div","eq","equivalent","fmt","fmt","from","from_str","gb","into","kb","mb","mul","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"common_base"],[26,"common_base::bit_vec"],[28,"common_base::bit_vec::prelude"],[729,"common_base::buffer"],[841,"common_base::buffer::Error"],[847,"common_base::bytes"],[900,"common_base::readable_size"]],"d":["","<code>Plugins</code> is a wrapper of Arc contents. Make it Cloneable …","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Symbol Export","All implementors are required to have <code>Self</code> and <code>Self::Alias</code> …","All implementors are required to have their alignment …","A type that selects the appropriate load/store …","A sibling <code>BitStore</code> implementor that is known to be …","Immutable Bit View","Mutable Bit View","Bit-Array Type Definition","Bit-Precision Array Immediate","Fixed-Size, Heap-Allocated, Bit Slice","In-Element Bit Ordering","Single-Bit Pointer","Bit-Pointer Range","Proxy Bit-Reference","Bit-Addressable Memory","Bit Storage","Bit-Precision Dynamic Array","The canonical dangling pointer. This selects the starting …","The canonical empty range. All ranges with zero length …","An empty bit-vector with no backing allocation.","Least-Significant-First Bit Traversal","Least-Significant-First Bit Traversal","The inclusive maximum length of a <code>BitSlice&lt;_, T&gt;</code>.","The inclusive maximum length that a <code>[T]</code> slice can be for …","The element type used in the memory region underlying a …","Most-Significant-First Bit Traversal","The underlying element type.","The inverse of <code>::Alias</code>. It is used when a <code>BitSlice</code> removes …","A bit-array with all bits initialized to zero.","The zero constant.","The zero constant.","Bit View","C-Style Bit-Field Access","Helper trait for scalars and arrays, but not slices.","","","The ordering of bits within an <code>A::Store</code> element.","","","","Adjusts a bit-pointer upwards in memory. This is …","Gets the address of the base storage element.","Computes the offset (in bits) that needs to be applied to …","Produces bit-slice view(s) with different underlying …","Produces bit-slice view(s) with different underlying …","Tests if every bit is set to <code>1</code> in the bit-slice.","Tests if there is at least one bit set to <code>1</code> in the …","Moves all the bits out of <code>other</code> into the back of <code>self</code>.","Gets a raw pointer to the zeroth bit of the bit-slice.","Creates an unsafe shared bit-pointer to the start of the …","Views the bit-slice as a half-open range of bit-pointers, …","Views <code>self</code> as an immutable bit-slice region with the <code>O</code> …","Explicitly views the bit-array as a bit-slice.","Explicitly views the bit-box as a bit-slice.","Explicitly views the bit-vector as a bit-slice.","","","","Produces a proxy reference to the referent bit.","","","","Gets a raw, write-capable pointer to the zeroth bit of the …","Creates an unsafe writable bit-pointer to the start of the …","Views the bit-slice as a half-open range of write-capable …","Views <code>self</code> as a mutable bit-slice region with the <code>O</code> …","Explicitly views the bit-array as a mutable bit-slice.","Explicitly views the bit-box as a mutable bit-slice.","Explicitly views the bit-vector as a mutable bit-slice.","","","Produces a range of mutable bit-pointers to each bit in …","Returns a mutable bit-slice containing the entire …","","","","Produces a range of bit-pointers to each bit in the …","Views the type as a mutable slice of its elements.","Views the bit-array as a mutable slice of its underlying …","Views the bit-box as a mutable slice of its underlying …","Views the bit-vector as a mutable slice of its underlying …","Views the type as a slice of its elements.","Views the bit-array as a slice of its underlying memory …","Views the bit-box as a slice of its underlying memory …","Views the bit-vector as a slice of its underlying memory …","","","","Produces a proxy reference to the referent bit.","","","","Returns a bit-slice containing the entire bit-array. …","","Translates a semantic bit index into a real bit position.","","","Gets the <code>BitIdx</code> that selects the bit within the memory …","","Partitions a bit-slice into maybe-contended and …","Partitions a mutable bit-slice into maybe-contended and …","","","","","","","","","","Boolean Arithmetic","","","","Bit-Array Value Constructor","Boxed Bit-Slice Constructor","","","","","","","Boolean Arithmetic","","","","","","","","Bit-Slice Region Constructor","","","Bit-Vector Constructor","","","","","","","","","","","Boolean Arithmetic","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the allocation capacity, measured in bits.","","Casts to a <code>BitPtr</code> with a different storage parameter.","Iterates over non-overlapping subslices of a bit-slice.","Iterates over non-overlapping subslices of a bit-slice.","Iterates over non-overlapping mutable subslices of a …","Iterates over non-overlapping mutable subslices of a …","Empties the bit-vector.","","","","","","","","","Copies the bits from <code>src</code> into <code>self</code>.","","","","","","","","","","","","","","","","","","Commits a bit into the proxied location.","Tests if a given bit-pointer is contained within the range.","Tests if the bit-slice contains the given sequence …","Copies <code>count</code> bits from the region starting at <code>src</code> to the …","Copies all bits from <code>src</code> into <code>self</code>, using batched …","Copies <code>count</code> bits from the region starting at <code>src</code> to the …","","Copies <code>count</code> bits from <code>self</code> to <code>dest</code>. The source and …","Copies <code>count</code> bits from <code>self</code> to <code>dest</code>. The source and …","Copies a span of bits to another location in the bit-slice.","Copies bits from one region of the bit-slice to another …","","Counts the number of bits set to <code>1</code> in the bit-slice …","Counts the number of bits cleared to <code>0</code> in the bit-slice …","The wrapped data buffer.","","","","","","","","","","","","","","","","","","Views the underlying memory of a bit-slice, removing alias …","Views the underlying memory of a bit-slice, removing alias …","Iterates over a portion of the bit-vector, <em>removing</em> all …","","","","Runs the destructor of the referent value.","Produces an empty bit-slice with an arbitrary lifetime.","Produces an empty bit-slice with an arbitrary lifetime.","The higher, exclusive, bound of the range. The bit to …","","Tests if the bit-slice ends with the given sequence.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends the contents of a bit-slice to a bit-vector.","Appends a slice of <code>T</code> elements to a bit-vector.","","Extends <code>self</code> by copying an internal range of its bit-slice …","Fills the bit-slice with a given bit.","Sets the unused bits outside the <code>BitBox</code> buffer to a fixed …","Fills the bit-slice with bits produced by a generator …","Gets a reference to the first bit of the bit-slice, or <code>None</code>…","Gets a mutable reference to the first bit of the …","Finds the index of the first bit in the bit-slice set to <code>1</code>.","Finds the index of the first bit in the bit-slice cleared …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures that the allocated buffer has no dead bits between …","Ensures that the live region of the bit-vector’s …","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts a bit-pointer into a proxy bit-reference.","Copies a bit-slice region into a new bit-box allocation.","Copies the contents of a bit-slice into a new heap …","Converts a <code>Box&lt;[T]&gt;</code> into a <code>BitBox&lt;T, O&gt;</code>, in place.","Constructs a shared <code>&amp;BitSlice</code> reference over a shared …","Constructs a new bit-vector from a single element.","Constructs an exclusive <code>&amp;mut BitSlice</code> reference over an …","","","","","","","Constructs a mutable <code>BitPtr</code> to the zeroth bit in a single …","Constructs a <code>BitPtr</code> to the zeroth bit in the zeroth …","Explicitly converts a <code>Range&lt;BitPtr&gt;</code> into a <code>BitPtrRange</code>.","Constructs a bit-box from a raw bit-slice pointer.","Constructs a bit-vector handle from its constituent fields.","Constructs a <code>BitPtr</code> to the zeroth bit in a single element.","Constructs a <code>BitPtr</code> to the zeroth bit in the zeroth …","Constructs a shared <code>&amp;BitSlice</code> reference over a slice of …","Constructs a new bit-vector from a slice of memory …","Constructs a mutable <code>BitPtr</code> to the zeroth bit in the …","Constructs an exclusive <code>&amp;mut BitSlice</code> reference over a …","Constructs a shared <code>&amp;BitSlice</code> over an element slice, …","Constructs an exclusive <code>&amp;mut BitSlice</code> over an element …","Converts a regular vector in-place into a bit-vector.","Gets a reference to a single bit or a subsection of the …","Reads a single bit out of the memory system according to …","Gets a mutable reference to a single bit or a subsection …","Gets a reference to a single bit or to a subsection of the …","Gets a mutable reference to a single bit or a subsection …","","","","","","","","","","","","Looks up a single bit by its semantic index.","","","","","","","","","","","","","","","","","Inserts a bit at a given position, shifting all bits after …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Wraps <code>self</code> in a <code>BitArray</code>.","Decays the bit-reference to an ordinary bit-pointer.","Converts the bit-box into a bit-vector.","Converts a bit-vector into a boxed bit-slice.","Converts the bit-box back into an ordinary boxed element …","","Removes the bit-array wrapper, returning the contained …","","","","","","","","","","","Explicitly converts a <code>BitPtrRange</code> into a <code>Range&lt;BitPtr&gt;</code>.","Consumes the bit-box, returning a raw bit-slice pointer.","Decomposes a bit-vector into its constituent member fields.","Converts a bit-vector into a <code>Vec</code> of its underlying storage.","Tests whether the array is empty.","Tests if the range is empty (the distance between …","Tests if the bit-slice is empty (length zero).","Tests if the bit-vector is empty.","Tests if a bit-pointer is the null value.","Produces an iterator over each bit in the bit-slice.","Produces a mutable iterator over each bit in the bit-slice.","Enumerates the index of each bit in a bit-slice set to <code>1</code>.","Enumerates the index of each bit in a bit-slice cleared to …","","Gets a reference to the last bit of the bit-slice, or <code>None</code> …","Gets a mutable reference to the last bit of the bit-slice, …","Finds the index of the last bit in the bit-slice set to <code>1</code>.","Finds the index of the last bit in the bit-slice cleared …","Counts the number of bits from the start of the bit-slice …","Counts the number of bits from the start of the bit-slice …","Deliberately leaks the allocated memory, returning an …","Destroys the <code>BitVec</code> handle without destroying the …","Gets the length (in bits) of the bit-array.","","Gets the number of bits in the bit-slice.","Gets the length of the bit-vector.","Integer Loading","Big-Endian Integer Loading","","","<code>Msb0</code> Big-Endian Integer Loading","<code>Lsb0</code> Big-Endian Integer Loading","","Little-Endian Integer Loading","","","<code>Lsb0</code> Little-Endian Integer Loading","<code>Msb0</code> Little-Endian Integer Loading","","Loads a value out of the memory system according to the …","Produces a multi-bit selection mask from a range of …","","","Wraps a raw memory value as a <code>BitStore</code> type.","Wraps an existing buffer as a bit-array.","Tries to construct a <code>BitPtr</code> from a memory location and a …","Constructs a new, empty, bit-vector.","Constructs a <code>BitPtr</code> from an address and head index, …","","","","","","","","Tests if at least one bit is cleared to <code>0</code> in the bit-slice.","Tests if every bit is cleared to <code>0</code> in the bit-slice.","","","Creates a new bit-pointer at a specified offset from the …","Calculates the distance (in bits) between two bit-pointers.","","","","","","","","","","","","","","","","","","","","","","","","Gets a raw pointer to the memory element containing the …","Gets a raw pointer to the memory location containing the …","Attempts to remove the trailing bit from the bit-vector.","","Appends a single bit to the vector.","Decomposes a bit-pointer into its element address and bit …","Iterates over non-overlapping subslices of a bit-slice, …","Iterates over non-overlapping subslices of a bit-slice, …","Iterates over non-overlapping mutable subslices of a …","Iterates over non-overlapping mutable subslices of a …","Reads the bit from <code>*self</code>.","","","Reads the bit from <code>*self</code> using an unaligned memory access.","Reads the bit from <code>*self</code> using a volatile load.","Removes a bit at a given position, shifting all bits after …","Creates a bit-vector by repeating a bit-slice <code>n</code> times.","Creates a new bit-vector by repeating a bit for the …","Moves <code>src</code> into the referenced bit, returning the previous …","Replaces the bit at <code>*self</code> with a new value, returning the …","Writes a new value into a bit, and returns its previous …","Writes a new value into a bit, returning the previous …","Ensures that the bit-vector has allocation capacity for <em>at </em>…","Ensures that the bit-vector has allocation capacity for <em>at </em>…","Resizes the bit-vector to a new length. New bits are …","Resizes the bit-vector to a new length, using a function …","Retains only the bits that the predicate allows.","Reverses the order of bits in a bit-slice.","Rotates the contents of a bit-slice to the left (towards …","Rotates the contents of a bit-slice to the right (away …","Iterates over subslices separated by bits that match a …","Iterates over mutable subslices separated by bits that …","Iterates over mutable subslices separated by bits that …","Iterates over mutable subslices separated by bits that …","Produces a single-bit selection mask from a bit-index.","","","Writes <code>value</code> into the proxy.","Writes a new value into a single bit.","Writes a new value into a single bit, using alias-safe …","Writes a new value into a single bit, using alias-safe …","Overwrites each element (visible in <code>.as_raw_mut_slice()</code>) …","Resizes a bit-vector to a new length.","Writes a new value into a single bit, without bounds …","Sets the uninitialized bits of a bit-vector to a known …","Shifts the contents of a bit-slice “left” (towards the …","Shifts the contents of a bit-slice “right” (away from …","Releases excess capacity back to the allocator.","","Tests if at least one bit is set to <code>1</code>, and at least one …","Modifies <code>self.drain()</code> so that the removed bit-slice is …","Iterates over subslices separated by bits that match a …","Splits a bit-slice in two parts at an index.","Splits a mutable bit-slice in two parts at an index.","Splits a bit-slice at an index, without bounds checking.","Splits a mutable bit-slice at an index, without bounds …","Splits the bit-slice into a reference to its first bit, …","Splits the bit-slice into mutable references of its first …","Iterates over subslices separated by bits that match a …","Iterates over mutable subslices separated by bits that …","Splits the bit-slice into a reference to its last bit, and …","Splits the bit-slice into mutable references to its last …","Iterates over mutable subslices separated by bits that …","Splits the bit-vector in half at an index, moving …","Iterates over subslices separated by bits that match a …","Iterates over mutable subslices separated by bits that …","The lower, inclusive, bound of the range. The bit to which …","","Tests if the bit-slice begins with the given sequence.","Integer Storing","Big-Endian Integer Storing","","","<code>Lsb0</code> Big-Endian Integer Storing","<code>Msb0</code> Big-Endian Integer Storing","","Little-Endian Integer Storing","","","<code>Msb0</code> Little-Endian Integer Storing","<code>Lsb0</code> Little-Endian Integer Storing","","Stores a value into the memory system. This is only called …","Removes a prefix bit-slice, if present.","Removes a suffix bit-slice, if present.","Adjusts a bit-pointer downwards in memory. This is …","Swaps the bit values of two proxies.","Swaps the bits at two mutable locations.","Exchanges the bit values at two indices.","Takes a bit out of the bit-vector.","Swaps two bits in a bit-slice, without bounds checking.","Swaps the contents of two bit-slices.","","Copies a bit-slice into an owned bit-vector.","Removes write permissions from a bit-pointer.","Adds write permissions to a bit-pointer.","","","","","","","","","","Decomposes a bit-pointer into its address and head-index …","","","","","","","Counts the number of bits from the end of the bit-slice to …","Counts the number of bits from the end of the bit-slice to …","Shortens the bit-vector, keeping the first <code>new_len</code> bits …","Attempts to view <code>self</code> as an immutable bit-slice region …","Attempts to view <code>self</code> as a mutable bit-slice region with …","","","","","","","","","","","","","","","","","","","Attempts to convert an ordinary boxed slice into a boxed …","Attempts to construct a shared <code>&amp;BitSlice</code> reference over a …","Fallibly constructs a new bit-vector from a slice of …","Attempts to construct an exclusive <code>&amp;mut BitSlice</code> reference …","Attempts to convert a regular vector in-place into a …","","","","","","","","","","Attempts to view a memory region as an immutable bit-slice.","Attempts to view a memory region as a mutable bit-slice.","","","","","","","","","","Views a memory region as an immutable bit-slice.","Views a memory region as a mutable bit-slice.","Iterates over consecutive windowing subslices in a …","Allocates a new, empty, bit-vector with space for at least …","Adjusts a bit-pointer upwards in memory, using wrapping …","Creates a new bit-pointer at a specified offset from the …","Adjusts a bit-pointer downwards in memory, using wrapping …","Writes a new bit into the given location.","","","Writes a bit into memory, tolerating unaligned addresses.","Writes a new bit using volatile I/O operations.","","Mutable buffer.","","SNAFU context selector for the <code>Error::Eof</code> variant","","","SNAFU context selector for the <code>Error::Overflow</code> variant","","","SNAFU context selector for the <code>Error::Underflow</code> variant","Advances internal cursor for next read.","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true if buffer has no data for read.","","","","","","","","","Peeks data into dst. This method should not change …","","","","","","","","","","","","Reads data into dst. This method will change internal …","","","","","Returns remaining data size for read.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bytes buffer.","String buffer that can hold arbitrary encoding string …","View this string as UTF-8 string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,17,22,20,0,0,19,19,15,0,125,15,24,15,23,0,0,0,19,17,24,19,27,19,17,17,17,19,19,19,19,20,19,20,19,126,24,25,20,24,25,27,17,19,20,20,19,20,19,127,24,25,20,19,20,19,24,20,19,20,19,23,24,25,20,23,24,25,20,24,25,27,17,19,20,20,24,20,16,38,39,17,17,19,19,24,25,20,24,25,19,19,19,19,19,19,19,20,0,0,24,25,20,24,25,19,19,19,19,19,19,19,20,27,0,25,20,0,24,25,20,24,25,19,19,19,19,19,19,19,20,24,24,25,25,27,22,17,19,20,20,38,39,24,24,25,25,27,22,17,19,20,20,38,39,20,20,17,19,19,19,19,20,24,25,27,22,17,20,38,39,19,19,24,25,27,22,17,20,38,39,24,25,27,17,19,20,38,39,27,22,19,17,19,17,19,17,17,19,19,22,19,19,24,27,24,25,22,19,19,20,38,39,24,25,27,20,24,25,27,20,19,19,20,25,27,20,17,19,19,22,22,19,24,25,27,27,27,22,17,19,19,19,19,19,19,19,19,19,19,19,19,20,38,39,24,25,27,22,17,19,20,38,39,20,20,20,20,20,20,20,20,20,19,25,19,19,19,19,19,19,20,24,24,24,24,24,24,25,25,25,25,25,25,25,27,27,27,22,17,17,19,19,19,19,19,19,19,20,20,20,20,20,20,20,38,39,25,20,24,24,24,25,25,25,25,25,25,27,22,22,17,17,17,19,20,20,20,20,20,20,38,39,27,25,20,25,19,20,19,25,20,20,20,20,20,17,17,22,25,20,17,17,19,20,17,19,19,19,20,19,15,19,19,19,24,25,27,22,17,19,20,38,39,24,25,19,19,19,19,19,19,19,20,24,25,19,19,19,19,19,19,20,20,24,25,27,22,17,19,20,38,39,23,27,25,20,25,20,24,24,24,24,25,22,19,19,20,20,20,22,25,20,20,24,22,19,20,17,19,19,19,19,22,19,19,19,19,19,19,25,20,24,22,19,20,128,128,24,25,19,19,20,128,24,25,19,19,20,15,16,38,39,15,24,17,20,17,22,22,24,25,27,19,20,19,19,22,22,17,17,24,25,27,27,27,17,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,38,39,17,17,20,17,20,17,19,19,19,19,17,19,20,17,17,20,19,20,27,17,19,19,20,20,20,20,20,19,19,19,19,19,19,19,16,38,39,27,19,19,19,20,20,19,20,19,19,20,22,19,20,19,19,19,19,19,19,19,19,19,19,19,19,20,19,19,22,22,19,128,128,24,25,19,19,20,128,24,25,19,19,20,15,19,19,17,27,17,19,20,19,19,19,19,17,17,24,25,27,22,17,19,20,38,39,17,24,25,27,19,20,19,19,19,20,126,127,24,24,24,24,25,25,27,22,17,17,17,19,19,19,20,20,38,39,25,19,20,19,20,24,25,27,22,17,19,20,38,39,125,125,24,25,27,22,17,19,20,38,39,125,125,19,20,17,17,17,17,19,20,17,17,0,0,97,0,0,97,0,0,97,0,129,97,97,130,97,100,101,102,97,100,101,102,97,100,101,97,100,101,102,100,101,102,97,97,100,100,101,100,101,102,97,97,100,101,102,97,0,0,0,100,101,102,97,100,101,102,129,97,97,129,129,129,129,129,129,129,129,129,129,129,97,129,129,129,129,129,129,129,129,129,129,129,129,97,100,100,101,102,97,100,101,102,97,100,101,102,97,100,101,102,97,130,130,130,130,130,130,130,130,130,130,130,131,132,131,133,132,131,0,0,119,120,119,120,119,120,119,120,119,120,119,120,119,120,120,119,120,120,120,119,119,119,120,119,120,119,120,120,120,120,119,119,119,120,119,120,119,119,119,120,119,120,119,120,119,120,119,120,119,120,119,0,0,0,0,0,0,0,0,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124],"f":[0,0,0,[[]],[[]],0,0,[1,1],[[]],[[],1],[[]],[1,[[5,[[0,[2,3,4]]]]]],0,[[1,[0,[2,3]]]],[[]],[1,6],[1,7],[1,[[10,[[9,[8]]]]]],[[1,11],5],[[1,11]],[[],1],0,[[]],[[],12],[[],12],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[17,[14,15,16]],7],[[17,[14,15,16]]]],[[[17,[14,15,16]]],[[18,[14,15]]]],[[[17,[14,15,16]],7],7],[[[19,[15,16]]]],[[[19,[15,16]]]],[[[19,[15,16]]],6],[[[19,[15,16]]],6],[[[20,[15,16]],[20,[15,16]]]],[[[19,[15,16]]],[[17,[21,15,16]]]],[[[20,[15,16]]],[[17,[21,15,16]]]],[[[19,[15,16]]],[[22,[21,15,16]]]],[[],[[19,[16]]]],[[[24,[23,16]]],[[19,[16]]]],[[[25,[15,16]]],[[19,[15,16]]]],[[[20,[15,16]]],[[19,[15,16]]]],[[[24,[23,16]]],[[19,[16]]]],[[[25,[15,16]]],[[19,[15,16]]]],[[[27,[26,15,16]]],6],[[[17,[26,15,16]]],[[5,[[27,[26,15,16]]]]]],[[[19,[15,16]]],[[19,[15,16]]]],[[[20,[15,16]]],[[19,[15,16]]]],[[[20,[15,16]]],[[20,[15,16]]]],[[[19,[15,16]]],[[17,[26,15,16]]]],[[[20,[15,16]]],[[17,[26,15,16]]]],[[[19,[15,16]]],[[22,[26,15,16]]]],[[],[[19,[16]]]],[[[24,[23,16]]],[[19,[16]]]],[[[25,[15,16]]],[[19,[15,16]]]],[[[20,[15,16]]],[[19,[15,16]]]],[[[19,[15,16]]],[[17,[26,15,16]]]],[[[20,[15,16]]],[[17,[26,15,16]]]],[[[19,[15,16]]],[[28,[[17,[26,15,16]]]]]],[[[24,[23,16]]],[[19,[16]]]],[[[20,[15,16]]],[[19,[15,16]]]],[[[19,[15,16]]],[[17,[21,15,16]]]],[[[20,[15,16]]],[[17,[21,15,16]]]],[[[19,[15,16]]],[[28,[[17,[21,15,16]]]]]],[[],29],[[[24,[23,16]]],29],[[[25,[15,16]]],[[29,[15]]]],[[[20,[15,16]]],[[29,[15]]]],[[],29],[[[24,[23,16]]],29],[[[25,[15,16]]],[[29,[15]]]],[[[20,[15,16]]],[[29,[15]]]],[[[24,[23,16]]],[[19,[16]]]],[[[25,[15,16]]],[[19,[15,16]]]],[[[27,[14,15,16]]],6],[[[17,[14,15,16]]],[[5,[[27,[21,15,16]]]]]],[[[19,[15,16]]],[[19,[15,16]]]],[[[20,[15,16]]],[[20,[15,16]]]],[[[20,[15,16]]],[[19,[15,16]]]],[[[24,[23,16]]],[[19,[16]]]],[[[20,[15,16]]],[[19,[15,16]]]],[[[31,[30]]],[[32,[30]]]],[[[31,[30]]],[[32,[30]]]],[[[31,[30]]],[[32,[30]]]],[[[17,[14,15,16]]],31],0,[[[19,[15,16]]],[[33,[21,15,16]]]],[[[19,[15,16]]],[[33,[26,15,16]]]],[[[24,[23,16]]]],[[[25,[15,16]]]],[[[20,[15,16]]]],[[[24,[23,16]]]],[[[25,[15,16]]]],[[[19,[16]],[24,[23,16]]]],[[[19,[15,16]],[20,[15,16]]]],[[[19,[15,16]],[20,[15,16]]]],[[[19,[15,16]],[25,[15,16]]]],[[[19,[15,16]],[19,[15,16]]]],[[[19,[15,16]],[25,[15,16]]]],[[[19,[16]],[24,[23,16]]]],[[[20,[15,16]]]],0,0,[[[24,[23,16]]]],[[[25,[15,16]]]],[[[20,[15,16]]]],[[[24,[23,16]]]],[[[25,[15,16]]]],[[[19,[16]],[24,[23,16]]]],[[[19,[15,16]],[19,[15,16]]]],[[[19,[15,16]],[20,[15,16]]]],[[[19,[16]],[24,[23,16]]]],[[[19,[15,16]],[25,[15,16]]]],[[[19,[15,16]],[25,[15,16]]]],[[[19,[15,16]],[20,[15,16]]]],[[[20,[15,16]]]],0,0,0,0,0,[[[24,[23,16]]]],[[[25,[15,16]]]],[[[20,[15,16]]]],[[[24,[23,16]]]],[[[25,[15,16]]]],[[[19,[16]],[24,[23,16]]]],[[[19,[15,16]],[20,[15,16]]]],[[[19,[16]],[24,[23,16]]]],[[[19,[15,16]],[25,[15,16]]]],[[[19,[15,16]],[25,[15,16]]]],[[[19,[15,16]],[19,[15,16]]]],[[[19,[15,16]],[20,[15,16]]]],[[[20,[15,16]]]],[[[24,[23,16]]],[[19,[16]]]],[[]],[[]],[[[25,[15,16]]],[[19,[15,16]]]],[[]],[[]],[[]],[[]],[[]],[[[20,[15,16]]],[[19,[15,16]]]],[[]],[[]],[[]],[[[24,[23,16]]],[[19,[16]]]],[[[25,[15,16]]],[[19,[15,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[15,16]]],[[19,[15,16]]]],[[]],[[]],[[[20,[15,16]]],7],0,[[[17,[14,15,16]]],[[17,[14,15,16]]]],[[[19,[15,16]],7],[[34,[15,16]]]],[[[19,[15,16]],7],[[35,[15,16]]]],[[[19,[15,16]],7],[[36,[15,16]]]],[[[19,[15,16]],7],[[37,[15,16]]]],[[[20,[15,16]]]],[[[24,[23,16]]],[[24,[23,16]]]],[[[25,[15,16]]],[[25,[15,16]]]],[[[27,[21,15,16]]],[[27,[21,15,16]]]],[[[22,[14,15,16]]],[[22,[14,15,16]]]],[[[17,[14,15,16]]],[[17,[14,15,16]]]],[[[20,[15,16]]],[[20,[15,16]]]],[38,38],[39,39],[[[19,[15,16]],[19,[15,16]]]],[[[19,[15,16]],[19,[15,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[23,16]],[24,[23,16]]],40],[[[25,[15,16]],[25,[15,16]]],40],[[[27,[14,15,16]],[27,[14,15,16]]],40],[[[17,[14,15,16]],[17,[14,15,16]]],40],[[[19,[15,16]],[19,[15,16]]],40],[[[20,[15,16]],[20,[15,16]]],40],[[38,38],40],[[39,39],40],[[[27,[26,15,16]],6]],[[[22,[14,15,16]],[17,[14,15,16]]],6],[[[19,[15,16]],[19,[15,16]]],6],[[[17,[26,15,16]],[17,[21,15,16]],7]],[[[19,[15,16]],[19,[15,16]]]],[[[17,[26,15,16]],[17,[21,15,16]],7]],[[[19,[15,16]],[19,[15,16]]]],[[[17,[14,15,16]],[17,[26,15,16]],7]],[[[17,[14,15,16]],[17,[26,15,16]],7]],[[[19,[15,16]],[41,[7]],7]],[[[19,[15,16]],[41,[7]],7]],[[[22,[14,15,16]]],7],[[[19,[15,16]]],7],[[[19,[15,16]]],7],0,0,[[],[[24,[23,16]]]],[[],[[25,[15,16]]]],[[],[[22,[14,15,16]]]],[[],[[19,[15,16]]]],[[],[[19,[15,16]]]],[[],[[20,[15,16]]]],[[],38],[[],39],[[[24,[23,16]]]],[[[25,[15,16]]]],[[[27,[14,15,16]]]],[[[20,[15,16]]]],[[[24,[23,16]]]],[[[25,[15,16]]]],[[[27,[26,15,16]]]],[[[20,[15,16]]]],[[[19,[15,16]]],[[42,[21,15,16]]]],[[[19,[15,16]]],[[42,[26,15,16]]]],[[[20,[15,16]],[43,[7]]],[[44,[15,16]]]],[[[25,[15,16]]]],[[[27,[14,15,16]]]],[[[20,[15,16]]]],[[[17,[26,15,16]]]],[[],[[19,[15,16]]]],[[],[[19,[15,16]]]],0,[[[22,[14,15,16]]],[[45,[[17,[14,15,16]]]]]],[[[19,[15,16]],[19,[15,16]]],6],[[[24,[23,16]],46],6],[[[25,[15,16]],[0,[[47,[[19,[15,16]]]],46]]],6],[[[27,[14,15,16]],6],6],[[[27,[14,15,16]],[27,[14,15,16]]],6],[[[27,[14,15,16]],6],6],[[[22,[14,15,16]],[22,[14,15,16]]],6],[[[17,[14,15,16]],[17,[14,15,16]]],6],[[[19,[15,16]],[25,[15,16]]],6],[[[19,[15,16]],[20,[15,16]]],6],[[[19,[15,16]],[19,[15,16]]],6],[[[19,[15,16]],[19,[15,16]]],6],[[[19,[15,16]],[20,[15,16]]],6],[[[19,[15,16]],[19,[15,16]]],6],[[[19,[15,16]],[25,[15,16]]],6],[[[19,[15,16]],[20,[15,16]]],6],[[[19,[15,16]],[24,[23,16]]],6],[[[19,[15,16]],[19,[15,16]]],6],[[[19,[15,16]],[19,[15,16]]],6],[[[19,[15,16]],[25,[15,16]]],6],[[[20,[15,16]],[0,[[47,[[19,[15,16]]]],46]]],6],[[38,38],6],[[39,39],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[20,[15,16]],48]],[[[20,[15,16]],48]],[[[20,[15,16]],48]],[[[20,[15,16]],48]],[[[20,[15,16]],48]],[[[20,[15,16]],[19,[15,16]]]],[[[20,[15,16]],[29,[15]]]],[[[20,[15,16]],[19,[15,16]]]],[[[20,[15,16]],[41,[7]]]],[[[19,[15,16]],6]],[[[25,[15,16]],6]],[[[19,[15,16]],49]],[[[19,[15,16]]],[[5,[[27,[21,15,16]]]]]],[[[19,[15,16]]],[[5,[[27,[26,15,16]]]]]],[[[19,[15,16]]],[[5,[7]]]],[[[19,[15,16]]],[[5,[7]]]],[[[19,[15,16]]],[[12,[50]]]],[[[20,[15,16]]],[[12,[50]]]],[[[24,[23,16]],51],[[12,[52]]]],[[[24,[23,16]],51],[[12,[52]]]],[[[24,[23,16]],51],[[12,[52]]]],[[[24,[23,16]],51],[[12,[52]]]],[[[24,[23,16]],51],[[12,[52]]]],[[[24,[23,16]],51],[[12,[52]]]],[[[25,[15,16]],51],[[12,[52]]]],[[[25,[15,16]],51],[[12,[52]]]],[[[25,[15,16]],51],[[12,[52]]]],[[[25,[15,16]],51],[[12,[52]]]],[[[25,[15,16]],51],[[12,[52]]]],[[[25,[15,16]],51],[[12,[52]]]],[[[25,[15,16]],51],[[12,[52]]]],[[[27,[14,15,16]],51],[[12,[52]]]],[[[27,[14,15,16]],51],[[12,[52]]]],[[[27,[14,15,16]],51],[[12,[52]]]],[[[22,[14,15,16]],51],[[12,[52]]]],[[[17,[14,15,16]],51],[[12,[52]]]],[[[17,[14,15,16]],51],[[12,[52]]]],[[[19,[15,16]],51],[[12,[52]]]],[[[19,[15,16]],51],[[12,[52]]]],[[[19,[15,16]],51],[[12,[52]]]],[[[19,[15,16]],51],[[12,[52]]]],[[[19,[15,16]],51],[[12,[52]]]],[[[19,[15,16]],51],[[12,[52]]]],[[[19,[15,16]],51],[[12,[52]]]],[[[20,[15,16]],51],[[12,[52]]]],[[[20,[15,16]],51],[[12,[52]]]],[[[20,[15,16]],51],[[12,[52]]]],[[[20,[15,16]],51],[[12,[52]]]],[[[20,[15,16]],51],[[12,[52]]]],[[[20,[15,16]],51],[[12,[52]]]],[[[20,[15,16]],51],[[12,[52]]]],[[38,51],[[12,[52]]]],[[39,51],[[12,[52]]]],[[[25,[15,16]]]],[[[20,[15,16]]]],[[]],[53],[23,[[24,[23,16]]]],[[]],[[[24,[23,16]]],[[25,[16]]]],[[[54,[[19,[15,16]]]]],[[25,[15,16]]]],[[[56,[15,55]]],[[25,[15,16]]]],[[[19,[15,16]]],[[25,[15,16]]]],[[[20,[15,16]]],[[25,[15,16]]]],[[]],[[]],[[[28,[[17,[14,15,16]]]]],[[22,[14,15,16]]]],[[]],[15,[[17,[26,15,16]]]],[15,[[17,[21,15,16]]]],[[]],[[[24,[23,16]]],[[20,[16]]]],[[[25,[15,16]]],[[20,[15,16]]]],[[[19,[15,16]]],[[20,[15,16]]]],[[]],[[[19,[15,16]]],[[20,[15,16]]]],[[[54,[[19,[15,16]]]]],[[20,[15,16]]]],[[]],[[]],[[[17,[14,15,16]]],[[27,[14,15,16]]]],[[[19,[15,16]]],[[25,[15,16]]]],[[[19,[15,16]]],[[20,[15,16]]]],[[[56,[[29,[15]],55]]],[[25,[15,16]]]],[15,[[19,[15,16]]]],[15,[[20,[15,16]]]],[15,[[19,[15,16]]]],[48,[[25,[15,16]]]],[48,[[20,[15,16]]]],[48,[[20,[15,16]]]],[48,[[20,[15,16]]]],[48,[[20,[15,16]]]],[48,[[20,[15,16]]]],[15,[[17,[26,15,16]]]],[[[29,[15]]],[[17,[26,15,16]]]],[[[28,[[17,[14,15,16]]]]],[[22,[14,15,16]]]],[19,[[25,[15,16]]]],[[[17,[26,15,16]],7,7],[[20,[15,16]]]],[15,[[17,[21,15,16]]]],[[[29,[15]]],[[17,[21,15,16]]]],[[[29,[15]]],[[19,[15,16]]]],[[[29,[15]]],[[20,[15,16]]]],[[[29,[15]]],[[17,[26,15,16]]]],[[[29,[15]]],[[19,[15,16]]]],[[[29,[15]]],[[19,[15,16]]]],[[[29,[15]]],[[19,[15,16]]]],[[[57,[15,55]]],[[20,[15,16]]]],[[[19,[15,16]],[58,[15,16]]],5],[31,6],[[[19,[15,16]],[58,[15,16]]],5],[[[19,[15,16]],[58,[15,16]]]],[[[19,[15,16]],[58,[15,16]]]],[[[24,[23,16]],59]],[[[25,[15,16]],59]],[[[27,[14,15,16]],59]],[[[22,[14,15,16]],59]],[[[17,[14,15,16]],59]],[[[19,[15,16]],59]],[[[20,[15,16]],59]],[[38,59]],[[39,59]],[[[24,[23,16]]]],[[[25,[15,16]]]],[[[19,[15,16]],7]],[[[19,[15,16]],[60,[7]]]],[[[19,[15,16]],61]],[[[19,[15,16]],[28,[7]]]],[[[19,[15,16]],[62,[7]]]],[[[19,[15,16]],[63,[7]]]],[[[19,[15,16]],[64,[7]]]],[[[20,[15,16]]]],[[[24,[23,16]]]],[[[25,[15,16]]]],[[[19,[15,16]],[60,[7]]]],[[[19,[15,16]],[64,[7]]]],[[[19,[15,16]],[28,[7]]]],[[[19,[15,16]],61]],[[[19,[15,16]],[62,[7]]]],[[[19,[15,16]],[63,[7]]]],[[[20,[15,16]]]],[[[20,[15,16]],7,6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[24,[16]]]],[[[27,[14,15,16]]],[[17,[14,15,16]]]],[[[25,[15,16]]],[[20,[15,16]]]],[[[20,[15,16]]],[[25,[15,16]]]],[[[25,[15,16]]],[[56,[[29,[15]],55]]]],[[[20,[15,16]]],[[25,[15,16]]]],[[[24,[23,16]]],23],[[[24,[23,16]]]],[[[24,[23,16]]]],[[[24,[23,16]]]],[[[25,[15,16]]]],[[]],[[[19,[15,16]]]],[[[19,[15,16]]]],[[[20,[15,16]]]],[[[20,[15,16]]]],[[[20,[15,16]]]],[[[22,[14,15,16]]],[[28,[[17,[14,15,16]]]]]],[[[25,[15,16]]],19],[[[20,[15,16]]]],[[[20,[15,16]]],[[57,[15,55]]]],[[[24,[23,16]]],6],[[[22,[14,15,16]]],6],[[[19,[15,16]]],6],[[[20,[15,16]]],6],[[[17,[14,15,16]]],6],[[[19,[15,16]]],[[65,[15,16]]]],[[[19,[15,16]]],[[66,[15,16]]]],[[[19,[15,16]]],[[67,[15,16]]]],[[[19,[15,16]]],[[68,[15,16]]]],[[[22,[14,15,16]]],5],[[[19,[15,16]]],[[5,[[27,[21,15,16]]]]]],[[[19,[15,16]]],[[5,[[27,[26,15,16]]]]]],[[[19,[15,16]]],[[5,[7]]]],[[[19,[15,16]]],[[5,[7]]]],[[[19,[15,16]]],7],[[[19,[15,16]]],7],[[[25,[15,16]]],[[19,[15,16]]]],[[[20,[15,16]]],[[19,[15,16]]]],[[[24,[23,16]]],7],[[[22,[14,15,16]]],7],[[[19,[15,16]]],7],[[[20,[15,16]]],7],[[],69],[[],69],[[[24,[23,16]]],69],[[[25,[15,16]]],69],[[[19,[15,39]]],69],[[[19,[15,38]]],69],[[[20,[15,16]]],69],[[],69],[[[24,[23,16]]],69],[[[25,[15,16]]],69],[[[19,[15,38]]],69],[[[19,[15,39]]],69],[[[20,[15,16]]],69],[[]],[[[70,[[5,[[31,[30]]]]]],[70,[[5,[[71,[30]]]]]]],[[72,[30]]]],[[[70,[[5,[[31,[30]]]]]],[70,[[5,[[71,[30]]]]]]],[[72,[30]]]],[[[70,[[5,[[31,[30]]]]]],[70,[[5,[[71,[30]]]]]]],[[72,[30]]]],[[]],[23,[[24,[23,16]]]],[[[18,[14,15]],31],[[12,[[17,[14,15,16]],[73,[15]]]]]],[[],[[20,[15,16]]]],[[[18,[14,15]],31],[[17,[14,15,16]]]],[[[22,[14,15,16]]],5],[[[22,[14,15,16]]],5],[[[24,[23,16]]]],[[[25,[15,16]]]],[[[27,[14,15,16]]]],[[[19,[15,16]]]],[[[20,[15,16]]]],[[[19,[15,16]]],6],[[[19,[15,16]]],6],[[[22,[14,15,16]],7],5],[[[22,[14,15,16]],7],5],[[[17,[14,15,16]],74],[[17,[14,15,16]]]],[[[17,[14,15,16]],[17,[14,15,16]]],74],[[[24,[23,16]],46],[[5,[40]]]],[[[25,[15,16]],[0,[[75,[[19,[15,16]]]],46]]],[[5,[40]]]],[[[27,[14,15,16]],6],[[5,[40]]]],[[[27,[14,15,16]],6],[[5,[40]]]],[[[27,[14,15,16]],[27,[14,15,16]]],[[5,[40]]]],[[[17,[14,15,16]],[17,[14,15,16]]],[[5,[40]]]],[[[19,[15,16]],[20,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[25,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[19,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[25,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[19,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[19,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[19,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[19,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[24,[23,16]]],[[5,[40]]]],[[[19,[15,16]],[20,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[19,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[25,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[19,[15,16]]],[[5,[40]]]],[[[19,[15,16]],[20,[15,16]]],[[5,[40]]]],[[[20,[15,16]],[0,[[75,[[19,[15,16]]]],46]]],[[5,[40]]]],[[38,38],[[5,[40]]]],[[39,39],[[5,[40]]]],[[[17,[21,15,16]]]],[[[17,[26,15,16]]]],[[[20,[15,16]]],[[5,[6]]]],0,[[[20,[15,16]],6]],[[[17,[14,15,16]]]],[[[19,[15,16]],7],[[76,[15,16]]]],[[[19,[15,16]],7],[[77,[15,16]]]],[[[19,[15,16]],7],[[78,[15,16]]]],[[[19,[15,16]],7],[[79,[15,16]]]],[[[17,[14,15,16]]],6],[[[19,[15,16]],[29,[80]]],[[12,[7,50]]]],[[[20,[15,16]],[29,[80]]],[[12,[7,50]]]],[[[17,[14,15,16]]],6],[[[17,[14,15,16]]],6],[[[20,[15,16]],7],6],[[[19,[15,16]],7],[[20,[16]]]],[[6,7],[[20,[15,16]]]],[[[27,[26,15,16]],6],6],[[[17,[26,15,16]],6],6],[[[19,[15,16]],7,6],6],[[[19,[15,16]],7,6],6],[[[20,[15,16]],7]],[[[20,[15,16]],7]],[[[20,[15,16]],7,6]],[[[20,[15,16]],7,49]],[[[20,[15,16]],49]],[[[19,[15,16]]]],[[[19,[15,16]],7]],[[[19,[15,16]],7]],[[[19,[15,16]],49],[[81,[15,16,49]]]],[[[19,[15,16]],49],[[82,[15,16,49]]]],[[[19,[15,16]],7,49],[[83,[15,16,49]]]],[[[19,[15,16]],7,49],[[84,[15,16,49]]]],[[[31,[30]]],[[85,[30]]]],[[[31,[30]]],[[85,[30]]]],[[[31,[30]]],[[85,[30]]]],[[[27,[26,15,16]],6]],[[[19,[15,16]],7,6]],[[[19,[[0,[15,86]],16]],7,6]],[[[19,[[0,[15,86]],16]],7,6]],[[[20,[15,16]]]],[[[20,[15,16]],7]],[[[19,[15,16]],7,6]],[[[20,[15,16]],6]],[[[19,[15,16]],7]],[[[19,[15,16]],7]],[[[20,[15,16]]]],[[[22,[14,15,16]]]],[[[19,[15,16]]],6],[[[20,[15,16]],[43,[7]],48],[[87,[15,16]]]],[[[19,[15,16]],49],[[88,[15,16,49]]]],[[[19,[15,16]],7]],[[[19,[15,16]],7]],[[[19,[15,16]],7]],[[[19,[15,16]],7]],[[[19,[15,16]]],5],[[[19,[15,16]]],5],[[[19,[15,16]],49],[[89,[15,16,49]]]],[[[19,[15,16]],49],[[90,[15,16,49]]]],[[[19,[15,16]]],5],[[[19,[15,16]]],5],[[[19,[15,16]],49],[[91,[15,16,49]]]],[[[20,[15,16]],7],[[20,[15,16]]]],[[[19,[15,16]],7,49],[[92,[15,16,49]]]],[[[19,[15,16]],7,49],[[93,[15,16,49]]]],0,[[[22,[14,15,16]]],[[45,[[17,[14,15,16]]]]]],[[[19,[15,16]],[19,[15,16]]],6],[69],[69],[[[24,[23,16]],69]],[[[25,[15,16]],69]],[[[19,[15,38]],69]],[[[19,[15,39]],69]],[[[20,[15,16]],69]],[69],[[[24,[23,16]],69]],[[[25,[15,16]],69]],[[[19,[15,39]],69]],[[[19,[15,38]],69]],[[[20,[15,16]],69]],[[]],[[[19,[15,16]],[19,[15,16]]],[[5,[[19,[15,16]]]]]],[[[19,[15,16]],[19,[15,16]]],[[5,[[19,[15,16]]]]]],[[[17,[14,15,16]],7],[[17,[14,15,16]]]],[[[27,[26,15,16]],[27,[26,15,16]]]],[[[17,[26,15,16]],[17,[26,15,16]]]],[[[19,[15,16]],7,7]],[[[20,[15,16]],7],6],[[[19,[15,16]],7,7]],[[[19,[15,16]],[19,[15,16]]]],[[[19,[15,16]],[19,[15,16]]]],[[[19,[15,16]]],[[20,[16]]]],[[[17,[14,15,16]]],[[17,[21,15,16]]]],[[[17,[14,15,16]]],[[17,[26,15,16]]]],[[]],[[]],[[]],[[]],[[]],[[[19,[15,16]]]],[[]],[[]],[[]],[[[17,[14,15,16]]]],[[],94],[[],94],[[],94],[[],94],[[],94],[[[19,[15,16]]],[[20,[16]]]],[[[19,[15,16]]],7],[[[19,[15,16]]],7],[[[20,[15,16]],7]],[[],[[12,[[19,[16]],95]]]],[[],[[12,[[19,[16]],95]]]],[[[19,[16]]],[[12,[[24,[23,16]]]]]],[[[19,[16]]],[[12,[[24,[23,16]]]]]],[[[19,[16]]],[[12,[[24,[23,16]]]]]],[[],12],[[[56,[[29,[15]],55]]],[[12,[[25,[15,16]]]]]],[[],12],[[],12],[[],12],[[],[[12,[[17,[21,15,16]]]]]],[[],[[12,[[17,[26,15,16]]]]]],[[],12],[[[29,[15]]],[[12,[[19,[15,16]]]]]],[[],12],[[[29,[15]]],[[12,[[19,[15,16]]]]]],[[[57,[15,55]]],[[12,[[20,[15,16]]]]]],[[],12],[[],12],[[],12],[[[56,[[29,[15]],55]]],[[12,[[25,[15,16]],[56,[[29,[15]],55]]]]]],[[[29,[15]]],[[12,[[19,[15,16]],[95,[15]]]]]],[[[29,[15]]],[[12,[[20,[15,16]],[95,[15]]]]]],[[[29,[15]]],[[12,[[19,[15,16]],[95,[15]]]]]],[[[57,[15,55]]],[[12,[[20,[15,16]],[57,[15,55]]]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],[[12,[[19,[16]],95]]]],[[],[[12,[[19,[16]],95]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],[[19,[16]]]],[[],[[19,[16]]]],[[[19,[15,16]],7],[[96,[15,16]]]],[7,[[20,[15,16]]]],[[[17,[14,15,16]],7],[[17,[14,15,16]]]],[[[17,[14,15,16]],74],[[17,[14,15,16]]]],[[[17,[14,15,16]],7],[[17,[14,15,16]]]],[[[17,[26,15,16]],6]],[[[19,[15,16]],[29,[80]]],[[12,[7,50]]]],[[[20,[15,16]],[29,[80]]],[[12,[7,50]]]],[[[17,[26,15,16]],6]],[[[17,[26,15,16]],6]],0,0,0,0,0,0,0,0,0,0,[7],[97,8],[[],98],[[],[[29,[80]]]],[97,[[5,[99]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[100,[[70,[7]],[70,[7]]]]],97],[101,97],[97,[[5,[98]]]],[[[100,[4,4]]],[[100,[4,4]]]],[101,101],[102,102],[[]],[[]],[[]],[[97,7,[57,[94]]]],[97,103],0,[[[100,[[70,[7]],[70,[7]]]]],[[12,[97]]]],[101,[[12,[97]]]],[[[100,[104,104]],51],105],[[101,51],105],[[102,51],105],[[97,51],105],[[97,51],105],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[[100,[[70,[7]],[70,[7]]]]],97],[101,97],[102,97],[[],6],[97,[[5,[106]]]],[97,[[5,[107]]]],[[],[[109,[108]]]],[[],[[109,[110]]]],[[],[[109,[111]]]],[[],[[109,[112]]]],[[],[[109,[113]]]],[[],[[109,[114]]]],[[[29,[80]]],109],[[],[[109,[115]]]],[[],[[109,[116]]]],[[],[[109,[117]]]],[[],[[109,[80]]]],[118],[[],[[109,[108]]]],[[],[[109,[110]]]],[[],[[109,[111]]]],[[],[[109,[112]]]],[[],[[109,[113]]]],[[],[[109,[114]]]],[[[29,[80]]],109],[[],[[109,[115]]]],[[],[[109,[116]]]],[[],[[109,[117]]]],[[],[[109,[80]]]],[[],7],[97,[[5,[98]]]],0,[[]],[[]],[[]],[[],94],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[108,109],[110,109],[[[29,[80]]],109],[111,109],[112,109],[113,109],[114,109],[115,109],[116,109],[117,109],[80,109],0,0,0,0,0,0,0,0,[119,103],[[]],[[]],[[]],[[]],[120,120],[119,119],[[]],[[]],[[120,120],40],[[119,119],40],[[],120],[[],119],[120,[[29,[80]]]],[121,[[12,[120]]]],[121,[[12,[119]]]],[[120,[29,[80]]],6],[[120,[57,[80]]],6],[[120,120],6],[[119,103],6],[[119,94],6],[[119,119],6],[[],6],[[],6],[[120,51],105],[[119,51],105],[[[57,[80]]],120],[122,120],[[]],[[[29,[80]]],120],[94,119],[[]],[103,119],[[120,59]],[[119,59]],[[]],[[]],[119,6],[119,7],[[120,120],[[5,[40]]]],[[119,119],[[5,[40]]]],[[120,123],12],[[119,123],12],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],0,0,0,0,0,0,0,0,0,[124,117],[124,117],[[]],[[]],[124,124],[[]],[121,[[12,[124]]]],[[124,117],124],[[124,124],117],[[124,124],6],[[],6],[[124,51],105],[[124,51],105],[[]],[103,[[12,[124,94]]]],[117,124],[[]],[117,124],[117,124],[[124,117],124],[[124,124],[[5,[40]]]],[[124,123],12],[[]],[[],94],[[],12],[[],12],[[],13]],"c":[96,97,99,100,101,102,119,120,215,238,270,314,461,481,570,649,668,727],"p":[[3,"Plugins"],[8,"Send"],[8,"Sync"],[8,"Clone"],[4,"Option"],[15,"bool"],[15,"usize"],[8,"Any"],[3,"Map"],[3,"MutexGuard"],[8,"FnOnce"],[4,"Result"],[3,"TypeId"],[8,"Mutability"],[8,"BitStore"],[8,"BitOrder"],[3,"BitPtr"],[3,"Address"],[3,"BitSlice"],[3,"BitVec"],[3,"Const"],[3,"BitPtrRange"],[8,"_"],[3,"BitArray"],[3,"BitBox"],[3,"Mut"],[3,"BitRef"],[3,"Range"],[15,"slice"],[8,"BitRegister"],[3,"BitIdx"],[3,"BitPos"],[4,"BitDomain"],[3,"Chunks"],[3,"ChunksExact"],[3,"ChunksExactMut"],[3,"ChunksMut"],[3,"Lsb0"],[3,"Msb0"],[4,"Ordering"],[8,"RangeExt"],[4,"Domain"],[8,"RangeBounds"],[3,"Drain"],[4,"Bound"],[8,"Sized"],[8,"PartialEq"],[8,"IntoIterator"],[8,"FnMut"],[3,"Error"],[3,"Formatter"],[3,"Error"],[15,"never"],[4,"Cow"],[3,"Global"],[3,"Box"],[3,"Vec"],[8,"BitSliceIndex"],[8,"Hasher"],[3,"RangeInclusive"],[3,"RangeFull"],[3,"RangeTo"],[3,"RangeToInclusive"],[3,"RangeFrom"],[3,"Iter"],[3,"IterMut"],[3,"IterOnes"],[3,"IterZeros"],[8,"Integral"],[8,"Into"],[3,"BitEnd"],[3,"BitMask"],[3,"MisalignError"],[15,"isize"],[8,"PartialOrd"],[3,"RChunks"],[3,"RChunksExact"],[3,"RChunksExactMut"],[3,"RChunksMut"],[15,"u8"],[3,"RSplit"],[3,"RSplitMut"],[3,"RSplitN"],[3,"RSplitNMut"],[3,"BitSel"],[8,"Radium"],[3,"Splice"],[3,"Split"],[3,"SplitInclusive"],[3,"SplitInclusiveMut"],[3,"SplitMut"],[3,"SplitN"],[3,"SplitNMut"],[3,"String"],[4,"BitSpanError"],[3,"Windows"],[4,"Error"],[8,"Error"],[3,"Backtrace"],[3,"OverflowSnafu"],[3,"UnderflowSnafu"],[3,"EofSnafu"],[15,"str"],[8,"Debug"],[6,"Result"],[3,"Location"],[8,"StackError"],[15,"f32"],[6,"Result"],[15,"f64"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"u16"],[15,"u32"],[15,"u64"],[3,"Demand"],[3,"StringBytes"],[3,"Bytes"],[8,"Deserializer"],[3,"Bytes"],[8,"Serializer"],[3,"ReadableSize"],[8,"_"],[8,"AsBits"],[8,"AsMutBits"],[8,"_"],[8,"Buffer"],[8,"BufferMut"],[13,"Overflow"],[13,"Eof"],[13,"Underflow"]]},\
"common_catalog":{"doc":"","t":"FAAFFRRRRRRRRRRRRRRRRRRFENDGLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMM","n":["build_db_string","consts","error","format_full_table_name","parse_catalog_and_schema_from_db_string","DEFAULT_CATALOG_NAME","DEFAULT_SCHEMA_NAME","FILE_ENGINE","INFORMATION_SCHEMA_COLUMNS_TABLE_ID","INFORMATION_SCHEMA_NAME","INFORMATION_SCHEMA_TABLES_TABLE_ID","MAX_SYS_TABLE_ID","MIN_USER_TABLE_ID","MITO2_ENGINE","MITO_ENGINE","NUMBERS_TABLE_ID","SCRIPTS_TABLE_ID","SEMANTIC_TYPE_FIELD","SEMANTIC_TYPE_PRIMARY_KEY","SEMANTIC_TYPE_TIME_INDEX","SYSTEM_CATALOG_NAME","SYSTEM_CATALOG_TABLE_ID","SYSTEM_CATALOG_TABLE_NAME","default_engine","Error","InvalidFullTableName","InvalidFullTableNameSnafu","Result","as_any","as_error_source","backtrace","borrow","borrow","borrow_mut","borrow_mut","build","cause","clone","clone_into","debug_fmt","description","fail","fmt","fmt","fmt","from","from","into","into","into_error","next","provide","source","status_code","table_name","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","location","table_name"],"q":[[0,"common_catalog"],[5,"common_catalog::consts"],[24,"common_catalog::error"],[63,"common_catalog::error::Error"]],"d":["Build db name from catalog and schema string","","","Formats table fully-qualified name","Attempt to parse catalog and schema from given database …","","","","id for information_schema.columns","","id for information_schema.tables","the max system table id","Reserves [0,MIN_USER_TABLE_ID) for internal usage. User …","","","numbers table id","scripts table id","","","","","system_catalog table id","","","","","SNAFU context selector for the <code>Error::InvalidFullTableName</code> …","","","","","","","","","Consume the selector and return the associated error","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,3,3,9,3,9,3,9,3,9,9,3,3,9,9,3,3,9,3,9,3,9,3,3,3,3,9,9,3,9,3,9,3,9,3,21,21],"f":[[[1,1],2],0,0,[[1,1,1],2],[1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,0,0,[3,4],[[],5],[3,[[7,[6]]]],[[]],[[]],[[]],[[]],[[[9,[[8,[2]]]]],3],[3,[[7,[5]]]],[[[9,[10]]],[[9,[10]]]],[[]],[[3,11,[12,[2]]]],[3,1],[[[9,[[8,[2]]]]],[[13,[3]]]],[[[9,[14]],15],16],[[3,15],16],[[3,15],16],[[]],[[]],[[]],[[]],[[[9,[[8,[2]]]]],3],[3,[[7,[17]]]],[18],[3,[[7,[5]]]],[3,19],0,[[]],[[],2],[[],13],[[],13],[[],13],[[],13],[[],20],[[],20],0,0],"c":[],"p":[[15,"str"],[3,"String"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[4,"Option"],[8,"Into"],[3,"InvalidFullTableNameSnafu"],[8,"Clone"],[15,"usize"],[3,"Vec"],[4,"Result"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"TypeId"],[13,"InvalidFullTableName"]]},\
"common_config":{"doc":"","t":"DDLLLLLLLLLLLLMLLLLMMLLLLLLFMMMMLLMLLLLLLLL","n":["KvBackendConfig","WalConfig","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deserialize","deserialize","dir","eq","eq","equivalent","equivalent","file_size","file_size","fmt","fmt","from","from","into","into","metadata_store_dir","purge_interval","purge_threshold","purge_threshold","read_batch_size","serialize","serialize","sync_write","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"common_config"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,0,1,1,2,1,1,2,1,1,2,1,2,1,2,1,2],"f":[0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[],1],[[],2],[3,[[4,[1]]]],[3,[[4,[2]]]],0,[[1,1],5],[[2,2],5],[[],5],[[],5],0,0,[[1,6],7],[[2,6],7],[[]],[[]],[[]],[[]],[8,9],0,0,0,0,[[1,10],4],[[2,10],4],0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],11],[[],11]],"c":[],"p":[[3,"WalConfig"],[3,"KvBackendConfig"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[3,"String"],[8,"Serializer"],[3,"TypeId"]]},\
"common_datasource":{"doc":"","t":"AAAAAAAAIIDLLMMKLLLLLLLLMLLLLLMMMLLLLLLKLMMNEDNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMOLLLLLLLLMLLLLLLLLLLLLLLLLNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMINRRRRRRRIENNNLLLLLLLAKLLLLLLLLLKLLKFLLAFAAFLLLLLLLDDEDDNNLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLMMMLLLLLLLLLLLLMLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMLMMFLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLFFMLMMLMMLMLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLDRRMLLFLLLLLLLLAFLLFALLLLFRRRRRRFFDLLMLLLLLLLLLLLLLLLLLLLLLLLF","n":["buffered_writer","compression","error","file_format","lister","object_store","share_buffer","util","ArrowWriterCloser","DfRecordBatchEncoder","LazyBufferedWriter","borrow","borrow_mut","buffer","bytes_written","close","close_inner_writer","close_with_arrow_writer","compat","compat_mut","compat_ref","deref","deref_mut","drop","encoder","from","init","into","maybe_init_writer","new","path","rows_written","threshold","try_flush","try_flush_all","try_from","try_into","type_id","vzip","write","write","writer","writer_factory","Bzip2","CompressionType","CompressionTypeIter","Gzip","Uncompressed","Xz","Zstd","back_idx","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","convert_async_read","convert_stream","decode","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","encode","eq","equivalent","equivalent","equivalent","equivalent","equivalent","file_extension","fmt","fmt","fmt","from","from","from_str","get","get_hash","hash","idx","impl_compression_type","init","init","into","into","into_iter","is_compressed","iter","len","marker","next","next_back","nth","serialize","size_hint","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AsyncWrite","AsyncWriteSnafu","BufferedWriterClosed","BufferedWriterClosedSnafu","BuildBackend","BuildBackendSnafu","EmptyHostPath","EmptyHostPathSnafu","EncodeRecordBatch","EncodeRecordBatchSnafu","Error","InferSchema","InferSchemaSnafu","InvalidConnection","InvalidConnectionSnafu","InvalidUrl","InvalidUrlSnafu","JoinHandle","JoinHandleSnafu","ListObjects","ListObjectsSnafu","MergeSchema","MergeSchemaSnafu","OrcReader","OrcReaderSnafu","ParquetToSchema","ParquetToSchemaSnafu","ParseFormat","ParseFormatSnafu","ReadObject","ReadObjectSnafu","ReadParquetSnafu","ReadParquetSnafuSnafu","ReadRecordBatch","ReadRecordBatchSnafu","Result","UnsupportedBackendProtocol","UnsupportedBackendProtocolSnafu","UnsupportedCompressionType","UnsupportedCompressionTypeSnafu","UnsupportedFormat","UnsupportedFormatSnafu","WriteObject","WriteObjectSnafu","WriteRecordBatch","WriteRecordBatchSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compression_type","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","key","location_opt","msg","next","path","path","path","protocol","provide","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","url","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","compression_type","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","format","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","path","path","path","protocol","url","url","url","value","ArrowDecoder","Csv","DEFAULT_SCHEMA_INFER_MAX_RECORD","FILE_PATTERN","FORMAT_COMPRESSION_TYPE","FORMAT_DELIMITER","FORMAT_HAS_HEADER","FORMAT_SCHEMA_INFER_MAX_RECORD","FORMAT_TYPE","FileFormat","Format","Json","Orc","Parquet","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","csv","decode","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","flush","fmt","from","infer_schema","infer_schemas","init","into","json","open_with_decoder","orc","parquet","stream_to_file","suffix","to_owned","try_from","try_from","try_into","type_id","vzip","CsvConfig","CsvConfigBuilder","CsvConfigBuilderError","CsvFormat","CsvOpener","UninitializedField","ValidationError","as_error_source","batch_size","batch_size","batch_size","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compression_type","compression_type","config","create_empty","default","default","delimiter","delimiter","delimiter","delimiter","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","file_projection","file_projection","file_projection","file_schema","file_schema","file_schema","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","has_header","has_header","has_header","has_header","infer_schema","init","init","init","init","init","into","into","into","into","into","new","object_store","open","provide","schema_infer_max_record","stream_to_csv","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","JsonFormat","JsonOpener","batch_size","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","compression_type","compression_type","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","infer_schema","init","init","into","into","new","object_store","open","projected_schema","schema_infer_max_record","stream_to_json","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OrcArrowStreamReaderAdapter","OrcFormat","OrcOpener","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","infer_orc_schema","infer_schema","init","init","init","into","into","into","new","new","new_orc_cursor","new_orc_stream_reader","object_store","open","output_schema","output_schema","poll_next","projection","projection","schema","stream","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","DefaultParquetFileReaderFactory","LazyParquetFileReader","ParquetFormat","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create_reader","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","get_bytes","get_metadata","infer_schema","init","init","init","into","into","into","maybe_initialize","new","new","object_store","object_store","path","reader","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Dir","Filename","Lister","Source","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","init","init","into","into","list","new","object_store","regex","root","source","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DISK_SYMBOL_PATTERN","FS_SCHEMA","S3_SCHEMA","__private_field","borrow","borrow_mut","build_backend","compat","compat_mut","compat_ref","deref","deref","deref_mut","drop","from","fs","handle_windows_path","init","into","parse_url","s3","try_from","try_into","type_id","vzip","build_fs_backend","ACCESS_KEY_ID","ENABLE_VIRTUAL_HOST_STYLE","ENDPOINT","REGION","SECRET_ACCESS_KEY","SESSION_TOKEN","build_s3_backend","is_supported_in_s3","SharedBuffer","borrow","borrow_mut","buffer","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","flush","from","init","into","to_owned","try_from","try_into","type_id","vzip","with_capacity","write","write","write_fixedint","write_varint","find_dir_and_filename"],"q":[[0,"common_datasource"],[8,"common_datasource::buffered_writer"],[43,"common_datasource::compression"],[119,"common_datasource::error"],[660,"common_datasource::error::Error"],[709,"common_datasource::file_format"],[760,"common_datasource::file_format::csv"],[902,"common_datasource::file_format::json"],[960,"common_datasource::file_format::orc"],[1039,"common_datasource::file_format::parquet"],[1113,"common_datasource::lister"],[1163,"common_datasource::object_store"],[1188,"common_datasource::object_store::fs"],[1189,"common_datasource::object_store::s3"],[1197,"common_datasource::share_buffer"],[1224,"common_datasource::util"]],"d":["","","","","","","","","","","","","","","","","Closes the writer without flushing the buffer data.","Closes <code>LazyBufferedWriter</code> and optionally flushes all data …","","","","","","","None stands for <code>LazyBufferedWriter</code> closed.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Only initiates underlying file writer when rows have been …","","","","","","","","","","","","","","","Bzip2-ed file","","An iterator over the variants of CompressionType","Gzip-ed file","Uncompressed file","Xz-ed file (liblzma)","Zstd-ed file,","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::AsyncWrite</code> variant","","SNAFU context selector for the <code>Error::BufferedWriterClosed</code> …","","SNAFU context selector for the <code>Error::BuildBackend</code> variant","","SNAFU context selector for the <code>Error::EmptyHostPath</code> variant","","SNAFU context selector for the <code>Error::EncodeRecordBatch</code> …","","","SNAFU context selector for the <code>Error::InferSchema</code> variant","","SNAFU context selector for the <code>Error::InvalidConnection</code> …","","SNAFU context selector for the <code>Error::InvalidUrl</code> variant","","SNAFU context selector for the <code>Error::JoinHandle</code> variant","","SNAFU context selector for the <code>Error::ListObjects</code> variant","","SNAFU context selector for the <code>Error::MergeSchema</code> variant","","SNAFU context selector for the <code>Error::OrcReader</code> variant","","SNAFU context selector for the <code>Error::ParquetToSchema</code> …","","SNAFU context selector for the <code>Error::ParseFormat</code> variant","","SNAFU context selector for the <code>Error::ReadObject</code> variant","","SNAFU context selector for the <code>Error::ReadParquetSnafu</code> …","","SNAFU context selector for the <code>Error::ReadRecordBatch</code> …","","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnsupportedFormat</code> …","","SNAFU context selector for the <code>Error::WriteObject</code> variant","","SNAFU context selector for the <code>Error::WriteRecordBatch</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeecode records from <code>buf</code> returning the number of bytes read.","","","","","","","","","","Flushes the currently buffered data to a <code>RecordBatch</code>.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Builder for <code>CsvConfig</code>.","Error type for CsvConfigBuilder","","","Uninitialized field","Custom validation error","","","","","","","","","","","","","","","Builds a new <code>CsvConfig</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a new <code>CsvOpener</code>. The caller must ensure <code>CsvConfig</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a new <code>JsonOpener</code>. Any fields not present in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Must initialize the reader, or throw an error from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Returns <code>(schema, Option&lt;host&gt;, path)</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,11,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,22,0,0,22,22,22,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,23,22,22,22,22,23,22,23,22,22,23,22,22,22,22,22,22,22,22,22,22,23,22,23,22,23,22,22,23,0,22,23,22,23,23,22,22,23,23,23,23,23,22,23,22,23,22,22,23,22,23,22,23,22,23,40,0,40,0,40,0,40,0,40,0,0,40,0,40,0,40,0,40,0,40,0,40,0,40,0,40,0,40,0,40,0,40,0,40,0,0,40,0,40,0,40,0,40,0,40,0,40,40,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,49,50,51,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,49,50,51,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,40,47,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,50,40,49,40,56,57,65,46,40,40,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,46,48,53,50,45,46,47,48,53,54,55,56,57,58,59,60,61,62,63,64,65,49,66,50,67,51,40,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,123,141,139,142,124,125,126,127,128,129,130,131,132,133,134,135,136,143,137,140,138,144,143,127,128,136,141,141,142,124,140,0,73,0,0,0,0,0,0,0,0,0,73,73,73,73,73,73,73,73,73,73,0,145,73,73,73,73,73,73,73,73,73,145,73,73,76,0,73,73,0,0,0,0,0,73,73,73,73,73,73,73,0,0,0,0,0,86,86,86,84,85,84,88,85,84,86,89,88,85,84,86,89,84,85,88,85,84,89,88,85,84,89,88,85,84,86,89,88,85,84,86,89,88,85,84,86,89,88,89,89,84,88,84,84,88,85,84,88,85,84,86,89,88,85,84,86,89,88,85,84,86,89,88,88,88,88,88,88,84,85,84,84,85,84,88,85,86,86,89,88,85,84,86,86,86,89,84,88,85,84,88,88,85,84,86,89,88,85,84,86,89,89,89,89,86,88,0,88,85,84,89,86,88,88,85,84,86,89,88,85,84,86,89,88,85,84,86,89,88,85,84,86,89,0,0,94,93,94,93,94,93,94,93,94,93,94,93,94,93,94,93,94,93,93,94,93,94,93,94,93,93,93,93,93,93,93,94,93,94,93,93,94,93,94,94,94,94,94,93,0,93,94,93,93,94,93,94,93,94,93,94,0,0,0,99,95,96,99,95,96,95,96,95,96,99,95,96,99,95,96,99,95,96,95,99,95,96,99,95,96,99,95,96,95,95,95,95,95,95,95,96,99,95,96,0,95,99,95,96,99,95,96,99,96,0,0,96,96,99,96,99,99,96,99,99,95,96,99,95,96,99,95,96,99,99,95,96,99,95,96,0,0,0,107,103,104,107,103,104,103,104,103,104,107,103,104,107,103,104,107,103,104,104,103,107,103,104,107,103,104,107,103,104,103,103,103,103,103,103,103,104,107,103,104,107,107,103,107,103,104,107,103,104,107,107,104,107,104,107,107,103,104,107,103,104,107,103,104,107,103,104,107,103,104,114,114,0,0,115,114,115,114,114,114,115,114,115,114,115,114,115,114,115,114,115,114,114,114,114,114,114,114,114,115,114,115,114,115,114,115,115,115,115,115,115,114,115,114,115,114,115,114,115,114,0,0,0,118,118,118,0,118,118,118,118,118,118,118,118,0,0,118,118,0,0,118,118,118,118,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,[[],[[3,[[2,[1]]]]]],[[[9,[[0,[4,5,6]],7,8]]],10],[[[9,[[0,[4,5,6]],[0,[7,11]],8]]],10],[[],12],[[],12],[[],12],[13],[13],[13],0,[[]],[[],13],[[]],[[[9,[[0,[4,5,6]],7,8]]],[[10,[[0,[4,5,6]]]]]],[[13,14,7,[16,[15]],8],[[9,[[0,[4,5,6]],7,8]]]],0,0,0,[[[9,[[0,[4,5,6]],7,8]],17],[[10,[18]]]],[[[9,[[0,[4,5,6]],7,8]]],[[10,[18]]]],[[],19],[[],19],[[],20],[[]],[21,10],[[[9,[[0,[4,5,6]],7,8]],21],10],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[22,22],[23,23],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[22,[0,[24,6,5]]],[[2,[24]]]],[[22,[0,[25,6,5]]],[[2,[25]]]],[[22,[16,[[27,[26]]]]],[[29,[[28,[26]]]]]],[13],[13],[13],[13],[30,[[19,[22]]]],[13],[13],[[22,[16,[[27,[26]]]]],[[29,[[28,[26]]]]]],[[22,22],17],[[],17],[[],17],[[],17],[[],17],[[],17],[22,15],[[22,31],32],[[22,31],32],[[23,31],32],[[]],[[]],[15,[[10,[22]]]],[[23,13],[[33,[22]]]],[[[0,[34,35]],36],18],[[22,37]],0,0,[[],13],[[],13],[[]],[[]],[[]],[22,17],[[],23],[23,13],0,[23,33],[23,33],[[23,13],33],[[22,38],19],[23],[[]],[[]],[[],39],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[40,41],[[],42],[40,[[33,[43]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[45,[[44,[39]]]]],40],[[[46,[[44,[39]],[44,[39]]]]],40],[[[47,[[44,[39]]]]],40],[[[48,[[44,[39]]]]],40],[[[49,[[44,[39]]]]],40],[[[50,[[44,[15]],[44,[39]]]]],40],[51,40],[40,[[33,[42]]]],[[[45,[52]]],[[45,[52]]]],[[[46,[52,52]]],[[46,[52,52]]]],[[[47,[52]]],[[47,[52]]]],[[[48,[52]]],[[48,[52]]]],[[[53,[52]]],[[53,[52]]]],[54,54],[55,55],[[[56,[52]]],[[56,[52]]]],[[[57,[52]]],[[57,[52]]]],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[[[65,[52]]],[[65,[52]]]],[[[49,[52]]],[[49,[52]]]],[66,66],[[[50,[52,52]]],[[50,[52,52]]]],[67,67],[51,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[40,13,[28,[39]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[40,15],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[[45,[[44,[39]]]]],[[19,[40]]]],[[[46,[[44,[39]],[44,[39]]]]],[[19,[40]]]],[[[47,[[44,[39]]]]],[[19,[40]]]],[[[48,[[44,[39]]]]],[[19,[40]]]],[[[49,[[44,[39]]]]],[[19,[40]]]],[[[50,[[44,[15]],[44,[39]]]]],[[19,[40]]]],[51,[[19,[40]]]],[[[45,[68]],31],32],[[[46,[68,68]],31],32],[[[47,[68]],31],32],[[[48,[68]],31],32],[[[53,[68]],31],32],[[54,31],32],[[55,31],32],[[[56,[68]],31],32],[[[57,[68]],31],32],[[58,31],32],[[59,31],32],[[60,31],32],[[61,31],32],[[62,31],32],[[63,31],32],[[64,31],32],[[[65,[68]],31],32],[[[49,[68]],31],32],[[66,31],32],[[[50,[68,68]],31],32],[[67,31],32],[[51,31],32],[[40,31],32],[[40,31],32],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[45,[[44,[39]]]]],40],[[[46,[[44,[39]],[44,[39]]]]],40],[[[47,[[44,[39]]]]],40],[[[48,[[44,[39]]]]],40],[[[53,[[44,[39]]]]],40],[54,40],[55,40],[[[56,[[44,[39]]]]],40],[[[57,[[44,[39]]]]],40],[58,40],[59,40],[60,40],[61,40],[62,40],[63,40],[64,40],[[[65,[[44,[39]]]]],40],[[[49,[[44,[39]]]]],40],[66,40],[[[50,[[44,[15]],[44,[39]]]]],40],[67,40],[51,40],0,[40,[[33,[69]]]],0,[40,[[33,[70]]]],0,0,0,0,[71],[40,[[33,[42]]]],[40,72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[73,73],[[]],[[],12],[[],12],[[],12],0,[[[27,[26]]],[[19,[13,74]]]],[13],[13],[13],[[73,73],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],[[19,[[33,[21]],74]]]],[[73,31],32],[[]],[[75,15],[[3,[[2,[1]]]]]],[[75,[27,[39]],76],[[10,[77]]]],[[],13],[[]],0,[[[78,[75]],39,22,79],[[81,[80]]]],0,0,[[82,75,15,13,79],[[10,[13]]]],[73,15],[[]],[[],19],[[[83,[39,39]]],[[10,[73]]]],[[],19],[[],20],[[]],0,0,0,0,0,0,0,[[],42],[[84,13],84],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,[[19,[85,86]]]],[85,87],[88,88],[85,85],[84,84],[89,89],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,[[],84],[[],88],[[],84],[[84,26],84],0,0,0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[88,88],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[84,[33,[[28,[13]]]]],84],0,0,[[84,90],84],0,0,[[88,31],32],[[85,31],32],[[86,31],32],[[86,31],32],[[89,31],32],[[]],[[]],[[]],[91,86],[[]],[39,86],[[]],[[84,17],84],0,0,0,[[88,75,15],[[3,[[2,[1]]]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[85,75,22],89],0,[[89,92],[[81,[80]]]],[71],0,[[82,75,15,13],[[10,[13]]]],[[]],[[]],[[]],[[]],[[],39],[[],19],[[[83,[39,39]]],[[10,[88]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[93,93],[94,94],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[[],93],[13],[13],[13],[13],[13],[13],[[93,93],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[93,31],32],[[94,31],32],[[]],[[]],[[93,75,15],[[3,[[2,[1]]]]]],[[],13],[[],13],[[]],[[]],[[13,90,75,22],94],0,[[94,92],[[81,[80]]]],0,0,[[82,75,15,13],[[10,[13]]]],[[]],[[]],[[],19],[[[83,[39,39]]],[[10,[93]]]],[[],19],[[],19],[[],19],[[],20],[[],20],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[95,95],[96,96],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],95],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[95,95],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[95,31],32],[[96,31],32],[[]],[[]],[[]],[[[0,[24,97,6,5]]],[[10,[77]]]],[[95,75,15],[[3,[[2,[1]]]]]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[90,[98,[[0,[24,97,6,5]]]],[33,[[28,[13]]]]],[[99,[[0,[24,97,6,5]]]]]],[[75,90,[33,[[28,[13]]]]],96],[[[0,[24,97,6,5]]],[[10,[[100,[[0,[24,97,6,5]]]]]]]],[[[0,[24,97,6,5]]],[[10,[[98,[[0,[24,97,6,5]]]]]]]],0,[[96,92],[[81,[80]]]],0,0,[[[3,[[99,[[0,[24,97,6,5]]]]]],101],[[102,[33]]]],0,0,[[[99,[[0,[24,97,6,5]]]]],90],0,[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[3,101],[[102,[[33,[19]]]]]],[[],20],[[],20],[[],20],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[103,103],[104,104],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[104,13,92,[33,[13]],105],[[81,[[2,[106]]]]]],[[],103],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[103,103],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[103,31],32],[[104,31],32],[[]],[[]],[[]],[[107,[108,[13]]],[[111,[[110,[109]]]]]],[107,[[111,[[110,[[78,[112]]]]]]]],[[103,75,15],[[3,[[2,[1]]]]]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[107,[[19,[113]]]],[[75,39],107],[75,104],0,0,0,0,[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[114,114],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[13],[13],[13],[13],[13],[13],[[114,114],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[114,31],32],[[]],[[]],[[],13],[[],13],[[]],[[]],[115,[[10,[[28,[116]]]]]],[[75,114,39,[33,[117]]],115],0,0,0,0,[[]],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[]],[[]],0,0,0,0,[[]],[[]],[[15,[83,[39,39]]],[[10,[75]]]],[[],12],[[],12],[[],12],[118,117],[13],[13],[13],[[]],0,[15,[[33,[39]]]],[[],13],[[]],[15,10],0,[[],19],[[],19],[[],20],[[]],[15,[[10,[75]]]],0,0,0,0,0,0,[[15,15,[83,[39,39]]],[[10,[75]]]],[15,17],0,[[]],[[]],0,[14,14],[[]],[[],12],[[],12],[[],12],[[],14],[13],[13],[13],[14,29],[[]],[[],13],[[]],[[]],[[],19],[[],19],[[],20],[[]],[13,14],[[14,[27,[26]]],[[29,[13]]]],[[[27,[26]]],[[19,[119]]]],[120,[[19,[13,121]]]],[122,[[19,[13,121]]]],[15]],"c":[],"p":[[8,"Future"],[3,"Box"],[3,"Pin"],[8,"AsyncWrite"],[8,"Send"],[8,"Unpin"],[8,"DfRecordBatchEncoder"],[8,"FnMut"],[3,"LazyBufferedWriter"],[6,"Result"],[8,"ArrowWriterCloser"],[3,"Compat"],[15,"usize"],[3,"SharedBuffer"],[15,"str"],[8,"AsRef"],[15,"bool"],[15,"u64"],[4,"Result"],[3,"TypeId"],[3,"RecordBatch"],[4,"CompressionType"],[3,"CompressionTypeIter"],[8,"AsyncRead"],[8,"Stream"],[15,"u8"],[15,"slice"],[3,"Vec"],[6,"Result"],[8,"Deserializer"],[3,"Formatter"],[6,"Result"],[4,"Option"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[8,"Serializer"],[3,"String"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"UnsupportedCompressionTypeSnafu"],[3,"UnsupportedBackendProtocolSnafu"],[3,"UnsupportedFormatSnafu"],[3,"EmptyHostPathSnafu"],[3,"InvalidConnectionSnafu"],[3,"ParseFormatSnafu"],[3,"BufferedWriterClosedSnafu"],[8,"Clone"],[3,"InvalidUrlSnafu"],[3,"BuildBackendSnafu"],[3,"OrcReaderSnafu"],[3,"ReadObjectSnafu"],[3,"WriteObjectSnafu"],[3,"AsyncWriteSnafu"],[3,"WriteRecordBatchSnafu"],[3,"EncodeRecordBatchSnafu"],[3,"ReadRecordBatchSnafu"],[3,"ReadParquetSnafuSnafu"],[3,"ParquetToSchemaSnafu"],[3,"InferSchemaSnafu"],[3,"ListObjectsSnafu"],[3,"JoinHandleSnafu"],[3,"MergeSchemaSnafu"],[8,"Debug"],[3,"Location"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[4,"Format"],[4,"ArrowError"],[3,"Operator"],[8,"FileFormat"],[3,"Schema"],[3,"Arc"],[8,"Fn"],[6,"FileOpenFuture"],[6,"Result"],[6,"SendableRecordBatchStream"],[3,"HashMap"],[3,"CsvConfigBuilder"],[3,"CsvConfig"],[4,"CsvConfigBuilderError"],[3,"ReaderBuilder"],[3,"CsvFormat"],[3,"CsvOpener"],[6,"SchemaRef"],[3,"UninitializedFieldError"],[3,"FileMeta"],[3,"JsonFormat"],[3,"JsonOpener"],[3,"OrcFormat"],[3,"OrcOpener"],[8,"AsyncSeek"],[3,"ArrowStreamReader"],[3,"OrcArrowStreamReaderAdapter"],[3,"Cursor"],[3,"Context"],[4,"Poll"],[3,"ParquetFormat"],[3,"DefaultParquetFileReaderFactory"],[3,"ExecutionPlanMetricsSet"],[8,"AsyncFileReader"],[3,"LazyParquetFileReader"],[3,"Range"],[3,"Bytes"],[6,"Result"],[6,"BoxFuture"],[3,"ParquetMetaData"],[3,"Error"],[4,"Source"],[3,"Lister"],[3,"Entry"],[3,"Regex"],[3,"DISK_SYMBOL_PATTERN"],[3,"Error"],[8,"FixedInt"],[3,"Error"],[8,"VarInt"],[13,"UnsupportedCompressionType"],[13,"InvalidUrl"],[13,"BuildBackend"],[13,"OrcReader"],[13,"ReadObject"],[13,"WriteObject"],[13,"AsyncWrite"],[13,"WriteRecordBatch"],[13,"EncodeRecordBatch"],[13,"ReadRecordBatch"],[13,"ReadParquetSnafu"],[13,"ParquetToSchema"],[13,"InferSchema"],[13,"ListObjects"],[13,"JoinHandle"],[13,"MergeSchema"],[13,"UnsupportedFormat"],[13,"ParseFormat"],[13,"UnsupportedBackendProtocol"],[13,"EmptyHostPath"],[13,"InvalidConnection"],[13,"BufferedWriterClosed"],[8,"ArrowDecoder"]]},\
"common_error":{"doc":"","t":"RRAAACADIDIKLLLLLLLLLKLLLLLLLLMLLLLLLMLLKLLLLLLLLLLMLLLLLLLLDLLLLLLLLLDLLLLMLLLLLLLLLLMLLLLLLNNNNNNNNNNNNNNNNENNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLL","n":["GREPTIME_ERROR_CODE","GREPTIME_ERROR_MSG","ext","format","mock","snafu","status_code","BoxedError","ErrorExt","PlainError","StackError","as_any","as_any","as_any","as_error_source","as_error_source","backtrace","borrow","borrow","borrow_mut","borrow_mut","debug_fmt","debug_fmt","debug_fmt","fmt","fmt","fmt","fmt","from","from","inner","into","into","last","location_opt","location_opt","location_opt","msg","new","new","next","next","next","output_msg","provide","provide","source","source","status_code","status_code","status_code","status_code","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","DebugFormat","borrow","borrow_mut","fmt","from","into","new","try_from","try_into","type_id","MockError","as_any","as_error_source","borrow","borrow_mut","code","debug_fmt","fmt","fmt","from","into","location_opt","new","next","provide","source","source","status_code","to_string","try_from","try_into","type_id","with_source","AccessDenied","AuthHeaderNotFound","Cancelled","DatabaseNotFound","EngineExecuteQuery","Internal","InvalidArguments","InvalidAuthHeader","InvalidSyntax","PermissionDenied","PlanQuery","RateLimited","RegionAlreadyExists","RegionNotFound","RegionReadonly","RuntimeResourcesExhausted","StatusCode","StorageUnavailable","Success","TableAlreadyExists","TableColumnExists","TableColumnNotFound","TableNotFound","Unexpected","Unknown","Unsupported","UnsupportedPasswordType","UserNotFound","UserPasswordMismatch","as_ref","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","from","from_str","from_u32","into","is_retryable","is_success","should_log_error","to_owned","to_string","try_from","try_from","try_into","type_id"],"q":[[0,"common_error"],[7,"common_error::ext"],[60,"common_error::format"],[70,"common_error::mock"],[93,"common_error::status_code"]],"d":["","","","","Utils for mock.","","","An opaque boxed error based on errors that implement …","Extension to <code>Error</code> in std.","Error type with plain error message","","Returns the error as Any so that it can be downcast to a …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Get the location of this error, None if the location is …","","","","","","","","","","","","","","Map this error to StatusCode.","","","","","","","","","","","","Pretty debug format for error, also prints source and …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new format struct from <code>err</code>.","","","","A mock error mainly for test.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Create a new MockError without backtrace.","","","","","","","","","","Create a new MockError with source.","Illegal request to connect catalog-schema","Not found http authorization header","The task is cancelled.","","The query engine fail to execute query.","Internal server error.","Invalid arguments.","Invalid http authorization header","SQL Syntax error.","User is not authorized to perform the operation","Fail to create a plan for the query.","Rate limit exceeded","","","","Runtime resources exhausted, like creating threads failed.","Common status code for public API.","Storage is temporarily unable to handle the request","Success.","Table already exists.","","","","Unexpected error, maybe there is a BUG.","Unknown error.","Unsupported operation.","Unsupported password type","User not exist","Username and password does not match","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the error with this code is retryable.","Returns <code>true</code> if <code>code</code> is success.","Returns <code>true</code> if we should print an error log for an error …","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,15,2,3,2,3,2,2,3,2,3,13,2,3,2,2,3,3,2,3,2,2,3,13,15,2,3,3,2,3,13,2,3,15,2,3,2,3,15,2,3,3,2,3,2,3,2,3,2,3,0,22,22,22,22,22,22,22,22,22,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18],"f":[0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,1],[3,1],[[],4],[[],4],[2,[[6,[5]]]],[[]],[[]],[[]],[[]],[[7,[9,[8]]]],[[2,7,[9,[8]]]],[[3,7,[9,[8]]]],[[2,10],11],[[2,10],11],[[3,10],11],[[3,10],11],[[]],[[]],0,[[]],[[]],[12,13],[[],[[6,[14]]]],[2,[[6,[14]]]],[3,[[6,[14]]]],0,[[[0,[15,16,17]]],2],[[8,18],3],[[],[[6,[13]]]],[2,[[6,[13]]]],[3,[[6,[13]]]],[12,8],[19],[19],[2,[[6,[4]]]],[3,[[6,[4]]]],[[],18],[2,18],[3,18],0,[[],8],[[],8],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],0,[[]],[[]],[[[22,[[0,[15,12]]]],10],11],[[]],[[]],[12,[[22,[12]]]],[[],20],[[],20],[[],21],0,[23,1],[[],4],[[]],[[]],0,[[23,7,[9,[8]]]],[[23,10],11],[[23,10],11],[[]],[[]],[23,[[6,[14]]]],[18,23],[23,[[6,[13]]]],[19],[23,[[6,[4]]]],0,[23,18],[[],8],[[],20],[[],20],[[],21],[23,23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,24],[[]],[[]],[18,18],[[]],[[18,18],25],[[],25],[[18,10],11],[[18,10],11],[[]],[24,[[20,[18]]]],[26,[[6,[18]]]],[[]],[18,25],[26,25],[18,25],[[]],[[],8],[[],20],[24,[[20,[18]]]],[[],20],[[],21]],"c":[],"p":[[8,"Any"],[3,"BoxedError"],[3,"PlainError"],[8,"Error"],[3,"Backtrace"],[4,"Option"],[15,"usize"],[3,"String"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[8,"StackError"],[3,"Location"],[8,"ErrorExt"],[8,"Send"],[8,"Sync"],[4,"StatusCode"],[3,"Demand"],[4,"Result"],[3,"TypeId"],[3,"DebugFormat"],[3,"MockError"],[15,"str"],[15,"bool"],[15,"u32"]]},\
"common_function":{"doc":"","t":"ACCCCAAAAAAAADGDGDDDDDDDDAALMLLLLLLLMALLLLLMMMMMMMMLLLLLLALMLAALAALLLLLLLLLLLLLDDLLLLLLLLLLLLLLLMLLLLLLMLMLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLDDMLLLLLLLLLLLLLLLMLLLLLLLMLLLLLMLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLMLMLLLLLLLMMLMLLLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLMDDLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLMDDLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLMDMAAMFFAFDMLLLMLLLLLLLLLLLLFIDGLLLLLKLLLLLLKKKLLLLLLMLHDLMLLLLLLMLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLFLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLDLLALLALLLLLLLLLLDLLLLLOLFFFLLLLLLLLFFLLFFLLLLLLLLLFFFFDLLLLALLLLLLALLLLDRLLLLLLLLLLLLLLLLLLLLLLLLLRDLLLLFFFFLLLLLLLLLLLLLLLLLLLLLF","n":["scalars","FUNCTION_REGISTRY","Function","FunctionRef","FunctionRegistry","aggregate","expression","function","function_registry","math","numpy","timestamp","udf","AggregateFunctionMeta","AggregateFunctionMetaRef","AggregateFunctions","AggregatorCreatorFunction","ArgmaxAccumulatorCreator","ArgminAccumulatorCreator","DiffAccumulatorCreator","MeanAccumulatorCreator","PercentileAccumulatorCreator","PolyvalAccumulatorCreator","ScipyStatsNormCdfAccumulatorCreator","ScipyStatsNormPdfAccumulatorCreator","argmax","argmin","args_count","args_count","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create","creator","diff","from","from","from_ref","from_subset","from_subset","input_types","input_types","input_types","input_types","input_types","input_types","input_types","input_types","into","into","into_request","into_request","is_in_subset","is_in_subset","mean","name","name","new","percentile","polyval","register","scipy_stats_norm_cdf","scipy_stats_norm_pdf","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Argmax","ArgmaxAccumulatorCreator","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","is_in_subset","is_in_subset","max","merge_batch","n","output_type","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update","update_batch","vzip","vzip","Argmin","ArgminAccumulatorCreator","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","is_in_subset","is_in_subset","merge_batch","min","n","output_type","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update","update_batch","vzip","vzip","Diff","DiffAccumulatorCreator","_phantom","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","is_in_subset","is_in_subset","merge_batch","output_type","push","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update_batch","values","vzip","vzip","Mean","MeanAccumulatorCreator","_phantom","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","is_in_subset","is_in_subset","merge_batch","n","output_type","push","set_input_types","state","state_types","sum","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update","update_batch","vzip","vzip","Percentile","PercentileAccumulatorCreator","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","greater","input_types","input_types","into","into","into_request","into_request","is_in_subset","is_in_subset","merge_batch","n","not_greater","output_type","p","push","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update_batch","vzip","vzip","Polyval","PolyvalAccumulatorCreator","_phantom","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","is_in_subset","is_in_subset","merge_batch","output_type","push","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update_batch","values","vzip","vzip","x","ScipyStatsNormCdf","ScipyStatsNormCdfAccumulatorCreator","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","is_in_subset","is_in_subset","merge_batch","output_type","push","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update_batch","values","vzip","vzip","x","ScipyStatsNormPdf","ScipyStatsNormPdfAccumulatorCreator","borrow","borrow","borrow_mut","borrow_mut","creator","default","default","evaluate","fmt","fmt","from","from","from_subset","from_subset","input_types","input_types","into","into","into_request","into_request","is_in_subset","is_in_subset","merge_batch","output_type","push","set_input_types","state","state_types","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update_batch","values","vzip","vzip","x","EvalContext","_tz","binary","ctx","error","scalar_binary_op","scalar_unary_op","unary","scalar_binary_op","EvalContext","_tz","borrow","borrow_mut","default","error","from","from_subset","into","into_request","is_in_subset","set_error","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","scalar_unary_op","Function","FunctionContext","FunctionRef","borrow","borrow_mut","clone","clone_into","default","eval","from","from_ref","from_subset","into","into_request","is_in_subset","name","return_type","signature","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","tz","vzip","FUNCTION_REGISTRY","FunctionRegistry","aggregate_functions","aggregate_functions","borrow","borrow_mut","default","from","from_subset","functions","functions","get_aggr_function","get_function","into","into_request","is_in_subset","register","register_aggregate_function","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","MathFunction","PowFunction","RangeFunction","RateFunction","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","eval","fmt","fmt","from","from","from_ref","from_subset","from_subset","into","into","into_request","into_request","is_in_subset","is_in_subset","name","pow","rate","register","return_type","signature","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PowFunction","borrow","borrow_mut","clone","clone_into","default","eval","fmt","fmt","from","from_ref","from_subset","into","into_request","is_in_subset","name","return_type","scalar_pow","signature","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","RateFunction","borrow","borrow_mut","clone","clone_into","default","eval","fmt","fmt","from","from_ref","from_subset","into","into_request","is_in_subset","name","return_type","signature","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","NumpyFunction","borrow","borrow_mut","clip","from","from_subset","interp","into","into_request","is_in_subset","register","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ClipFunction","borrow","borrow_mut","clone","clone_into","default","define_eval","eval","eval_f64","eval_i64","eval_u64","fmt","fmt","from","from_ref","from_subset","into","into_request","is_in_subset","max","min","name","return_type","scalar_max","scalar_min","signature","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","binary_search_ascending_vector","concrete_type_to_primitive_vector","interp","linear_search_ascending_vector","TimestampFunction","borrow","borrow_mut","from","from_subset","greatest","into","into_request","is_in_subset","register","to_subset","to_subset_unchecked","to_unixtime","try_from","try_into","type_id","vzip","GreatestFunction","NAME","borrow","borrow_mut","clone","clone_into","default","eval","fmt","fmt","from","from_ref","from_subset","into","into_request","is_in_subset","name","return_type","signature","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","NAME","ToUnixtimeFunction","borrow","borrow_mut","clone","clone_into","convert_dates_to_seconds","convert_datetimes_to_seconds","convert_timestamps_to_seconds","convert_to_seconds","default","eval","fmt","fmt","from","from_ref","from_subset","into","into_request","is_in_subset","name","return_type","signature","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","create_udf"],"q":[[0,"common_function"],[1,"common_function::scalars"],[13,"common_function::scalars::aggregate"],[79,"common_function::scalars::aggregate::argmax"],[124,"common_function::scalars::aggregate::argmin"],[169,"common_function::scalars::aggregate::diff"],[214,"common_function::scalars::aggregate::mean"],[261,"common_function::scalars::aggregate::percentile"],[308,"common_function::scalars::aggregate::polyval"],[354,"common_function::scalars::aggregate::scipy_stats_norm_cdf"],[399,"common_function::scalars::aggregate::scipy_stats_norm_pdf"],[444,"common_function::scalars::expression"],[452,"common_function::scalars::expression::binary"],[453,"common_function::scalars::expression::ctx"],[471,"common_function::scalars::expression::unary"],[472,"common_function::scalars::function"],[498,"common_function::scalars::function_registry"],[522,"common_function::scalars::math"],[567,"common_function::scalars::math::pow"],[594,"common_function::scalars::math::rate"],[620,"common_function::scalars::numpy"],[637,"common_function::scalars::numpy::clip"],[671,"common_function::scalars::numpy::interp"],[675,"common_function::scalars::timestamp"],[692,"common_function::scalars::timestamp::greatest"],[719,"common_function::scalars::timestamp::to_unixtime"],[750,"common_function::scalars::udf"]],"d":["","","","","","","","","functions registry","","","","","<code>AggregateFunctionMeta</code> dynamically creates …","","","A function creates <code>AggregateFunctionCreator</code>. “Aggregator…","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TODO: remove the allow_unused when it’s used.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","TODO: remove the allow_unused when it’s used.","Scalar function trait, modified from databend to adapt …","","","","","","","","Evaluate the function, e.g. run/execute the function.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Returns the name of the function, should be unique.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","<code>RangeFunction</code> will never be used as a normal function, …","generates rates from a sequence of adjacent data points.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","<code>range_fn</code> will never been used. As long as a legal …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","generates rates from a sequence of adjacent data points.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","numpy.clip function, …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","search the biggest number that smaller than x in xp","","One-dimensional linear interpolation for monotonically …","search the biggest number that smaller than x in xp","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","A function to convert the column into the unix timestamp …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Create a ScalarUdf from function."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,66,1,66,1,1,1,1,1,0,66,1,1,66,1,14,32,35,37,40,42,45,47,66,1,66,1,66,1,0,1,1,1,0,0,66,0,0,1,66,1,66,1,66,1,66,1,66,1,66,1,0,0,17,14,17,14,14,17,14,17,17,14,17,14,17,14,14,14,17,14,17,14,17,14,17,17,17,14,14,17,14,17,14,17,14,17,14,17,14,17,14,17,17,17,14,0,0,33,32,33,32,32,33,32,33,33,32,33,32,33,32,32,32,33,32,33,32,33,32,33,33,33,32,32,33,32,33,32,33,32,33,32,33,32,33,32,33,33,33,32,0,0,36,36,35,36,35,35,36,35,36,36,35,36,35,36,35,35,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,35,36,36,36,35,0,0,38,38,37,38,37,37,38,37,38,38,37,38,37,38,37,37,37,38,37,38,37,38,37,38,38,37,38,37,38,37,38,38,37,38,37,38,37,38,37,38,37,38,38,38,37,0,0,41,40,41,40,40,41,40,41,41,40,41,40,41,40,41,40,40,41,40,41,40,41,40,41,41,41,40,41,41,40,41,40,41,40,41,40,41,40,41,40,41,40,41,41,40,0,0,43,43,42,43,42,42,43,42,43,43,42,43,42,43,42,42,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,43,43,42,43,0,0,46,45,46,45,45,46,45,46,46,45,46,45,46,45,45,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,46,46,45,46,0,0,48,47,48,47,47,48,47,48,48,47,48,47,48,47,47,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,48,48,47,48,0,49,0,0,49,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,50,50,50,50,50,67,50,50,50,50,50,50,67,67,67,50,50,50,50,50,50,50,50,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,68,54,68,54,54,54,54,54,54,54,68,54,54,68,54,68,54,68,54,68,54,54,0,0,68,54,54,54,54,68,54,68,54,68,54,68,54,68,54,68,54,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55,55,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,69,69,0,69,69,0,69,69,69,69,69,69,69,69,69,69,0,58,58,58,58,58,0,58,0,0,0,58,58,58,58,58,58,58,58,0,0,58,58,0,0,58,58,58,58,58,58,58,58,58,0,0,0,0,0,70,70,70,70,0,70,70,70,70,70,70,0,70,70,70,70,0,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,63,63,63,63,0,0,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[[]],[[]],[[]],[[]],[1,1],[[]],[1,3],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[],4],[[],4],[[],5],[[],5],0,[1,6],0,[[7,2,[9,[8]]],1],0,0,[10],0,0,[[]],[[],11],[[],11],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[14,15],[[],[[17,[16]]]],[[],14],[[[17,[[0,[18,19]]]]],[[21,[20]]]],[[[17,[22]],23],24],[[14,23],24],[[]],[[]],[[]],[[]],[14,[[12,[[26,[25]],27]]]],0,[[]],[[]],[[],4],[[],4],[[],5],[[],5],0,[[[17,[[0,[18,19]]]],[29,[28]]],21],0,[14,[[21,[25]]]],[[14,[26,[25]]],[[12,[27]]]],[[[17,[[0,[18,19]]]]],[[21,[[26,[20]]]]]],[14,[[21,[[26,[25]]]]]],[[],11],[[],11],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[[17,[[0,[19,30]]]],[0,[19,30]],31]],[[[17,[[0,[18,19]]]],[29,[28]]],21],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[32,15],[[],[[33,[16]]]],[[],32],[[[33,[[0,[18,19]]]]],[[21,[20]]]],[[[33,[22]],23],24],[[32,23],24],[[]],[[]],[[]],[[]],[32,[[12,[[26,[25]],27]]]],0,[[]],[[]],[[],4],[[],4],[[],5],[[],5],[[[33,[[0,[18,19]]]],[29,[28]]],21],0,0,[32,[[21,[25]]]],[[32,[26,[25]]],[[12,[27]]]],[[[33,[[0,[18,19]]]]],[[21,[[26,[20]]]]]],[32,[[21,[[26,[25]]]]]],[[],11],[[],11],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[[33,[[0,[30,19]]]],[0,[30,19]],34]],[[[33,[[0,[18,19]]]],[29,[28]]],21],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[35,15],[[],[[36,[16,16]]]],[[],35],[[[36,[18,18]]],[[21,[20]]]],[[[36,[22,22]],23],24],[[35,23],24],[[]],[[]],[[]],[[]],[35,[[12,[[26,[25]],27]]]],0,[[]],[[]],[[],4],[[],4],[[],5],[[],5],[[[36,[18,18]],[29,[28]]],21],[35,[[21,[25]]]],[36],[[35,[26,[25]]],[[12,[27]]]],[[[36,[18,18]]],[[21,[[26,[20]]]]]],[35,[[21,[[26,[25]]]]]],[[],11],[[],11],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[[36,[18,18]],[29,[28]]],21],0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[37,15],[[],[[38,[16]]]],[[],37],[[[38,[18]]],[[21,[20]]]],[[[38,[22]],23],24],[[37,23],24],[[]],[[]],[[]],[[]],[37,[[12,[[26,[25]],27]]]],0,[[]],[[]],[[],4],[[],4],[[],5],[[],5],[[[38,[18]],[29,[28]]],21],0,[37,[[21,[25]]]],[[[38,[18]],18]],[[37,[26,[25]]],[[12,[27]]]],[[[38,[18]]],[[21,[[26,[20]]]]]],[37,[[21,[[26,[25]]]]]],0,[[],11],[[],11],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[[38,[18]],39,31]],[[[38,[18]],[29,[28]]],21],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[40,15],[[],[[41,[[0,[18,16]]]]]],[[],40],[[[41,[18]]],[[21,[20]]]],[[[41,[[0,[18,22]]]],23],24],[[40,23],24],[[]],[[]],[[]],[[]],0,[40,[[12,[[26,[25]],27]]]],0,[[]],[[]],[[],4],[[],4],[[],5],[[],5],[[[41,[18]],[29,[28]]],21],0,0,[40,[[21,[25]]]],0,[[[41,[18]],18]],[[40,[26,[25]]],[[12,[27]]]],[[[41,[18]]],[[21,[[26,[20]]]]]],[40,[[21,[[26,[25]]]]]],[[],11],[[],11],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[[41,[18]],[29,[28]]],21],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[42,15],[[],[[43,[[0,[18,16]],[0,[18,16]]]]]],[[],42],[[[43,[18,[0,[18,44]]]]],[[21,[20]]]],[[[43,[[0,[18,22]],[0,[18,22]]]],23],24],[[42,23],24],[[]],[[]],[[]],[[]],[42,[[12,[[26,[25]],27]]]],0,[[]],[[]],[[],4],[[],4],[[],5],[[],5],[[[43,[18,[0,[18,44]]]],[29,[28]]],21],[42,[[21,[25]]]],[[[43,[18,18]],18]],[[42,[26,[25]]],[[12,[27]]]],[[[43,[18,[0,[18,44]]]]],[[21,[[26,[20]]]]]],[42,[[21,[[26,[25]]]]]],[[],11],[[],11],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[[43,[18,[0,[18,44]]]],[29,[28]]],21],0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[45,15],[[],[[46,[16]]]],[[],45],[[[46,[[0,[18,[44,[[0,[18,[44,[[0,[18,[44,[[0,[18,44]]]]]]]]]]]]]]]]],[[21,[20]]]],[[[46,[22]],23],24],[[45,23],24],[[]],[[]],[[]],[[]],[45,[[12,[[26,[25]],27]]]],0,[[]],[[]],[[],4],[[],4],[[],5],[[],5],[[[46,[[0,[18,[44,[[0,[18,[44,[[0,[18,[44,[[0,[18,44]]]]]]]]]]]]]]]],[29,[28]]],21],[45,[[21,[25]]]],[46],[[45,[26,[25]]],[[12,[27]]]],[[[46,[[0,[18,[44,[[0,[18,[44,[[0,[18,[44,[[0,[18,44]]]]]]]]]]]]]]]]],[[21,[[26,[20]]]]]],[45,[[21,[[26,[25]]]]]],[[],11],[[],11],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[[46,[[0,[18,[44,[[0,[18,[44,[[0,[18,[44,[[0,[18,44]]]]]]]]]]]]]]]],[29,[28]]],21],0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[47,15],[[],[[48,[16]]]],[[],47],[[[48,[18]]],[[21,[20]]]],[[[48,[22]],23],24],[[47,23],24],[[]],[[]],[[]],[[]],[47,[[12,[[26,[25]],27]]]],0,[[]],[[]],[[],4],[[],4],[[],5],[[],5],[[[48,[18]],[29,[28]]],21],[47,[[21,[25]]]],[48],[[47,[26,[25]]],[[12,[27]]]],[[[48,[18]]],[[21,[[26,[20]]]]]],[47,[[21,[[26,[25]]]]]],[[],11],[[],11],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[[48,[18]],[29,[28]]],21],0,[[]],[[]],0,0,0,0,0,0,[[28,28,8,49],21],[[28,8,49],21],0,[[28,28,8,49],21],0,0,[[]],[[]],[[],49],0,[[]],[[]],[[]],[[],4],[[],5],[[49,27]],[[],11],[[]],[[],12],[[],12],[[],13],[[]],[[28,8,49],21],0,0,0,[[]],[[]],[50,50],[[]],[[],50],[[50,[29,[28]]],[[21,[28]]]],[[]],[[]],[[]],[[]],[[],4],[[],5],[[],7],[[[29,[25]]],[[21,[25]]]],[[],51],[[]],[[],11],[[]],[[],12],[[],12],[[],13],0,[[]],0,0,[10,[[26,[52]]]],0,[[]],[[]],[[],10],[[]],[[]],[10,[[26,[53]]]],0,[[10,7],[[11,[52]]]],[[10,7],[[11,[53]]]],[[]],[[],4],[[],5],[[10,53]],[[10,52]],[[],11],[[]],[[],12],[[],12],[[],13],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[54,54],[[]],[[],54],[[54,50,[29,[28]]],[[21,[28]]]],[[54,23],24],[[54,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],5],[[],5],[54,7],0,0,[10],[[54,[29,[25]]],[[21,[25]]]],[54,51],[[]],[[],6],[[],11],[[],11],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[]],[[]],0,[[]],[[]],[55,55],[[]],[[],55],[[55,50,[29,[28]]],[[21,[28]]]],[[55,23],24],[[55,23],24],[[]],[[]],[[]],[[]],[[],4],[[],5],[55,7],[[55,[29,[25]]],[[21,[25]]]],[[[11,[[56,[39]]]],[11,[[56,[39]]]],49],[[11,[39]]]],[55,51],[[]],[[],6],[[],11],[[]],[[],12],[[],12],[[],13],[[]],0,[[]],[[]],[57,57],[[]],[[],57],[[57,50,[29,[28]]],[[21,[28]]]],[[57,23],24],[[57,23],24],[[]],[[]],[[]],[[]],[[],4],[[],5],[57,7],[[57,[29,[25]]],[[21,[25]]]],[57,51],[[]],[[],6],[[],11],[[]],[[],12],[[],12],[[],13],[[]],0,[[]],[[]],0,[[]],[[]],0,[[]],[[],4],[[],5],[10],[[],11],[[]],[[],12],[[],12],[[],13],[[]],0,[[]],[[]],[58,58],[[]],[[],58],0,[[58,50,[29,[28]]],[[21,[28]]]],[[[29,[28]]],[[21,[28]]]],[[[29,[28]]],[[21,[28]]]],[[[29,[28]]],[[21,[28]]]],[[58,23],24],[[58,23],24],[[]],[[]],[[]],[[]],[[],4],[[],5],[[19,19],19],[[19,19],19],[58,7],[[58,[29,[25]]],[[21,[25]]]],[[[11,[[0,[59,30,19]]]],[11,[[0,[59,30,19]]]],49],[[11,[[0,[59,30,19]]]]]],[[[11,[[0,[59,30,19]]]],[11,[[0,[59,30,19]]]],49],[[11,[[0,[59,30,19]]]]]],[58,51],[[]],[[],6],[[],11],[[]],[[],12],[[],12],[[],13],[[]],[[20,60],61],[28,[[21,[60]]]],[[[29,[28]]],[[21,[28]]]],[[20,60],61],0,[[]],[[]],[[]],[[]],0,[[]],[[],4],[[],5],[10],[[],11],[[]],0,[[],12],[[],12],[[],13],[[]],0,0,[[]],[[]],[62,62],[[]],[[],62],[[62,50,[29,[28]]],[[21,[28]]]],[[62,23],24],[[62,23],24],[[]],[[]],[[]],[[]],[[],4],[[],5],[62,7],[[62,[29,[25]]],[[21,[25]]]],[62,51],[[]],[[],6],[[],11],[[]],[[],12],[[],12],[[],13],[[]],0,0,[[]],[[]],[63,63],[[]],[28,[[26,[[11,[64]]]]]],[28,[[26,[[11,[64]]]]]],[28,[[26,[[11,[64]]]]]],[7,[[11,[64]]]],[[],63],[[63,50,[29,[28]]],[[21,[28]]]],[[63,23],24],[[63,23],24],[[]],[[]],[[]],[[]],[[],4],[[],5],[63,7],[[63,[29,[25]]],[[21,[25]]]],[63,51],[[]],[[],6],[[],11],[[]],[[],12],[[],12],[[],13],[[]],[53,65]],"c":[],"p":[[3,"AggregateFunctionMeta"],[15,"u8"],[6,"AggregateFunctionCreatorRef"],[3,"Request"],[15,"bool"],[3,"String"],[15,"str"],[8,"Fn"],[3,"Arc"],[3,"FunctionRegistry"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"ArgmaxAccumulatorCreator"],[6,"AccumulatorCreatorFunction"],[8,"Default"],[3,"Argmax"],[8,"WrapperType"],[8,"PartialOrd"],[4,"Value"],[6,"Result"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"ConcreteDataType"],[3,"Vec"],[4,"Error"],[6,"VectorRef"],[15,"slice"],[8,"Copy"],[15,"u64"],[3,"ArgminAccumulatorCreator"],[3,"Argmin"],[15,"u32"],[3,"DiffAccumulatorCreator"],[3,"Diff"],[3,"MeanAccumulatorCreator"],[3,"Mean"],[15,"f64"],[3,"PercentileAccumulatorCreator"],[3,"Percentile"],[3,"PolyvalAccumulatorCreator"],[3,"Polyval"],[8,"Sum"],[3,"ScipyStatsNormCdfAccumulatorCreator"],[3,"ScipyStatsNormCdf"],[3,"ScipyStatsNormPdfAccumulatorCreator"],[3,"ScipyStatsNormPdf"],[3,"EvalContext"],[3,"FunctionContext"],[3,"Signature"],[6,"AggregateFunctionMetaRef"],[6,"FunctionRef"],[3,"RangeFunction"],[3,"PowFunction"],[8,"AsPrimitive"],[3,"RateFunction"],[3,"ClipFunction"],[8,"Scalar"],[6,"Float64Vector"],[15,"usize"],[3,"GreatestFunction"],[3,"ToUnixtimeFunction"],[15,"i64"],[3,"ScalarUdf"],[3,"AggregateFunctions"],[8,"Function"],[3,"MathFunction"],[3,"NumpyFunction"],[3,"TimestampFunction"]]},\
"common_greptimedb_telemetry":{"doc":"","t":"INNNRRDEENDHRRMLLLLLLLLLMFLLLLLLLLLLLLLLLLLKKLKLKLMKLLLLMLLMMFLMLLKLMLMLMLLLLLLLLLLLLMMLLLLM","n":["Collector","Disable","Distributed","Enable","GREPTIMEDB_TELEMETRY_CLIENT_CONNECT_TIMEOUT","GREPTIMEDB_TELEMETRY_CLIENT_REQUEST_TIMEOUT","GreptimeDBTelemetry","GreptimeDBTelemetryTask","Mode","Standalone","StatisticData","TELEMETRY_INTERVAL","TELEMETRY_URL","UUID_FILE_NAME","arch","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","client","default_get_uuid","deserialize","deserialize","disable","enable","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","get_arch","get_git_hash","get_mode","get_nodes","get_os","get_retry","get_uuid","get_uuid_cache","get_version","git_commit","inc_retry","into","into","into","into","mode","name","new","nodes","os","print_anonymous_usage_data_disclaimer","report_telemetry_info","report_times","serialize","serialize","set_uuid_cache","should_report","should_report","start","statistics","stop","telemetry_url","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","uuid","version","vzip","vzip","vzip","vzip","working_home"],"q":[[0,"common_greptimedb_telemetry"]],"d":["","","","","The default connect timeout to greptime cloud.","The default request timeout to greptime cloud.","Report version info to GreptimeDB. We do not collect any …","","","","Telemetry data to report","The default interval of reporting telemetry data to …","The URL to report telemetry data.","The local installation uuid cache file","The architecture of the CPU, such as <code>x86</code>, <code>x86_64</code> etc.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","The git commit revision of greptimedb","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The running mode, <code>standalone</code> or <code>distributed</code>.","","","The node number","Operating system name, such as <code>linux</code>, <code>windows</code> etc.","","","","","","","","","","","","","","","","","","","","","","","","","The local installation uuid","The greptimedb version","","","","",""],"i":[0,11,10,11,0,0,0,0,0,10,0,0,0,0,8,11,1,8,10,11,1,8,10,1,1,0,8,10,11,11,10,10,10,10,10,8,10,11,1,8,10,22,22,22,22,22,22,22,22,22,8,22,11,1,8,10,8,1,1,8,8,0,1,1,8,10,22,11,1,11,1,11,1,11,1,8,10,11,1,8,10,11,1,8,10,8,8,11,1,8,10,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[4,[[3,[2]]]]]],0,[[[6,[5]]],[[6,[5]]]],[7,[[9,[8]]]],[7,[[9,[10]]]],[[],11],[[12,[14,[13]],[16,[15]]],11],[[10,10],17],[[],17],[[],17],[[],17],[[],17],[[8,18],19],[[10,18],19],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],10],[[],[[4,[[3,[2]]]]]],[[],5],[[],20],[[[6,[5]]],[[6,[5]]]],[[],[[6,[5]]]],[[],5],0,[[]],[[]],[[]],[[]],[[]],0,[1,21],[[[6,[5]],[3,[22]],[16,[15]]],1],0,0,[[]],[1,[[6,[23]]]],0,[[8,24],9],[[10,24],9],[5],[[11,17]],0,[11,25],0,[11,25],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],26],[[],26],[[],26],[[],26],0,0,[[]],[[]],[[]],[[]],0],"c":[],"p":[[3,"GreptimeDBTelemetry"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"String"],[4,"Option"],[8,"Deserializer"],[3,"StatisticData"],[4,"Result"],[4,"Mode"],[4,"GreptimeDBTelemetryTask"],[3,"Duration"],[4,"Error"],[6,"BoxedTaskFunction"],[3,"AtomicBool"],[3,"Arc"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"i32"],[15,"str"],[8,"Collector"],[3,"Response"],[8,"Serializer"],[6,"Result"],[3,"TypeId"]]},\
"common_grpc":{"doc":"","t":"CAAAAADDDDRRRRDDRMLMLLLLLLLLLLLLLMMMMMMLMLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMMLLMLMLLLLLLLLLLLLMMLLMLLMFLLLMLMLMLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLNDNDNDNDNDENDNDNDNDGNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMNDDENNLLLLLLFLLMLLMLFLLLLLLLLLLLMLLLLLLLLLLLLLLMOFFGNDNNNNEGNMLLLLLLMLLLLLLLLLLLLLLLLLMLMFLLLLLLLLLLLLLLLLLL","n":["Error","channel_manager","error","flight","select","writer","Channel","ChannelConfig","ChannelManager","ClientTlsOption","DEFAULT_GRPC_CONNECT_TIMEOUT_SECS","DEFAULT_GRPC_REQUEST_TIMEOUT_SECS","DEFAULT_MAX_GRPC_RECV_MESSAGE_SIZE","DEFAULT_MAX_GRPC_SEND_MESSAGE_SIZE","ID","Pool","RECYCLE_CHANNEL_INTERVAL_SECS","__private_field","access","access","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_endpoint","channel","channel_recycle_started","channels","client_cert_path","client_key_path","client_tls","client_tls_config","client_tls_config","clone","clone","clone","clone_into","clone_into","clone_into","concurrency_limit","concurrency_limit","config","config","connect_timeout","connect_timeout","default","default","default","deref","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","get","get","http2_adaptive_window","http2_adaptive_window","http2_keep_alive_interval","http2_keep_alive_interval","http2_keep_alive_timeout","http2_keep_alive_timeout","http2_keep_alive_while_idle","http2_keep_alive_while_idle","id","increase_access","initial_connection_window_size","initial_connection_window_size","initial_stream_window_size","initial_stream_window_size","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","max_recv_message_size","max_send_message_size","new","new","pool","put","rate_limit","rate_limit","recycle_channel_in_loop","reset_with_connector","retain_channel","retain_channel","server_ca_cert_path","tcp_keepalive","tcp_keepalive","tcp_nodelay","tcp_nodelay","timeout","timeout","to_owned","to_owned","to_owned","trigger_channel_recycling","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","use_default_connector","use_default_connector","vzip","vzip","vzip","vzip","vzip","vzip","with_config","with_tls_config","Conversion","ConversionSnafu","ConvertArrowSchema","ConvertArrowSchemaSnafu","CreateChannel","CreateChannelSnafu","CreateRecordBatch","CreateRecordBatchSnafu","DecodeFlightData","DecodeFlightDataSnafu","Error","InvalidConfigFilePath","InvalidConfigFilePathSnafu","InvalidFlightData","InvalidFlightDataSnafu","InvalidTlsConfig","InvalidTlsConfigSnafu","NotSupported","NotSupportedSnafu","Result","TypeMismatch","TypeMismatchSnafu","actual","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_name","debug_fmt","description","expected","fail","fail","fail","fail","fail","feat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","msg","next","provide","reason","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","column_name","error","error","error","expected","feat","from","location","location","location","location","location","location","location","location","msg","reason","source","source","AffectedRows","FlightDecoder","FlightEncoder","FlightMessage","Recordbatch","Schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_none_flight_msg","clone","clone_into","data_gen","default","default","dictionary_tracker","encode","flight_messages_to_recordbatches","fmt","from","from","from","from_ref","into","into","into","into_request","into_request","into_request","schema","to_owned","try_decode","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_options","convert_arrow_array_to_grpc_vals","null_mask","values","ColumnName","Hour","LinesWriter","Microsecond","Millisecond","Minute","Nanosecond","Precision","RowCount","Second","batch","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_name_index","commit","default","eq","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","from","from","from_ref","into","into","into_request","into_request","lines","mut_column","null_masks","to_ms_ts","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_lines","write_bool","write_f64","write_i64","write_string","write_tag","write_ts","write_u64"],"q":[[0,"common_grpc"],[6,"common_grpc::channel_manager"],[161,"common_grpc::error"],[372,"common_grpc::error::Error"],[392,"common_grpc::flight"],[440,"common_grpc::select"],[443,"common_grpc::writer"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the value of tls client auth.","","","","","","","","A concurrency limit to each request.","","","","A timeout to connecting to the uri.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Sets whether to use an adaptive flow control. Uses …","","Set http2 KEEP_ALIVE_INTERVAL. Uses hyper’s default …","","Set http2 KEEP_ALIVE_TIMEOUT. Uses hyper’s default …","","Set http2 KEEP_ALIVE_WHILE_IDLE. Uses hyper’s default …","","","","Sets the max connection-level flow control for HTTP2","","Sets the SETTINGS_INITIAL_WINDOW_SIZE option for HTTP2 …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A rate limit to each request.","","","","","","","Set whether TCP keepalive messages are enabled on accepted …","","Set the value of TCP_NODELAY option for accepted …","","A timeout to each request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::Conversion</code> variant","","SNAFU context selector for the <code>Error::ConvertArrowSchema</code> …","","SNAFU context selector for the <code>Error::CreateChannel</code> variant","","SNAFU context selector for the <code>Error::CreateRecordBatch</code> …","","SNAFU context selector for the <code>Error::DecodeFlightData</code> …","","","SNAFU context selector for the <code>Error::InvalidConfigFilePath</code>…","","SNAFU context selector for the <code>Error::InvalidFlightData</code> …","","SNAFU context selector for the <code>Error::InvalidTlsConfig</code> …","","SNAFU context selector for the <code>Error::NotSupported</code> variant","","","SNAFU context selector for the <code>Error::TypeMismatch</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,1,11,3,8,7,1,10,11,3,8,7,1,10,3,1,3,10,8,8,7,7,3,3,8,7,3,8,7,7,7,3,3,7,7,3,7,10,11,10,8,7,8,8,8,8,7,7,7,7,3,8,7,1,10,11,3,8,7,1,10,3,8,7,3,10,7,7,7,7,7,7,7,7,3,1,7,7,7,7,11,3,8,7,1,10,11,3,8,7,1,10,7,7,3,7,3,10,7,7,0,3,3,10,8,7,7,7,7,7,7,3,8,7,3,11,3,8,7,1,10,11,3,8,7,1,10,11,3,8,7,1,10,1,1,11,3,8,7,1,10,3,3,31,0,31,0,31,0,31,0,31,0,0,31,0,31,0,31,0,31,0,0,31,0,37,31,31,31,36,42,37,43,44,38,45,39,46,40,31,36,42,37,43,44,38,45,39,46,40,31,36,37,38,39,40,31,36,42,37,43,44,38,45,39,46,40,36,42,37,43,44,38,45,39,46,40,37,31,31,37,36,37,38,39,40,40,36,42,37,43,44,38,45,39,46,40,31,31,36,42,37,43,44,38,45,39,46,40,31,38,36,42,37,43,44,38,45,39,46,40,36,42,37,43,44,38,45,39,46,40,31,36,42,37,43,44,38,45,39,46,40,36,42,37,43,44,38,45,39,46,40,31,36,31,31,39,31,31,36,42,37,43,44,38,45,39,46,40,31,36,42,37,43,44,38,45,39,46,40,31,36,42,37,43,44,38,45,39,46,40,31,36,42,37,43,44,38,45,39,46,40,31,36,42,37,43,44,38,45,39,46,40,31,68,68,69,70,71,68,72,73,69,68,70,74,73,71,75,76,77,75,74,76,53,0,0,0,53,53,54,53,55,54,53,55,0,53,53,54,54,55,54,54,0,53,54,53,55,53,54,53,55,54,53,55,55,53,55,54,53,55,54,53,55,54,53,55,54,53,55,54,0,0,0,0,62,0,62,62,62,62,0,0,62,63,63,62,63,62,62,62,63,63,63,62,62,62,62,62,63,62,62,63,62,62,63,62,63,62,63,63,63,0,62,62,63,62,63,62,63,62,63,62,63,63,63,63,63,63,63,63],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,4],[[6,[5]]]],0,0,0,0,0,0,[[7,8],7],0,[3,3],[8,8],[7,7],[[]],[[]],[[]],[[7,2],7],0,[3,7],0,[[7,9],7],0,[[],3],[[],7],[[],10],[11,12],[[10,13],[[14,[13,1]]]],[[8,8],15],[[7,7],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[3,16],17],[[8,16],17],[[7,16],17],[[1,16],17],[[10,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,[18,[4]]],[[6,[19]]]],[[10,4],[[20,[19]]]],[[7,15],7],0,[[7,9],7],0,[[7,9],7],0,[[7,15],7],0,0,[1],[[7,21],7],0,[[7,21],7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,[[],3],[[],7],0,[[10,4,1]],[[7,23,9],7],0,[[[24,[10]],23]],[[3,[18,[4]],[0,[[26,[25]],27]]],[[6,[19]]]],[[3,28]],[[10,28]],0,[[7,9],7],0,[[7,15],7],0,[[7,9],7],0,[[]],[[]],[[]],[3],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[1,15],0,[[]],[[]],[[]],[[]],[[]],[[]],[7,3],[7,[[6,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,32],[[],33],[31,[[20,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[[35,[13]]]]],31],[[[37,[[35,[13]],[35,[13]],[35,[13]]]]],31],[[[38,[[35,[13]]]]],31],[[[39,[[35,[13]]]]],31],[[[40,[[35,[13]]]]],31],[31,[[20,[33]]]],[[[36,[41]]],[[36,[41]]]],[42,42],[[[37,[41,41,41]]],[[37,[41,41,41]]]],[43,43],[44,44],[[[38,[41]]],[[38,[41]]]],[45,45],[[[39,[41]]],[[39,[41]]]],[46,46],[[[40,[41]]],[[40,[41]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[31,2,[47,[13]]]],[31,4],0,[[[36,[[35,[13]]]]],[[29,[31]]]],[[[37,[[35,[13]],[35,[13]],[35,[13]]]]],[[29,[31]]]],[[[38,[[35,[13]]]]],[[29,[31]]]],[[[39,[[35,[13]]]]],[[29,[31]]]],[[[40,[[35,[13]]]]],[[29,[31]]]],0,[[[36,[48]],16],17],[[42,16],17],[[[37,[48,48,48]],16],17],[[43,16],17],[[44,16],17],[[[38,[48]],16],17],[[45,16],17],[[[39,[48]],16],17],[[46,16],17],[[[40,[48]],16],17],[[31,16],17],[[31,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[[35,[13]]]]],31],[42,31],[[[37,[[35,[13]],[35,[13]],[35,[13]]]]],31],[43,31],[44,31],[[[38,[[35,[13]]]]],31],[45,31],[[[39,[[35,[13]]]]],31],[46,31],[[[40,[[35,[13]]]]],31],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[31,[[20,[49]]]],[50],0,[31,[[20,[33]]]],[31,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[53,53],[[]],0,[[],54],[[],55],0,[[54,53],56],[[[47,[53]]],[[6,[57]]]],[[53,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],0,[[]],[[55,56],[[6,[53]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[],30],[[]],[[]],[[]],0,0,[[[59,[58]],2],[[47,[60]]]],[[[59,[58]]],[[6,[61]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[62,62],[[]],0,[63],[[],63],[[62,62],15],[[],15],[[],15],[[],15],[[],15],[63],[[62,16],17],[[62,16],17],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],0,[[63,4,64,65]],0,[[62,66],66],[[]],[[],13],[[],29],[[],29],[[],29],[[],29],[[],30],[[],30],[[]],[[]],[2,63],[[63,4,15],6],[[63,4,67],6],[[63,4,66],6],[[63,4,4],6],[[63,4,4],6],[[63,4],6],[[63,4,23],6]],"c":[],"p":[[3,"Channel"],[15,"usize"],[3,"ChannelManager"],[15,"str"],[3,"Endpoint"],[6,"Result"],[3,"ChannelConfig"],[3,"ClientTlsOption"],[3,"Duration"],[3,"Pool"],[3,"ID"],[3,"AtomicU64"],[3,"String"],[4,"Entry"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"AsRef"],[3,"Channel"],[4,"Option"],[15,"u32"],[3,"Request"],[15,"u64"],[3,"Arc"],[3,"Uri"],[8,"MakeConnection"],[8,"Send"],[8,"FnMut"],[4,"Result"],[3,"TypeId"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"InvalidTlsConfigSnafu"],[3,"TypeMismatchSnafu"],[3,"ConversionSnafu"],[3,"InvalidFlightDataSnafu"],[3,"NotSupportedSnafu"],[8,"Clone"],[3,"InvalidConfigFilePathSnafu"],[3,"CreateChannelSnafu"],[3,"CreateRecordBatchSnafu"],[3,"DecodeFlightDataSnafu"],[3,"ConvertArrowSchemaSnafu"],[3,"Vec"],[8,"Debug"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"Bytes"],[4,"FlightMessage"],[3,"FlightEncoder"],[3,"FlightDecoder"],[3,"FlightData"],[3,"RecordBatches"],[6,"VectorRef"],[15,"slice"],[15,"u8"],[3,"Values"],[4,"Precision"],[3,"LinesWriter"],[4,"ColumnDataType"],[4,"SemanticType"],[15,"i64"],[15,"f64"],[13,"TypeMismatch"],[13,"InvalidConfigFilePath"],[13,"CreateChannel"],[13,"DecodeFlightData"],[13,"NotSupported"],[13,"Conversion"],[13,"CreateRecordBatch"],[13,"InvalidFlightData"],[13,"ConvertArrowSchema"],[13,"InvalidTlsConfig"]]},\
"common_grpc_expr":{"doc":"","t":"AFCFAACAARRFFFFNDNDNDNDENDNDNDNDNDGNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMFFFFDLLFMLLLMLLLFLLLLLLLLLLMLLLLLL","n":["alter","alter_expr_to_request","build_create_expr_from_insertion","create_table_schema","delete","error","find_new_columns","insert","util","LOCATION_TYPE_AFTER","LOCATION_TYPE_FIRST","alter_expr_to_request","create_table_schema","parse_location","to_table_delete_request","ColumnDataType","ColumnDataTypeSnafu","CreateVector","CreateVectorSnafu","DuplicatedColumnName","DuplicatedColumnNameSnafu","DuplicatedTimestampColumn","DuplicatedTimestampColumnSnafu","Error","IllegalDeleteRequest","IllegalDeleteRequestSnafu","InvalidColumnDef","InvalidColumnDefSnafu","InvalidColumnProto","InvalidColumnProtoSnafu","MissingField","MissingFieldSnafu","MissingTimestampColumn","MissingTimestampColumnSnafu","Result","UnexpectedValuesLength","UnexpectedValuesLengthSnafu","UnknownLocationType","UnknownLocationTypeSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duplicated","err_msg","exists","fail","fail","fail","fail","fail","fail","fail","fail","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","location_type","msg","name","next","provide","reason","reason","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column","duplicated","err_msg","exists","field","location","location","location","location","location","location","location","location","location","location","location","location_type","msg","name","reason","reason","source","source","source","add_values_to_builder","build_create_expr_from_insertion","find_new_columns","is_null","ColumnExpr","borrow","borrow_mut","build_create_table_expr","column_name","compat","compat_mut","compat_ref","datatype","deref","deref_mut","drop","extract_new_columns","from","from","from","from_column_schemas","from_columns","from_subset","init","into","into_request","is_in_subset","semantic_type","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"common_grpc_expr"],[9,"common_grpc_expr::alter"],[14,"common_grpc_expr::delete"],[15,"common_grpc_expr::error"],[384,"common_grpc_expr::error::Error"],[408,"common_grpc_expr::insert"],[412,"common_grpc_expr::util"]],"d":["","Convert an <code>AlterExpr</code> to an <code>AlterTableRequest</code>","","","","","","","","","","Convert an <code>AlterExpr</code> to an <code>AlterTableRequest</code>","","","","","SNAFU context selector for the <code>Error::ColumnDataType</code> …","","SNAFU context selector for the <code>Error::CreateVector</code> variant","","SNAFU context selector for the <code>Error::DuplicatedColumnName</code> …","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::IllegalDeleteRequest</code> …","","SNAFU context selector for the <code>Error::InvalidColumnDef</code> …","","SNAFU context selector for the <code>Error::InvalidColumnProto</code> …","","SNAFU context selector for the <code>Error::MissingField</code> variant","","SNAFU context selector for the …","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnknownLocationType</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to build create table request from insert data.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14,0,14,0,14,0,0,14,0,14,0,14,0,14,0,14,0,0,14,0,14,0,14,14,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,20,21,22,23,24,25,26,28,14,20,30,21,22,23,24,31,25,32,26,28,20,30,21,22,23,24,31,25,32,26,28,32,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,14,20,30,21,22,23,24,31,25,32,26,28,14,21,24,21,20,21,22,23,24,25,26,28,25,20,30,21,22,23,24,31,25,32,26,28,14,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,28,23,22,14,14,20,26,14,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,20,30,21,22,23,24,31,25,32,26,28,14,58,59,60,59,61,62,63,59,64,65,60,66,61,58,67,68,68,65,64,62,67,63,66,58,0,0,0,0,0,55,55,0,55,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55],"f":[0,[[1,2],[[4,[3]]]],0,[[5,6],[[4,[7]]]],0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],[[5,6],[[4,[7]]]],[[[9,[8]]],[[4,[[9,[10]]]]]],[[11,11,12],[[4,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,15],[[],16],[14,[[9,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[[19,[18]]]]],14],[[[21,[[19,[18]],[19,[18]]]]],14],[[[22,[[19,[18]]]]],14],[[[23,[[19,[18]]]]],14],[[[24,[[19,[18]]]]],14],[[[25,[[19,[18]]]]],14],[[[26,[[19,[18]]]]],14],[[[28,[[19,[27]]]]],14],[14,[[9,[16]]]],[[[20,[29]]],[[20,[29]]]],[30,30],[[[21,[29,29]]],[[21,[29,29]]]],[[[22,[29]]],[[22,[29]]]],[[[23,[29]]],[[23,[29]]]],[[[24,[29]]],[[24,[29]]]],[31,31],[[[25,[29]]],[[25,[29]]]],[[[32,[29]]],[[32,[29]]]],[[[26,[29]]],[[26,[29]]]],[[[28,[29]]],[[28,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[14,34,[35,[18]]]],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[14,11],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],[34],0,0,0,[[[20,[[19,[18]]]]],[[36,[14]]]],[[[21,[[19,[18]],[19,[18]]]]],[[36,[14]]]],[[[22,[[19,[18]]]]],[[36,[14]]]],[[[23,[[19,[18]]]]],[[36,[14]]]],[[[24,[[19,[18]]]]],[[36,[14]]]],[[[25,[[19,[18]]]]],[[36,[14]]]],[[[26,[[19,[18]]]]],[[36,[14]]]],[[[28,[[19,[27]]]]],[[36,[14]]]],0,[[[20,[37]],38],39],[[30,38],39],[[[21,[37,37]],38],39],[[[22,[37]],38],39],[[[23,[37]],38],39],[[[24,[37]],38],39],[[31,38],39],[[[25,[37]],38],39],[[[32,[37]],38],39],[[[26,[37]],38],39],[[[28,[37]],38],39],[[14,38],39],[[14,38],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[[19,[18]]]]],14],[30,14],[[[21,[[19,[18]],[19,[18]]]]],14],[[[22,[[19,[18]]]]],14],[[[23,[[19,[18]]]]],14],[[[24,[[19,[18]]]]],14],[31,14],[[[25,[[19,[18]]]]],14],[[[32,[[19,[18]]]]],14],[[[26,[[19,[18]]]]],14],[[[28,[[19,[27]]]]],14],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,[14,[[9,[41]]]],[42],0,0,[14,[[9,[16]]]],[14,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,46,34,[35,[47]]],[[4,[48]]]],[[11,11,[9,[1]],11,[50,[49]],11],[[4,[5]]]],[[51,[50,[49]]],[[4,[[9,[52]]]]]],[[53,34],[[9,[6]]]],0,[[]],[[]],[[[9,[1]],54,[35,[55]],11,11],[[4,[5]]]],0,[[],33],[[],33],[[],33],0,[34],[34],[34],[[56,[35,[55]]],[[4,[[9,[52]]]]]],[57,55],[[]],[49,55],[[[50,[57]]],[[35,[55]]]],[[[50,[49]]],[[35,[55]]]],[[]],[[],34],[[]],[[],40],[[],6],0,[[],9],[[]],[[],36],[[],36],[[],44],[[]]],"c":[],"p":[[6,"TableId"],[3,"AlterExpr"],[3,"AlterTableRequest"],[6,"Result"],[3,"CreateTableExpr"],[15,"bool"],[3,"RawSchema"],[3,"AddColumnLocation"],[4,"Option"],[4,"AddColumnLocation"],[15,"str"],[3,"DeleteRequest"],[3,"DeleteRequest"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[3,"String"],[8,"Into"],[3,"IllegalDeleteRequestSnafu"],[3,"DuplicatedTimestampColumnSnafu"],[3,"DuplicatedColumnNameSnafu"],[3,"MissingTimestampColumnSnafu"],[3,"InvalidColumnProtoSnafu"],[3,"MissingFieldSnafu"],[3,"UnexpectedValuesLengthSnafu"],[15,"i32"],[3,"UnknownLocationTypeSnafu"],[8,"Clone"],[3,"ColumnDataTypeSnafu"],[3,"CreateVectorSnafu"],[3,"InvalidColumnDefSnafu"],[3,"Compat"],[15,"usize"],[3,"Vec"],[4,"Result"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Request"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"TypeId"],[4,"ConcreteDataType"],[3,"Values"],[15,"u8"],[6,"VectorRef"],[3,"Column"],[15,"slice"],[6,"SchemaRef"],[3,"AddColumns"],[6,"BitVec"],[3,"TableReference"],[3,"ColumnExpr"],[3,"Schema"],[3,"ColumnSchema"],[13,"InvalidColumnDef"],[13,"DuplicatedTimestampColumn"],[13,"InvalidColumnProto"],[13,"MissingField"],[13,"IllegalDeleteRequest"],[13,"ColumnDataType"],[13,"DuplicatedColumnName"],[13,"MissingTimestampColumn"],[13,"CreateVector"],[13,"UnexpectedValuesLength"],[13,"UnknownLocationType"]]},\
"common_macro":{"doc":"","t":"YAXAXAXAXFFFFFFFFOFDLLFFFMLLMMLLLMMMLMMFLLLLLL","n":["AggrFuncTypeStore","aggr_func","as_aggr_func_creator","print_caller","print_caller","range_fn","range_fn","stack_trace_debug","stack_trace_debug","impl_aggr_func_type_store","impl_as_aggr_func_creator","process_print_caller","build_calc_fn","build_struct","extract_arg_map","extract_input_types","get_ident","ok","process_range_fn","ErrorVariant","borrow","borrow_mut","build_debug_fmt_impl","build_debug_impl","build_next_impl","cfg_attr","clone","clone_into","display","fields","fmt","from","from_enum_variant","has_external_cause","has_location","has_source","into","name","span","stack_trace_style_impl","to_debug_match_arm","to_next_match_arm","to_owned","try_from","try_into","type_id"],"q":[[0,"common_macro"],[9,"common_macro::aggr_func"],[11,"common_macro::print_caller"],[12,"common_macro::range_fn"],[19,"common_macro::stack_trace_debug"]],"d":["Make struct implemented trait AggrFuncTypeStore, which is …","","A struct can be used as a creator for aggregate function …","","Attribute macro to print the caller to the annotated …","","Attribute macro to convert an arithimetic function to a …","implement <code>::common_error::ext::StackError</code>","Attribute macro to derive std::fmt::Debug for the …","","","","","","Extract a String &lt;-&gt; Ident map from the attribute args.","Extract the argument list from the annotated function.","Helper function to get an Ident from the previous arg map.","Internal util macro to early return on error.","","","","","Generate <code>debug_fmt</code> fn.","Implement std::fmt::Debug via <code>debug_fmt</code>","Generate <code>next</code> fn.","","","","","","","Returns the argument unchanged.","Construct self from Variant","","","","Calls <code>U::from(self)</code>.","","","","Convert self into an match arm that will be used in …","Convert self into an match arm that will be used in …","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,18,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18,18],"f":[0,0,0,0,0,0,0,0,0,[1,2],[[2,2],2],[[2,2],2],[[3,[5,[4]],3,3],2],[[[5,[6]],7,3,3],2],[[[5,[8]]],[[12,[[10,[9,3]],11]]]],[[[15,[13,14]]],[[12,[[5,[4]],11]]]],[[[10,[9,3]],16,17],[[12,[3,11]]]],0,[[2,2],2],0,[[]],[[]],[[3,[5,[18]]],19],[3,19],[[3,[5,[18]]],19],0,[18,18],[[]],0,0,[[18,20],21],[[]],[22,18],0,0,0,[[]],0,0,[[19,19],19],[18,19],[18,19],[[]],[[],12],[[],12],[[],23]],"c":[],"p":[[3,"DeriveInput"],[3,"TokenStream"],[3,"Ident"],[4,"Type"],[3,"Vec"],[3,"Attribute"],[4,"Visibility"],[4,"NestedMeta"],[3,"String"],[3,"HashMap"],[3,"Error"],[4,"Result"],[4,"FnArg"],[3,"Comma"],[3,"Punctuated"],[15,"str"],[3,"Span"],[3,"ErrorVariant"],[3,"TokenStream"],[3,"Formatter"],[6,"Result"],[3,"Variant"],[3,"TypeId"]]},\
"common_mem_prof":{"doc":"","t":"FAAENDNDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMRRFAFNDNDENDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMM","n":["dump_profile","error","jemalloc","Error","Internal","InternalSnafu","ProfilingNotSupported","ProfilingNotSupportedSnafu","Result","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone_into","clone_into","debug_fmt","description","fail","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into_error","into_error","next","provide","source","status_code","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","source","OPT_PROF","PROF_DUMP","dump_profile","error","is_prof_enabled","BuildTempPath","BuildTempPathSnafu","DumpProfileData","DumpProfileDataSnafu","Error","OpenTempFile","OpenTempFileSnafu","ProfilingNotEnabled","ProfilingNotEnabledSnafu","ReadOptProf","ReadOptProfSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","debug_fmt","description","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","next","path","path","path","provide","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","error","error","error","location","path","path","path"],"q":[[0,"common_mem_prof"],[3,"common_mem_prof::error"],[56,"common_mem_prof::error::Error"],[57,"common_mem_prof::jemalloc"],[62,"common_mem_prof::jemalloc::error"],[160,"common_mem_prof::jemalloc::error::Error"]],"d":["","","","","","SNAFU context selector for the <code>Error::Internal</code> variant","","SNAFU context selector for the <code>Error::ProfilingNotSupported</code>…","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BuildTempPath</code> variant","","SNAFU context selector for the <code>Error::DumpProfileData</code> …","","","SNAFU context selector for the <code>Error::OpenTempFile</code> variant","","SNAFU context selector for the <code>Error::ProfilingNotEnabled</code> …","","SNAFU context selector for the <code>Error::ReadOptProf</code> variant","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,4,0,4,0,0,4,4,4,10,9,4,10,9,4,9,4,10,9,10,9,4,4,9,10,9,4,4,10,9,4,4,10,9,4,10,9,4,4,4,4,10,9,4,10,9,4,10,9,4,10,9,4,32,0,0,0,0,0,17,0,17,0,0,17,0,17,0,17,0,17,17,17,27,23,26,29,30,17,27,23,26,29,30,17,23,26,17,27,23,26,29,30,27,23,26,29,30,17,17,23,26,27,23,26,29,30,17,17,27,23,26,29,30,17,27,23,26,29,30,17,27,23,26,29,30,17,26,29,30,17,17,17,27,23,26,29,30,17,27,23,26,29,30,17,27,23,26,29,30,17,27,23,26,29,30,17,33,34,35,36,36,34,35],"f":[[[],[[3,[[2,[1]]]]]],0,0,0,0,0,0,0,0,[4,5],[[],6],[4,[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[9,4],[4,[[8,[6]]]],[10,10],[9,9],[[]],[[]],[[4,11,[2,[12]]]],[4,13],[9,[[14,[4]]]],[[10,15],16],[[9,15],16],[[4,15],16],[[4,15],16],[[]],[[]],[17,4],[[]],[[]],[[]],[[]],[10,4],[9,4],[4,[[8,[18]]]],[19],[4,[[8,[6]]]],[4,20],[[]],[[]],[[],12],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],21],[[],21],[[],21],0,0,0,[[],[[3,[[2,[1]]]]]],0,[[],[[3,[22]]]],0,0,0,0,0,0,0,0,0,0,0,[17,5],[[],6],[17,[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,17],[[[26,[[25,[24]]]]],17],[17,[[8,[6]]]],[27,27],[23,23],[[[26,[28]]],[[26,[28]]]],[[[29,[28]]],[[29,[28]]]],[[[30,[28]]],[[30,[28]]]],[[]],[[]],[[]],[[]],[[]],[[17,11,[2,[12]]]],[17,13],[23,[[14,[17]]]],[[[26,[[25,[24]]]]],[[14,[17]]]],[[27,15],16],[[23,15],16],[[[26,[31]],15],16],[[[29,[31]],15],16],[[[30,[31]],15],16],[[17,15],16],[[17,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,17],[23,17],[[[26,[[25,[24]]]]],17],[[[29,[[25,[12]]]]],17],[[[30,[[25,[24]]]]],17],[17,[[8,[18]]]],0,0,0,[19],[17,[[8,[6]]]],[17,20],[[]],[[]],[[]],[[]],[[]],[[],12],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0],"c":[],"p":[[15,"u8"],[3,"Vec"],[6,"Result"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[4,"Option"],[3,"ProfilingNotSupportedSnafu"],[3,"InternalSnafu"],[15,"usize"],[3,"String"],[15,"str"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"Error"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"TypeId"],[15,"bool"],[3,"ProfilingNotEnabledSnafu"],[3,"PathBuf"],[8,"Into"],[3,"BuildTempPathSnafu"],[3,"ReadOptProfSnafu"],[8,"Clone"],[3,"OpenTempFileSnafu"],[3,"DumpProfileDataSnafu"],[8,"Debug"],[13,"Internal"],[13,"ReadOptProf"],[13,"OpenTempFile"],[13,"DumpProfileData"],[13,"BuildTempPath"]]},\
"common_meta":{"doc":"","t":"GGCAAAAAAAOOOAAAAAAAAAAAIGDDDIGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLKLLLLLMLLLLLLLLLLLLLLLLLLGIIGGKKKDIGDIDGALLLLLLMLLMMLLLLLLLLLKAMLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLKMLLLLLLLALLLLLLLLLALLLDDENNNSNLLLLLLLLLLLMLLLLLLLLLMLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLMLLLMLMLLLLLLLLLLLLLLLLLLLNDDENNSDLLLLLLLLLLLLMLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLNDDENNNSLLLLLLLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLMMLLLLLLLLLLLLLLLLLLLNNSDDELLLLLLLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLMLLMLLLLLLLLLLLLLLLLLLLFFFDGLLMLLLLMLLLLLFFFFLLLLLMLLLLLLMLMLLLLLLLRRRRRRNDNDNDNDNDNDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNNDNDNDNDDNNDDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMLMMLMLMLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMAAANNEDIDIGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLMMLLLLLLLLLKLLLMLLAMLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDGGDGLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLMMMLLLLLLLLLLLLLFFNNEENNNDNNDDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDRDRDRRGDRRDRRRIDGMMMMKLLLLLLLLLLLLMLMALLLLLLLLLLLLLLLLLLLLLALMLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLMALALMALMAALMALFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLRDDDLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMFLLLLLLLLLLLLLLLLLLLLLMLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLMLLLLDDDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLGDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLMLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLMLLLLLLLLLLLLLLLLLLLLMLLLFIGIGCKKKKKLKALLAKKLKKAADDDDDDDDRDLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLDMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLFFFFFFFFFDENNQNNNNNNNNDEEDDILLLLLLLLLLLLLLLMMMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLRRNNNGDDENDMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLAALLLLLLLLLLLLLLLALMLLNDNDENDDDNDMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMLLLLMMMMMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLNDDDDEDDFFMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLFFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMFLMMLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLMMMMMMMMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFDRDGLLLLLLLLLLLLLLLLMLLLLMLLMMLLLLLLMLLLMLMMLLLLLLLLLLLLRDRLLLLLLFLLLLLLLLLLMMLLFLLLLLLLFDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLFF","n":["ClusterId","DatanodeId","RegionIdent","cache_invalidator","datanode_manager","ddl","ddl_manager","distributed_time_constants","error","heartbeat","impl_optional_meta_value","impl_table_meta_key","impl_table_meta_value","instruction","key","kv_backend","metrics","peer","range_stream","rpc","sequence","state_store","table_name","util","CacheInvalidator","CacheInvalidatorRef","Context","DummyCacheInvalidator","DummyKvCacheInvalidator","KvCacheInvalidator","KvCacheInvalidatorRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","invalidate_key","invalidate_key","invalidate_table_id","invalidate_table_id","invalidate_table_id","invalidate_table_name","invalidate_table_name","invalidate_table_name","is_in_subset","is_in_subset","is_in_subset","subject","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AffectedRows","Datanode","DatanodeManager","DatanodeManagerRef","DatanodeRef","datanode","handle","handle_query","DdlContext","DdlTaskExecutor","DdlTaskExecutorRef","ExecutorContext","TableMetadataAllocator","TableMetadataAllocatorContext","TableMetadataAllocatorRef","alter_table","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache_invalidator","clone","clone_into","cluster_id","cluster_id","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create","create_table","datanode_manager","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop_table","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","submit_ddl_task","table_metadata_manager","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate_table","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utils","vzip","vzip","vzip","AlterTableData","AlterTableProcedure","AlterTableState","InvalidateTableCache","Prepare","SubmitAlterRegionRequests","TYPE_NAME","UpdateMetadata","alter_expr","alter_kind","as_ref","as_uncased","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_new_table_info","cluster_id","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","context","create_alter_region_request","create_proto_alter_kind","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","dump","execute","fmt","fmt","from","from","from","from_json","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kind","lock_key","lock_key_inner","new","new","next_column_id","on_broadcast","on_prepare","on_update_metadata","on_update_metadata_for_alter","on_update_metadata_for_rename","serialize","serialize","state","submit_alter_region_requests","table_id","table_info","table_info_value","table_ref","task","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","vzip","vzip","vzip","CreateMetadata","CreateTableData","CreateTableProcedure","CreateTableState","DatanodeCreateRegions","Prepare","TYPE_NAME","TableCreator","as_ref","as_uncased","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cluster_id","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","context","create_region_request_template","creator","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","dump","execute","fmt","fmt","from","from","from","from","from_json","from_ref","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lock_key","new","new","on_create_metadata","on_datanode_create_regions","on_prepare","region_routes","region_routes","serialize","serialize","state","table_id","table_info","table_ref","task","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","vzip","vzip","vzip","vzip","DatanodeDropRegions","DropTableData","DropTableProcedure","DropTableState","InvalidateTableCache","Prepare","RemoveMetadata","TYPE_NAME","as_ref","as_uncased","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cluster_id","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","context","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","dump","execute","fmt","fmt","from","from","from","from_json","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lock_key","new","new","on_broadcast","on_datanode_drop_regions","on_prepare","on_remove_metadata","region_routes","serialize","serialize","state","table_id","table_info","table_info_value","table_ref","table_route_value","task","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","vzip","vzip","vzip","DatanodeTruncateRegions","Prepare","TYPE_NAME","TruncateTableData","TruncateTableProcedure","TruncateTableState","as_ref","as_uncased","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cluster_id","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","context","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","dump","execute","fmt","fmt","from","from","from","from_json","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lock_key","new","new","on_datanode_truncate_regions","on_prepare","region_routes","serialize","serialize","state","table_id","table_info","table_info_value","table_name","table_ref","task","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_name","vzip","vzip","vzip","handle_operate_region_error","handle_retry_error","region_storage_path","DdlManager","DdlManagerRef","borrow","borrow_mut","cache_invalidator","compat","compat_mut","compat_ref","create_context","datanode_manager","deref","deref_mut","drop","from","from_subset","handle_alter_table_task","handle_create_table_task","handle_drop_table_task","handle_truncate_table_task","init","into","into_request","is_in_subset","new","procedure_manager","submit_alter_table_task","submit_create_table_task","submit_ddl_task","submit_drop_table_task","submit_procedure","submit_truncate_table_task","table_meta_allocator","table_metadata_manager","table_metadata_manager","to_subset","to_subset_unchecked","try_from","try_into","try_start","type_id","vzip","DATANODE_LEASE_SECS","FRONTEND_HEARTBEAT_INTERVAL_MILLIS","HEARTBEAT_INTERVAL_MILLIS","META_KEEP_ALIVE_INTERVAL_SECS","META_LEASE_SECS","REGION_LEASE_SECS","BuildTableMeta","BuildTableMetaSnafu","CacheNotGet","CacheNotGetSnafu","CatalogAlreadyExists","CatalogAlreadyExistsSnafu","ConnectEtcd","ConnectEtcdSnafu","ConvertAlterTableRequest","ConvertAlterTableRequestSnafu","ConvertRawKey","ConvertRawKeySnafu","ConvertRawTableInfo","ConvertRawTableInfoSnafu","DecodeJson","DecodeJsonSnafu","DecodeProto","DecodeProtoSnafu","EmptyKey","EmptyKeySnafu","EncodeJson","EncodeJsonSnafu","Error","EtcdFailed","EtcdFailedSnafu","EtcdTxnOpResponse","EtcdTxnOpResponseSnafu","External","ExternalSnafu","GetKvCache","GetKvCacheSnafu","IllegalServerState","IllegalServerStateSnafu","InvalidCatalogValue","InvalidCatalogValueSnafu","InvalidHeartbeatResponse","InvalidHeartbeatResponseSnafu","InvalidProtoMsg","InvalidProtoMsgSnafu","InvalidTableMetadata","InvalidTableMetadataSnafu","InvalidTxnResult","InvalidTxnResultSnafu","MoveRegion","MoveRegionSnafu","NextSequence","NextSequenceSnafu","OperateDatanode","OperateDatanodeSnafu","ParseOption","ParseOptionSnafu","PayloadNotExist","PayloadNotExistSnafu","PrimaryKeyNotFound","PrimaryKeyNotFoundSnafu","RegisterProcedureLoader","RegisterProcedureLoaderSnafu","RenameTable","RenameTableSnafu","Result","RetryLater","RetryLaterSnafu","RouteInfoCorrupted","RouteInfoCorruptedSnafu","SchemaAlreadyExists","SchemaAlreadyExistsSnafu","SendMessage","SendMessageSnafu","SequenceOutOfRange","SequenceOutOfRangeSnafu","SerdeJson","SerdeJsonSnafu","SubmitProcedure","SubmitProcedureSnafu","Table","TableAlreadyExists","TableAlreadyExistsSnafu","TableInfoNotFound","TableInfoNotFoundSnafu","TableNotFound","TableNotFoundSnafu","TableRouteNotFound","TableRouteNotFoundSnafu","TableSnafu","Unexpected","UnexpectedSequenceValue","UnexpectedSequenceValueSnafu","UnexpectedSnafu","Unsupported","UnsupportedSnafu","WaitProcedure","WaitProcedureSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_exceeded_size_limit","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_retry_later","key","key","key","name","next","operation","peer","provide","reason","region","retry_later","schema","source","start","status_code","step","table_id","table_name","table_name","table_name","table_name","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","catalog","catalog","code","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","error","error","error","error","error","error","error","error","key","key","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","name","operation","peer","reason","region","schema","source","source","source","source","source","source","source","source","source","source","start","step","table_id","table_name","table_name","table_name","table_name","table_name","type_name","value","handler","mailbox","utils","Continue","Done","HandleControl","HandlerGroupExecutor","HeartbeatResponseHandler","HeartbeatResponseHandlerContext","HeartbeatResponseHandlerExecutor","HeartbeatResponseHandlerExecutorRef","HeartbeatResponseHandlerRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","from","from","from","from_subset","from_subset","from_subset","handle","handle","handle","handlers","incoming_message","init","init","init","into","into","into","into_request","into_request","into_request","is_acceptable","is_in_subset","is_in_subset","is_in_subset","mailbox","new","new","parse_mailbox_message","response","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ParseMailboxMessageHandler","borrow","borrow_mut","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","is_acceptable","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","HeartbeatMailbox","IncomingMessage","MailboxRef","MessageMeta","OutgoingMessage","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from_ref","from_subset","from_subset","id","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","send","sender","subject","to","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","mailbox_message_to_incoming_message","outgoing_message_to_mailbox_message","CloseRegion","CloseRegion","Instruction","InstructionReply","InvalidateTableCache","InvalidateTableIdCache","InvalidateTableNameCache","OpenRegion","OpenRegion","OpenRegion","RegionIdent","SimpleReply","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cluster_id","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","datanode_id","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","engine","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","get_region_id","hash","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","options","region_ident","region_number","region_storage_path","result","serialize","serialize","serialize","serialize","serialize","table_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","CACHE_KEY_PREFIXES","CATALOG_NAME_KEY_PATTERN","CATALOG_NAME_KEY_PREFIX","DATANODE_TABLE_KEY_PATTERN","DATANODE_TABLE_KEY_PREFIX","DeserializedValueWithBytes","NAME_PATTERN","REMOVED_PREFIX","RegionDistribution","SCHEMA_NAME_KEY_PATTERN","SCHEMA_NAME_KEY_PREFIX","TABLE_INFO_KEY_PREFIX","TABLE_NAME_KEY_PATTERN","TABLE_NAME_KEY_PREFIX","TABLE_REGION_KEY_PREFIX","TABLE_ROUTE_PREFIX","TableMetaKey","TableMetadataManager","TableMetadataManagerRef","__private_field","__private_field","__private_field","__private_field","as_raw_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","catalog_manager","catalog_manager","catalog_name","clone","clone_into","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_table_metadata","datanode_table","datanode_table_manager","datanode_table_manager","delete_table_metadata","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","ensure_values","fmt","from","from","from","from","from","from","from_inner","from_inner_bytes","from_inner_slice","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_full_table_info","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into_bytes","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kv_backend","kv_backend","new","rename_table","schema_manager","schema_manager","schema_name","serialize","table_info","table_info_manager","table_info_manager","table_name","table_name_manager","table_name_manager","table_region","table_route","table_route_manager","table_route_manager","test_utils","to_owned","to_removed_key","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_table_info","update_table_route","vzip","vzip","vzip","vzip","vzip","vzip","CatalogManager","CatalogNameKey","CatalogNameValue","as_raw_key","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","catalog","catalog_decoder","catalog_names","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","exists","fmt","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","range_start_key","serialize","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DatanodeTableKey","DatanodeTableManager","DatanodeTableValue","RegionInfo","as_raw_key","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_create_txn","build_delete_txn","build_update_txn","clone","clone","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","datanode_id","datanode_table_value_decoder","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","engine","eq","eq","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","get","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","new","prefix","range_start_key","region_info","region_options","region_storage_path","regions","serialize","serialize","strip_table_id","table_id","table_id","tables","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","OPT_KEY_TTL","SchemaManager","SchemaNameKey","SchemaNameValue","as_raw_key","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","catalog","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","eq","exists","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","get","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","range_start_key","schema","schema_decoder","schema_names","serialize","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","ttl","type_id","type_id","type_id","vzip","vzip","vzip","TableInfoKey","TableInfoManager","TableInfoValue","as_raw_key","batch_get","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_create_txn","build_decode_fn","build_delete_txn","build_get_txn","build_update_txn","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","get","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","new","serialize","table_id","table_info","table_name","table_ref","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","type_id","type_id","type_id","update","version","vzip","vzip","vzip","with_update","TableNameKey","TableNameManager","TableNameValue","as_raw_key","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_create_txn","build_delete_txn","build_update_txn","catalog","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","exists","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","get","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","new","prefix_to_table","schema","serialize","strip_table_name","table","table_id","table_id","tables","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","RegionDistribution","TableRegionKey","TableRegionValue","as_raw_key","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","fmt","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","new","region_distribution","serialize","table_id","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from_raw_value","try_into","try_into","type_id","type_id","version","vzip","vzip","TableRouteKey","TableRouteManager","TableRouteValue","as_raw_key","batch_get","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_create_txn","build_decode_fn","build_delete_txn","build_get_txn","build_update_txn","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","get","get_region_distribution","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","new","new","new","region_routes","serialize","table_id","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_as_raw_value","try_from","try_from","try_from","try_from_raw_value","try_into","try_into","try_into","type_id","type_id","type_id","update","version","vzip","vzip","vzip","new_test_table_info","KvBackend","KvBackendRef","ResettableKvBackend","ResettableKvBackendRef","TxnService","as_any","batch_delete","batch_get","batch_put","compare_and_put","delete","delete_range","etcd","exists","get","memory","name","put","put_conditionally","range","reset","test","txn","BatchDelete","BatchGet","BatchPut","CompareAndPut","Delete","EtcdStore","Get","KvPair","MAX_TXN_SIZE","Put","as_any","batch_delete","batch_get","batch_put","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","compare_and_put","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","delete_range","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","do_multi_txn","drop","drop","drop","drop","drop","drop","drop","drop","drop","expect","from","from","from","from","from","from","from","from","from","from_etcd_kv","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","key","key","key","keys","keys","kvs","name","new","options","options","options","options","options","options","put","put_options","range","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_endpoints","with_etcd_client","MemoryKvBackend","_phantom","as_any","batch_delete","batch_get","batch_put","borrow","borrow_mut","clear","compare_and_put","compat","compat_mut","compat_ref","default","delete_range","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","is_in_subset","kvs","name","new","put","range","reset","to_string","to_subset","to_subset_unchecked","try_from","try_into","txn","type_id","vzip","mock_kvs","prepare_kv","test_kv_batch_delete","test_kv_batch_get","test_kv_compare_and_put","test_kv_delete_range","test_kv_put","test_kv_range","test_kv_range_2","Compare","CompareOp","Delete","Equal","Error","Get","Greater","Less","NotEqual","Put","ResponseDelete","ResponseGet","ResponsePut","Txn","TxnOp","TxnOpResponse","TxnRequest","TxnResponse","TxnService","and_then","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_else","c_then","c_when","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","compare_with_value","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","etcd","extend","failure","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","merge","merge_all","new","new","or_else","req","responses","succeeded","success","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txn","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","when","with_not_exist_value","with_value","METRIC_META_CREATE_CATALOG","METRIC_META_CREATE_CATALOG_COUNTER","METRIC_META_CREATE_SCHEMA","METRIC_META_CREATE_SCHEMA_COUNTER","METRIC_META_PROCEDURE_ALTER_TABLE","METRIC_META_PROCEDURE_CREATE_TABLE","METRIC_META_PROCEDURE_DROP_TABLE","METRIC_META_PROCEDURE_TRUNCATE_TABLE","METRIC_META_TXN_REQUEST","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Peer","addr","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","empty","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_subset","get_hash","hash","id","init","into","into_request","is_in_subset","new","serialize","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","DEFAULT_ADAPTIVE_PAGE_SIZE","DEFAULT_PAGE_SIZE","Decoding","Error","Init","KeyValueDecoderFn","PaginationStream","PaginationStreamFactory","PaginationStreamState","Reading","SimpleKeyValueDecoder","adaptive_page_size","adaptive_range","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","decoder","decoder_fn","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","factory","from","from","from","from","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","keys_only","kv","kv","more","new","new","next","page_size","poll_next","range_end","read_next","state","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","try_reduce_adaptive_page_size","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","KeyValue","ResponseHeader","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cluster_id","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","ddl","deref","deref","deref_mut","deref_mut","drop","drop","eq","error_code","error_msg","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","key","key","lock","new","protocol_version","router","store","take_key","take_value","to_owned","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","util","value","value","vzip","vzip","AlterTable","AlterTableTask","CreateTable","CreateTableTask","DdlTask","DropTable","DropTableTask","SubmitDdlTaskRequest","SubmitDdlTaskResponse","TruncateTable","TruncateTableTask","alter_table","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog","catalog","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_table","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","new","new_alter_table","new_create_table","new_drop_table","new_truncate_table","partitions","schema","schema","serialize","serialize","serialize","serialize","table","table","table_id","table_id","table_id","table_info","table_name","table_name","table_name","table_name","table_ref","table_ref","table_ref","table_ref","task","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","LockRequest","LockResponse","UnlockRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","expire_secs","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","key","key","name","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Downgraded","Partition","Region","RegionRoute","RegionRoutes","RegionStatus","Table","TableRoute","as_utf8","as_utf8_vec","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_list","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","convert_to_region_leader_map","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","downgrade_leader","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","extract_all_peers","find_leader_regions","find_leaders","find_region_leader","find_region_leader","fmt","fmt","fmt","fmt","fmt","fmt","follower_peers","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_utf8","from_utf8_vec","id","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_leader_downgraded","leader_peer","leader_status","name","new","new_test","partition","region","region_distribution","region_leader_map","region_leaders","region_routes","serialize","serialize","serialize","serialize","serialize","serialize","table","table_name","table_schema","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_raw","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_list","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BatchDeleteRequest","BatchDeleteResponse","BatchGetRequest","BatchGetResponse","BatchPutRequest","BatchPutResponse","CompareAndPutRequest","CompareAndPutResponse","DeleteRangeRequest","DeleteRangeResponse","PutRequest","PutResponse","RangeRequest","RangeResponse","add_key","add_key","add_kv","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","default","default","default","default","default","default","default","deleted","deleted","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","expect","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","handle","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_success","key","key","key","key","keys","keys","keys_only","kvs","kvs","kvs","limit","more","new","new","new","new","new","new","new","prev_kv","prev_kv","prev_kv","prev_kv","prev_kv","prev_kv","prev_kvs","prev_kvs","prev_kvs","range","range","range_end","range_end","success","take_kvs","take_prev_kv","take_prev_kvs","take_prev_kvs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_proto_resp","to_proto_resp","to_proto_resp","to_proto_resp","to_proto_resp","to_proto_resp","to_proto_resp","to_range","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_expect","with_key","with_key","with_key","with_key","with_keys_only","with_limit","with_prefix","with_prefix","with_prev_kv","with_prev_kv","with_prev_kv","with_prev_kv","with_range","with_range","with_value","with_value","check_response_header","get_prefix_end_key","Inner","SEQ_PREFIX","Sequence","SequenceRef","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","force_quit","from","from","from_subset","from_subset","generator","init","init","initial","inner","into","into","into_request","into_request","is_in_subset","is_in_subset","name","new","next","next","next","next_range","range","step","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DELIMITER","KvStateStore","PROCEDURE_PREFIX","batch_delete","borrow","borrow_mut","compat","compat_mut","compat_ref","decode_kv","delete","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","kv_backend","max_size_per_range","new","put","strip_prefix","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","walk_top_down","with_prefix","TableName","borrow","borrow_mut","catalog_name","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from_ref","from_subset","get_hash","hash","init","into","into_request","is_in_subset","new","schema_name","serialize","table_name","table_ref","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","get_next_prefix_key","get_prefix_end_key"],"q":[[0,"common_meta"],[24,"common_meta::cache_invalidator"],[101,"common_meta::datanode_manager"],[109,"common_meta::ddl"],[194,"common_meta::ddl::alter_table"],[300,"common_meta::ddl::create_table"],[422,"common_meta::ddl::drop_table"],[520,"common_meta::ddl::truncate_table"],[614,"common_meta::ddl::utils"],[617,"common_meta::ddl_manager"],[658,"common_meta::distributed_time_constants"],[664,"common_meta::error"],[2050,"common_meta::error::Error"],[2145,"common_meta::heartbeat"],[2148,"common_meta::heartbeat::handler"],[2229,"common_meta::heartbeat::handler::parse_mailbox_message"],[2253,"common_meta::heartbeat::mailbox"],[2316,"common_meta::heartbeat::utils"],[2318,"common_meta::instruction"],[2507,"common_meta::key"],[2702,"common_meta::key::catalog_name"],[2790,"common_meta::key::datanode_table"],[2918,"common_meta::key::schema_name"],[3017,"common_meta::key::table_info"],[3111,"common_meta::key::table_name"],[3212,"common_meta::key::table_region"],[3273,"common_meta::key::table_route"],[3365,"common_meta::key::test_utils"],[3366,"common_meta::kv_backend"],[3389,"common_meta::kv_backend::etcd"],[3619,"common_meta::kv_backend::memory"],[3658,"common_meta::kv_backend::test"],[3667,"common_meta::kv_backend::txn"],[3892,"common_meta::metrics"],[4099,"common_meta::peer"],[4143,"common_meta::range_stream"],[4256,"common_meta::rpc"],[4330,"common_meta::rpc::ddl"],[4534,"common_meta::rpc::lock"],[4605,"common_meta::rpc::router"],[4839,"common_meta::rpc::store"],[5305,"common_meta::rpc::util"],[5307,"common_meta::sequence"],[5363,"common_meta::state_store"],[5396,"common_meta::table_name"],[5442,"common_meta::util"]],"d":["","","","","","","","","","","","","","","This mod defines all the keys used in the metadata store …","","","","","","","","","","","","Places context of invalidating cache. e.g., span id, trace …","","","KvBackend cache invalidator","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves a target <code>datanode</code>.","Handles DML, and DDL requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Broadcasts the invalidating table cache instruction.","Prepares to alter the table","","","Updates table metadata.","","","","","","","","","","","","","","","","","","","","","","","","Creates region proto alter kind from <code>table_info</code> and …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","proto alter Kind for adding/dropping columns.","","","","","Next column id of the table if the task adds columns to …","Broadcasts the invalidating table cache instructions.","","Update table metadata.","","Update table metadata for rename table operation.","","","","","","","Table info value before alteration.","","","","","","","","","","","","","","","","","","","","","","Creates metadata","","","","Creates regions on the Datanode","Prepares to create the table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Checks whether the table exists.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drops regions on Datanode","","","","Invalidates Table Cache","Prepares to drop the table","Removes metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Broadcasts invalidate table cache instruction.","","","Removes the table metadata.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Truncates regions on Datanode","Prepares to truncate the table","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","When creating table or region failover, a target node …","The frontend will also send heartbeats to Metasrv, sending …","Heartbeat interval time (is the basic unit of various …","","The lease seconds of metasrv leader.","The lease seconds of a region. It’s set by 3 heartbeat …","","SNAFU context selector for the <code>Error::BuildTableMeta</code> …","","SNAFU context selector for the <code>Error::CacheNotGet</code> variant","","SNAFU context selector for the <code>Error::CatalogAlreadyExists</code> …","","SNAFU context selector for the <code>Error::ConnectEtcd</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ConvertRawKey</code> variant","","SNAFU context selector for the <code>Error::ConvertRawTableInfo</code> …","","SNAFU context selector for the <code>Error::DecodeJson</code> variant","","SNAFU context selector for the <code>Error::DecodeProto</code> variant","","SNAFU context selector for the <code>Error::EmptyKey</code> variant","","SNAFU context selector for the <code>Error::EncodeJson</code> variant","","","SNAFU context selector for the <code>Error::EtcdFailed</code> variant","","SNAFU context selector for the <code>Error::EtcdTxnOpResponse</code> …","","SNAFU context selector for the <code>Error::External</code> variant","","SNAFU context selector for the <code>Error::GetKvCache</code> variant","","SNAFU context selector for the <code>Error::IllegalServerState</code> …","","SNAFU context selector for the <code>Error::InvalidCatalogValue</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidProtoMsg</code> …","","SNAFU context selector for the <code>Error::InvalidTableMetadata</code> …","","SNAFU context selector for the <code>Error::InvalidTxnResult</code> …","","SNAFU context selector for the <code>Error::MoveRegion</code> variant","","SNAFU context selector for the <code>Error::NextSequence</code> variant","","SNAFU context selector for the <code>Error::OperateDatanode</code> …","","SNAFU context selector for the <code>Error::ParseOption</code> variant","","SNAFU context selector for the <code>Error::PayloadNotExist</code> …","","SNAFU context selector for the <code>Error::PrimaryKeyNotFound</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::RenameTable</code> variant","","","SNAFU context selector for the <code>Error::RetryLater</code> variant","","SNAFU context selector for the <code>Error::RouteInfoCorrupted</code> …","","SNAFU context selector for the <code>Error::SchemaAlreadyExists</code> …","","SNAFU context selector for the <code>Error::SendMessage</code> variant","","SNAFU context selector for the <code>Error::SequenceOutOfRange</code> …","","SNAFU context selector for the <code>Error::SerdeJson</code> variant","","SNAFU context selector for the <code>Error::SubmitProcedure</code> …","","","SNAFU context selector for the <code>Error::TableAlreadyExists</code> …","","SNAFU context selector for the <code>Error::TableInfoNotFound</code> …","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::TableRouteNotFound</code> …","SNAFU context selector for the <code>Error::Table</code> variant","","","SNAFU context selector for the …","SNAFU context selector for the <code>Error::Unexpected</code> variant","","SNAFU context selector for the <code>Error::Unsupported</code> variant","","SNAFU context selector for the <code>Error::WaitProcedure</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the response exceeds the size limit.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determine whether it is a retry later type through …","","","","","","","","","","","Creates a new Error::RetryLater error from source <code>err</codeandleControl","","HeartbeatResponseHandler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","CATALOG_NAME_KEY: {CATALOG_NAME_KEY_PREFIX}/{catalog_name}","","","","A struct containing a deserialized value(<code>inner</code>) and an …","","","","SCHEMA_NAME_KEY: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates metadata for table and returns an error if …","","","","Deletes metadata for table. The caller MUST ensure it has …","","","","","","","","","","","","","","","","","","Deserialize behaviors:The <code>inner</code> field will be deserialized …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Notes: used for test purpose.","Returns a struct containing a deserialized value and an …","Returns a struct containing a deserialized value and an …","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns original <code>bytes</code>","","","","","","","","","","","","","","","","","Renames the table name and returns an error if different …","","","","Serialize behaviors:The <code>inner</code> field will be ignored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates table info and returns an error if different …","","","","","","","","","","","","","","","","","","","Decoder <code>KeyValue</code> to ({catalog},())","","","","","","","","","","","","","Creates <code>CatalogNameKey</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","RegionInfo For compatible reason, DON’T modify the field …","","","","","","","","","","Builds the create datanode table transactions. It only …","Builds the delete datanode table transactions. It only …","Builds the update datanode table transactions. It only …","","","","","","","","","","","","","","","","","","Decodes <code>KeyValue</code> to ((),<code>DatanodeTableValue</code>)","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates <code>SchemaNameKey</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Decodes <code>KeyValue</code> to ({schema},())","Returns a schema stream, it lists all schemas belong to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a create table info transaction, it expected the …","","Builds a delete table info transaction.","","Builds a update table info transaction, it expected the …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a create table name transaction. It only executes …","Builds a delete table name transaction. It only executes …","Builds a update table name transaction. It only executes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","It may return a subset of the <code>table_ids</code>.","","","","","","","Builds a create table route transaction. it expected the …","","Builds a delete table route transaction, it expected the …","","Builds a update table route transaction, it expected the …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if the key exists, not returning the value. If the …","","","","","Puts a value at a key. If <code>if_not_exists</code> is <code>true</code>, the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>KvPair</code> from etcd KeyValue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes a list of operations. The operations list will be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Takes a list of operations. The operations list will be …","","","","","None means the key does not exist.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Takes a list of comparison. If all comparisons passed in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Node identifier. Unique in a cluster.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The Range Request’s default page size.","Decoding key value pairs.","Error","At the start of reading.","","","","","Retrieving data from backend.","","It reduces the page size if the response size exceeds the …","Decreases the <code>page size</code> if the response message size …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","key is the first key for the range, If range_end is not …","keys_only when set returns only the keys and not the …","","","","","","","page_size is the pagination page size.","","range_end is the upper bound on the requested range [key, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The following cases in which the Region will be downgraded.","","","","","The Status of the Region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the HashMap&lt;RegionNumber, &amp;Peer&gt;;","","","","","","","","","","","","","","","","","","","","","","","Marks the Leader Region as downgraded.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns true if the Leader Region is downgraded.","","<code>None</code> by defaulteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key is the first key for the range, If range_end is not …","key is the key, in bytes, to put into the key-value store.","key is the key, in bytes, to put into the key-value store.","key is the first key to delete in the range.","","","keys_only when set returns only the keys and not the …","","","","limit is a limit on the number of keys returned for the …","","","","","","","","","If prev_kv is set, gets the previous key-value pair before …","","If prev_kv is set, gets the previous key-value pairs …","If prev_kv is set, gets the previous key-value pairs …","","If prev_kv is set, gets the previous key-value pairs …","","","","Returns the <code>RangeBounds</code>.","Returns the <code>RangeBounds</code>.","range_end is the upper bound on the requested range [key, …","range_end is the key following the last key to delete for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","value is the value, in bytes, to associate with the key in …","value is the value, in bytes, to associate with the key in …","","","","","","","","","","","","","","","expect is the previous value, in bytes","key is the first key for the range, If range_end is not …","key is the key, in bytes, to put into the key-value store.","key is the key, in bytes, to put into the key-value store.","key is the first key to delete in the range. If range_end …","keys_only when set returns only the keys and not the …","limit is a limit on the number of keys returned for the …","Gets all keys prefixed with key. range_end is the key plus …","Deletes all keys prefixed with key. range_end is one bit …","If prev_kv is set, gets the previous key-value pair before …","If prev_kv is set, gets the previous key-value pair before …","If prev_kv is set, gets the previous key-value pair before …","If prev_kv is set, gets the previous key-value pairs …","key is the first key for the range, If range_end is not …","key is the first key to delete in the range.","value is the value, in bytes, to associate with the key in …","value is the value, in bytes, to associate with the key in …","","Get prefix end key of <code>key</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","returns the <code>next</code> value directly if it is in the <code>range</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Get next prefix key of <code>key</code>.","Get prefix end key of <code>key</code>."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,14,2,10,14,2,10,14,2,10,14,2,10,14,2,2,10,14,2,10,14,2,10,14,2,10,14,2,10,14,2,10,14,2,10,14,2,10,14,2,306,10,307,10,14,307,10,14,10,14,2,2,10,14,2,10,14,2,10,14,2,10,14,2,10,14,2,10,14,2,0,0,0,0,0,308,309,309,0,0,0,0,0,0,0,0,24,27,23,24,27,23,23,23,23,24,27,24,27,23,24,27,23,24,27,23,310,0,23,27,24,27,23,24,27,23,24,27,23,0,27,24,27,23,23,24,27,23,24,27,23,24,27,23,24,27,23,24,27,23,311,23,23,24,27,23,24,27,23,0,24,27,23,24,27,23,24,27,23,0,24,27,23,0,0,0,35,35,35,31,35,31,31,35,35,31,35,42,31,35,42,31,42,31,35,42,31,35,42,31,35,42,31,31,0,31,31,35,42,31,35,42,35,42,31,35,42,31,31,35,42,31,35,42,31,31,35,42,31,35,42,31,35,42,31,35,42,31,35,42,31,31,31,31,42,42,31,31,31,31,31,35,42,42,31,42,42,42,42,42,31,35,42,31,35,42,31,35,42,31,35,42,31,35,42,31,31,35,42,56,0,0,0,56,56,57,0,56,56,57,62,56,59,57,62,56,59,56,56,59,57,62,56,59,57,62,56,59,57,62,56,59,57,57,57,62,57,62,56,59,57,62,56,59,56,59,57,62,56,59,57,57,56,59,57,62,56,59,57,56,57,62,56,59,57,62,56,59,57,62,56,59,57,62,56,59,57,62,56,59,57,57,62,57,57,57,57,59,56,59,59,57,57,59,59,56,57,62,56,59,57,62,56,59,57,62,56,59,57,62,56,59,57,62,56,59,57,57,62,56,59,63,0,0,0,63,63,63,65,63,63,65,64,63,65,64,63,64,65,64,63,65,64,63,65,64,63,65,65,65,64,63,65,64,63,64,63,65,64,63,65,65,64,63,65,64,63,65,65,64,63,65,64,63,65,64,63,65,64,63,65,64,63,65,65,64,65,65,65,65,64,64,63,64,64,64,64,64,64,64,65,64,63,65,64,63,65,64,63,65,64,63,65,64,63,65,65,64,63,68,68,70,0,0,0,68,68,70,69,68,70,69,68,69,70,69,68,70,69,68,70,69,68,70,70,70,69,68,70,69,68,69,68,70,69,68,70,70,69,68,70,69,68,70,70,69,68,70,69,68,70,69,68,70,69,68,70,69,68,70,70,69,70,70,69,69,68,69,69,69,69,69,69,69,70,69,68,70,69,68,70,69,68,70,69,68,70,69,68,70,70,69,68,0,0,0,0,0,75,75,75,75,75,75,75,75,75,75,75,75,75,0,0,0,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,0,0,0,0,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,0,73,0,73,0,73,0,73,0,73,0,73,0,73,0,73,73,0,73,0,73,0,73,0,0,73,73,0,0,73,0,73,0,73,73,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,116,106,107,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,102,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,89,90,92,98,100,102,103,104,110,111,113,115,87,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,115,116,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,73,95,99,112,91,73,94,134,73,109,115,73,107,73,91,73,91,115,93,124,96,105,108,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,120,99,87,89,118,119,90,91,92,93,120,121,94,122,123,95,124,125,96,126,127,128,97,98,129,99,100,102,130,103,104,105,106,107,131,108,109,110,111,112,113,115,132,133,116,134,135,73,312,313,314,315,316,317,318,319,314,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,315,326,327,316,338,317,339,340,341,342,343,344,334,328,345,346,329,330,331,347,318,332,335,319,314,348,320,321,349,312,313,333,350,351,322,336,324,325,352,353,354,355,338,342,355,351,325,313,340,341,343,344,345,348,352,353,355,356,338,338,325,339,328,346,349,350,340,335,0,0,0,143,143,0,0,0,0,0,0,0,144,145,143,144,145,143,144,145,143,144,145,143,144,145,143,144,145,143,144,145,143,144,145,143,143,144,145,143,144,145,143,357,358,145,145,144,144,145,143,144,145,143,144,145,143,357,144,145,143,144,144,145,0,144,144,145,143,144,145,143,144,145,143,144,145,143,144,145,143,144,145,143,0,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,0,0,0,0,0,153,150,153,150,150,150,153,150,153,150,153,150,153,150,153,150,153,150,150,150,150,150,150,150,150,153,150,150,150,153,150,150,153,150,153,150,153,150,153,150,153,153,153,150,150,150,153,150,153,150,153,150,153,150,153,150,153,150,0,0,159,160,0,0,160,159,159,0,159,160,0,0,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,156,157,160,156,156,156,156,156,157,157,157,157,157,160,160,160,160,160,157,156,156,157,157,158,158,159,159,160,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,156,156,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,158,158,158,156,158,157,156,157,158,159,160,156,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,156,157,158,159,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,174,175,176,359,167,51,172,174,175,176,167,51,172,174,175,176,51,167,167,0,51,51,167,51,172,174,175,176,167,51,172,174,175,176,167,51,172,174,175,176,167,0,167,167,167,167,51,51,172,172,174,174,175,175,176,176,167,51,172,174,175,176,51,167,51,172,174,175,176,0,51,167,51,172,174,175,176,51,51,51,51,167,51,172,174,175,176,167,167,167,51,172,174,175,176,51,167,51,172,174,175,176,51,51,167,51,172,174,175,176,167,51,172,174,175,176,167,167,167,167,167,167,0,51,0,167,167,0,167,167,0,0,167,167,0,51,0,167,51,172,174,175,176,167,51,172,174,175,176,167,51,172,174,175,176,167,51,172,174,175,176,167,51,172,174,175,176,167,167,167,51,172,174,175,176,0,0,0,184,168,184,187,168,184,187,184,0,168,184,184,168,184,187,168,184,187,168,184,187,168,184,168,184,187,168,184,187,187,168,184,187,184,168,184,184,187,168,184,187,184,168,184,187,168,184,187,168,184,187,168,184,187,168,184,187,168,168,184,184,187,184,184,168,184,187,168,184,187,187,168,184,184,187,187,168,184,187,168,184,187,168,184,187,0,0,0,0,188,188,171,183,191,188,171,183,191,171,171,171,183,191,183,191,188,171,183,191,188,171,183,191,188,171,183,191,188,0,183,188,171,183,191,188,171,183,191,183,191,188,171,183,191,183,183,191,188,183,191,188,171,183,191,183,191,188,171,183,191,171,188,171,183,191,188,171,183,191,188,171,183,191,188,171,183,191,171,188,171,191,188,188,191,183,183,191,183,191,188,188,191,171,183,191,188,188,171,183,191,188,171,183,191,191,188,171,183,191,191,188,171,183,191,188,171,183,191,191,188,171,183,191,0,0,0,0,193,179,193,194,179,193,194,193,193,194,193,194,179,193,194,179,193,194,179,193,194,179,193,194,179,193,194,179,193,194,194,179,193,194,193,194,179,193,193,194,179,193,194,193,194,179,193,194,179,179,193,194,179,193,194,179,193,194,179,193,194,179,179,193,193,193,0,179,194,193,194,193,179,193,194,179,193,194,194,179,193,193,194,194,194,179,193,194,194,179,193,194,179,193,194,0,0,0,195,180,195,180,50,195,180,50,180,180,180,180,180,50,50,195,180,50,195,180,50,195,180,50,195,180,50,195,180,50,50,195,180,50,50,195,50,195,180,50,50,195,180,50,180,195,180,50,195,180,50,195,180,50,195,180,50,180,195,180,50,50,195,50,50,50,50,195,195,180,50,195,180,50,50,195,180,50,50,195,180,50,195,180,50,50,50,195,180,50,50,0,0,0,196,181,196,197,181,196,197,181,181,181,196,196,197,196,197,181,196,197,181,196,197,181,196,197,181,181,196,197,181,196,197,197,181,196,197,197,181,196,196,197,181,196,196,197,196,197,181,196,197,181,181,196,197,181,196,197,181,196,197,181,196,197,181,181,196,197,196,196,197,196,196,197,197,181,196,197,196,181,196,197,181,196,197,197,181,196,196,197,197,181,196,197,181,196,197,181,196,197,0,0,0,198,198,199,198,199,199,199,198,199,198,199,198,199,198,199,198,199,199,198,199,199,198,199,198,199,199,198,199,198,199,198,199,198,199,198,199,198,199,199,199,198,199,198,198,199,198,199,199,198,199,199,198,199,198,199,199,198,199,0,0,0,201,182,201,182,67,201,182,67,182,182,182,182,182,67,67,201,182,67,201,182,67,201,182,67,201,182,67,201,182,67,67,201,182,67,67,201,67,201,182,67,67,201,182,67,182,182,201,182,67,201,182,67,201,182,67,201,182,67,182,201,182,67,67,67,201,67,201,201,182,67,201,182,67,67,201,182,67,67,201,182,67,201,182,67,67,67,201,182,67,0,0,0,0,0,0,226,226,226,226,226,226,226,0,226,226,0,226,226,226,226,360,0,0,0,0,0,0,0,0,0,0,0,0,211,211,211,211,215,211,216,217,218,219,220,221,222,215,211,216,217,218,219,220,221,222,211,211,215,211,216,217,218,219,220,221,222,215,211,216,217,218,219,220,221,222,215,211,216,217,218,219,220,221,222,211,215,211,216,217,218,219,220,221,222,215,211,216,217,218,219,220,221,222,211,215,211,216,217,218,219,220,221,222,221,215,211,216,217,218,219,220,221,222,215,215,211,216,217,218,219,220,221,222,215,211,216,217,218,219,220,221,222,215,211,216,217,218,219,220,221,222,215,211,216,217,218,219,220,221,222,215,211,216,217,218,219,220,221,222,216,217,221,222,218,220,219,211,215,216,217,218,219,220,222,211,221,211,215,211,216,217,218,219,220,221,222,215,211,216,217,218,219,220,221,222,215,211,216,216,217,217,218,218,219,219,220,220,221,221,222,222,215,211,216,217,218,219,220,221,222,211,215,211,216,217,218,219,220,221,222,217,221,215,211,216,217,218,219,220,221,222,211,211,0,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,0,0,0,0,0,0,0,0,0,0,0,228,229,361,228,229,229,229,228,232,232,232,0,0,0,0,0,0,190,233,229,230,228,231,232,190,233,229,230,228,231,232,190,190,190,190,229,230,228,231,232,190,229,230,228,231,232,190,230,231,230,233,229,230,228,231,232,190,233,229,230,228,231,232,190,233,229,230,228,231,232,190,231,190,233,229,230,228,231,232,190,233,229,230,228,231,232,190,233,229,230,228,231,232,190,229,230,228,231,232,190,0,231,231,229,230,228,231,232,190,233,229,230,228,231,231,232,190,229,230,228,231,232,190,233,229,230,228,231,232,190,233,229,230,228,231,232,190,233,229,230,228,231,232,190,233,229,230,228,231,232,190,233,229,230,228,231,232,190,230,190,190,230,190,190,190,233,233,231,230,229,230,228,231,232,190,233,229,230,228,231,232,190,233,229,230,228,231,232,190,233,233,229,230,228,231,232,232,190,233,229,230,228,231,232,190,361,233,229,230,228,231,232,190,233,229,230,228,231,232,190,190,230,230,0,0,0,0,0,0,0,0,0,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,235,237,237,239,239,241,241,242,242,243,243,244,244,245,245,246,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,235,237,239,241,242,243,244,245,246,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,362,362,362,0,0,0,0,362,0,248,248,362,248,250,251,362,248,250,251,362,248,250,251,362,248,250,251,362,248,250,251,251,250,362,248,250,251,362,248,250,251,362,248,250,251,250,362,248,250,251,362,248,250,251,362,248,250,251,362,248,250,251,251,362,248,250,251,250,362,248,250,251,248,248,248,251,248,248,250,251,248,250,248,248,250,362,248,250,251,362,248,250,251,362,248,250,251,362,248,250,251,250,248,362,248,250,251,362,248,250,251,0,0,254,185,254,185,254,185,254,185,254,254,185,254,185,254,185,0,254,185,254,185,254,185,185,254,254,254,185,185,254,185,185,185,185,254,185,254,185,254,185,254,185,254,185,254,185,185,185,0,185,254,0,0,185,185,254,185,185,254,185,254,185,254,185,254,185,254,185,0,185,185,254,185,256,0,256,0,0,256,0,0,0,256,0,49,30,256,76,66,60,49,71,30,256,76,66,60,49,71,66,71,30,256,76,66,60,49,71,30,256,76,66,60,49,71,30,256,76,66,60,49,71,60,76,30,256,76,66,60,49,71,30,256,76,66,60,49,71,66,60,49,71,30,256,76,66,60,49,71,66,60,49,71,256,76,66,60,49,71,30,256,76,66,60,49,71,30,256,76,66,60,49,71,30,256,76,66,60,49,71,30,256,76,66,60,49,71,30,256,76,66,60,49,71,30,256,76,66,60,49,71,76,60,256,256,256,256,60,66,71,66,60,49,71,66,71,76,66,71,60,66,60,49,71,66,60,49,71,30,30,256,76,66,60,49,71,30,256,76,66,60,49,71,30,256,256,76,76,66,66,60,60,49,49,71,71,30,256,76,66,60,49,71,30,256,76,66,60,49,71,30,256,76,66,60,49,71,0,0,0,264,265,266,264,265,266,264,265,266,264,265,266,264,265,266,264,265,266,264,265,266,264,265,266,264,264,265,266,264,265,265,266,264,265,266,264,265,266,264,265,266,264,265,266,264,265,266,265,266,264,264,265,266,264,265,266,264,265,266,264,265,266,264,265,266,264,265,266,270,0,0,0,0,0,0,0,0,0,271,274,268,269,61,270,271,272,274,268,269,61,270,271,272,268,269,61,270,271,272,268,269,61,270,271,272,272,274,268,269,61,270,271,272,274,268,269,61,270,271,272,274,268,269,61,270,271,272,0,61,271,274,268,269,61,270,271,272,274,268,269,61,270,271,272,268,269,61,270,271,272,61,274,268,269,61,270,271,272,268,269,61,270,271,272,0,0,0,0,274,268,269,61,270,271,272,61,274,268,269,61,270,271,271,272,272,268,269,61,270,271,272,274,268,269,61,270,271,272,0,0,269,271,274,268,269,61,270,271,272,274,268,269,61,270,271,272,274,268,269,61,270,271,272,274,268,269,61,270,271,272,61,61,61,271,268,271,271,61,0,274,268,268,268,269,61,270,271,272,268,269,269,268,269,61,270,271,272,274,268,269,61,270,271,272,274,268,269,61,270,271,272,274,268,269,269,61,270,271,272,268,274,268,269,61,270,271,272,274,268,269,61,270,271,272,272,274,268,269,61,270,271,272,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,204,206,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,209,205,206,204,207,283,208,284,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,278,279,284,207,210,210,278,278,209,279,280,280,206,281,204,282,207,283,208,284,210,210,278,209,209,279,205,205,280,206,206,281,204,204,282,207,207,283,208,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,283,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,283,210,209,207,208,205,204,210,278,280,206,210,278,210,209,205,206,204,207,208,209,279,206,204,283,208,281,282,284,210,208,210,208,283,278,283,281,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,278,279,280,281,282,283,284,0,210,278,280,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,278,209,279,279,205,280,280,206,281,281,204,282,282,207,283,283,208,284,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,210,278,209,279,205,280,206,281,204,282,207,283,208,284,209,207,210,278,209,279,205,280,206,281,204,282,207,283,208,284,207,210,209,207,208,210,210,210,208,209,206,204,208,210,208,209,207,0,0,0,0,0,0,301,302,301,302,301,302,301,302,301,302,301,302,301,302,301,302,302,301,302,301,302,302,301,302,302,301,301,302,301,302,301,302,302,301,301,302,302,302,302,302,301,302,301,302,301,302,301,302,301,302,301,302,0,0,0,304,304,304,304,304,304,0,304,304,304,304,304,304,304,304,304,304,304,304,304,304,0,304,304,304,304,304,304,304,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[[6,[5]]],[[9,[[8,[7]]]]]],[[10,[6,[5]]],[[9,[[8,[7]]]]]],[[2,11],[[9,[[8,[7]]]]]],[[2,12],[[9,[[8,[7,13]]]]]],[[14,2,11],[[9,[[8,[7]]]]]],[[2,15],[[9,[[8,[7]]]]]],[[2,15],[[9,[[8,[7,13]]]]]],[[14,2,15],[[9,[[8,[7]]]]]],[[],16],[[],16],[[],16],0,[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[]],[[]],[[]],0,0,0,0,0,[20,[[9,[[8,[7]]]]]],[21,[[9,[[8,[7]]]]]],[22,[[9,[[8,[7]]]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[23,23],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[24,25,[6,[26]]],[[9,[[8,[7]]]]]],0,0,[[],27],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,[[27,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[27,30],[[9,[[8,[7]]]]]],0,[[]],[[],17],[[],17],[[],17],[[]],[[]],[[]],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,[31,32],[31,[[34,[33]]]],[35,36],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[34,[38]]]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[31,39],[[34,[40]]]],[[25,33],34],0,[3],[3],[3],[3],[3],[3],[41,[[18,[35]]]],[41,[[18,[42]]]],[3],[3],[3],[31,[[44,[43]]]],[[31,45],[[9,[[8,[7]]]]]],[[35,28],29],[[42,28],29],[[]],[[]],[[]],[[36,23],[[44,[31]]]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],0,[31,46],[31,[[47,[43]]]],[[48,49,[51,[50]],23],[[34,[31]]]],[[49,[51,[50]],48,[17,[52]]],42],0,[31,[[34,[53]]]],[31,[[34,[53]]]],[31,[[34,[53]]]],[[31,25],34],[[31,43],34],[[35,54],18],[[42,54],18],0,[31,[[34,[53]]]],[42,11],[42,25],0,[42,55],0,[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[31,36],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[56,36],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,56],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[57,[[34,[58]]]],0,0,[3],[3],[3],[3],[3],[3],[3],[3],[41,[[18,[56]]]],[41,[[18,[59]]]],[3],[3],[3],[3],[57,[[44,[43]]]],[[57,45],[[9,[[8,[7]]]]]],[[56,28],29],[[59,28],29],[[]],[[]],[[]],[[]],[[36,23],[[44,[57]]]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],[57,46],[[48,60,[47,[61]],23],57],[[48,60,[47,[61]]],62],[57,[[34,[53]]]],[57,[[34,[53]]]],[57,[[34,[53]]]],[57,[[47,[61]]]],0,[[56,54],18],[[59,54],18],0,[57,11],[57,25],[59,55],0,[[]],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[57,36],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[63,36],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[3],[3],[3],[3],[3],[3],[41,[[18,[64]]]],[41,[[18,[63]]]],[3],[3],[3],[65,[[44,[43]]]],[[65,45],[[9,[[8,[7]]]]]],[[64,28],29],[[63,28],29],[[]],[[]],[[]],[[36,23],[[44,[65]]]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[65,46],[[48,66,[51,[67]],[51,[50]],23],65],[[48,66,[51,[67]],[51,[50]]],64],[65,[[34,[53]]]],[65,[[34,[53]]]],[65,[[34,[53]]]],[65,[[34,[53]]]],[64,[[47,[61]]]],[[64,54],18],[[63,54],18],0,[64,11],[64,25],0,[64,55],0,0,[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[65,36],[[]],[[]],[[]],0,0,0,0,0,0,[68,36],[[],37],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[3],[3],[3],[3],[3],[3],[41,[[18,[69]]]],[41,[[18,[68]]]],[3],[3],[3],[70,[[44,[43]]]],[[70,45],[[9,[[8,[7]]]]]],[[69,28],29],[[68,28],29],[[]],[[]],[[]],[[36,23],[[44,[70]]]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[70,46],[[48,71,[51,[50]],[47,[61]],23],70],[[48,71,[51,[50]],[47,[61]]],69],[70,[[34,[53]]]],[70,[[34,[53]]]],0,[[69,54],18],[[68,54],18],0,[69,11],[69,25],0,[69,15],[69,55],0,[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[70,36],[[]],[[]],[[]],[20,72],[73,74],[[36,36],43],0,0,[[]],[[]],0,[[],1],[[],1],[[],1],[75,23],0,[3],[3],[3],[[]],[[]],[[75,48,49],[[34,[76]]]],[[75,48,60],[[34,[76]]]],[[75,48,66],[[34,[76]]]],[[75,48,71],[[34,[76]]]],[[],3],[[]],[[],4],[[],16],[[77,78,79,80,81],75],0,[[75,48,49,[51,[50]]],[[34,[82]]]],[[75,48,60,[47,[61]]],[[34,[82]]]],[[75,27,30],[[9,[[8,[7]]]]]],[[75,48,66,[51,[50]],[51,[67]]],[[34,[82]]]],[[75,83],[[34,[82]]]],[[75,48,71,[51,[50]],[47,[61]]],[[34,[82]]]],0,[75,80],0,[[],17],[[]],[[],18],[[],18],[75,34],[[],19],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[73,84],[[],85],[73,[[17,[86]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,73],[[[89,[[88,[43]]]]],73],[[[90,[[88,[43]]]]],73],[[[91,[[88,[43]],[88,[48]],[88,[48]]]]],73],[[[92,[[88,[43]]]]],73],[[[93,[[88,[43]]]]],73],[[[94,[[88,[43]]]]],73],[[[95,[[88,[43]]]]],73],[[[96,[[88,[43]]]]],73],[97,73],[[[98,[[88,[43]]]]],73],[[[99,[[88,[43]],[88,[43]]]]],73],[[[100,[[88,[43]]]]],73],[[[102,[[88,[101]],[88,[43]]]]],73],[[[103,[[88,[43]]]]],73],[[[104,[[88,[43]]]]],73],[[[105,[[88,[43]]]]],73],[[[106,[[88,[43]]]]],73],[[[107,[[88,[43]],[88,[43]]]]],73],[[[108,[[88,[43]]]]],73],[[[109,[[88,[43]]]]],73],[[[110,[[88,[43]]]]],73],[[[111,[[88,[43]]]]],73],[[[112,[[88,[43]]]]],73],[[[113,[[88,[43]]]]],73],[[[115,[[88,[11]],[88,[114]],[88,[43]]]]],73],[116,73],0,0,[73,[[17,[85]]]],[87,87],[[[89,[117]]],[[89,[117]]]],[118,118],[119,119],[[[90,[117]]],[[90,[117]]]],[[[91,[117,117,117]]],[[91,[117,117,117]]]],[[[92,[117]]],[[92,[117]]]],[[[93,[117]]],[[93,[117]]]],[[[120,[117]]],[[120,[117]]]],[121,121],[[[94,[117]]],[[94,[117]]]],[122,122],[123,123],[[[95,[117]]],[[95,[117]]]],[[[124,[117]]],[[124,[117]]]],[125,125],[[[96,[117]]],[[96,[117]]]],[126,126],[127,127],[128,128],[97,97],[[[98,[117]]],[[98,[117]]]],[129,129],[[[99,[117,117]]],[[99,[117,117]]]],[[[100,[117]]],[[100,[117]]]],[[[102,[117,117]]],[[102,[117,117]]]],[130,130],[[[103,[117]]],[[103,[117]]]],[[[104,[117]]],[[104,[117]]]],[[[105,[117]]],[[105,[117]]]],[[[106,[117]]],[[106,[117]]]],[[[107,[117,117]]],[[107,[117,117]]]],[131,131],[[[108,[117]]],[[108,[117]]]],[[[109,[117]]],[[109,[117]]]],[[[110,[117]]],[[110,[117]]]],[[[111,[117]]],[[111,[117]]]],[[[112,[117]]],[[112,[117]]]],[[[113,[117]]],[[113,[117]]]],[[[115,[117,117,117]]],[[115,[117,117,117]]]],[132,132],[133,133],[116,116],[[[134,[117]]],[[134,[117]]]],[135,135],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[73,3,[47,[43]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[73,36],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,0,0,0,0,0,0,0,0,0,0,0,[87,[[18,[73]]]],[[[89,[[88,[43]]]]],[[18,[73]]]],[[[90,[[88,[43]]]]],[[18,[73]]]],[[[91,[[88,[43]],[88,[48]],[88,[48]]]]],[[18,[73]]]],[[[92,[[88,[43]]]]],[[18,[73]]]],[[[93,[[88,[43]]]]],[[18,[73]]]],[[[94,[[88,[43]]]]],[[18,[73]]]],[[[95,[[88,[43]]]]],[[18,[73]]]],[[[96,[[88,[43]]]]],[[18,[73]]]],[97,[[18,[73]]]],[[[98,[[88,[43]]]]],[[18,[73]]]],[[[99,[[88,[43]],[88,[43]]]]],[[18,[73]]]],[[[100,[[88,[43]]]]],[[18,[73]]]],[[[102,[[88,[101]],[88,[43]]]]],[[18,[73]]]],[[[103,[[88,[43]]]]],[[18,[73]]]],[[[104,[[88,[43]]]]],[[18,[73]]]],[[[105,[[88,[43]]]]],[[18,[73]]]],[[[106,[[88,[43]]]]],[[18,[73]]]],[[[107,[[88,[43]],[88,[43]]]]],[[18,[73]]]],[[[108,[[88,[43]]]]],[[18,[73]]]],[[[109,[[88,[43]]]]],[[18,[73]]]],[[[110,[[88,[43]]]]],[[18,[73]]]],[[[111,[[88,[43]]]]],[[18,[73]]]],[[[112,[[88,[43]]]]],[[18,[73]]]],[[[113,[[88,[43]]]]],[[18,[73]]]],[[[115,[[88,[11]],[88,[114]],[88,[43]]]]],[[18,[73]]]],[116,[[18,[73]]]],[[87,28],29],[[[89,[136]],28],29],[[118,28],29],[[119,28],29],[[[90,[136]],28],29],[[[91,[136,136,136]],28],29],[[[92,[136]],28],29],[[[93,[136]],28],29],[[[120,[136]],28],29],[[121,28],29],[[[94,[136]],28],29],[[122,28],29],[[123,28],29],[[[95,[136]],28],29],[[[124,[136]],28],29],[[125,28],29],[[[96,[136]],28],29],[[126,28],29],[[127,28],29],[[128,28],29],[[97,28],29],[[[98,[136]],28],29],[[129,28],29],[[[99,[136,136]],28],29],[[[100,[136]],28],29],[[[102,[136,136]],28],29],[[130,28],29],[[[103,[136]],28],29],[[[104,[136]],28],29],[[[105,[136]],28],29],[[[106,[136]],28],29],[[[107,[136,136]],28],29],[[131,28],29],[[[108,[136]],28],29],[[[109,[136]],28],29],[[[110,[136]],28],29],[[[111,[136]],28],29],[[[112,[136]],28],29],[[[113,[136]],28],29],[[[115,[136,136,136]],28],29],[[132,28],29],[[133,28],29],[[116,28],29],[[[134,[136]],28],29],[[135,28],29],[[73,28],29],[[73,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,73],[[[89,[[88,[43]]]]],73],[118,73],[119,73],[[[90,[[88,[43]]]]],73],[[[91,[[88,[43]],[88,[48]],[88,[48]]]]],73],[[[92,[[88,[43]]]]],73],[[[93,[[88,[43]]]]],73],[[[120,[[88,[43]]]]],73],[121,73],[[[94,[[88,[43]]]]],73],[122,73],[123,73],[[[95,[[88,[43]]]]],73],[[[124,[[88,[43]]]]],73],[125,73],[[[96,[[88,[43]]]]],73],[126,73],[127,73],[128,73],[97,73],[[[98,[[88,[43]]]]],73],[129,73],[[[99,[[88,[43]],[88,[43]]]]],73],[[[100,[[88,[43]]]]],73],[[[102,[[88,[101]],[88,[43]]]]],73],[130,73],[[[103,[[88,[43]]]]],73],[[[104,[[88,[43]]]]],73],[[[105,[[88,[43]]]]],73],[[[106,[[88,[43]]]]],73],[[[107,[[88,[43]],[88,[43]]]]],73],[131,73],[[[108,[[88,[43]]]]],73],[[[109,[[88,[43]]]]],73],[[[110,[[88,[43]]]]],73],[[[111,[[88,[43]]]]],73],[[[112,[[88,[43]]]]],73],[[[113,[[88,[43]]]]],73],[[[115,[[88,[11]],[88,[114]],[88,[43]]]]],73],[132,73],[133,73],[116,73],[[[134,[[88,[20]]]]],73],[135,73],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[73,16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[73,16],0,0,0,0,[73,[[17,[137]]]],0,0,[138],0,0,[[[0,[139,140,141]]],73],0,[73,[[17,[85]]]],0,[73,142],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],43],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[143,143],16],[[]],[[]],[[]],[[]],[[]],[[]],[144,[[9,[[8,[7]]]]]],[144,[[9,[[8,[7]]]]]],[[145,144],[[9,[[8,[7]]]]]],0,0,[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[144,16],[[],16],[[],16],[[],16],0,[[146,147],144],[[[47,[148]]],145],0,0,[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[]],[[]],[[]],0,[[]],[[]],[[],1],[[],1],[[],1],[[],149],[3],[3],[3],[[]],[[]],[[149,144],[[9,[[8,[7]]]]]],[[],3],[[]],[[],4],[[149,144],16],[[],16],[[],17],[[]],[[],18],[[],18],[[],19],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[150,150],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[3],[3],[[150,150],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[150,28],29],[[]],[[]],0,[[]],[[]],[[]],0,[[],3],[[],3],[[]],[[]],[[],4],[[],4],[[],16],[[],16],[[[152,[151]]],153],[[153,151],34],0,0,0,[[]],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],[154,[[34,[155]]]],[151,[[34,[154]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[156,156],[157,157],[158,158],[159,159],[160,160],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[41,[[18,[156]]]],[41,[[18,[157]]]],[41,[[18,[158]]]],[41,[[18,[159]]]],[41,[[18,[160]]]],[3],[3],[3],[3],[3],0,[[156,156],16],[[157,157],16],[[160,160],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[156,28],29],[[156,28],29],[[157,28],29],[[157,28],29],[[158,28],29],[[158,28],29],[[159,28],[[18,[161]]]],[[159,28],29],[[160,28],29],[[160,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[162,163]],164],48],[156,39],[[156,165]],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[156,36,[166,[43,43]]],158],0,0,0,0,0,[[156,54],18],[[157,54],18],[[158,54],18],[[159,54],18],[[160,54],18],0,[[]],[[]],[[]],[[]],[[]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[47,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[167,168],0,0,[[[51,[[0,[169,170,117]]]]],[[51,[[0,[169,170,117]]]]]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[167,25,[47,[61]]],34],0,[167,171],0,[[167,[51,[50]],[51,[67]]],34],[3],[[[51,[[0,[170,169]]]]]],[3],[172,173],[3],[174,173],[3],[3],[175,173],[176,173],[3],[3],[3],[3],[3],[3],[3],[41,[[18,[[51,[[0,[170,169]]]]]]]],[3],[3],[3],[3],[3],[3],0,[[[51,[[0,[170,169,136]]]],28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[169,170]]],[[51,[[0,[169,170]]]]]],[177,[[34,[[51,[[0,[169,170]]]]]]]],[[[6,[5]]],[[34,[[51,[[0,[169,170]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[167,11],34],[167,34],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[[0,[169,170]]]]],[[47,[5]]]],[[[51,[[0,[169,170]]]]],[[0,[169,170]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[167,178],0,[178,167],[[167,[51,[50]],43],34],[167,179],0,0,[[[51,[[0,[170,169]]]],54],18],0,[167,180],0,0,[167,181],0,0,0,[167,182],0,0,[[]],[36,43],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[167,[51,[50]],25],34],[[167,11,183,[51,[67]],[47,[61]],[166,[43,43]]],34],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[184,[[47,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[185,34],[168,[[186,[[34,[43]]]]]],[184,184],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[168,184,16],34],[[],184],[3],[3],[3],[3],[3],[3],[41,[[18,[187]]]],[3],[3],[3],[[184,184],16],[[168,184],[[34,[16]]]],[[184,28],29],[[184,28],29],[[187,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],0,[178,168],[36,184],[[],43],[[187,54],18],[[]],[[],43],[[],17],[[],17],[[],17],[[]],[[]],[[]],[187,[[34,[[47,[5]]]]]],[[],18],[[],18],[36,[[34,[184]]]],[[],18],[[[6,[5]]],[[34,[[17,[187]]]]]],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[]],[[]],[[]],0,0,0,0,[188,[[47,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[171,11,36,36,[166,[43,43]],189],[[34,[190]]]],[[171,11,189],[[34,[190]]]],[[171,11,183,189,189,[166,[43,43]]],[[34,[190]]]],[183,183],[191,191],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[185,34],[[],183],[3],[3],[3],[3],[3],[3],[3],[3],[41,[[18,[183]]]],[41,[[18,[191]]]],[3],[3],[3],[3],0,[[183,183],16],[[191,191],16],[[188,28],29],[[183,28],29],[[191,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[171,188],[[34,[[17,[191]]]]]],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],0,[[192,11],188],[178,171],[[11,[47,[114]],183],191],[192,43],[192,43],0,0,0,0,[[183,54],18],[[191,54],18],[[[6,[5]]],[[34,[11]]]],0,0,[[171,192],[[186,[[34,[191]]]]]],[[]],[[]],[[],43],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[191,[[34,[[47,[5]]]]]],[[],18],[[],18],[[],18],[[],18],[[[6,[5]]],[[34,[191]]]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]],0,0,0,0,[193,[[47,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[193,193],[194,194],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[179,193,[17,[194]],16],34],[[],193],[[],194],[3],[3],[3],[3],[3],[3],[41,[[18,[194]]]],[3],[3],[3],[[193,193],16],[[194,194],16],[[179,193],[[34,[16]]]],[[193,28],29],[[193,28],29],[[194,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[179,193],[[34,[[17,[194]]]]]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],0,[178,179],[[36,36],193],[36,43],0,[185,34],[[179,36],[[186,[[34,[43]]]]]],[[194,54],18],[[]],[[]],[[],43],[[],17],[[],17],[[],17],[[]],[[]],[[]],[194,[[34,[[47,[5]]]]]],[[],18],[[],18],[36,[[34,[193]]]],[[],18],[[[166,[43,43]]],[[18,[194]]]],[[[6,[5]]],[[34,[[17,[194]]]]]],[[],18],[[],18],[[],18],0,[[],19],[[],19],[[],19],[[]],[[]],[[]],0,0,0,[195,[[47,[5]]]],[[180,[6,[11]]],[[34,[[166,[11,50]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[180,11,50],34],[[[47,[5]]],72],[[180,11,[51,[50]]],[[34,[190]]]],[[180,11]],[[180,11,[51,[50]],50],34],[50,50],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[3],[3],[41,[[18,[50]]]],[3],[3],[3],[[50,50],16],[[195,28],29],[[50,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[180,11],[[34,[[17,[[51,[50]]]]]]]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],0,[11,195],[178,180],[25,50],[[50,54],18],0,0,[50,15],[50,55],[[]],[[],43],[[],17],[[],17],[[],17],[[]],[[]],[[]],[50,[[34,[[47,[5]]]]]],[[],18],[[],18],[[],18],[[[6,[5]]],[[34,[50]]]],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[50,25],50],0,[[]],[[]],[[]],[[50,72],50],0,0,0,[196,[[47,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[181,196,11],[[34,[190]]]],[[181,196,11],[[34,[190]]]],[[181,196,196,11],[[34,[190]]]],0,[196,196],[197,197],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],181],[3],[3],[3],[3],[3],[3],[41,[[18,[197]]]],[3],[3],[3],[[197,197],16],[[181,196],[[34,[16]]]],[[196,28],29],[[196,28],29],[[197,28],29],[[]],[[]],[15,196],[[]],[[]],[[]],[[]],[[]],[[]],[[181,196],[[34,[[17,[197]]]]]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],0,[178,181],[[36,36,36],196],[11,197],[[36,36],43],0,[[197,54],18],[[[6,[5]]],[[34,[43]]]],0,[197,11],0,[[181,36,36],[[34,[47]]]],[[]],[[]],[[],43],[[],17],[[],17],[[],17],[[]],[[]],[[]],[197,[[34,[[47,[5]]]]]],[[],18],[36,[[34,[196]]]],[[],18],[[],18],[[[6,[5]]],[[34,[197]]]],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[]],[[]],[[]],0,0,0,[198,[[47,[5]]]],[[]],[[]],[[]],[[]],[199,199],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[41,[[18,[199]]]],[3],[3],[[199,199],16],[[198,28],29],[[199,28],29],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],4],[[],4],[[],16],[[],16],[11,198],[200,199],0,[[199,54],18],0,[[]],[[],43],[[],17],[[],17],[[]],[[]],[199,[[34,[[47,[5]]]]]],[[],18],[[],18],[[[6,[5]]],[[34,[199]]]],[[],18],[[],18],[[],19],[[],19],0,[[]],[[]],0,0,0,[201,[[47,[5]]]],[[182,[6,[11]]],[[34,[[166,[11,67]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[182,11,67],34],[[[47,[5]]],72],[[182,11,[51,[67]]],[[34,[190]]]],[[182,11]],[[182,11,[51,[67]],67],34],[67,67],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[3],[3],[41,[[18,[67]]]],[3],[3],[3],[[67,67],16],[[201,28],29],[[67,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[182,11],[[34,[[17,[[51,[67]]]]]]]],[[182,11],[[34,[[17,[189]]]]]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],0,[11,201],[178,182],[[[47,[61]]],67],0,[[67,54],18],0,[[]],[[],43],[[],17],[[],17],[[],17],[[]],[[]],[[]],[67,[[34,[[47,[5]]]]]],[[],18],[[],18],[[],18],[[[6,[5]]],[[34,[67]]]],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[67,[47,[61]]],67],0,[[]],[[]],[[]],[[202,203],38],0,0,0,0,0,[[],84],[204,[[9,[[8,[7]]]]]],[205,[[9,[[8,[7]]]]]],[206,[[9,[[8,[7]]]]]],[207,[[9,[[8,[7]]]]]],[[141,[6,[5]],16],[[9,[[8,[7]]]]]],[208,[[9,[[8,[7]]]]]],0,[[141,[6,[5]]],[[9,[[8,[7]]]]]],[[141,[6,[5]]],[[9,[[8,[7]]]]]],0,[[],36],[209,[[9,[[8,[7]]]]]],[[141,[47,[5]],[47,[5]],16],[[9,[[8,[7]]]]]],[210,[[9,[[8,[7]]]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[211,84],[[211,204],[[9,[[8,[7]]]]]],[[211,205],[[9,[[8,[7]]]]]],[[211,206],[[9,[[8,[7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[211,207],[[9,[[8,[7]]]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[211,208],[[9,[[8,[7]]]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[211,[47,[212]]],[[34,[[47,[213]]]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[214,185],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,[211,36],[214,215],0,0,0,0,0,0,[[211,209],[[9,[[8,[7]]]]]],0,[[211,210],[[9,[[8,[7]]]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[210,[[34,[216]]]],[[],18],[209,[[34,[217]]]],[205,[[34,[218]]]],[[],18],[[],18],[206,[[34,[219]]]],[[],18],[204,[[34,[220]]]],[[],18],[207,[[34,[221]]]],[[],18],[208,[[34,[222]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[211,190],[[9,[[8,[7]]]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[223,[[6,[[223,[36]]]]]]],[[34,[178]]]],[224,178],0,0,[[[225,[[0,[139,140,141]]]]],84],[[[225,[[0,[139,140,141]]]],204],[[9,[[8,[7]]]]]],[[[225,[[0,[139,140,141]]]],205],[[9,[[8,[7]]]]]],[[[225,[[0,[139,140,141]]]],206],[[9,[[8,[7]]]]]],[[]],[[]],[225],[[[225,[[0,[139,140,141]]]],207],[[9,[[8,[7]]]]]],[[],1],[[],1],[[],1],[[],225],[[[225,[[0,[139,140,141]]]],208],[[9,[[8,[7]]]]]],[3],[3],[3],[[225,28],29],[[]],[[]],[[],3],[[]],[[],4],[[],16],0,[[[225,[[0,[139,140,141]]]]],36],[[],225],[[[225,[[0,[139,140,141]]]],209],[[9,[[8,[7]]]]]],[[[225,[[0,[139,140,141]]]],210],[[9,[[8,[7]]]]]],[[[225,[[0,[139,140,141]]]]]],[[],43],[[],17],[[]],[[],18],[[],18],[[[225,[[0,[139,140,141]]]],190],[[9,[[8,[7]]]]]],[[],19],[[]],[[],[[47,[185]]]],[226],[226],[226],[[[227,[226]]]],[226],[226],[226],[226],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[190,[88,[[47,[228]]]]],190],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[229,229],[230,230],[228,228],[231,231],[232,232],[190,190],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[230,[17,[[47,[5]]]]],16],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],231],[[],190],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[229,229],16],[[230,230],16],[[228,228],16],[[231,231],16],[[232,232],16],[[190,190],16],0,[[231,231]],0,[[229,28],29],[[230,28],29],[[228,28],29],[[231,28],29],[[232,28],29],[[190,28],29],[[]],[[]],[[]],[[]],[[]],[190,231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[190,190],190],[203,190],[[[47,[5]],229,[17,[[47,[5]]]]],230],[[],190],[[190,[88,[[47,[228]]]]],190],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[213,[[34,[233]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[234,[[34,[232]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[190,[[9,[[8,[7]]]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[190,[88,[[47,[230]]]]],190],[[[47,[5]],229],230],[[[47,[5]],229,[47,[5]]],230],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[235,236],[3],[237,238],[3],[239,240],[3],[241,238],[3],[242,240],[243,236],[3],[3],[244,236],[3],[245,236],[3],[246,236],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[20,20],[[]],[[],1],[[],1],[[],1],[[],20],[3],[3],[41,[[18,[20]]]],[3],[48,20],[[20,20],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[20,28],29],[[20,28],29],[247,20],[[]],[[]],[[]],[[[0,[162,163]],164],48],[[20,165]],0,[[],3],[[]],[[],4],[[],16],[[48,[88,[43]]],20],[[20,54],18],[[]],[[],43],[[],17],[[]],[[],18],[[],18],[[],19],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[248,210],[[9,[[8,[7]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,[[178,[47,[5]],[47,[5]],3,16,16],248],[[178,210,3,[227,[249]]],250],[251,17],0,[[[9,[250]],252],[[253,[17]]]],0,[248,34],0,[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[9,252],[[253,[[17,[18]]]]]],[248,34],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[254,254],[185,185],[[]],[[]],[254,48],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[3],[3],[3],[3],[3],[3],[[185,185],16],[254,101],[254,43],[[254,28],29],[[185,28],29],[[185,28],29],[[]],[[],185],[215,185],[214,185],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],4],[[],4],[[],16],[[],16],[185,[[6,[5]]]],0,0,[255,185],[254,48],0,0,[185,[[47,[5]]]],[185,[[47,[5]]]],[[]],[[]],[[],43],[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],0,[185,[[6,[5]]]],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[],76],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[41,[[18,[66]]]],[41,[[18,[60]]]],[41,[[18,[49]]]],[41,[[18,[71]]]],[3],[3],[3],[3],[3],[3],[3],[[66,66],16],[[60,60],16],[[49,49],16],[[71,71],16],[[256,28],29],[[76,28],29],[[66,28],29],[[60,28],29],[[49,28],29],[[71,28],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[257,[47,[26]],25],60],[32,256],[[257,[47,[26]],25],256],[[43,43,43,11],256],[[43,43,43,11],256],0,0,0,[[66,54],18],[[60,54],18],[[49,54],18],[[71,54],18],0,0,0,0,0,0,[66,15],[60,15],[49,15],[71,15],[66,55],[60,55],[49,55],[71,55],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[258,[[34,[256]]]],[[],18],[[],18],[259,[[34,[76]]]],[[],18],[260,[[34,[66]]]],[[],18],[261,[[34,[60]]]],[262,[[34,[49]]]],[[],18],[[],18],[263,[[34,[71]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,[[264,28],29],[[265,28],29],[[266,28],29],[[]],[[]],[267,265],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],0,0,0,[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[[6,[5]],54],18],[[[6,[[47,[5]]]],54],18],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[268,268],[269,269],[61,61],[270,270],[271,271],[272,272],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[6,[61]]],[[166,[114,20]]]],[[],61],[[],271],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[41,[[18,[268]]]],[41,[[18,[269]]]],[41,[[18,[61]]]],[41,[[18,[270]]]],[41,[[18,[271]]]],[41,[[18,[272]]]],[61],[3],[3],[3],[3],[3],[3],[3],[[268,268],16],[[269,269],16],[[61,61],16],[[270,270],16],[[271,271],16],[[272,272],16],[[[6,[61]]],[[47,[20]]]],[[[6,[61]],20],[[47,[114]]]],[[[6,[61]]],[[273,[20]]]],[[[6,[61]],114],[[17,[20]]]],[[274,114],[[17,[20]]]],[[268,28],29],[[269,28],29],[[61,28],29],[[270,28],29],[[271,28],29],[[272,28],29],0,[[]],[[]],[[]],[[]],[[]],[[]],[275,271],[[]],[26,272],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,[[18,[[47,[5]]]]]],[41,[[18,[[47,[[47,[5]]]]]]]],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[61,16],0,0,0,[[269,[47,[61]]],268],[39,271],0,0,[[[6,[61]]],[[34,[189]]]],[274,[[166,[114,20]]]],0,0,[[268,54],18],[[269,54],18],[[61,54],18],[[270,54],18],[[271,54],18],[[272,54],18],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[276,[[34,[269]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[[6,[247]],277],[[34,[268]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[205,[88,[[47,[5]]]]],205],[[204,[88,[[47,[5]]]]],204],[[206,[88,[[47,[5]]]],[88,[[47,[5]]]]],206],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[210,210],[278,278],[209,209],[279,279],[205,205],[280,280],[206,206],[281,281],[204,204],[282,282],[207,207],[283,283],[208,208],[284,284],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],210],[[],209],[[],205],[[],206],[[],204],[[],207],[[],283],[[],208],[284,285],0,[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[278,278],16],[[279,279],16],[[284,284],16],0,[[210,28],29],[[210,28],29],[[278,28],29],[[278,28],29],[[209,28],29],[[279,28],29],[[280,28],29],[[280,28],29],[[206,28],29],[[281,28],29],[[204,28],29],[[282,28],29],[[207,28],29],[[283,28],29],[[208,28],29],[[284,28],29],[286,210],[[]],[[]],[[]],[287,209],[[]],[288,205],[[]],[[]],[[]],[289,206],[[]],[[]],[290,204],[[]],[291,207],[[]],[[]],[292,208],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[283,72],18],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[283,16],0,0,0,0,0,0,0,0,0,0,0,0,[[],210],[[],209],[[],205],[[],206],[[],204],[[],207],[[],208],0,0,0,0,0,0,0,0,0,[210],[208],0,0,0,[278,[[47,[185]]]],[283,[[17,[185]]]],[281,[[47,[185]]]],[284,[[47,[185]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[278,293],294],[[279,293],295],[[280,293],296],[[281,293],297],[[282,293],298],[[283,293],299],[[284,293],300],[[[47,[5]],[47,[5]]]],[[],43],[[],43],[[],43],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[294,[[34,[278]]]],[[],18],[[],18],[295,[[34,[279]]]],[[],18],[[],18],[[],18],[296,[[34,[280]]]],[[],18],[297,[[34,[281]]]],[[],18],[[],18],[[],18],[298,[[34,[282]]]],[[],18],[[],18],[299,[[34,[283]]]],[[],18],[300,[[34,[284]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[207,[88,[[47,[5]]]]],207],[[210,[88,[[47,[5]]]]],210],[[209,[88,[[47,[5]]]]],209],[[207,[88,[[47,[5]]]]],207],[[208,[88,[[47,[5]]]]],208],[210,210],[[210,285],210],[[210,[88,[[47,[5]]]]],210],[[208,[88,[[47,[5]]]]],208],[209,209],[206,206],[204,204],[208,208],[[210,[88,[[47,[5]]]],[88,[[47,[5]]]]],210],[[208,[88,[[47,[5]]]],[88,[[47,[5]]]]],208],[[209,[88,[[47,[5]]]]],209],[[207,[88,[[47,[5]]]]],207],[[[17,[293]]],34],[[[6,[5]]],[[47,[5]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[3],[3],0,[[]],[[]],[[]],[[]],0,[[],3],[[],3],0,0,[[]],[[]],[[],4],[[],4],[[],16],[[],16],0,[[[223,[36]],48,48,178],301],[301,[[34,[48]]]],[302,[[34,[48]]]],0,[302,[[34,[[303,[48]]]]]],0,0,[[],17],[[],17],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]],0,0,0,[[304,[6,[43]]],[[9,[[8,[7]]]]]],[[]],[[]],[[],1],[[],1],[[],1],[185,34],[[304,36],[[9,[[8,[7]]]]]],[3],[3],[3],[[]],[[]],[[],3],[[]],[[],4],[[],16],0,0,[178,304],[[304,36,[47,[5]]],[[9,[[8,[7]]]]]],[36,43],[[],17],[[]],[[],18],[[],18],[[],19],[[]],[[304,36],[[9,[[8,[7]]]]]],[36,43],0,[[]],[[]],0,[15,15],[[]],[[],1],[[],1],[[],1],[3],[3],[41,[[18,[15]]]],[3],[[15,15],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[15,28],29],[[15,28],29],[[]],[55,15],[196,15],[305,15],[[]],[[]],[[[0,[162,163]],164],48],[[15,165]],[[],3],[[]],[[],4],[[],16],[[[88,[43]],[88,[43]],[88,[43]]],15],0,[[15,54],18],0,[15,55],[[]],[[],43],[[],17],[[]],[[],18],[[],18],[[],19],[[]],[[[6,[5]]],[[47,[5]]]],[[[6,[5]]],[[47,[5]]]]],"c":[3213,3214,3253,3255,3270],"p":[[3,"Compat"],[3,"Context"],[15,"usize"],[3,"Request"],[15,"u8"],[15,"slice"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"DummyKvCacheInvalidator"],[6,"TableId"],[15,"u32"],[3,"Global"],[3,"DummyCacheInvalidator"],[3,"TableName"],[15,"bool"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"Peer"],[3,"RegionRequest"],[3,"QueryRequest"],[3,"DdlContext"],[3,"TableMetadataAllocatorContext"],[3,"RawTableInfo"],[3,"Partition"],[3,"ExecutorContext"],[3,"Formatter"],[6,"Result"],[3,"SubmitDdlTaskRequest"],[3,"AlterTableProcedure"],[3,"AlterExpr"],[4,"Kind"],[6,"Result"],[4,"AlterTableState"],[15,"str"],[3,"UncasedStr"],[3,"TableInfo"],[3,"RegionId"],[3,"AlterRequest"],[8,"Deserializer"],[3,"AlterTableData"],[3,"String"],[6,"Result"],[3,"Context"],[3,"LockKey"],[3,"Vec"],[15,"u64"],[3,"AlterTableTask"],[3,"TableInfoValue"],[3,"DeserializedValueWithBytes"],[6,"ColumnId"],[4,"Status"],[8,"Serializer"],[3,"TableReference"],[4,"CreateTableState"],[3,"CreateTableProcedure"],[3,"CreateRequest"],[3,"CreateTableData"],[3,"CreateTableTask"],[3,"RegionRoute"],[3,"TableCreator"],[4,"DropTableState"],[3,"DropTableData"],[3,"DropTableProcedure"],[3,"DropTableTask"],[3,"TableRouteValue"],[4,"TruncateTableState"],[3,"TruncateTableData"],[3,"TruncateTableProcedure"],[3,"TruncateTableTask"],[8,"FnOnce"],[4,"Error"],[4,"Error"],[3,"DdlManager"],[3,"SubmitDdlTaskResponse"],[6,"ProcedureManagerRef"],[6,"DatanodeManagerRef"],[6,"CacheInvalidatorRef"],[6,"TableMetadataManagerRef"],[6,"TableMetadataAllocatorRef"],[3,"ProcedureId"],[3,"ProcedureWithId"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[3,"EmptyKeySnafu"],[8,"Into"],[3,"InvalidTxnResultSnafu"],[3,"NextSequenceSnafu"],[3,"SequenceOutOfRangeSnafu"],[3,"UnexpectedSequenceValueSnafu"],[3,"TableInfoNotFoundSnafu"],[3,"UnsupportedSnafu"],[3,"PrimaryKeyNotFoundSnafu"],[3,"TableRouteNotFoundSnafu"],[3,"PayloadNotExistSnafu"],[3,"SendMessageSnafu"],[3,"ParseOptionSnafu"],[3,"RouteInfoCorruptedSnafu"],[15,"i32"],[3,"IllegalServerStateSnafu"],[3,"InvalidProtoMsgSnafu"],[3,"UnexpectedSnafu"],[3,"TableAlreadyExistsSnafu"],[3,"CatalogAlreadyExistsSnafu"],[3,"SchemaAlreadyExistsSnafu"],[3,"TableNotFoundSnafu"],[3,"RenameTableSnafu"],[3,"InvalidTableMetadataSnafu"],[3,"GetKvCacheSnafu"],[3,"CacheNotGetSnafu"],[3,"EtcdTxnOpResponseSnafu"],[6,"RegionNumber"],[3,"MoveRegionSnafu"],[3,"InvalidHeartbeatResponseSnafu"],[8,"Clone"],[3,"ConnectEtcdSnafu"],[3,"EtcdFailedSnafu"],[3,"RegisterProcedureLoaderSnafu"],[3,"SubmitProcedureSnafu"],[3,"WaitProcedureSnafu"],[3,"ConvertRawTableInfoSnafu"],[3,"BuildTableMetaSnafu"],[3,"TableSnafu"],[3,"DecodeProtoSnafu"],[3,"EncodeJsonSnafu"],[3,"DecodeJsonSnafu"],[3,"SerdeJsonSnafu"],[3,"ConvertAlterTableRequestSnafu"],[3,"ConvertRawKeySnafu"],[3,"InvalidCatalogValueSnafu"],[3,"ExternalSnafu"],[3,"OperateDatanodeSnafu"],[3,"RetryLaterSnafu"],[8,"Debug"],[8,"StackError"],[3,"Demand"],[8,"ErrorExt"],[8,"Send"],[8,"Sync"],[4,"StatusCode"],[4,"HandleControl"],[3,"HeartbeatResponseHandlerContext"],[3,"HandlerGroupExecutor"],[6,"MailboxRef"],[3,"HeartbeatResponse"],[6,"HeartbeatResponseHandlerRef"],[3,"ParseMailboxMessageHandler"],[3,"MessageMeta"],[6,"OutgoingMessage"],[3,"Sender"],[3,"HeartbeatMailbox"],[3,"MailboxMessage"],[6,"IncomingMessage"],[3,"RegionIdent"],[3,"SimpleReply"],[3,"OpenRegion"],[4,"Instruction"],[4,"InstructionReply"],[3,"Error"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[3,"HashMap"],[3,"TableMetadataManager"],[3,"CatalogManager"],[8,"Serialize"],[8,"DeserializeOwned"],[3,"DatanodeTableManager"],[3,"DATANODE_TABLE_KEY_PATTERN"],[3,"Regex"],[3,"TABLE_NAME_KEY_PATTERN"],[3,"CATALOG_NAME_KEY_PATTERN"],[3,"SCHEMA_NAME_KEY_PATTERN"],[3,"Bytes"],[6,"KvBackendRef"],[3,"SchemaManager"],[3,"TableInfoManager"],[3,"TableNameManager"],[3,"TableRouteManager"],[3,"RegionInfo"],[3,"CatalogNameKey"],[3,"KeyValue"],[6,"BoxStream"],[3,"CatalogNameValue"],[3,"DatanodeTableKey"],[6,"RegionDistribution"],[3,"Txn"],[3,"DatanodeTableValue"],[6,"DatanodeId"],[3,"SchemaNameKey"],[3,"SchemaNameValue"],[3,"TableInfoKey"],[3,"TableNameKey"],[3,"TableNameValue"],[3,"TableRegionKey"],[3,"TableRegionValue"],[6,"RegionDistribution"],[3,"TableRouteKey"],[6,"TableId"],[8,"IntoIterator"],[3,"BatchDeleteRequest"],[3,"BatchGetRequest"],[3,"BatchPutRequest"],[3,"CompareAndPutRequest"],[3,"DeleteRangeRequest"],[3,"PutRequest"],[3,"RangeRequest"],[3,"EtcdStore"],[3,"TxnOp"],[3,"TxnResponse"],[3,"KeyValue"],[3,"KvPair"],[3,"Get"],[3,"Put"],[3,"BatchGet"],[3,"BatchPut"],[3,"BatchDelete"],[3,"CompareAndPut"],[3,"Delete"],[8,"AsRef"],[3,"Client"],[3,"MemoryKvBackend"],[8,"KvBackend"],[3,"Arc"],[4,"TxnOp"],[4,"CompareOp"],[3,"Compare"],[3,"TxnRequest"],[4,"TxnOpResponse"],[3,"TxnResponse"],[4,"TxnOpResponse"],[3,"METRIC_META_TXN_REQUEST"],[6,"HistogramVec"],[3,"METRIC_META_CREATE_CATALOG"],[3,"Histogram"],[3,"METRIC_META_CREATE_CATALOG_COUNTER"],[6,"IntCounter"],[3,"METRIC_META_CREATE_SCHEMA"],[3,"METRIC_META_CREATE_SCHEMA_COUNTER"],[3,"METRIC_META_PROCEDURE_CREATE_TABLE"],[3,"METRIC_META_PROCEDURE_DROP_TABLE"],[3,"METRIC_META_PROCEDURE_ALTER_TABLE"],[3,"METRIC_META_PROCEDURE_TRUNCATE_TABLE"],[3,"Peer"],[3,"PaginationStreamFactory"],[6,"KeyValueDecoderFn"],[3,"PaginationStream"],[3,"SimpleKeyValueDecoder"],[3,"Context"],[4,"Poll"],[3,"ResponseHeader"],[3,"KeyValue"],[4,"DdlTask"],[3,"CreateTableExpr"],[4,"Task"],[3,"SubmitDdlTaskResponse"],[3,"DropTableTask"],[3,"CreateTableTask"],[3,"AlterTableTask"],[3,"TruncateTableTask"],[3,"LockRequest"],[3,"LockResponse"],[3,"UnlockRequest"],[3,"LockResponse"],[3,"TableRoute"],[3,"Table"],[4,"RegionStatus"],[3,"Region"],[3,"Partition"],[3,"HashSet"],[3,"RegionRoutes"],[3,"Region"],[3,"Table"],[3,"TableRoute"],[3,"RangeResponse"],[3,"PutResponse"],[3,"BatchGetResponse"],[3,"BatchPutResponse"],[3,"BatchDeleteResponse"],[3,"CompareAndPutResponse"],[3,"DeleteRangeResponse"],[15,"i64"],[3,"RangeRequest"],[3,"PutRequest"],[3,"BatchGetRequest"],[3,"BatchPutRequest"],[3,"BatchDeleteRequest"],[3,"CompareAndPutRequest"],[3,"DeleteRangeRequest"],[3,"ResponseHeader"],[3,"RangeResponse"],[3,"PutResponse"],[3,"BatchGetResponse"],[3,"BatchPutResponse"],[3,"BatchDeleteResponse"],[3,"CompareAndPutResponse"],[3,"DeleteRangeResponse"],[3,"Sequence"],[3,"Inner"],[3,"Range"],[3,"KvStateStore"],[3,"TableName"],[8,"KvCacheInvalidator"],[8,"CacheInvalidator"],[8,"DatanodeManager"],[8,"Datanode"],[8,"TableMetadataAllocator"],[8,"DdlTaskExecutor"],[13,"CatalogAlreadyExists"],[13,"SchemaAlreadyExists"],[13,"IllegalServerState"],[13,"InvalidTxnResult"],[13,"NextSequence"],[13,"UnexpectedSequenceValue"],[13,"SendMessage"],[13,"RouteInfoCorrupted"],[13,"InvalidProtoMsg"],[13,"Unexpected"],[13,"InvalidTableMetadata"],[13,"GetKvCache"],[13,"EtcdTxnOpResponse"],[13,"MoveRegion"],[13,"ConnectEtcd"],[13,"EtcdFailed"],[13,"BuildTableMeta"],[13,"DecodeProto"],[13,"EncodeJson"],[13,"DecodeJson"],[13,"SerdeJson"],[13,"ConvertRawKey"],[13,"PrimaryKeyNotFound"],[13,"ParseOption"],[13,"CacheNotGet"],[13,"EmptyKey"],[13,"SequenceOutOfRange"],[13,"TableInfoNotFound"],[13,"RegisterProcedureLoader"],[13,"SubmitProcedure"],[13,"Unsupported"],[13,"WaitProcedure"],[13,"ConvertRawTableInfo"],[13,"Table"],[13,"TableRouteNotFound"],[13,"PayloadNotExist"],[13,"ConvertAlterTableRequest"],[13,"TableAlreadyExists"],[13,"TableNotFound"],[13,"RenameTable"],[13,"InvalidCatalogValue"],[13,"External"],[13,"InvalidHeartbeatResponse"],[13,"OperateDatanode"],[13,"RetryLater"],[8,"HeartbeatResponseHandler"],[8,"HeartbeatResponseHandlerExecutor"],[8,"TableMetaKey"],[8,"ResettableKvBackend"],[8,"TxnService"],[4,"PaginationStreamState"]]},\
"common_procedure":{"doc":"Common traits and structures for the procedure framework.","t":"GDINNCNNDIDIGEDCNNENCKAKMAKAAMMKKKMKKKAKKAMMMMMNDNDNDNDENDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDRDDDGDLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLMAMMMMMMMMLLLLLLLMMMMLLMLMLLLLLLMMMMMALMLLLLLMMMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLMNNENDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLMMMMLLLMLLMLLMMLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLGGDIGNNNNDDDIDIGEDNNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLKLLLMMKKKLMLKLLLLMKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLMMMMMNERDDDNNLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLMLMOMLLAMMMLLLLLLLLLLLLLLLMLLLLGGDIGKLLLLLLKLLLLLLLLLKLMLLLLKLGF","n":["BoxedProcedure","Context","ContextProvider","Done","Done","Error","Executing","Failed","LockKey","Procedure","ProcedureId","ProcedureManager","ProcedureManagerRef","ProcedureState","ProcedureWithId","Result","Retrying","Running","Status","Suspended","Watcher","dump","error","execute","id","local","lock_key","options","procedure","procedure","procedure_id","procedure_state","procedure_state","procedure_watcher","provider","register_loader","start","stop","store","submit","type_name","watcher","error","error","persist","persist","subprocedures","CorruptedData","CorruptedDataSnafu","DeleteState","DeleteStateSnafu","DeleteStates","DeleteStatesSnafu","DuplicateProcedure","DuplicateProcedureSnafu","Error","External","ExternalSnafu","FromJson","FromJsonSnafu","ListState","ListStateSnafu","LoaderConflict","LoaderConflictSnafu","ManagerNotStart","ManagerNotStartSnafu","ProcedureExec","ProcedureExecSnafu","ProcedurePanic","ProcedurePanicSnafu","PutState","PutStateSnafu","Result","RetryLater","RetryLaterSnafu","RetryTimesExceeded","RetryTimesExceededSnafu","StartRemoveOutdatedMetaTask","StartRemoveOutdatedMetaTaskSnafu","StopRemoveOutdatedMetaTask","StopRemoveOutdatedMetaTaskSnafu","SubprocedureFailed","SubprocedureFailedSnafu","ToJson","ToJsonSnafu","WaitWatcher","WaitWatcherSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","external","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_error_ext","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","is_retry_later","key","key","keys","name","next","path","procedure_id","procedure_id","procedure_id","provide","retry_later","source","status_code","subprocedure_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","error","error","error","error","key","key","keys","location","location","location","location","location","location","location","location","location","location","location","location","location","name","path","procedure_id","procedure_id","procedure_id","source","source","source","source","source","source","source","source","source","source","subprocedure_id","LoadedProcedure","LocalManager","META_TTL","ManagerConfig","ManagerContext","ProcedureMeta","ProcedureMetaRef","RemoveOutdatedMetaFunction","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_remove_outdated_meta_task","call","child_notify","children","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","config","contains_procedure","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","find_procedures","finished_procedures","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","init","into","into","into","into","into","into","list_children","load_one_procedure","load_one_procedure_from_message","loaders","lock","lock_key","lock_map","lock_notify","manager_ctx","manager_ctx","max_retry_times","max_retry_times","messages","name","new","new","new","notify_by_subprocedure","num_children","on_procedures_finish","parent_id","parent_id","parent_path","procedure","procedure_state","procedure_state","procedure_store","procedure_watcher","procedures","procedures_in_tree","push_child","recover","register_loader","remove_messages","remove_outdated_meta","remove_outdated_meta_task","remove_outdated_meta_task_interval","remove_outdated_meta_ttl","retry_delay","retry_delay","runner","running","running","set_state","start","start","state","state","state_receiver","state_sender","step","stop","stop","submit","submit_root","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_procedure","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","watcher","Lock","LockMap","acquire_lock","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_owner","hold_lock","init","init","into","into","locks","new","owner","release_lock","switch_owner","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","waiters","Continue","Done","ExecResult","Failed","ProcedureGuard","RetryLater","Runner","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","commit_procedure","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","done","drop","drop","drop","drop","execute_once","execute_once_with_retry","execute_procedure_in_loop","exponential_builder","finish","finish","fmt","from","from","from","init","init","init","into","into","into","manager_ctx","manager_ctx","meta","meta","new","on_suspended","persist_procedure","procedure","rollback","rollback_procedure","rolling_back","run","running","step","store","submit_subprocedure","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_on_err","ProcedureConfig","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","init","into","max_retry_times","retry_delay","serialize","to_owned","try_from","try_into","type_id","vzip","BoxedProcedure","BoxedProcedureLoader","Context","ContextProvider","ContextProviderRef","Done","Done","Executing","Failed","LockKey","ParseIdError","ParseIdSnafu","Procedure","ProcedureId","ProcedureManager","ProcedureManagerRef","ProcedureState","ProcedureWithId","Retrying","Running","Status","Suspended","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dump","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","execute","executing","failed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get_hash","hash","id","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_error","is_done","is_failed","is_retrying","is_running","keys_to_lock","keys_to_unlock","lock_key","need_persist","new","parse_str","procedure","procedure_id","procedure_state","procedure_state","procedure_watcher","provide","provider","random","register_loader","retrying","serialize","single","source","source","start","stop","submit","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_random_id","error","error","persist","persist","subprocedures","Commit","KeyType","PROC_PATH","ParsedKey","ProcedureMessage","ProcedureStore","Rollback","Step","as_str","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit_procedure","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","data","delete_procedure","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_str","init","init","init","init","into","into","into","into","key_type","load_messages","load_one_message","new","parent_id","parse_str","prefix","proc_path","proc_path","proc_path","procedure_id","rollback_procedure","serialize","state_store","step","step","store","store_procedure","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","vzip","vzip","vzip","vzip","KeyValue","KeyValueStream","ObjectStateStore","StateStore","StateStoreRef","batch_delete","batch_delete","borrow","borrow_mut","compat","compat_mut","compat_ref","delete","delete","deref","deref_mut","drop","fmt","from","init","into","new","put","put","store","try_from","try_into","type_id","vzip","walk_top_down","walk_top_down","Watcher","wait"],"q":[[0,"common_procedure"],[42,"common_procedure::ProcedureState"],[44,"common_procedure::Status"],[47,"common_procedure::error"],[516,"common_procedure::error::Error"],[553,"common_procedure::local"],[721,"common_procedure::local::lock"],[763,"common_procedure::local::runner"],[842,"common_procedure::options"],[873,"common_procedure::procedure"],[1099,"common_procedure::procedure::ProcedureState"],[1101,"common_procedure::procedure::Status"],[1104,"common_procedure::store"],[1223,"common_procedure::store::state_store"],[1254,"common_procedure::watcher"]],"d":["Boxed Procedure.","Procedure execution context.","ContextProvider provides information about procedures in …","the procedure is done.","The procedure is finished.","","The procedure is still executing.","The procedure is failed and cannot proceed anymore.","Keys to identify required locks.","A <code>Procedure</code> represents an operation or a set of operations …","Unique id for Procedure.","<code>ProcedureManager</code> executes Procedure submitted to it.","Ref-counted pointer to the ProcedureManager.","State of a submitted procedure.","A procedure with specific id.","","The procedure is failed and can be retried.","The procedure is running.","Procedure execution status.","The procedure has suspended itself and is waiting for …","","Dump the state of the procedure to a string.","","Execute the procedure.","Id of the procedure.","","Returns the LockKey that this procedure needs to acquire.","Common traits and structures for the procedure framework.","","","Id of the procedure.","Query the procedure state.","Query the procedure state.","Returns a Watcher to watch ProcedureState of specific …","ProcedureManager context provider.","Registers loader for specific procedure type <code>name</code>.","Starts the background GC task.","Stops the background GC task.","","Submits a procedure to execute.","Type name of the procedure.","","","","Whether the framework needs to persist the procedure.","Whether the framework needs to persist the procedure.","","","SNAFU context selector for the <code>Error::CorruptedData</code> variant","","SNAFU context selector for the <code>Error::DeleteState</code> variant","","SNAFU context selector for the <code>Error::DeleteStates</code> variant","","SNAFU context selector for the <code>Error::DuplicateProcedure</code> …","Procedure error.","","SNAFU context selector for the <code>Error::External</code> variant","","SNAFU context selector for the <code>Error::FromJson</code> variant","","SNAFU context selector for the <code>Error::ListState</code> variant","","SNAFU context selector for the <code>Error::LoaderConflict</code> …","","SNAFU context selector for the <code>Error::ManagerNotStart</code> …","","SNAFU context selector for the <code>Error::ProcedureExec</code> variant","","SNAFU context selector for the <code>Error::ProcedurePanic</code> …","","SNAFU context selector for the <code>Error::PutState</code> variant","","","SNAFU context selector for the <code>Error::RetryLater</code> variant","","SNAFU context selector for the <code>Error::RetryTimesExceeded</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::SubprocedureFailed</code> …","","SNAFU context selector for the <code>Error::ToJson</code> variant","","SNAFU context selector for the <code>Error::WaitWatcher</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new Error::External error from source <code>err</code>.","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new Error::RetryLater or Error::External error …","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Determine whether it is a retry later type through …","","","","","","","","","","","Creates a new Error::RetryLater error from source <code>err</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Procedure loaded from store.","A ProcedureManager that maintains procedure states locally.","The expired time of a procedure’s metadata.","Config for LocalManager.","Shared context of the manager.","Shared metadata of a procedure.","Reference counted pointer to ProcedureMeta.","","","","","","","","","","","","","","Build remove outedated meta task","","Notify to wait for subprocedures.","Id of child procedures.","","","","","","","","","","","","","","","","","","","","Returns true if the procedure with specific <code>procedure_id</code> …","","","","","","","","","","","","","","","","","","","","Finds procedures by given <code>procedure_ids</code>.","Ids and finished time of finished procedures.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Id of this procedure.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Append subprocedures to given <code>buffer</code>.","Load procedure with specific <code>procedure_id</code> from cached …","Load procedure from specific ProcedureMessage.","Procedure loaders. The key is the type name of the …","","Lock required by this procedure.","","Notify to wait for a lock.","","","","","Messages loaded from the procedure store.","","Returns a new ManagerContext.","Create a new LocalManager with specific <code>config</code>.","","Notify a suspended parent procedure with specific …","Returns the number of subprocedures.","Clean resources of finished procedures.","","Parent procedure id.","","","","","","","","Returns all procedures in the tree (including given <code>root</code> …","Push <code>procedure_id</code> of the subprocedure to the metadata.","Recovers unfinished procedures and reruns them.","","Remove cached ProcedureMessage by ids.","Remove metadata of outdated procedures.","GC task.","","","","","","Return <code>ProcedureManager</code> is running.","Running flag.","Update current ProcedureState.","Set the running flag.","","Returns the ProcedureState of specific <code>procedure_id</code>.","Returns current ProcedureState.","Receiver to watch the procedure state.","Sender to notify the procedure state.","","","","","Submit a root procedure with given <code>procedure_id</code>.","","","","","","","Try to insert the <code>procedure</code> to the context if there is no …","","","","","","","","","","","","","","","","","","","","Returns the Watcher of specific <code>procedure_id</code>.","A lock entry.","Manages lock entries for procedures.","Acquire lock by <code>key</code> for procedure with specific <code>meta</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a Lock with specific <code>owner</code> procedure.","Returns true if the procedure with specific <code>procedure_id</code> …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns a new LockMap.","Current lock owner.","Release lock by <code>key</code>.","Try to pop a waiter from the waiter list, set it as owner …","","","","","","","","","Waiter procedures.","","","","","A guard to cleanup procedure state.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The procedure is finished successfully.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns a new ProcedureGuard.","","","","","","","Run the procedure.","Return <code>ProcedureManager</code> is running.","","","Submit a subprocedure with specific <code>procedure_id</code>.","","","","","","","","","","","","","Extend the retry time to wait for the next retry.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Max retry times of procedure.","Initial retry delay of procedures, increases exponentially.","","","","","","","Boxed Procedure.","Loader to recover the Procedure instance from serialized …","Procedure execution context.","ContextProvider provides information about procedures in …","Reference-counted pointer to ContextProvider.","the procedure is done.","The procedure is finished.","The procedure is still executing.","The procedure is failed and cannot proceed anymore.","Keys to identify required locks.","","SNAFU context selector for the <code>ParseIdError</code> error","A <code>Procedure</code> represents an operation or a set of operations …","Unique id for Procedure.","<code>ProcedureManager</code> executes Procedure submitted to it.","Ref-counted pointer to the ProcedureManager.","State of a submitted procedure.","A procedure with specific id.","The procedure is failed and can be retried.","The procedure is running.","Procedure execution status.","The procedure has suspended itself and is waiting for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dump the state of the procedure to a string.","","","","","","","","","","","","","Returns the error.","Execute the procedure.","Returns a Status::Executing with given <code>persist</code> flag.","Returns a ProcedureState with failed state.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Id of the procedure.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if the procedure state is done.","Returns true if the procedure state failed.","Returns true if the procedure state is retrying.","Returns true if the procedure state is running.","Returns the keys to lock.","Returns the keys to unlock.","Returns the LockKey that this procedure needs to acquire.","Returns <code>true</code> if the procedure needs the framework to …","Returns a new LockKey with keys from specific <code>iter</code>.","Parses id from string.","","Id of the procedure.","Query the procedure state.","Query the procedure state.","Returns a Watcher to watch ProcedureState of specific …","","ProcedureManager context provider.","Returns a new unique ProcedureId randomly.","Registers loader for specific procedure type <code>name</code>.","Returns a ProcedureState with retrying state.","","Returns a new LockKey with only one key.","","","Starts the background GC task.","Stops the background GC task.","Submits a procedure to execute.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type name of the procedure.","","","","","","","","","Returns a new ProcedureWithId that holds specific <code>procedure</code>","","","Whether the framework needs to persist the procedure.","Whether the framework needs to persist the procedure.","","","Suffix type of the key.","Key prefix of procedure store.","Key to refer the procedure in the ProcedureStore.","Serialized data of a procedure.","Procedure storage layer.","","","","","","","","","","","","","","Write commit flag to the storage.","","","","","","","","","","","","","The data of the procedure.","Delete states of procedure from the storage.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Load procedures from the storage. Returns a map of …","","Creates a new ProcedureStore from specific StateStoreRef.","Parent procedure id.","Try to parse the key from specific <code>input</code>.","","","","Constructs a path for procedure store.","","Write rollback flag to the storage.","","","Current step.","","","Dump the <code>procedure</code> to the storage.","","","","","","","","","","","","","","","Type name of the procedure. The procedure framework also …","","","","","Key value from state store.","Stream that yields KeyValue.","StateStore based on ObjectStore.","Storage layer for persisting procedure’s state.","Reference counted pointer to StateStore.","Deletes key-value pairs by <code>keys</code>.","","","","","","","Deletes one key-value pair by <code>key</code>. Return <code>Ok</code> if the key …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns a new ObjectStateStore with specific <code>store</code>.","Puts <code>key</code> and <code>value</code> into the store.","","","","","","","Returns the key-value pairs under <code>path</code> in top down way.","","Watcher to watch procedure state.","Wait the Watcher until the ProcedureState is done."],"i":[0,0,0,80,66,0,80,66,0,0,0,0,0,0,0,0,66,66,0,80,0,93,0,93,13,0,93,0,0,13,3,94,95,95,3,95,95,95,0,95,93,0,96,97,98,99,99,14,0,14,0,14,0,14,0,0,14,0,14,0,14,0,14,0,14,0,14,0,14,0,14,0,0,14,0,14,0,14,0,14,0,14,0,14,0,14,0,14,14,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,19,20,21,22,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,14,19,20,21,22,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,26,27,28,19,14,29,21,22,34,14,14,14,14,38,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,23,19,20,25,21,26,27,28,29,30,31,22,32,33,34,35,36,37,38,14,100,101,102,103,104,105,101,106,107,108,100,109,105,106,110,102,103,111,112,113,114,107,110,109,115,116,117,105,106,110,118,111,116,112,113,114,114,0,0,0,0,0,0,0,0,62,57,54,56,60,58,62,57,54,56,60,58,54,56,60,60,62,57,54,56,60,58,62,57,54,56,60,58,62,57,54,56,60,58,54,57,58,62,57,54,56,60,58,62,57,54,56,60,58,62,57,54,56,60,58,57,57,60,58,62,57,54,56,60,58,60,62,57,54,56,60,58,62,57,54,56,60,58,60,57,57,57,0,60,57,60,54,56,54,58,57,56,57,54,60,57,60,57,62,60,58,62,57,54,54,54,57,57,60,54,54,57,57,54,58,58,54,58,0,57,57,60,57,54,57,60,60,60,62,57,54,54,54,62,57,54,56,60,58,57,62,57,54,56,60,58,56,62,57,54,56,60,58,62,57,54,56,60,58,57,0,0,69,69,70,69,70,69,70,69,70,69,70,69,70,69,70,69,70,70,69,70,70,69,69,70,69,70,69,69,70,69,70,69,70,69,70,69,70,69,70,70,73,73,0,73,0,73,0,72,71,73,72,71,73,71,72,71,73,72,71,73,72,71,73,72,71,73,72,71,73,71,72,72,71,73,71,71,71,71,72,72,73,72,71,73,72,71,73,72,71,73,72,71,72,71,72,71,71,71,71,71,71,71,71,71,71,71,72,71,73,72,71,73,72,71,73,72,71,73,71,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,0,0,0,0,80,66,80,66,0,0,0,0,0,0,0,0,0,66,66,0,80,78,78,13,80,3,7,78,79,8,66,13,80,3,7,78,79,8,66,78,3,7,79,8,66,3,7,79,8,66,13,80,3,7,78,79,8,66,13,80,3,7,78,79,8,66,13,80,3,7,78,79,8,66,7,66,13,80,3,7,78,79,8,66,13,80,3,7,78,79,8,66,78,8,13,80,3,7,78,79,8,66,93,7,8,7,7,7,7,7,8,8,8,8,8,66,93,80,66,13,80,7,78,78,79,8,8,66,13,80,3,7,78,79,8,66,8,8,8,13,13,80,3,7,78,79,8,66,13,80,3,7,78,79,8,66,79,66,66,66,66,7,7,93,80,7,8,13,3,94,95,95,78,3,8,95,66,8,7,78,78,95,95,95,3,7,79,8,66,78,8,13,80,3,7,78,79,8,66,13,80,3,7,78,79,8,66,13,80,3,7,78,79,8,66,93,13,80,3,7,78,79,8,66,13,96,97,98,99,99,87,0,0,0,0,0,87,87,87,88,63,87,89,88,63,87,89,63,63,88,88,63,87,89,88,63,87,89,88,63,87,89,63,88,88,63,87,89,88,63,87,89,63,88,63,87,89,63,87,89,63,63,63,63,63,87,87,87,87,87,89,89,89,89,89,63,87,89,89,88,63,87,89,87,88,63,87,89,88,63,87,89,89,88,88,88,63,89,89,88,88,0,89,88,63,0,63,89,88,88,63,89,88,63,87,89,88,63,87,89,88,63,87,89,63,88,63,87,89,0,0,0,0,0,64,91,91,91,91,91,91,64,91,91,91,91,91,91,91,91,91,64,91,91,91,91,91,91,64,91,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,[3,[[6,[[5,[4]]]]]],0,0,[[],7],0,0,0,0,[8,[[6,[[5,[4]]]]]],[8,[[6,[[5,[4]]]]]],[8,[[10,[9]]]],0,[[11,[5,[12]]],2],[[],[[6,[[5,[4]]]]]],[[],[[6,[[5,[4]]]]]],0,[13,[[6,[[5,[4]]]]]],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,15],[[],16],[14,[[10,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[[18,[1]]]]],14],[20,14],[[[21,[[18,[8]]]]],14],[[[22,[[18,[8]]]]],14],[14,[[10,[16]]]],[23,23],[[[19,[24]]],[[19,[24]]]],[20,20],[25,25],[[[21,[24]]],[[21,[24]]]],[[[26,[24]]],[[26,[24]]]],[[[27,[24]]],[[27,[24]]]],[[[28,[24]]],[[28,[24]]]],[[[29,[24]]],[[29,[24]]]],[30,30],[31,31],[[[22,[24]]],[[22,[24]]]],[32,32],[33,33],[[[34,[24]]],[[34,[24]]]],[35,35],[36,36],[37,37],[[[38,[24]]],[[38,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[14,40,[41,[1]]]],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[14,11],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[[0,[42,43,44]]],14],[[[19,[[18,[1]]]]],[[45,[14]]]],[20,[[45,[14]]]],[[[21,[[18,[8]]]]],[[45,[14]]]],[[[22,[[18,[8]]]]],[[45,[14]]]],[[23,46],47],[[[19,[48]],46],47],[[20,46],47],[[25,46],47],[[[21,[48]],46],47],[[[26,[48]],46],47],[[[27,[48]],46],47],[[[28,[48]],46],47],[[[29,[48]],46],47],[[30,46],47],[[31,46],47],[[[22,[48]],46],47],[[32,46],47],[[33,46],47],[[[34,[48]],46],47],[[35,46],47],[[36,46],47],[[37,46],47],[[[38,[48]],46],47],[[14,46],47],[[14,46],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[42,43,44]]],14],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,14],[[[19,[[18,[1]]]]],14],[20,14],[25,14],[[[21,[[18,[8]]]]],14],[[[26,[[18,[1]]]]],14],[[[27,[[18,[1]]]]],14],[[[28,[[18,[1]]]]],14],[[[29,[[18,[1]]]]],14],[30,14],[31,14],[[[22,[[18,[8]]]]],14],[32,14],[33,14],[[[34,[[18,[8]]]]],14],[35,14],[36,14],[37,14],[[[38,[[18,[8]]]]],14],[14,49],0,0,0,0,[14,[[10,[50]]]],0,0,0,0,[51],[[[0,[42,43,44]]],14],[14,[[10,[16]]]],[14,52],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,[[55,[14]]]],[56,[[6,[[5,[4]]]]]],0,0,[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,[[57,8],49],[[],58],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[[57,[59,[8]],[41,[[61,[60]]]]]],0,[[60,46],47],[[58,46],47],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[60,[41,[8]]]],[[57,8],[[10,[62]]]],[[57,8,63],[[10,[62]]]],0,0,0,0,0,0,0,0,0,0,[56,11],[[],57],[[58,[61,[64]]],54],[[8,[10,[8]],7],60],[[57,8]],[60,40],[[57,[59,[8]]]],0,0,0,0,[[57,8],[[6,[[5,[4]]]]]],[[54,8],[[6,[[5,[4]]]]]],0,[[54,8],[[10,[9]]]],0,[[57,[61,[60]]],[[41,[8]]]],[[60,8]],[54,2],[[54,11,[5,[12]]],2],[[57,[59,[8]]]],[[57,65]],0,0,0,0,0,0,[57,49],0,[[60,66]],[57],[54,[[6,[[5,[4]]]]]],[[57,8],[[10,[66]]]],[60,66],0,0,0,[57],[54,[[6,[[5,[4]]]]]],[[54,13],[[6,[[5,[4]]]]]],[[54,8,67,68],[[2,[9]]]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[57,[61,[60]]],49],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],0,[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[]],[[]],[[]],[[]],[[]],[[]],[[57,8],[[10,[9]]]],0,0,[[69,11,[61,[60]]]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[40],[40],[40],[40],[40],[40],[[70,46],47],[[]],[[]],[[[61,[60]]],70],[[69,11,8],49],[[],40],[[],40],[[]],[[]],0,[[],69],0,[[69,11,8]],[70,49],[[],45],[[],45],[[],45],[[],45],[[],53],[[],53],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[71,2],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[40],[40],[40],[40],[40],[40],[71],[72],[40],[40],[40],[[71,3],73],[[71,3]],[71],0,[72],0,[[73,46],47],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[]],[[]],[[]],0,0,0,0,[[[61,[60]],[61,[57]]],72],[[71,[41,[13]]]],[71,2],0,[[71,[61,[14]]],73],[71,2],0,[71],[71,49],0,0,[[71,8,68]],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],53],[[],53],[[],53],[[]],[[]],[[]],[[71,65,74]],0,[[]],[[]],[75,75],[[]],[[],39],[[],39],[[],39],[[],75],[40],[40],[76,[[45,[75]]]],[40],[[75,75],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[75,46],47],[[]],[[],40],[[]],0,0,[[75,77],45],[[]],[[],45],[[],45],[[],53],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[78,[[10,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,[[10,[16]]]],[3,3],[7,7],[79,79],[8,8],[66,66],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],7],[[],66],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[40],[78,11],[76,[[45,[8]]]],[40],[40],[40],[40],[40],[40],[40],[40],[[],[[2,[1]]]],[[7,7],49],[[8,8],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[66,[[10,[[61,[14]]]]]],[3,[[6,[[5,[4]]]]]],[49,80],[[[61,[14]]],66],[[13,46],47],[[80,46],47],[[7,46],47],[[78,46],47],[[78,46],47],[[79,46],47],[[8,46],47],[[8,46],47],[[66,46],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,[[45,[8,78]]]],[[[0,[81,82]],83],74],[[8,84]],0,[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79,78],[66,49],[66,49],[66,49],[66,49],[7,85],[7,85],[[],7],[80,49],[86,7],[11,[[45,[8,78]]]],0,0,[8,[[6,[[5,[4]]]]]],[8,[[6,[[5,[4]]]]]],[8,[[10,[9]]]],[51],0,[[],8],[[11,[5,[12]]],2],[[[61,[14]]],66],[[8,77],45],[[[18,[1]]],7],[78,[[10,[16]]]],0,[[],[[6,[[5,[4]]]]]],[[],[[6,[[5,[4]]]]]],[13,[[6,[[5,[4]]]]]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],53],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,13],0,0,0,0,0,0,0,0,0,0,0,0,0,[87,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,63],[[]],[[88,8,67],2],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,[[88,8],2],[40],[40],[40],[40],[40],[40],[40],[40],[76,[[45,[63]]]],[40],[40],[40],[40],[[63,63],49],[[87,87],49],[[89,89],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[],49],[[63,46],47],[[87,46],47],[[89,46],47],[[89,46],47],[[]],[[]],[[]],[[]],[11,[[10,[87]]]],[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],0,[88,2],[[88,89,[59,[90]]],[[10,[63]]]],[[11,[61,[64]]],88],0,[[11,11],[[10,[89]]]],0,[88,11],0,0,0,[[88,8,67],2],[[63,77],45],0,0,0,0,[[88,8,67,68,[10,[8]]],2],[[]],[[],1],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],53],[[],53],[[],53],[[],53],0,[[]],[[]],[[]],[[]],0,0,0,0,0,[[[59,[1]]],[[6,[[5,[4]]]]]],[[91,[59,[1]]],[[6,[[5,[4]]]]]],[[]],[[]],[[],39],[[],39],[[],39],[11,[[6,[[5,[4]]]]]],[[91,11],[[6,[[5,[4]]]]]],[40],[40],[40],[[91,46],47],[[]],[[],40],[[]],[92,91],[[11,[41,[90]]],[[6,[[5,[4]]]]]],[[91,11,[41,[90]]],[[6,[[5,[4]]]]]],0,[[],45],[[],45],[[],53],[[]],[11,[[6,[[5,[4]]]]]],[[91,11],[[6,[[5,[4]]]]]],0,[9,2]],"c":[],"p":[[3,"String"],[6,"Result"],[3,"Context"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"LockKey"],[3,"ProcedureId"],[6,"Watcher"],[4,"Option"],[15,"str"],[8,"Fn"],[3,"ProcedureWithId"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"LoaderConflictSnafu"],[3,"ManagerNotStartSnafu"],[3,"DuplicateProcedureSnafu"],[3,"ProcedurePanicSnafu"],[3,"ExternalSnafu"],[8,"Clone"],[3,"ToJsonSnafu"],[3,"PutStateSnafu"],[3,"DeleteStateSnafu"],[3,"DeleteStatesSnafu"],[3,"ListStateSnafu"],[3,"FromJsonSnafu"],[3,"RetryLaterSnafu"],[3,"WaitWatcherSnafu"],[3,"ProcedureExecSnafu"],[3,"RetryTimesExceededSnafu"],[3,"CorruptedDataSnafu"],[3,"StartRemoveOutdatedMetaTaskSnafu"],[3,"StopRemoveOutdatedMetaTaskSnafu"],[3,"SubprocedureFailedSnafu"],[3,"Compat"],[15,"usize"],[3,"Vec"],[8,"ErrorExt"],[8,"Send"],[8,"Sync"],[4,"Result"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[15,"bool"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"TypeId"],[3,"LocalManager"],[3,"RepeatedTask"],[3,"RemoveOutdatedMetaFunction"],[3,"ManagerContext"],[3,"ManagerConfig"],[15,"slice"],[3,"ProcedureMeta"],[3,"Arc"],[3,"LoadedProcedure"],[3,"ProcedureMessage"],[8,"StateStore"],[3,"Duration"],[4,"ProcedureState"],[15,"u32"],[6,"BoxedProcedure"],[3,"LockMap"],[3,"Lock"],[3,"Runner"],[3,"ProcedureGuard"],[4,"ExecResult"],[15,"u64"],[3,"ProcedureConfig"],[8,"Deserializer"],[8,"Serializer"],[3,"ParseIdError"],[3,"ParseIdSnafu"],[4,"Status"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[8,"Iterator"],[8,"IntoIterator"],[4,"KeyType"],[3,"ProcedureStore"],[3,"ParsedKey"],[15,"u8"],[3,"ObjectStateStore"],[3,"Operator"],[8,"Procedure"],[8,"ContextProvider"],[8,"ProcedureManager"],[13,"Retrying"],[13,"Failed"],[13,"Executing"],[13,"Suspended"],[13,"ToJson"],[13,"DeleteState"],[13,"FromJson"],[13,"WaitWatcher"],[13,"CorruptedData"],[13,"PutState"],[13,"DeleteStates"],[13,"LoaderConflict"],[13,"ManagerNotStart"],[13,"DuplicateProcedure"],[13,"ListState"],[13,"ProcedureExec"],[13,"StartRemoveOutdatedMetaTask"],[13,"StopRemoveOutdatedMetaTask"],[13,"SubprocedureFailed"],[13,"ProcedurePanic"],[13,"RetryTimesExceeded"],[13,"External"],[13,"RetryLater"]]},\
"common_procedure_test":{"doc":"Test utilities for procedures.","t":"DLLLLLLLLLFFFLLLLLMLLLL","n":["MockContextProvider","borrow","borrow_mut","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","execute_procedure_once","execute_procedure_until_done","execute_until_suspended_or_done","from","init","into","new","procedure_state","states","try_from","try_into","type_id","vzip"],"q":[[0,"common_procedure_test"]],"d":["A Mock ContextProvider.","","","","","","","","","","Executes a procedure once.","Executes a procedure until it returns Status::Done.","Executes a procedure until it returns Status::Suspended or …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns a new provider.","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,0,0,0,2,2,2,2,2,2,2,2,2,2],"f":[0,[[]],[[]],[[],1],[[],1],[[],1],[[],2],[3],[3],[3],[[4,2,5],6],[5],[[4,2,5],[[9,[[8,[7]]]]]],[[]],[[],3],[[]],[[[11,[4,10]]],2],[[2,4],[[14,[[13,[12]]]]]],0,[[],15],[[],15],[[],16],[[]]],"c":[],"p":[[3,"Compat"],[3,"MockContextProvider"],[15,"usize"],[3,"ProcedureId"],[8,"Procedure"],[15,"bool"],[3,"ProcedureWithId"],[3,"Vec"],[4,"Option"],[4,"ProcedureState"],[3,"HashMap"],[8,"Future"],[3,"Box"],[3,"Pin"],[4,"Result"],[3,"TypeId"]]},\
"common_query":{"doc":"","t":"ENNINENNLKLLLLLKLLALLLLLLLAKLLLLLLLALLLLLLALLLKKAALLKLAKLLLLLLLLLLLLLLLLLKMENNLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGGGGGFFCDNCCNNNNNNNENDNNNNNNNNNNNNNNNNNNNNNNDNNNNNNAMLLLLLLLLLLLFLLLLLFFMMLLLLLLLLALLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMLLMMLMLLLLLLLLLLLAALLLMIIIGDMLLKMKLLLLKLLLFFFKLLKKLKLKLLLLLKLLNNNNNNNNENDNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLFLLLMLLLLLLLLLLLLLLLFLLLLLLLMDMLLLLMLLLLLLLLMLMMMFFLLLLLLLDLLLLLLLLMLLLLMLMMFLLLLLLLDNEIDGNDDNMKLLLLLLLLLLLLLLKLLLLLLLLLLLLMLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMKLLMLMLLMMLMLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLKLLLLLLLLGGCNNNCNNNNNNNNNNCNNNNNNNNNNNNNNNNNGGCEDNGNNNNNNNNNENNNNNNNNNELLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLNNNNDNENNNNELLLLLLFLLLLLLLLLLLLLLLLLLLLLMML","n":["AddColumnLocation","AffectedRows","After","DfPhysicalPlan","First","Output","RecordBatches","Stream","arc_children","as_any","benefits_from_input_partitioning","borrow","borrow","borrow_mut","borrow_mut","children","clone","clone_into","columnar_value","deserialize","eq","equivalence_properties","equivalent","equivalent","equivalent","equivalent","error","execute","fmt","fmt","from","from","from_ref","from_subset","from_subset","function","into","into","into_request","into_request","is_in_subset","is_in_subset","logical_plan","maintains_input_order","metrics","ordering_equivalence_properties","output_ordering","output_partitioning","physical_plan","prelude","required_input_distribution","required_input_ordering","schema","serialize","signature","statistics","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unbounded_output","visit","visit","vzip","vzip","with_new_arc_children","with_new_children","column_name","ColumnarValue","Scalar","Vector","borrow","borrow_mut","clone","clone_into","data_type","from","from_ref","from_subset","into","into_request","is_in_subset","to_owned","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into_vector","type_id","vzip","ArrowCompute","ArrowComputeSnafu","BadAccumulatorImpl","BadAccumulatorImplSnafu","ConvertArrowSchema","ConvertArrowSchemaSnafu","ConvertDfRecordBatchStream","ConvertDfRecordBatchStreamSnafu","CreateAccumulator","CreateAccumulatorSnafu","DowncastVector","DowncastVectorSnafu","Error","ExecuteFunction","ExecuteFunctionSnafu","ExecutePhysicalPlan","ExecutePhysicalPlanSnafu","ExecuteRepeatedly","ExecuteRepeatedlySnafu","FromArrowArray","FromArrowArraySnafu","FromScalarValue","FromScalarValueSnafu","GeneralDataFusion","GeneralDataFusionSnafu","GenerateFunction","GenerateFunctionSnafu","GetScalarVector","GetScalarVectorSnafu","IntoVector","IntoVectorSnafu","InvalidFuncArgs","InvalidFuncArgsSnafu","InvalidInputCol","InvalidInputColSnafu","InvalidInputState","InvalidInputStateSnafu","InvalidInputType","InvalidInputTypeSnafu","PyUdf","PyUdfSnafu","Result","ToScalarValue","ToScalarValueSnafu","TypeCast","TypeCastSnafu","UdfTempRecordBatch","UdfTempRecordBatchSnafu","UnsupportedInputDataType","UnsupportedInputDataTypeSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_type","datatypes","debug_fmt","description","err_msg","err_msg","err_msg","err_msg","err_msg","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","function","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","msg","next","provide","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","data_type","datatypes","err_msg","err_msg","err_msg","err_msg","err_msg","error","error","error","error","error","function","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","source","source","source","source","source","source","source","source","source","source","typ","AccumulatorCreatorFunction","AccumulatorFunctionImpl","ReturnTypeFunction","ScalarFunctionImplementation","StateTypeFunction","make_scalar_function","to_df_return_type","Accumulator","AggregateFunction","AggregateFunction","AggregateFunctionCreator","AggregateFunctionCreatorRef","AggregateUDF","Alias","Between","BinaryExpr","Case","Cast","Column","DfExpr","Exists","Expr","GetIndexedField","GroupingSet","InList","InSubquery","IsFalse","IsNotFalse","IsNotNull","IsNotTrue","IsNotUnknown","IsNull","IsTrue","IsUnknown","Like","Literal","Negative","Not","OuterReferenceColumn","Placeholder","QualifiedWildcard","ScalarFunction","ScalarSubquery","ScalarUDF","ScalarUdf","ScalarVariable","SimilarTo","Sort","TryCast","Wildcard","WindowFunction","accumulator","accumulator","add","alias","alias_if_changed","and","apply_children","between","bitand","bitor","bitxor","borrow","borrow_mut","build_filter_from_timestamp","canonical_name","cast_to","clone","clone_into","contains_outer","create_aggregate_function","create_udf","creator","df_expr","display_name","div","eq","eq","equivalent","equivalent","equivalent","equivalent","expr","field","fmt","fmt","from","from_ref","from_subset","fun","get_hash","get_type","gt","gt_eq","hash","ilike","in_list","index","into","into_request","is_false","is_in_subset","is_not_false","is_not_null","is_not_true","is_not_unknown","is_null","is_true","is_unknown","like","lt","lt_eq","map_children","metadata","mul","name","name","name","name_for_alias","neg","not","not_between","not_eq","not_ilike","not_like","nullable","or","partial_cmp","range","rem","return_type","return_type","shl","shr","signature","signature","sort","state_type","sub","to_columns","to_field","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","try_into_col","type_id","udaf","udf","unalias","variant_name","vzip","qualifier","Accumulator","AggrFuncTypeStore","AggregateFunctionCreator","AggregateFunctionCreatorRef","DfAccumulatorAdaptor","accumulator","borrow","borrow_mut","creator","creator","evaluate","evaluate","fmt","from","from_subset","input_types","into","into_request","is_in_subset","make_accumulator_function","make_return_function","make_state_function","merge_batch","merge_batch","new","output_type","set_input_types","size","state","state","state_types","to_subset","to_subset_unchecked","try_from","try_into","type_id","update_batch","update_batch","vzip","AggregateFunction","AggregateUDF","Alias","Between","BinaryExpr","Case","Cast","Column","DfExpr","Exists","Expr","GetIndexedField","GroupingSet","InList","InSubquery","IsFalse","IsNotFalse","IsNotNull","IsNotTrue","IsNotUnknown","IsNull","IsTrue","IsUnknown","Like","Literal","Negative","Not","OuterReferenceColumn","Placeholder","QualifiedWildcard","ScalarFunction","ScalarSubquery","ScalarUDF","ScalarVariable","SimilarTo","Sort","TryCast","Wildcard","WindowFunction","borrow","borrow_mut","build_filter_from_timestamp","clone","clone_into","df_expr","df_expr","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_ref","from_subset","get_hash","hash","into","into_request","is_in_subset","timestamp_to_literal","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","qualifier","AggregateFunction","accumulator","borrow","borrow_mut","clone","clone_into","creator","eq","fmt","from","from_ref","from_subset","into","into_request","is_in_subset","name","new","return_type","signature","state_type","to_df_accumulator_func","to_df_state_type","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ScalarUdf","borrow","borrow_mut","clone","clone_into","fmt","from","from_ref","from_subset","fun","into","into_df_udf","into_request","is_in_subset","name","new","return_type","signature","to_df_scalar_func","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","DfPhysicalPlanAdapter","Hash","Partitioning","PhysicalPlan","PhysicalPlanAdapter","PhysicalPlanRef","RoundRobinBatch","SessionContext","TaskContext","UnknownPartitioning","aggregate_functions","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog","catalog_names","children","children","children","clone","clone","clone_into","clone_into","copied_config","create_physical_plan","default","default","deregister_table","df_plan","df_plan","enable_ident_normalization","eq","execute","execute","execute","execute_logical_plan","fmt","fmt","fmt","fmt","fmt","fmt_as","from","from","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","memory_pool","metric","metrics","metrics","metrics","new","new","new","new_with_config","new_with_config_rt","new_with_state","optimize","output_ordering","output_ordering","output_partitioning","output_partitioning","output_partitioning","partition_count","read_arrow","read_avro","read_batch","read_csv","read_empty","read_json","read_parquet","read_table","refresh_catalogs","register_arrow","register_avro","register_batch","register_catalog","register_catalog_list","register_csv","register_json","register_listing_table","register_parquet","register_table","register_udaf","register_udf","register_udwf","register_variable","runtime","runtime_env","runtime_env","satisfy","scalar_functions","schema","schema","schema","schema","session_config","session_config","session_id","session_id","session_id","session_id","session_start_time","session_start_time","sql","sql_with_options","state","state","state_weak_ref","statistics","table","table_exist","table_factory","table_provider","tables","task_ctx","task_id","task_id","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","type_id","udaf","udaf","udf","udf","udfs","udfs","udwf","udwf","vzip","vzip","vzip","vzip","vzip","window_functions","with_config","with_config_rt","with_new_children","with_new_children","with_new_children","with_runtime","with_session_config","with_state","write_csv","write_json","write_parquet","AccumulatorCreatorFunction","AccumulatorFunctionImpl","AggregateFunction","Any","Binary","Boolean","ColumnarValue","Date32","Date64","Decimal128","Decimal256","Dictionary","DurationMicrosecond","DurationMillisecond","DurationNanosecond","DurationSecond","Exact","Expr","FixedSizeBinary","Fixedsizelist","Float32","Float64","Immutable","Int16","Int32","Int64","Int8","IntervalDayTime","IntervalMonthDayNano","IntervalYearMonth","LargeBinary","LargeUtf8","List","Null","OneOf","ReturnTypeFunction","ScalarFunctionImplementation","ScalarUdf","ScalarValue","Signature","Stable","StateTypeFunction","Struct","Time32Millisecond","Time32Second","Time64Microsecond","Time64Nanosecond","TimestampMicrosecond","TimestampMillisecond","TimestampNanosecond","TimestampSecond","TypeSignature","UInt16","UInt32","UInt64","UInt8","Uniform","Utf8","Variadic","VariadicEqual","Volatile","Volatility","add","add_checked","any","arithmetic_negate","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create_udf","data_type","distance","eq","eq","eq","eq_array","equivalent","equivalent","equivalent","equivalent","exact","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_str","from_subset","from_subset","from_subset","get_datatype","get_hash","hash","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_null","is_unsigned","iter_to_array","lit","make_scalar_function","new","new_interval_dt","new_interval_mdn","new_interval_ym","new_list","new_negative_one","new_one","new_primitive","new_ten","new_utf8","new_zero","one_of","partial_cmp","size","size_of_hashset","size_of_vec","sub","sub_checked","to_array","to_array_of_size","to_df_return_type","to_owned","to_owned","to_owned","to_scalar","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from_array","try_from_string","try_into","try_into","try_into","try_new_decimal128","type_id","type_id","type_id","type_signature","uniform","variadic","variadic_equal","volatility","vzip","vzip","vzip","Any","Exact","Immutable","OneOf","Signature","Stable","TypeSignature","Uniform","Variadic","VariadicEqual","Volatile","Volatility","borrow","borrow_mut","clone","clone_into","cmp","compare","concrete_types_to_arrow_types","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","get_hash","hash","into","into_request","is_in_subset","partial_cmp","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","type_signature","volatility","vzip"],"q":[[0,"common_query"],[74,"common_query::AddColumnLocation"],[75,"common_query::columnar_value"],[98,"common_query::error"],[658,"common_query::error::Error"],[705,"common_query::function"],[712,"common_query::logical_plan"],[859,"common_query::logical_plan::DfExpr"],[860,"common_query::logical_plan::accumulator"],[899,"common_query::logical_plan::expr"],[968,"common_query::logical_plan::expr::DfExpr"],[969,"common_query::logical_plan::udaf"],[998,"common_query::logical_plan::udf"],[1024,"common_query::physical_plan"],[1231,"common_query::prelude"],[1432,"common_query::signature"]],"d":["","","","<code>ExecutionPlan</code> represent nodes in the DataFusion Physical …","","","","","","Returns the execution plan as <code>Any</code> so that it can be …","Specifies whether the operator benefits from increased …","","","","","Get a list of child execution plans that provide the input …","","","","","","Get the EquivalenceProperties within the plan","","","","","","creates an iterator","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns <code>false</code> if this operator’s implementation may …","Return a snapshot of the set of <code>Metric</code>s for this …","Get the OrderingEquivalenceProperties within the plan","If the output of this operator within each partition is …","Specifies the output partitioning scheme of this plan","","","Specifies the data distribution requirements for all the …","Specifies the ordering requirements for all of the children","Get the schema for this execution plan","","Signature module contains foundational types that are used …","Returns the global output statistics for this <code>ExecutionPlan</code>…","","","","","","","","","","","","Specifies whether this plan generates an infinite stream …","","","","","","Returns a new plan where all children were replaced by new …","","Represents the result from an expression","A single value","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Convert a columnar value into an VectorRef","","","","SNAFU context selector for the <code>Error::ArrowCompute</code> variant","","SNAFU context selector for the <code>Error::BadAccumulatorImpl</code> …","","SNAFU context selector for the <code>Error::ConvertArrowSchema</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::CreateAccumulator</code> …","","SNAFU context selector for the <code>Error::DowncastVector</code> …","","","SNAFU context selector for the <code>Error::ExecuteFunction</code> …","","SNAFU context selector for the <code>Error::ExecutePhysicalPlan</code> …","","SNAFU context selector for the <code>Error::ExecuteRepeatedly</code> …","","SNAFU context selector for the <code>Error::FromArrowArray</code> …","","SNAFU context selector for the <code>Error::FromScalarValue</code> …","","SNAFU context selector for the <code>Error::GeneralDataFusion</code> …","","SNAFU context selector for the <code>Error::GenerateFunction</code> …","","SNAFU context selector for the <code>Error::GetScalarVector</code> …","","SNAFU context selector for the <code>Error::IntoVector</code> variant","","SNAFU context selector for the <code>Error::InvalidFuncArgs</code> …","","SNAFU context selector for the <code>Error::InvalidInputCol</code> …","","SNAFU context selector for the <code>Error::InvalidInputState</code> …","","SNAFU context selector for the <code>Error::InvalidInputType</code> …","","SNAFU context selector for the <code>Error::PyUdf</code> variant","","","SNAFU context selector for the <code>Error::ToScalarValue</code> variant","","SNAFU context selector for the <code>Error::TypeCast</code> variant","","SNAFU context selector for the <code>Error::UdfTempRecordBatch</code> …","","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codereate Accumulator with the data type of input columns.","Accumulator creator that will be used by DataFusion","A function’s return type","Scalar function","This signature corresponds to which types an aggregator …","decorates a function to handle <code>ScalarValue</code>s by converting …","","","Logical representation of a user-defined aggregate …","Represents the call of an aggregate built-in function with …","","","aggregate function","An expression with a specific name.","Whether an expression is between a given range.","A binary expression such as “age &gt; 21”","The CASE expression is similar to a series of nested …","Casts the expression to a given type and will return a …","A named reference to a qualified filed in a schema.","<code>Expr</code> is a central struct of DataFusion’s query API, and …","EXISTS subquery","Central struct of query API. Represent logical expressions …","Returns the field of a <code>arrow::array::ListArray</code> or …","List of grouping set expressions. Only valid in the …","Returns whether the list contains the expr value.","IN subquery","Whether an expression is False. Boolean operation","Whether an expression is not False. Boolean operation","Whether an expression is not Null. This expression is …","Whether an expression is not True. Boolean operation","Whether an expression is not Unknown. Boolean operation","Whether an expression is Null. This expression is never …","Whether an expression is True. Boolean operation","Whether an expression is Unknown. Boolean operation","LIKE expression","A constant value.","arithmetic negation of an expression, the operand must be …","Negation of an expression. The expression’s type must be …","A place holder which hold a reference to a qualified field …","A place holder for parameters in a prepared statement …","Represents a reference to all available fields in a …","Represents the call of a built-in scalar function with a …","Scalar subquery","Represents the call of a user-defined scalar function with …","Logical representation of a UDF.","A named reference to a variable in a registry.","LIKE expression that uses regular expressions","A sort expression, that can be used to sort values.","Casts the expression to a given type and will return a …","Represents a reference to all available fields.","Represents the call of a window function with arguments.","Accumulator module contains the trait definition for …","actual implementation","","Return <code>self AS name</code> alias expression","Ensure <code>expr</code> has the name as <code>original_name</code> by adding an …","Return <code>self &amp;&amp; other</code>","","return <code>self BETWEEN low AND high</code>","","","","","","Builds an <code>Expr</code> that filters timestamp column from given …","Returns a full and complete string representation of this …","Wraps this expression in a cast to a target …","","","Return true when the expression contains out …","","Creates a new UDF with a specific signature and specific …","the creator that creates aggregate functions","","Returns the name of this expression as it should appear in …","","","Return <code>self == other</code>","","","","","","Return access to the named field. Example <code>expr[&quot;name&quot;]</code>","","","Returns the argument unchanged.","","","actual implementation","","Returns the arrow::datatypes::DataType of the expression …","Return <code>self &gt; other</code>","Return <code>self &gt;= other</code>","","Return <code>self ILIKE other</code>","Return <code>self IN &lt;list&gt;</code> if <code>negated</code> is false, otherwise …","Return access to the element field. Example <code>expr[&quot;name&quot;]</code>","Calls <code>U::from(self)</code>.","","Return <code>IsFalse(Box(self))</code>","","Return <code>IsNotFalse(Box(self))</code>","Return `IsNotNull(Box(self))","Return <code>IsNotTrue(Box(self))</code>","Return <code>IsNotUnknown(Box(self))</code>","Return `IsNull(Box(self))","Return <code>IsTrue(Box(self))</code>","Return <code>IsUnknown(Box(self))</code>","Return <code>self LIKE other</code>","Return <code>self &lt; other</code>","Return <code>self &lt;= other</code>","","","","Returns the name of this expression as it should appear in …","name","name","Return the name to use for the specific Expr, recursing …","","","return <code>self NOT BETWEEN low AND high</code>","Return <code>self != other</code>","Return <code>self NOT ILIKE other</code>","Return <code>self NOT LIKE other</code>","Returns the nullability of the expression based on …","Return <code>self || other</code>","","Return elements between <code>1</code> based <code>start</code> and <code>stop</code>, for …","","Return type","Return type","","","signature","signature","Create a sort expression from an existing expression.","the accumulator’s state’s description as a function of …","","Return all referenced columns of this expression.","Returns a arrow::datatypes::Field compatible with this …","","","","","","","","","Udaf module contains functions and structs supporting …","Udf module contains foundational types that are used to …","Remove an alias from an expression if one exists.","Return String representation of the variant represented by …","","","An accumulator represents a stateful object that lives …","<code>AggrFuncTypeStore</code> stores the aggregate function’s input …","An <code>AggregateFunctionCreator</code> dynamically creates <code>Accumulator</code>…","","A wrapper type for our Accumulator to DataFusion’s …","","","","Create a function that can create a new accumulator with …","","returns its value based on its current state.","","","Returns the argument unchanged.","","Get the input data types of the Accumulator.","Calls <code>U::from(self)</code>.","","","","","","updates the accumulator’s state from a vector of states.","","","Get the Accumulator’s output data type.","Store the input data types that are provided by DataFusion …","","Returns the state of the accumulator at the end of the …","","Get the Accumulator’s state data types.","","","","","","updates the accumulator’s state from a vector of arrays.","","","Represents the call of an aggregate built-in function with …","aggregate function","An expression with a specific name.","Whether an expression is between a given range.","A binary expression such as “age &gt; 21”","The CASE expression is similar to a series of nested …","Casts the expression to a given type and will return a …","A named reference to a qualified filed in a schema.","<code>Expr</code> is a central struct of DataFusion’s query API, and …","EXISTS subquery","Central struct of query API. Represent logical expressions …","Returns the field of a <code>arrow::array::ListArray</code> or …","List of grouping set expressions. Only valid in the …","Returns whether the list contains the expr value.","IN subquery","Whether an expression is False. Boolean operation","Whether an expression is not False. Boolean operation","Whether an expression is not Null. This expression is …","Whether an expression is not True. Boolean operation","Whether an expression is not Unknown. Boolean operation","Whether an expression is Null. This expression is never …","Whether an expression is True. Boolean operation","Whether an expression is Unknown. Boolean operation","LIKE expression","A constant value.","arithmetic negation of an expression, the operand must be …","Negation of an expression. The expression’s type must be …","A place holder which hold a reference to a qualified field …","A place holder for parameters in a prepared statement …","Represents a reference to all available fields in a …","Represents the call of a built-in scalar function with a …","Scalar subquery","Represents the call of a user-defined scalar function with …","A named reference to a variable in a registry.","LIKE expression that uses regular expressions","A sort expression, that can be used to sort values.","Casts the expression to a given type and will return a …","Represents a reference to all available fields.","Represents the call of a window function with arguments.","","","Builds an <code>Expr</code> that filters timestamp column from given …","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","Converts a Timestamp to datafusion literal value.","","","","","","","","","Logical representation of a user-defined aggregate …","actual implementation","","","","","the creator that creates aggregate functions","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","name","Create a new AggregateUDF","Return type","signature","the accumulator’s state’s description as a function of …","","","","","","","","","","Logical representation of a UDF.","","","","","","Returns the argument unchanged.","","","actual implementation","Calls <code>U::from(self)</code>.","Cast self into datafusion UDF.","","","name","Create a new ScalarUdf","Return type","signature","","","","","","","","","","Allocate rows based on a hash of one of more expressions …","Partitioning schemes supported by operators.","<code>PhysicalPlan</code> represent nodes in the Physical Plan.","Adapt DataFusion’s <code>ExecutionPlan</code> to GreptimeDB’s …","","Allocate batches using a round-robin algorithm and the …","Main interface for executing queries with DataFusion. …","Task Execution Context","Unknown partitioning scheme with a known number of …","","Returns the physical plan as <code>Any</code> so that it can be …","","","","","","","","","","","","","Retrieves a <code>CatalogProvider</code> instance by name","Retrieves the list of available catalog names.","Get a list of child physical plans that provide the input …","","","","","","","Return a copied version of config for this Session","Creates a physical plan from a logical plan.","","","Deregisters the given table.","","","Return the <code>enable_ident_normalization</code> of this Session","","Creates an RecordBatch stream.","","","Execute the <code>LogicalPlan</code>, return a <code>DataFrame</code>. This API is …","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Return the <code>MemoryPool</code> associated with this TaskContext","","","","","Create a new <code>TaskContext</code> instance.","","Creates a new <code>SessionContext</code> using the default …","Creates a new <code>SessionContext</code> using the provided …","Creates a new <code>SessionContext</code> using the provided …","Creates a new <code>SessionContext</code> using the provided …","Optimizes the logical plan by applying optimizer rules.","returns <code>Some(keys)</code> that describes how the output was …","","Specifies the output partitioning scheme of this plan","","","Returns the number of partitions in this partitioning …","Creates a <code>DataFrame</code> for reading an Arrow data source.","Creates a <code>DataFrame</code> for reading an Avro data source.","Creates a <code>DataFrame</code> for reading a <code>RecordBatch</code>","Creates a <code>DataFrame</code> for reading a CSV data source.","Creates an empty DataFrame.","Creates a <code>DataFrame</code> for reading an JSON data source.","Creates a <code>DataFrame</code> for reading a Parquet data source.","Creates a <code>DataFrame</code> for a <code>TableProvider</code> such as a …","Finds any <code>ListingSchemaProvider</code>s and instructs them to …","Registers an Arrow file as a table that can be referenced …","Registers an Avro file as a table that can be referenced …","Registers the <code>RecordBatch</code> as the specified table name","Registers a named catalog using a custom <code>CatalogProvider</code> …","Register <code>CatalogList</code> in <code>SessionState</code>","Registers a CSV file as a table which can referenced from …","Registers a JSON file as a table that it can be referenced …","Registers a <code>ListingTable</code> that can assemble multiple files …","Registers a Parquet file as a table that can be referenced …","Registers a <code>TableProvider</code> as a table that can be …","Registers an aggregate UDF within this context.","Registers a scalar UDF within this context.","Registers a window UDF within this context.","Registers a variable provider within this context.","","Return the RuntimeEnv associated with this TaskContext","Return the RuntimeEnv used to run queries with this …","Returns true when the guarantees made by this [Partitioning…","","Get the schema for this physical plan","","","","Return the SessionConfig associated with this TaskContext","","Return the <code>session_id</code> of this TaskContext","Returns an id that uniquely identifies this <code>SessionContext</code>.","","","Returns the time this <code>SessionContext</code> was created","","Creates a <code>DataFrame</code> from SQL query text.","Creates a <code>DataFrame</code> from SQL query text, first validating …","Snapshots the <code>SessionState</code> of this <code>SessionContext</code> setting …","","Get weak reference to <code>SessionState</code>","","Retrieves a <code>DataFrame</code> representing a table previously …","Return <code>true</code> if the specified table exists in the schema …","Return the <code>TableProviderFactory</code> that is registered for the …","Return a <code>TableProvider</code> for the specified table.","Returns the set of available tables in the default catalog …","Get a new TaskContext to run in this session","Return the <code>task_id</code> of this TaskContext","","","","","","","","","","","","","","","","","","","","","","","","","Create a new task context instance, by first copying all …","","","","","","","","","","","","","","","","","","","","Creates a new <code>SessionContext</code> using the provided …","Creates a new <code>SessionContext</code> using the provided …","Returns a new plan where all children were replaced by new …","","","Update the <code>RuntimeEnv</code>","Update the <code>ConfigOptions</code>","Creates a new <code>SessionContext</code> using the provided …","Executes a query and writes the results to a partitioned …","Executes a query and writes the results to a partitioned …","Executes a query and writes the results to a partitioned …","Create Accumulator with the data type of input columns.","Accumulator creator that will be used by DataFusion","","fixed number of arguments of arbitrary types","binary","true or false value","","Date stored as a signed 32bit int days since UNIX epoch …","Date stored as a signed 64bit int milliseconds since UNIX …","128bit decimal, using the i128 to represent the decimal, …","256bit decimal, using the i256 to represent the decimal, …","Dictionary type: index type and value","Duration in microseconds","Duration in milliseconds","Duration in nanoseconds","Duration in seconds","exact number of arguments of an exact type","","fixed size binary","Fixed size list of nested ScalarValue","32bit float","64bit float","An immutable function will always return the same output …","signed 16bit int","signed 32bit int","signed 64bit int","signed 8bit int","Number of elapsed days and milliseconds (no leap seconds) …","A triple of the number of elapsed months, days, and …","Number of elapsed whole months","large binary","utf-8 encoded string representing a LargeString’s arrow …","List of nested ScalarValue","represents <code>DataType::Null</code> (castable to/from any other type)","One of a list of signatures","A function’s return type","Scalar function","","Represents a dynamically typed, nullable single value. …","The Signature of a function defines its supported input …","A stable function may return different values given the …","This signature corresponds to which types an aggregator …","struct of nested ScalarValue","Time stored as a signed 32bit int as milliseconds since …","Time stored as a signed 32bit int as seconds since midnight","Time stored as a signed 64bit int as microseconds since …","Time stored as a signed 64bit int as nanoseconds since …","Timestamp Microseconds","Timestamp Milliseconds","Timestamp Nanoseconds","Timestamp Second","A function’s type signature, which defines the function…","unsigned 16bit int","unsigned 32bit int","unsigned 64bit int","unsigned 8bit int","fixed number of arguments of an arbitrary but equal type …","utf-8 encoded string.","arbitrary number of arguments of an common type out of a …","arbitrary number of arguments of an arbitrary but equal …","A volatile function may change the return value from …","A function’s volatility, which defines the functions …","Wrapping addition of <code>ScalarValue</code>","Checked addition of <code>ScalarValue</code>","any - Creates a signature which can a be made of any type …","Calculate arithmetic negation for a scalar value","","","","","","","","","","","","","","return the <code>DataType</code> of this <code>ScalarValue</code>","Absolute distance between two numeric values (of the same …","","","","Compares a single row of array @ index for equality with …","","","","","exact - Creates a signature which must match the types in …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Getter for the <code>DataType</code> of the value.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","whether this value is null or not.","","Converts an iterator of references <code>ScalarValue</code> into an …","","decorates a function to handle <code>ScalarValue</code>s by converting …","new - Creates a new Signature from any type signature and …","Returns a <code>ScalarValue::IntervalDayTime</code> representing <code>days</code> …","Returns a <code>ScalarValue::IntervalMonthDayNano</code> representing …","Returns a <code>ScalarValue::IntervalYearMonth</code> representing <code>years</code>…","Create a new nullable ScalarValue::List with the specified …","Create a negative one value in the given type.","Create an one value in the given type.","Create a <code>ScalarValue</code> with the provided value and datatype","","Returns a <code>ScalarValue::Utf8</code> representing <code>val</code>","Create a zero value in the given type.","one_of Creates a signature which can match any of the …","","Estimate size if bytes including <code>Self</code>. For values with …","Estimates size of <code>HashSet</code> in bytes.","Estimates size of <code>Vec</code> in bytes.","Wrapping subtraction of <code>ScalarValue</code>","Checked subtraction of <code>ScalarValue</code>","Converts a scalar value into an 1-row array.","Converts a scalar value into an array of <code>size</code> rows.","","","","","Converts a scalar into an arrow <code>Scalar</code> (which implements …","","","","","","","","","","Create a Null instance of ScalarValue for this datatype","","Create a Null instance of ScalarValue for this datatype","Converts a value in <code>array</code> at <code>index</code> into a ScalarValue","Try to parse <code>value</code> into a ScalarValue of type <code>target_type</code>","","","","Create a decimal Scalar from value/precision and scale.","","","","type_signature - The types that the function accepts. See …","uniform - Creates a function with a fixed number of …","variadic - Creates a variadic signature that represents an …","variadic_equal - Creates a variadic signature that …","volatility - The volatility of the function. See Volatility…","","","","fixed number of arguments of arbitrary types","exact number of arguments of an exact type","An immutable function will always return the same output …","One of a list of signatures","The Signature of a function defines its supported input …","A stable function may return different values given the …","A function’s type signature, which defines the function…","fixed number of arguments of an arbitrary but equal type …","arbitrary number of arguments of an common type out of a …","arbitrary number of arguments of an arbitrary but equal …","A volatile function may change the return value from …","A function’s volatility, which defines the functions …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","type_signature - The types that the function accepts. See …","volatility - The volatility of the function. See Volatility…",""],"i":[0,17,7,0,7,0,17,17,1,1,1,17,7,17,7,1,7,7,0,7,7,1,7,7,7,7,0,1,17,7,17,7,7,17,7,0,17,7,17,7,17,7,0,1,1,1,1,1,0,0,1,1,1,7,0,1,7,17,7,17,7,17,7,17,7,17,7,1,7,7,17,7,1,1,181,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,41,0,41,0,41,0,41,0,41,0,41,0,0,41,0,41,0,41,0,41,0,41,0,41,0,41,0,41,0,41,0,41,0,41,0,41,0,41,0,41,0,0,41,0,41,0,41,0,41,0,41,41,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,46,47,48,49,50,51,52,53,54,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,61,47,41,41,48,49,50,62,54,46,47,48,49,50,51,52,53,54,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,47,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,46,41,41,41,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,67,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,46,56,57,47,58,59,60,61,48,49,50,62,51,52,53,63,64,65,66,67,68,69,70,54,41,182,183,184,185,186,187,188,189,190,191,192,193,183,194,195,189,183,190,196,197,182,186,187,198,199,200,191,201,202,203,192,193,204,205,188,194,195,196,197,182,187,201,202,203,204,205,192,0,0,0,0,0,0,0,0,0,83,0,0,83,83,83,83,83,83,83,0,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,83,83,83,83,0,91,83,83,83,83,83,83,83,83,83,83,83,0,83,83,83,83,83,0,0,91,87,83,83,83,83,83,83,83,83,0,83,83,83,83,83,83,93,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,91,93,83,83,83,83,83,83,83,83,83,83,83,83,91,93,83,83,91,93,83,91,83,83,83,83,83,83,83,83,83,83,83,0,0,83,83,83,206,0,0,0,0,0,109,109,109,90,109,115,109,109,109,109,207,109,109,109,0,0,0,115,109,109,90,207,109,115,109,90,109,109,109,109,109,115,109,109,83,83,83,83,83,83,83,83,0,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,87,87,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,87,87,87,87,87,87,87,206,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,91,91,91,91,91,91,91,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,93,93,93,93,93,93,93,0,26,0,0,0,0,26,0,0,26,12,208,123,124,12,123,124,125,26,12,123,124,125,26,125,125,208,123,124,125,26,125,26,125,125,12,125,125,123,123,125,26,208,123,124,125,12,123,124,26,26,124,12,12,12,123,124,125,26,125,26,12,123,124,125,26,12,123,124,125,26,12,123,124,125,26,12,123,124,125,26,12,123,208,123,124,12,123,125,125,125,125,125,208,124,208,123,124,26,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,12,12,125,26,12,208,123,124,123,12,12,12,125,12,125,125,125,125,125,125,125,125,124,125,125,125,125,125,125,12,12,125,26,26,12,123,124,125,26,12,123,124,125,26,12,123,124,125,26,12,123,124,125,26,12,12,123,124,125,26,12,125,12,125,12,125,12,125,12,123,124,125,26,12,125,125,208,123,124,12,12,125,125,125,125,0,0,0,167,110,110,0,110,110,110,110,110,110,110,110,110,167,0,110,110,110,110,92,110,110,110,110,110,110,110,110,110,110,110,167,0,0,0,0,0,92,0,110,110,110,110,110,110,110,110,110,0,110,110,110,110,167,110,167,167,92,0,110,110,118,110,167,118,110,167,118,110,167,118,110,167,118,110,0,110,110,167,118,110,110,110,110,110,110,118,167,118,110,110,167,118,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,167,118,110,110,167,118,110,110,110,110,167,118,110,167,118,110,167,118,110,110,110,110,110,0,118,110,110,110,110,110,110,110,110,110,110,118,110,110,110,110,110,110,110,110,0,167,118,110,110,110,167,118,110,167,118,110,167,118,110,110,110,110,110,167,118,110,110,167,118,110,118,118,118,118,118,167,118,110,167,167,92,167,0,92,0,167,167,167,92,0,92,92,92,92,92,92,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,118,118,92],"f":[0,0,0,0,0,0,0,0,[1,[[4,[[3,[1,2]],2]]]],[[],5],[[],[[4,[6,2]]]],[[]],[[]],[[]],[[]],[[],[[4,[[3,[1,2]],2]]]],[7,7],[[]],0,[8,[[9,[7]]]],[[7,7],6],[[],10],[[],6],[[],6],[[],6],[[],6],0,[[11,[3,[12,2]]],[[9,[[15,[[14,[13,2]]]],16]]]],[[17,18],19],[[7,18],19],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[],20],[[],20],[[],6],[[],6],0,[[],[[4,[6,2]]]],[[],[[22,[21]]]],[[],23],[[],[[22,[[25,[24]]]]]],[[],26],0,0,[[],[[4,[27,2]]]],[[],[[4,[[22,[[4,[28,2]]]],2]]]],[[],[[3,[29,2]]]],[[7,30],9],0,[[],31],[[]],[[],22],[[],22],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],32],[[],32],[[[25,[6]]],[[9,[6,16]]]],[[7,33],34],[[7,35],34],[[]],[[]],[[1,[3,[1,2]],[4,[[3,[1,2]],2]]],[[9,[[3,[1,2]],16]]]],[[[3,[2]],[4,[[3,[1,2]],2]]],[[9,[[3,[1,2]],16]]]],0,0,0,0,[[]],[[]],[36,36],[[]],[36,37],[[]],[[]],[[]],[[]],[[],20],[[],6],[[]],[[],22],[[]],[[],9],[38,[[39,[36]]]],[[],9],[[36,11],[[39,[40]]]],[[],32],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[41,5],[[],42],[41,[[22,[43]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[46,[[45,[44]]]]],41],[[[47,[[45,[44]],[45,[[4,[37]]]]]]],41],[[[48,[[45,[44]]]]],41],[[[49,[[45,[44]]]]],41],[[[50,[[45,[44]]]]],41],[51,41],[52,41],[53,41],[[[54,[[45,[44]]]]],41],[41,[[22,[42]]]],[[[46,[55]]],[[46,[55]]]],[56,56],[57,57],[[[47,[55,55]]],[[47,[55,55]]]],[58,58],[59,59],[60,60],[[[61,[55]]],[[61,[55]]]],[[[48,[55]]],[[48,[55]]]],[[[49,[55]]],[[49,[55]]]],[[[50,[55]]],[[50,[55]]]],[[[62,[55]]],[[62,[55]]]],[51,51],[52,52],[53,53],[63,63],[64,64],[65,65],[66,66],[[[67,[55]]],[[67,[55]]]],[68,68],[69,69],[70,70],[[[54,[55]]],[[54,[55]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[41,11,[4,[44]]]],[41,71],0,0,0,0,0,[[[46,[[45,[44]]]]],[[9,[41]]]],[[[47,[[45,[44]],[45,[[4,[37]]]]]]],[[9,[41]]]],[[[48,[[45,[44]]]]],[[9,[41]]]],[[[49,[[45,[44]]]]],[[9,[41]]]],[[[50,[[45,[44]]]]],[[9,[41]]]],[51,[[9,[41]]]],[52,[[9,[41]]]],[53,[[9,[41]]]],[[[54,[[45,[44]]]]],[[9,[41]]]],[[[46,[72]],18],19],[[56,18],19],[[57,18],19],[[[47,[72,72]],18],19],[[58,18],19],[[59,18],19],[[60,18],19],[[[61,[72]],18],19],[[[48,[72]],18],19],[[[49,[72]],18],19],[[[50,[72]],18],19],[[[62,[72]],18],19],[[51,18],19],[[52,18],19],[[53,18],19],[[63,18],19],[[64,18],19],[[65,18],19],[[66,18],19],[[[67,[72]],18],19],[[68,18],19],[[69,18],19],[[70,18],19],[[[54,[72]],18],19],[[41,18],19],[[41,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[46,[[45,[44]]]]],41],[56,41],[57,41],[[[47,[[45,[44]],[45,[[4,[37]]]]]]],41],[58,41],[59,41],[60,41],[[[61,[[45,[73]]]]],41],[[[48,[[45,[44]]]]],41],[[[49,[[45,[44]]]]],41],[[[50,[[45,[44]]]]],41],[[[62,[[45,[44]]]]],41],[51,41],[52,41],[53,41],[63,41],[64,41],[65,41],[66,41],[[[67,[[45,[73]]]]],41],[68,41],[69,41],[70,41],[[[54,[[45,[44]]]]],41],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[41,[[22,[74]]]],[75],[41,[[22,[42]]]],[41,76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],44],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[77,78,79]]],80],[81,82],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[83,83],83],[[83,[45,[44]]],83],[[83,44],[[9,[83,16]]]],[[83,83],83],[[83,84],[[9,[85,16]]]],[[83,83,83],83],[[83,83],83],[[83,83],83],[[83,83],83],[[]],[[]],[[71,[22,[86]]],[[22,[87]]]],[83,44],[[83,73,88],[[9,[83,16]]]],[83,83],[[]],[83,6],[[44,89,[3,[90]]],91],[[71,[4,[37]],[3,[37]],92,80],93],0,0,[83,[[9,[44,16]]]],[[83,83],83],[[83,83],6],[[83,83],83],[[],6],[[],6],[[],6],[[],6],0,[[83,[45,[44]]],83],[[83,18],[[9,[94]]]],[[83,18],[[9,[94]]]],[[]],[[]],[[]],0,[[[0,[95,96]],97],98],[[83,88],[[9,[73,16]]]],[[83,83],83],[[83,83],83],[[83,99]],[[83,83],83],[[83,[4,[83,2]],6],83],[[83,83],83],[[]],[[],20],[83,83],[[],6],[83,83],[83,83],[83,83],[83,83],[83,83],[83,83],[83,83],[[83,83],83],[[83,83],83],[[83,83],83],[[83,84],[[9,[83,16]]]],[[83,88],[[9,[[101,[44,44,100]],16]]]],[[83,83],83],[83,[[9,[44,16]]]],0,0,[83,[[9,[44,16]]]],[83],[83],[[83,83,83],83],[[83,83],83],[[83,83],83],[[83,83],83],[[83,88],[[9,[6,16]]]],[[83,83],83],[[83,83],[[22,[102]]]],[[83,83,83],83],[[83,83],83],0,0,[[83,83]],[[83,83]],0,0,[[83,6,6],83],0,[[83,83],83],[83,[[9,[[104,[103,100]],16]]]],[[83,105],[[9,[106,16]]]],[[]],[[],44],[[],22],[[]],[[],9],[[],9],[83,[[9,[103,16]]]],[[],32],0,0,[83,83],[83,71],[[]],0,0,0,0,0,0,0,[[]],[[]],[[],107],0,[[],[[39,[108]]]],[109,[[111,[110]]]],[[109,18],19],[[]],[[]],[[],[[39,[[4,[37]]]]]],[[]],[[],20],[[],6],[[[3,[90]]],112],[[[3,[90]]],81],[[[3,[90]]],113],[[[25,[40]]],39],[[109,[25,[114]]],111],[[[14,[115]],116],109],[[],[[39,[37]]]],[[[4,[37]]],39],[109,11],[[],[[39,[[4,[108]]]]]],[109,[[111,[[4,[110]]]]]],[[],[[39,[[4,[37]]]]]],[[],22],[[]],[[],9],[[],9],[[],32],[[[25,[40]]],39],[[109,[25,[114]]],111],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[71,[22,[86]]],[[22,[87]]]],[87,87],[[]],[87,83],0,[[87,87],6],[[],6],[[],6],[[],6],[[],6],[[87,18],19],[[]],[83,87],[[]],[[]],[[[0,[95,96]],97],98],[[87,99]],[[]],[[],20],[[],6],[117,83],[[]],[[],22],[[]],[[],9],[[],9],[[],32],[[]],0,0,0,[[]],[[]],[91,91],[[]],0,[[91,91],6],[[91,18],19],[[]],[[]],[[]],[[]],[[],20],[[],6],0,[[44,118,81,112,113,116],91],0,0,0,[[112,116],119],[113,120],[[]],[[],22],[[]],[[],9],[[],9],[[],32],[[]],0,[[]],[[]],[93,93],[[]],[[93,18],19],[[]],[[]],[[]],0,[[]],[93,121],[[],20],[[],6],0,[[71,118,81,80],93],0,0,[80,122],[[]],[[],22],[[]],[[],9],[[],9],[[],32],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],5],[123,5],[124,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[125,71],[[22,[[3,[126,2]]]]]],[125,[[4,[44,2]]]],[[],[[4,[127]]]],[123,[[4,[127]]]],[124,[[4,[[3,[1]]]]]],[125,125],[26,26],[[]],[[]],[125,128],[[125,129],130],[[],12],[[],125],[[125,[45,[131]]],[[9,[[22,[[3,[132,2]]]],16]]]],[123,[[3,[1]]]],0,[125,6],[[26,26],6],[[11,[3,[12]]],[[39,[133]]]],[[123,11,[3,[12]]],[[39,[133]]]],[[124,11,[3,[12]]],[[111,[134]]]],[[125,129],130],[[12,18],[[9,[94]]]],[[123,18],19],[[124,18],19],[[26,18],[[9,[94]]]],[[26,18],[[9,[94]]]],[[124,135,18],19],[[]],[125,12],[136,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],6],[[],6],[[],6],[[],6],[[],6],[12,[[3,[137,2]]]],0,[[],[[22,[21]]]],[123,[[22,[21]]]],[124,[[22,[21]]]],[[[22,[44]],44,128,[101,[44,[3,[121,2]],100]],[101,[44,[3,[138,2]],100]],[101,[44,[3,[139,2]],100]],[3,[140,2]]],12],[[141,[3,[1]]],123],[[],125],[128,125],[[128,[3,[140,2]]],125],[136,125],[[125,129],[[9,[129,16]]]],[[],[[22,[[25,[24]]]]]],[124,[[22,[[25,[24]]]]]],[[],26],[123,26],[124,26],[26,11],[[125,142,143],130],[[125,142,144],130],[[125,145],[[9,[146,16]]]],[[125,142,147],130],[125,[[9,[146,16]]]],[[125,142,148],130],[[125,142,149],130],[[125,[3,[132,2]]],[[9,[146,16]]]],[125,130],[[125,71,71,143],130],[[125,71,71,144],130],[[125,71,145],[[9,[[22,[[3,[132,2]]]],16]]]],[[125,[45,[44]],[3,[126,2]]],[[22,[[3,[126,2]]]]]],[[125,[3,[150,2]]]],[[125,71,71,147],130],[[125,71,71,148],130],[[125,71,[151,[71]],152,[22,[[3,[29,2]]]],[22,[44]]],130],[[125,71,71,149],130],[[125,[45,[131]],[3,[132,2]]],[[9,[[22,[[3,[132,2]]]],16]]]],[[125,138]],[[125,121]],[[125,139]],[[125,153,[3,[154,2]]]],0,[12,[[3,[140,2]]]],[125,[[3,[140,2]]]],[[26,27,155],6],0,[[],141],[123,141],[124,156],0,[12,128],0,[12,44],[125,44],0,0,[125,[[158,[157]]]],0,[[125,71],130],[[125,71,159],130],[125,136],0,[125,[[162,[[161,[160,136]],2]]]],[124,31],[[125,[45,[131]]],130],[[125,[45,[131]]],[[9,[6,16]]]],[[125,71],[[22,[[3,[163,2]]]]]],[[125,[45,[131]]],130],[125,[[9,[[104,[44,100]],16]]]],[125,[[3,[12,2]]]],[12,[[22,[44]]]],0,[[]],[[]],[[],44],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[44,44,[101,[44,44,100]],[101,[44,[3,[121,2]],100]],[101,[44,[3,[138,2]],100]],[3,[140,2]],164],[[9,[12,16]]]],[[],32],[[],32],[[],32],[[],32],[[],32],[[12,71],[[9,[[3,[138,2]],16]]]],[[125,71],[[9,[[3,[138,2]],16]]]],[[12,71],[[9,[[3,[121,2]],16]]]],[[125,71],[[9,[[3,[121,2]],16]]]],[12,[[104,[44,100]]]],[125,[[104,[44,100]]]],[[12,71],[[9,[[3,[139,2]],16]]]],[[125,71],[[9,[[3,[139,2]],16]]]],[[]],[[]],[[]],[[]],[[]],0,[128,125],[[128,[3,[140,2]]],125],[[[4,[127]]],[[39,[127]]]],[[123,[4,[127]]],[[39,[127]]]],[[[3,[124]],[4,[[3,[1]]]]],[[111,[[3,[1]]]]]],[[12,[3,[140,2]]],12],[[12,128],12],[136,125],[[125,[3,[1,2]],[151,[71]]],130],[[125,[3,[1,2]],[151,[71]]],130],[[125,[3,[1,2]],[151,[71]],[22,[165]]],130],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[110,[166,[110]]],[[9,[110,16]]]],[[110,[166,[110]]],[[9,[110,16]]]],[[11,92],118],[110,[[9,[110,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[167,167],[118,118],[110,110],[[]],[[]],[[]],0,[110,73],[[110,110],[[22,[11]]]],[[167,167],6],[[118,118],6],[[110,110],6],[[110,[3,[168,2]],11],6],[[],6],[[],6],[[],6],[[],6],[[[4,[37]],92],118],[[167,18],19],[[118,18],19],[[110,18],[[9,[94]]]],[[110,18],[[9,[94]]]],[[]],[[]],[169,110],[[[22,[170]]],110],[[[4,[2]]],110],[[[22,[171]]],110],[[[22,[71]]],110],[170,110],[[[22,[172]]],110],[[[22,[169]]],110],[[[22,[6]]],110],[173,110],[6,110],[89,110],[[[22,[174]]],110],[[[22,[173]]],110],[175,110],[172,110],[[]],[[[176,[95]]],110],[174,110],[[[22,[175]]],110],[171,110],[[[22,[98]]],110],[71,110],[[[22,[177]]],110],[177,110],[[[22,[89]]],110],[98,110],[[]],[[]],[[]],[71,[[9,[110]]]],[[]],[[]],[[]],[110,73],[[[0,[95,96]],97],98],[[110,99]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],6],[[],6],[[],6],[110,6],[110,6],[178,[[9,[[3,[168,2]],16]]]],[110,83],[[[0,[77,78,79]]],80],[[167,92],118],[[172,172],110],[[172,172,173],110],[[172,172],110],[[[22,[[4,[110,2]]]],73],110],[73,[[9,[110,16]]]],[73,[[9,[110,16]]]],[[22,73],110],[73,[[9,[110,16]]]],[[[45,[44]]],110],[73,[[9,[110,16]]]],[[[4,[167]],92],118],[[110,110],[[22,[102]]]],[110,11],[[[104,[110]]],11],[[[4,[110,2]]],11],[[110,[166,[110]]],[[9,[110,16]]]],[[110,[166,[110]]],[[9,[110,16]]]],[110,[[3,[168,2]]]],[[110,11],[[3,[168,2]]]],[81,82],[[]],[[]],[[]],[110,[[179,[[3,[168,2]]]]]],[[],44],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[],9],[[],9],[73,[[9,[110,16]]]],[[],9],[73,[[9,[110,16]]]],[[168,11],[[9,[110,16]]]],[[44,73],[[9,[110,16]]]],[[],9],[[],9],[[],9],[[180,89,175],[[9,[110,16]]]],[[],32],[[],32],[[],32],0,[[11,[4,[37]],92],118],[[[4,[37]],92],118],[92,118],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[92,92],[[]],[[92,92],102],[[],102],[[[4,[37]]],[[4,[73]]]],[[92,92],6],[[],6],[[],6],[[],6],[[],6],[[92,18],[[9,[94]]]],[[]],[[]],[[]],[[[0,[95,96]],97],98],[[92,99]],[[]],[[],20],[[],6],[[92,92],[[22,[102]]]],[[]],[[],22],[[]],[[],9],[[],9],[[],32],0,0,[[]]],"c":[820,1058,1116,1173,1200,1220,1221,1227,1361],"p":[[8,"DfPhysicalPlan"],[3,"Global"],[3,"Arc"],[3,"Vec"],[8,"Any"],[15,"bool"],[4,"AddColumnLocation"],[8,"Deserializer"],[4,"Result"],[3,"EquivalenceProperties"],[15,"usize"],[3,"TaskContext"],[8,"RecordBatchStream"],[3,"Box"],[3,"Pin"],[4,"DataFusionError"],[4,"Output"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"MetricsSet"],[4,"Option"],[3,"OrderingEquivalenceProperties"],[3,"PhysicalSortExpr"],[15,"slice"],[4,"Partitioning"],[4,"Distribution"],[3,"PhysicalSortRequirement"],[3,"Schema"],[8,"Serializer"],[3,"Statistics"],[3,"TypeId"],[8,"VisitorMut"],[4,"ControlFlow"],[8,"Visitor"],[4,"ColumnarValue"],[4,"ConcreteDataType"],[4,"ColumnarValue"],[6,"Result"],[6,"VectorRef"],[4,"Error"],[8,"Error"],[3,"Backtrace"],[3,"String"],[8,"Into"],[3,"PyUdfSnafu"],[3,"UnsupportedInputDataTypeSnafu"],[3,"CreateAccumulatorSnafu"],[3,"DowncastVectorSnafu"],[3,"BadAccumulatorImplSnafu"],[3,"InvalidInputStateSnafu"],[3,"InvalidInputColSnafu"],[3,"ExecuteRepeatedlySnafu"],[3,"InvalidFuncArgsSnafu"],[8,"Clone"],[3,"UdfTempRecordBatchSnafu"],[3,"ExecuteFunctionSnafu"],[3,"GenerateFunctionSnafu"],[3,"FromScalarValueSnafu"],[3,"FromArrowArraySnafu"],[3,"IntoVectorSnafu"],[3,"InvalidInputTypeSnafu"],[3,"GeneralDataFusionSnafu"],[3,"ConvertDfRecordBatchStreamSnafu"],[3,"ConvertArrowSchemaSnafu"],[3,"ExecutePhysicalPlanSnafu"],[3,"TypeCastSnafu"],[3,"ArrowComputeSnafu"],[3,"ToScalarValueSnafu"],[3,"GetScalarVectorSnafu"],[15,"str"],[8,"Debug"],[4,"DataType"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[8,"Fn"],[8,"Sync"],[8,"Send"],[6,"ScalarFunctionImplementation"],[6,"ReturnTypeFunction"],[6,"ReturnTypeFunction"],[4,"DfExpr"],[8,"FnMut"],[4,"VisitRecursion"],[6,"TimestampRange"],[3,"Expr"],[8,"ExprSchema"],[15,"u8"],[8,"AggregateFunctionCreator"],[3,"AggregateFunction"],[4,"Volatility"],[3,"ScalarUdf"],[3,"Error"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[3,"RandomState"],[3,"HashMap"],[4,"Ordering"],[3,"Column"],[3,"HashSet"],[3,"DFSchema"],[3,"DFField"],[6,"AccumulatorCreatorFunction"],[4,"Value"],[3,"DfAccumulatorAdaptor"],[4,"ScalarValue"],[6,"Result"],[6,"AccumulatorFunctionImpl"],[6,"StateTypeFunction"],[6,"ArrayRef"],[8,"Accumulator"],[6,"AggregateFunctionCreatorRef"],[3,"Timestamp"],[3,"Signature"],[6,"AccumulatorFactoryFunction"],[6,"StateTypeFunction"],[3,"ScalarUDF"],[6,"ScalarFunctionImplementation"],[3,"PhysicalPlanAdapter"],[3,"DfPhysicalPlanAdapter"],[3,"SessionContext"],[8,"CatalogProvider"],[6,"PhysicalPlanRef"],[3,"SessionConfig"],[4,"LogicalPlan"],[8,"Future"],[4,"TableReference"],[8,"TableProvider"],[6,"SendableRecordBatchStream"],[6,"SendableRecordBatchStream"],[4,"DisplayFormatType"],[3,"SessionState"],[8,"MemoryPool"],[3,"AggregateUDF"],[3,"WindowUDF"],[3,"RuntimeEnv"],[6,"SchemaRef"],[8,"DataFilePaths"],[3,"ArrowReadOptions"],[3,"AvroReadOptions"],[3,"RecordBatch"],[3,"DataFrame"],[3,"CsvReadOptions"],[3,"NdJsonReadOptions"],[3,"ParquetReadOptions"],[8,"CatalogList"],[8,"AsRef"],[3,"ListingOptions"],[4,"VarType"],[8,"VarProvider"],[8,"FnOnce"],[6,"SchemaRef"],[3,"Utc"],[3,"DateTime"],[3,"SQLOptions"],[3,"RawRwLock"],[3,"RwLock"],[3,"Weak"],[8,"TableProviderFactory"],[3,"Extensions"],[3,"WriterProperties"],[8,"Borrow"],[4,"TypeSignature"],[8,"Array"],[15,"u32"],[15,"f64"],[15,"f32"],[15,"i32"],[15,"i64"],[15,"i16"],[15,"i8"],[3,"HyperLogLog"],[15,"u16"],[8,"IntoIterator"],[3,"Scalar"],[15,"i128"],[13,"After"],[13,"IntoVector"],[13,"UnsupportedInputDataType"],[13,"CreateAccumulator"],[13,"DowncastVector"],[13,"BadAccumulatorImpl"],[13,"InvalidInputType"],[13,"InvalidFuncArgs"],[13,"ExecuteFunction"],[13,"GenerateFunction"],[13,"GeneralDataFusion"],[13,"TypeCast"],[13,"ArrowCompute"],[13,"PyUdf"],[13,"UdfTempRecordBatch"],[13,"FromScalarValue"],[13,"FromArrowArray"],[13,"InvalidInputState"],[13,"InvalidInputCol"],[13,"ExecuteRepeatedly"],[13,"ConvertDfRecordBatchStream"],[13,"ConvertArrowSchema"],[13,"ExecutePhysicalPlan"],[13,"ToScalarValue"],[13,"GetScalarVector"],[13,"QualifiedWildcard"],[8,"AggrFuncTypeStore"],[8,"PhysicalPlan"]]},\
"common_recordbatch":{"doc":"","t":"DGDDDIDDGDALMLLLLLLLLLLLLLLLLLLLMMMLLLLLLLALLLLLLLLLLLLLMMLLLLLLLLLMLLLLLMLLMLLLLLLLAMKLLLLLMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLDEDNGDNDNLLLLLLLLLLLLLLLLLLLLMLLLMLLLLMLLLLMMLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDENDNDNDNDNDNDGNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMDDLLLLLLLLLLMMLMLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLFF","n":["DfRecordBatch","DfSendableRecordBatchStream","EmptyRecordBatchStream","OrderOption","RecordBatch","RecordBatchStream","RecordBatchStreamAdaptor","RecordBatches","SendableRecordBatchStream","SimpleRecordBatchStream","adapter","as_stream","batches","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","column","column_by_name","columns","columns","columns","df_record_batch","empty","eq","eq","eq","equivalent","equivalent","equivalent","error","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_array_memory_size","index","index","inner","into","into","into","into","into","into","into_df_stream","into_iter","iter","name","new","new","new_empty","num_columns","num_rows","options","output_ordering","output_ordering","output_ordering","poll_next","poll_next","poll_next","pretty_print","project","record_output","record_output","recordbatch","row_count","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","slice","stream","take","to_owned","to_owned","try_collect","try_from","try_from","try_from","try_from","try_from","try_from","try_from_columns","try_from_iter","try_from_iter_with_nullable","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new_with_options","try_poll_next","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","util","vzip","vzip","vzip","vzip","vzip","vzip","with_schema","AsyncRecordBatchStreamAdapter","AsyncRecordBatchStreamAdapterState","DfRecordBatchStreamAdapter","Failed","FutureStream","ParquetRecordBatchStreamAdapter","Ready","RecordBatchStreamAdapter","Uninit","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","into","into","into","into","into","metrics","new","new","new","output_schema","poll_next","poll_next","poll_next","poll_next","projection","schema","schema","schema","schema","schema","schema","size_hint","size_hint","size_hint","size_hint","state","stream","stream","stream","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_new","try_new_with_metrics","try_poll_next","try_poll_next","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","CastVector","CastVectorSnafu","ColumnNotExists","ColumnNotExistsSnafu","CreateRecordBatches","CreateRecordBatchesSnafu","DataTypes","DataTypesSnafu","Error","External","ExternalSnafu","Format","FormatSnafu","InitRecordbatchStream","InitRecordbatchStreamSnafu","NewDfRecordBatch","NewDfRecordBatchSnafu","PollStream","PollStreamSnafu","ProjectArrowRecordBatch","ProjectArrowRecordBatchSnafu","Result","SchemaConversion","SchemaConversionSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_name","debug_fmt","description","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_type","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","next","projection","provide","reason","schema","source","status_code","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column_name","error","error","error","error","error","from_type","location","location","location","location","location","location","location","location","location","location","location","projection","reason","schema","source","source","source","source","table_name","to_type","RecordBatch","RecordBatchRowIterator","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column","column_by_name","column_vectors","columns","columns","columns","df_record_batch","df_record_batch","eq","fmt","from","from","into","into","into_df_record_batch","into_iter","new","new","next","num_columns","num_rows","pretty_print","record_batch","row_cursor","rows","rows","schema","serialize","to_owned","try_from","try_from","try_from_df_record_batch","try_into","try_into","try_project","type_id","type_id","vzip","vzip","collect","collect_batches"],"q":[[0,"common_recordbatch"],[138,"common_recordbatch::adapter"],[217,"common_recordbatch::error"],[416,"common_recordbatch::error::Error"],[443,"common_recordbatch::recordbatch"],[490,"common_recordbatch::util"]],"d":["A two-dimensional batch of column-oriented data with a …","Trait for a <code>Stream</code> of <code>RecordBatch</code>es","EmptyRecordBatchStream can be used to create a …","","A two-dimensional batch of column-oriented data with a …","","Adapt a Stream of RecordBatch to a RecordBatchStream.","","","","","","","","","","","","","","","","","","","","","","","Get a reference to a column’s array by index.","Get a reference to a column’s array by name.","Get a reference to all columns in the record batch.","","","","","","","","","","","Error of record batch.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the total number of bytes of memory occupied …","Get a reference to a column’s array by name.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create an empty RecordBatchStream","Creates a RecordBatchStreamAdaptor without output ordering …","Creates a new empty <code>RecordBatch</code>.","Returns the number of columns in the record batch.","Returns the number of rows in each column.","","","","","","","","","Projects the schema onto the specified columns","","","","","","","","","","Returns the <code>Schema</code> of the record batch.","Schema wrapped by Arc","","","","","Return a new RecordBatch where each column is sliced …","","","","","","","","","","","","","Create a <code>RecordBatch</code> from an iterable list of pairs of the …","Create a <code>RecordBatch</code> from an iterable list of tuples of the","","","","","","","","Creates a <code>RecordBatch</code> from a schema and columns.","Creates a <code>RecordBatch</code> from a schema and columns, with …","","","","","","","","","","","","","","","","","Override the schema of this <code>RecordBatch</code>","","","Greptime SendableRecordBatchStream -&gt; DataFusion …","","","ParquetRecordBatchStream -&gt; DataFusion RecordBatchStream","","DataFusion SendableRecordBatchStream -&gt; Greptime …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::CastVector</code> variant","","SNAFU context selector for the <code>Error::ColumnNotExists</code> …","","SNAFU context selector for the <code>Error::CreateRecordBatches</code> …","","SNAFU context selector for the <code>Error::DataTypes</code> variant","","","SNAFU context selector for the <code>Error::External</code> variant","","SNAFU context selector for the <code>Error::Format</code> variant","","SNAFU context selector for the <code>Error::InitRecordbatchStream</code>…","","SNAFU context selector for the <code>Error::NewDfRecordBatch</code> …","","SNAFU context selector for the <code>Error::PollStream</code> variant","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::SchemaConversion</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A two-dimensional batch of column-oriented data with a …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new <code>RecordBatch</code> from <code>schema</code> and <code>columns</code>.","","","","Pretty display this record batch like a table","","","Create an iterator to traverse the data by row","","","","","","","Create a new <code>RecordBatch</code> from <code>schema</code> and <code>df_record_batch</code>.","","","","","","","","Collect all the items from the stream into a vector of …","Collect all the items from the stream into RecordBatches."],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,21,29,22,3,1,4,21,29,22,3,1,4,3,4,3,4,4,4,4,34,4,34,1,3,1,4,3,3,3,0,3,1,4,21,29,22,3,1,4,4,4,4,4,29,29,21,29,22,3,1,4,1,1,1,3,21,22,4,4,4,3,75,22,22,21,29,22,1,4,4,4,0,4,75,21,29,22,1,4,21,22,34,1,4,4,22,1,3,4,1,21,29,22,3,1,4,1,4,4,21,29,22,3,1,4,1,4,4,21,29,22,21,29,22,3,1,4,0,21,29,22,3,1,4,4,0,0,0,76,0,0,76,0,76,43,44,48,76,47,43,44,48,76,47,43,44,48,76,47,43,44,48,76,47,48,43,44,47,43,43,44,48,47,43,43,44,48,47,48,47,43,44,48,47,47,43,44,48,43,44,48,76,47,43,44,48,76,47,48,48,43,44,48,47,43,44,48,76,47,43,44,48,76,47,49,0,49,0,49,0,49,0,0,49,0,49,0,49,0,49,0,49,0,49,0,0,49,0,49,49,49,56,57,58,54,60,61,62,63,64,55,65,49,56,57,58,54,60,61,62,63,64,55,65,49,54,55,49,56,57,58,54,60,61,62,63,64,55,65,56,57,58,54,60,61,62,63,64,55,65,55,49,49,54,55,56,57,58,54,60,61,62,63,64,55,65,49,49,56,57,58,54,60,61,62,63,64,55,65,49,65,56,57,58,54,60,61,62,63,64,55,65,49,56,57,58,54,60,61,62,63,64,55,65,49,64,49,54,64,49,49,55,56,57,58,54,60,61,62,63,64,55,65,49,65,56,57,58,54,60,61,62,63,64,55,65,49,56,57,58,54,60,61,62,63,64,55,65,49,56,57,58,54,60,61,62,63,64,55,65,49,56,57,58,54,60,61,62,63,64,55,65,49,77,78,79,80,81,82,83,78,84,85,86,87,79,80,81,82,77,83,82,86,82,84,85,87,83,77,83,0,0,73,34,73,34,34,34,34,34,34,34,73,34,34,34,34,34,73,34,73,34,34,73,73,34,73,34,34,34,73,73,34,73,34,34,34,73,34,34,73,34,34,73,34,73,34,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[4,4],[[]],[[]],[[4,5],[[8,[6,7]]]],[[4,9],[[10,[[8,[6,7]]]]]],[4,[[11,[[8,[6,7]]]]]],0,0,0,[[],1],[[3,3],12],[[1,1],12],[[4,4],12],[[],12],[[],12],[[],12],0,[[3,13],14],[[1,13],14],[[4,13],[[16,[15]]]],[[]],[[]],[[]],[[]],[[]],[17,4],[17,4],[[]],[4,5],[[4,9]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,18],[1],[1,19],0,[20,21],[20,22],[[[8,[23,7]]],4],[4,5],[4,5],0,[[],[[10,[[11,[3]]]]]],[[[22,[[0,[24,25]]]]],[[10,[[11,[3]]]]]],0,[[[26,[21]],27],[[28,[10]]]],[[[26,[29]],27],[[28,[10]]]],[[[26,[[22,[[0,[24,25]]]]]],27],[[28,[10]]]],[1,[[31,[30]]]],[[4,[11,[5]]],[[16,[4,32]]]],[[4,33],4],[[4,33],4],0,0,[[],20],[21,20],[29,20],[[[22,[[0,[24,25]]]]],20],[1,20],[4,[[8,[23,7]]]],0,0,0,0,0,[[4,5,5],4],0,[1,[[35,[34]]]],[[]],[[]],[2,[[31,[1]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[20,36],[[31,[1]]]],[36,[[16,[4,32]]]],[36,[[16,[4,32]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[20,[35,[34]]],[[31,[1]]]],[[[8,[23,7]],[35,[[8,[6,7]],7]]],[[16,[4,32]]]],[[[8,[23,7]],[35,[[8,[6,7]],7]],37],[[16,[4,32]]]],[[26,27],[[28,[[10,[16]]]]]],[[26,27],[[28,[[10,[16]]]]]],[[26,27],[[28,[[10,[16]]]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,[[]],[[]],[[]],[[]],[[]],[[]],[[4,[8,[23,7]]],[[16,[4,32]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[39,[42,[[0,[25,40,41]]]],[10,[[35,[5]]]]],[[43,[[0,[25,40,41]]]]]],[2,44],[[20,[26,[[46,[45]]]]],47],0,[[[26,[[43,[[0,[25,40,41]]]]]],27],[[28,[10]]]],[[[26,[44]],27],[[28,[10]]]],[[[26,[48]],27],[[28,[10]]]],[[[26,[47]],27],[[28,[10]]]],0,[[[43,[[0,[25,40,41]]]]],39],[44,39],[48,20],[47,20],0,0,[[[43,[[0,[25,40,41]]]]]],[44],[48],[47],0,0,0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[18,[[31,[48]]]],[[18,33],[[31,[48]]]],[[26,27],[[28,[[10,[16]]]]]],[[26,27],[[28,[[10,[16]]]]]],[[26,27],[[28,[[10,[16]]]]]],[[26,27],[[28,[[10,[16]]]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[49,50],[[],51],[49,[[10,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[54,[[53,[30]]]]],49],[[[55,[[53,[30]],[53,[30]]]]],49],[49,[[10,[51]]]],[56,56],[57,57],[58,58],[[[54,[59]]],[[54,[59]]]],[60,60],[61,61],[62,62],[63,63],[[[64,[59,59]]],[[64,[59,59]]]],[[[55,[59,59]]],[[55,[59,59]]]],[[[65,[59,59]]],[[65,[59,59]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[49,5,[35,[30]]]],[49,9],[[[54,[[53,[30]]]]],[[16,[49]]]],[[[55,[[53,[30]],[53,[30]]]]],[[16,[49]]]],[[56,13],14],[[57,13],14],[[58,13],14],[[[54,[66]],13],14],[[60,13],14],[[61,13],14],[[62,13],14],[[63,13],14],[[[64,[66,66]],13],14],[[[55,[66,66]],13],14],[[[65,[66,66]],13],14],[[49,13],14],[[49,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,49],[57,49],[58,49],[[[54,[[53,[30]]]]],49],[60,49],[61,49],[62,49],[63,49],[[[64,[[53,[20]],[53,[[35,[5]]]]]]],49],[[[55,[[53,[30]],[53,[30]]]]],49],[[[65,[[53,[67]],[53,[67]]]]],49],[49,[[10,[68]]]],0,[69],0,0,[49,[[10,[51]]]],[49,70],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[34,34],[[]],[[34,5],71],[[34,9],[[10,[71]]]],[[34,9,20],[[31,[[72,[30,71]]]]]],[34,[[11,[71]]]],0,0,[34,4],0,[[34,34],12],[[34,13],14],[[]],[[]],[[]],[[]],[34,4],[[]],[34,73],[[20,36],[[31,[34]]]],[73,10],[34,5],[34,5],[34,30],0,0,[34,73],0,0,[[34,74],16],[[]],[[],16],[[],16],[[20,4],[[31,[34]]]],[[],16],[[],16],[[34,[11,[5]]],[[31,[34]]]],[[],38],[[],38],[[]],[[]],[2,[[31,[[35,[34]]]]]],[2,[[31,[1]]]]],"c":[],"p":[[3,"RecordBatches"],[6,"SendableRecordBatchStream"],[3,"OrderOption"],[3,"DfRecordBatch"],[15,"usize"],[8,"Array"],[3,"Global"],[3,"Arc"],[15,"str"],[4,"Option"],[15,"slice"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[3,"StructArray"],[6,"DfSendableRecordBatchStream"],[8,"Iterator"],[6,"SchemaRef"],[3,"EmptyRecordBatchStream"],[3,"RecordBatchStreamAdaptor"],[3,"Schema"],[8,"Stream"],[8,"Unpin"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"SimpleRecordBatchStream"],[3,"String"],[6,"Result"],[4,"ArrowError"],[3,"BaselineMetrics"],[3,"RecordBatch"],[3,"Vec"],[8,"IntoIterator"],[3,"RecordBatchOptions"],[3,"TypeId"],[6,"SchemaRef"],[8,"AsyncFileReader"],[8,"Send"],[3,"ParquetRecordBatchStream"],[3,"ParquetRecordBatchStreamAdapter"],[3,"DfRecordBatchStreamAdapter"],[8,"Future"],[3,"Box"],[3,"AsyncRecordBatchStreamAdapter"],[3,"RecordBatchStreamAdapter"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"CreateRecordBatchesSnafu"],[3,"ColumnNotExistsSnafu"],[3,"NewDfRecordBatchSnafu"],[3,"DataTypesSnafu"],[3,"ExternalSnafu"],[8,"Clone"],[3,"SchemaConversionSnafu"],[3,"PollStreamSnafu"],[3,"FormatSnafu"],[3,"InitRecordbatchStreamSnafu"],[3,"ProjectArrowRecordBatchSnafu"],[3,"CastVectorSnafu"],[8,"Debug"],[4,"ConcreteDataType"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[6,"VectorRef"],[3,"HashMap"],[3,"RecordBatchRowIterator"],[8,"Serializer"],[8,"RecordBatchStream"],[4,"AsyncRecordBatchStreamAdapterState"],[13,"ColumnNotExists"],[13,"NewDfRecordBatch"],[13,"PollStream"],[13,"Format"],[13,"InitRecordbatchStream"],[13,"ProjectArrowRecordBatch"],[13,"CastVector"],[13,"DataTypes"],[13,"External"],[13,"CreateRecordBatches"],[13,"SchemaConversion"]]},\
"common_runtime":{"doc":"","t":"GCDDDCIMLLLFFFFLLLLKMFLALLLLLAMFMMMLLLLLLLAKMLLMFAMAFFFFFFMLLLLLLLLLLLFNDENDGNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMRHDHDRRMFMMFLFLFLLLLLFLOOLLFLLLFMMFLFLFLFLFLFLLLLLLLLLFMMDDRMMLLLLLLLLLLLLLLLLLLGDIDLLLLKMLLLLLMMMLLKMLLLMLMMLLLLLLLLLLDDDDHDMMLLLLLLLLLMLLMLLLLLLLMMLLLLLMFFFFMMLMLLLLMLLLLLLLLLLLLLL","n":["BoxedTaskFunction","Builder","JoinError","JoinHandle","RepeatedTask","Runtime","TaskFunction","_p","abort","abort_handle","as_error_source","bg_runtime","block_on_bg","block_on_read","block_on_write","borrow","borrow","borrow_mut","borrow_mut","call","cancel_token","create_runtime","drop","error","fmt","fmt","fmt","from","from","global","id","init_global_runtimes","initial_delay","inner","interval","into","into","into_future","into_panic","is_cancelled","is_finished","is_panic","metrics","name","name","poll","provide","raw","read_runtime","repeated_task","repr","runtime","spawn_bg","spawn_blocking_bg","spawn_blocking_read","spawn_blocking_write","spawn_read","spawn_write","started","to_string","try_from","try_from","try_into","try_into","try_into_panic","try_poll","type_id","type_id","vzip","vzip","write_runtime","BuildRuntime","BuildRuntimeSnafu","Error","IllegalState","IllegalStateSnafu","Result","WaitGcTaskStop","WaitGcTaskStopSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone_into","clone_into","clone_into","debug_fmt","description","fail","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_error","into_error","into_error","location_opt","name","name","next","provide","source","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","error","error","location","location","location","name","name","BG_WORKERS","CONFIG_RUNTIMES","ConfigRuntimes","GLOBAL_RUNTIMES","GlobalRuntimes","READ_WORKERS","WRITE_WORKERS","already_init","bg_runtime","bg_runtime","bg_runtime","block_on_bg","block_on_bg","block_on_read","block_on_read","block_on_write","block_on_write","borrow","borrow","borrow_mut","borrow_mut","create_runtime","default","define_global_runtime_spawn","define_spawn","from","from","init_global_runtimes","into","into","new","read_runtime","read_runtime","read_runtime","spawn_bg","spawn_bg","spawn_blocking_bg","spawn_blocking_bg","spawn_blocking_read","spawn_blocking_read","spawn_blocking_write","spawn_blocking_write","spawn_read","spawn_read","spawn_write","spawn_write","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_runtime","write_runtime","write_runtime","METRIC_RUNTIME_THREADS_ALIVE","METRIC_RUNTIME_THREADS_IDLE","THREAD_NAME_LABEL","__private_field","__private_field","borrow","borrow","borrow_mut","borrow_mut","deref","deref","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BoxedTaskFunction","RepeatedTask","TaskFunction","TaskInner","borrow","borrow","borrow_mut","borrow_mut","call","cancel_token","drop","fmt","fmt","from","from","initial_delay","inner","interval","into","into","name","name","new","start","started","started","stop","task_fn","task_handle","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_initial_delay","Builder","Dropper","JoinError","JoinHandle","RUNTIME_ID","Runtime","_dropper","_p","block_on","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","builder","clone","clone_into","close","default","drop","fmt","fmt","from","from","from","handle","id","into","into","into","max_blocking_threads","name","name","on_thread_park","on_thread_start","on_thread_stop","on_thread_unpark","raw","repr","runtime_name","runtime_name","spawn","spawn_blocking","thread_keep_alive","thread_name","thread_name","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","worker_threads"],"q":[[0,"common_runtime"],[71,"common_runtime::error"],[143,"common_runtime::error::Error"],[150,"common_runtime::global"],[207,"common_runtime::metrics"],[230,"common_runtime::repeated_task"],[269,"common_runtime::runtime"]],"d":["","","Task failed to execute to completion.","An owned permission to join on a task (await its …","","","Task to execute repeatedly.","","Abort the task associated with the handle.","Returns a new <code>AbortHandle</code> that can be used to remotely …","","Returns the global <code>bg</code> thread pool.","Run a future to complete in <code>bg</code> thread pool.","Run a future to complete in <code>read</code> thread pool.","Run a future to complete in <code>write</code> thread pool.","","","","","Invoke the task.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Global runtimes","","Initialize the global runtimes","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Consumes the join error, returning the object with which …","Returns true if the error was caused by the task being …","Checks if the task associated with this <code>JoinHandle</code> has …","Returns true if the error was caused by the task panicking.","Runtime metrics","Name of the task.","","","","","Returns the global <code>read</code> thread pool.","","","","Spawn a future and execute it in <code>bg</code> thread pool.","Run the blocking operation in <code>bg</code> thread pool.","Run the blocking operation in <code>read</code> thread pool.","Run the blocking operation in <code>write</code> thread pool.","Spawn a future and execute it in <code>read</code> thread pool.","Spawn a future and execute it in <code>write</code> thread pool.","","","","","","","Consumes the join error, returning the object with which …","","","","","","Returns the global <code>write</code> thread pool.","","SNAFU context selector for the <code>Error::BuildRuntime</code> variant","","","SNAFU context selector for the <code>Error::IllegalState</code> variant","","","SNAFU context selector for the <code>Error::WaitGcTaskStop</code> …","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the global <code>bg</code> thread pool.","","","Run a future to complete in <code>bg</code> thread pool.","","Run a future to complete in <code>read</code> thread pool.","","Run a future to complete in <code>write</code> thread pool.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Initialize the global runtimes","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the global <code>read</code> thread pool.","","","Spawn a future and execute it in <code>bg</code> thread pool.","","Run the blocking operation in <code>bg</code> thread pool.","","Run the blocking operation in <code>read</code> thread pool.","","Run the blocking operation in <code>write</code> thread pool.","","Spawn a future and execute it in <code>read</code> thread pool.","","Spawn a future and execute it in <code>write</code> thread pool.","","","","","","","","","","Returns the global <code>write</code> thread pool.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Task to execute repeatedly.","","","","","","Invoke the task.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Name of the task.","","Creates a new repeated task. The <code>initial_delay</code> is the …","","","","","The task_fn to run. This is Some if the task is not …","The repeated task handle. This handle is Some if the task …","","","","","","","","","","","","Dropping the dropper will cause runtime to shutdown.","Task failed to execute to completion.","An owned permission to join on a task (await its …","","A runtime to run future tasks","","","Run a future to complete, this is the runtime’s entry …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Specifies the limit for additional threads spawned by the …","","","","","","","","","","","Spawn a future and execute it in this thread pool","Run the provided function on an executor dedicated to …","Sets a custom timeout for a thread in the blocking pool.","Sets name of threads spawned by the Runtime thread pool","","","","","","","","","","","","","","","Sets the number of worker threads the Runtime will use."],"i":[0,0,0,0,0,0,0,1,1,1,10,0,0,0,0,10,1,10,1,50,42,0,1,0,10,10,1,10,1,0,10,0,42,42,42,10,1,1,10,10,1,10,0,50,42,1,10,1,0,0,10,0,0,0,0,0,0,0,42,10,10,1,10,1,10,1,10,1,10,1,0,26,0,0,26,0,0,26,0,26,26,26,30,29,32,26,30,29,32,26,29,26,30,29,32,30,29,32,26,26,29,30,29,32,26,26,30,29,32,26,30,29,32,26,30,29,32,26,29,32,26,26,26,30,29,32,26,30,29,32,26,30,29,32,26,30,29,32,26,30,29,32,26,51,52,51,53,52,53,52,0,0,0,0,0,0,0,38,0,37,38,0,37,0,37,0,37,37,38,37,38,0,38,0,0,37,38,0,37,38,37,0,37,38,0,37,0,37,0,37,0,37,0,37,0,37,37,38,37,38,37,38,37,38,0,37,38,0,0,0,39,41,39,41,39,41,39,41,39,41,39,41,39,41,39,41,39,41,39,41,0,0,0,0,54,42,54,42,50,42,42,42,42,54,42,42,42,42,54,42,50,42,42,42,42,42,42,54,54,42,54,42,54,42,54,42,54,42,42,0,0,0,0,0,0,4,1,4,47,4,48,47,4,48,47,4,47,4,4,48,47,48,4,48,47,4,48,4,10,47,4,48,47,4,4,0,0,0,0,1,10,47,47,4,4,47,47,47,4,47,4,48,47,4,48,47,4,48,47,4,48,47],"f":[0,0,0,0,0,0,0,0,[1],[1,2],[[],3],[[],4],[5],[5],[5],[[]],[[]],[[]],[[]],[[],[[7,[[6,[5]]]]]],0,[[8,8,9],4],[1],0,[[10,11],[[13,[12]]]],[[10,11],[[13,[12]]]],[[[1,[14]],11],[[13,[12]]]],[[]],[[]],0,0,[[[15,[4]],[15,[4]],[15,[4]]]],0,0,0,[[]],[[]],[[]],[10,[[6,[16,17]]]],[10,18],[1,18],[10,18],0,[[],8],0,[[[7,[1]],19],20],[21],0,[[],4],0,0,0,[[[0,[5,22]]],1],[[[0,[23,22]]],[[1,[22]]]],[[[0,[23,22]]],[[1,[22]]]],[[[0,[23,22]]],[[1,[22]]]],[[[0,[5,22]]],1],[[[0,[5,22]]],1],0,[[],24],[[],13],[[],13],[[],13],[[],13],[10,[[13,[[6,[16,17]],10]]]],[[7,19],20],[[],25],[[],25],[[]],[[]],[[],4],0,0,0,0,0,0,0,0,[26,16],[[],3],[26,[[15,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[[28,[24]]]]],26],[26,[[15,[3]]]],[30,30],[[[29,[31]]],[[29,[31]]]],[[[32,[31]]],[[32,[31]]]],[[]],[[]],[[]],[[26,9,[33,[24]]]],[26,8],[[[29,[[28,[24]]]]],[[13,[26]]]],[[30,11],34],[[[29,[14]],11],34],[[[32,[14]],11],34],[[26,11],34],[[26,11],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,26],[[[29,[[28,[24]]]]],26],[[[32,[[28,[24]]]]],26],[26,[[15,[35]]]],0,0,[26,[[15,[36]]]],[21],[26,[[15,[3]]]],[[]],[[]],[[]],[[],24],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],0,0,[5],[[37,5]],[5],[[37,5]],[5],[[37,5]],[[]],[[]],[[]],[[]],[[8,8,9],4],[[],38],0,0,[[]],[[]],[[[15,[4]],[15,[4]],[15,[4]]]],[[]],[[]],[[[15,[4]],[15,[4]],[15,[4]]],37],[[],4],0,0,[[[0,[5,22]]],1],[[37,[0,[5,22]]],1],[[[0,[23,22]]],[[1,[22]]]],[[37,[0,[23,22]]],[[1,[22]]]],[[[0,[23,22]]],[[1,[22]]]],[[37,[0,[23,22]]],[[1,[22]]]],[[[0,[23,22]]],[[1,[22]]]],[[37,[0,[23,22]]],[[1,[22]]]],[[[0,[5,22]]],1],[[37,[0,[5,22]]],1],[[[0,[5,22]]],1],[[37,[0,[5,22]]],1],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[]],[[]],[[],4],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[39,40],[41,40],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[],[[7,[[6,[5]]]]]],0,[42],[[42,11],34],[[42,11],34],[[]],[[]],0,0,0,[[]],[[]],[[],8],0,[[43,[45,[44]]],[[42,[44]]]],[[[42,[44]],4],46],[[[42,[44]]],18],0,[[[42,[44]]],46],0,0,[[],24],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[]],[[]],[[[42,[44]],[15,[43]]],[[42,[44]]]],0,0,0,0,0,0,0,0,[[4,5]],[[]],[[]],[[]],[[]],[[]],[[]],[47,[[46,[4]]]],[[],47],0,[4,4],[[]],0,[[],47],[48],[[4,11],34],[[48,11],34],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[47,9],47],[4,8],0,[24,49],[24,49],[24,49],[24,49],0,0,[[47,[28,[24]]],47],0,[[4,[0,[5,22]]],1],[[4,[0,[23,22]]],[[1,[22]]]],[[47,43],47],[[47,[28,[24]]],47],0,[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[47,9],47]],"c":[],"p":[[3,"JoinHandle"],[3,"AbortHandle"],[8,"Error"],[3,"Runtime"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"str"],[15,"usize"],[3,"JoinError"],[3,"Formatter"],[3,"Error"],[4,"Result"],[8,"Debug"],[4,"Option"],[8,"Any"],[3,"Global"],[15,"bool"],[3,"Context"],[4,"Poll"],[3,"Demand"],[8,"Send"],[8,"FnOnce"],[3,"String"],[3,"TypeId"],[4,"Error"],[3,"Backtrace"],[8,"Into"],[3,"IllegalStateSnafu"],[3,"BuildRuntimeSnafu"],[8,"Clone"],[3,"WaitGcTaskStopSnafu"],[3,"Vec"],[6,"Result"],[3,"Location"],[8,"StackError"],[3,"GlobalRuntimes"],[3,"ConfigRuntimes"],[3,"METRIC_RUNTIME_THREADS_ALIVE"],[6,"IntGaugeVec"],[3,"METRIC_RUNTIME_THREADS_IDLE"],[3,"RepeatedTask"],[3,"Duration"],[8,"ErrorExt"],[6,"BoxedTaskFunction"],[6,"Result"],[3,"Builder"],[3,"Dropper"],[8,"Fn"],[8,"TaskFunction"],[13,"BuildRuntime"],[13,"WaitGcTaskStop"],[13,"IllegalState"],[3,"TaskInner"]]},\
"common_telemetry":{"doc":"","t":"HHCFCOCOFOCCFOAAAAFOCCCCCOSRSHSDDSHDSLLLLLLLLLLLLLLOLLLMMLLLLLLLLLOAOLLLLLLLLLLLLOFFLLLLLMOLLLLLAOLLLOFLLLLLLLLLLLLODLLLLLMLLLLLLLMLLLLMLLLLLLIDDDDDDMLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLMLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLFDMLLLLLFLLLL","n":["NODE_ID","TRACE_BUCKET","TRACE_ID","calculate_hash","common_error","debug","dump_metrics","error","gen_trace_id","info","init_default_ut_logging","init_global_logging","init_node_id","log","logging","macros","metric","panic_hook","set_panic_hook","trace","trace_id","tracing","tracing_appender","tracing_futures","tracing_subscriber","warn","DEBUG","DEFAULT_LOG_TARGETS","ERROR","GLOBAL_UT_LOG_GUARD","INFO","Level","LoggingOptions","TRACE","TRACE_ID","TracingOptions","WARN","as_log","as_str","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare","debug","default","default","deserialize","dir","enable_jaeger_tracing","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","event","event","fmt","fmt","fmt","from","from","from","from_str","ge","ge","gt","gt","hash","info","init_default_ut_logging","init_global_logging","into","into","into","le","le","level","log","lt","lt","partial_cmp","partial_cmp","serialize","span","span","to_owned","to_owned","to_string","trace","trace_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","warn","Event","borrow","borrow_mut","child_of","dispatch","fields","fields","fmt","from","into","is_contextual","is_log","is_root","metadata","metadata","new","new_child_of","normalized_metadata","parent","parent","record","record","try_from","try_into","type_id","vzip","AsId","Attributes","Entered","EnteredSpan","Id","Record","Span","_not_send","add_link","add_link_with_attributes","as_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_of","child_of","clone","clone","clone_into","clone_into","contains","contains","context","current","deref","drop","drop","drop","enter","entered","eq","eq","equivalent","equivalent","equivalent","exit","field","fields","fmt","fmt","fmt","fmt","fmt","fmt","follows_from","from","from","from","from","from","from","from_non_zero_u64","from_u64","has_field","hash","hash","id","id","in_scope","inner","into","into","into","into","into","into","into_non_zero_u64","into_u64","is_contextual","is_disabled","is_empty","is_empty","is_none","is_root","len","meta","metadata","metadata","metadata","new","new","new","new_disabled","new_root","new_root","none","or_current","parent","parent","record","record","record","record","record","record_all","set_parent","span","span","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","values","values","values","vzip","vzip","vzip","vzip","vzip","vzip","with_subscriber","dump_metrics","PANIC_COUNTER","__private_field","borrow","borrow_mut","deref","from","into","set_panic_hook","try_from","try_into","type_id","vzip"],"q":[[0,"common_telemetry"],[26,"common_telemetry::logging"],[116,"common_telemetry::logging::event"],[142,"common_telemetry::logging::span"],[279,"common_telemetry::metric"],[280,"common_telemetry::panic_hook"]],"d":["","","","","","Logs a message at the debug level.","","Logs a message at the error level.","","Logs a message at the info level.","","","","The standard logging macro.","logging stuffs, inspired by databend","","","","","Logs a message at the trace level.","","","","","","Logs a message at the warn level.","The “debug” level.","","The “error” level.","","The “info” level.","Describes the level of verbosity of a span or event.","","The “trace” level.","Task local trace id. See trace_id for more details.","","The “warn” level.","","Returns the string representation of the <code>Level</code>.","","","","","","","","","","","","","Logs a message at the debug level.","","","","","","","","","","","","","","","Logs a message at the error level.","Events represent single points in time during the …","Constructs a new <code>Event</code>.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Init tracing for unittest. Write logs to file <code>unittest</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The standard logging macro.","","","","","","Spans represent periods of time in which a program was …","Constructs a new span.","","","","Logs a message at the trace level.","Get current TRACE_ID from tokio task_local storage.","","","","","","","","","","","","","Logs a message at the warn level.","<code>Event</code>s represent single points in time where something …","","","Constructs a new <code>Event</code> with the specified metadata and set …","Constructs a new <code>Event</code> with the specified metadata and set …","Returns an iterator over the set of values on this <code>Event</code>.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true if the new event’s parent should be …","","Returns true if the new event should be a root.","Returns metadata describing this <code>Event</code>.","","Returns a new <code>Event</code> in the current span, with the …","Returns a new <code>Event</code> as a child of the specified span, with …","","Returns the new event’s explicitly-specified parent, if …","","Visits all the fields on this <code>Event</code> with the specified …","","","","","","Trait implemented by types which have a span <code>Id</code>.","Attributes provided to a <code>Subscriber</code> describing a new span …","A guard representing a span which has been entered and is …","An owned version of <code>Entered</code>, a guard representing a span …","Identifies a span within the context of a subscriber.","A set of fields recorded by a span.","A handle representing a span, with the capability to enter …","","","","Returns the <code>Id</code> of the span that <code>self</code> corresponds to, or …","","","","","","","","","","","","","Constructs a new <code>Span</code> as child of the given parent span, …","Returns <code>Attributes</code> describing a new child span of the …","","","","","Returns <code>true</code> if this set of <code>Attributes</code> contains a value …","Returns <code>true</code> if this <code>Record</code> contains a value for the given …","","Returns a handle to the span considered by the <code>Subscriber</code> …","","","","","Enters this span, returning a guard that will exit the …","Enters this span, consuming it and returning a guard that …","","","","","","Exits this span, returning the underlying <code>Span</code>.","Returns a <code>Field</code> for the field with the given <code>name</code>, if one …","Returns the set of all fields defined by this span’s …","","","","","","","Indicates that the span with the given ID has an indirect …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new span ID from the given <code>NonZeroU64</code>.","Constructs a new span ID from the given <code>u64</code>.","Returns true if this <code>Span</code> has a field for the given <code>Field</code> …","","","Returns this span’s <code>Id</code>, if it is enabled.","Returns this span’s <code>Id</code>, if it is enabled.","Executes the given function in the context of this span.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the span’s ID as a <code>NonZeroU64</code>.","Returns the span’s ID as a <code>u64</code>.","Returns true if the new span’s parent should be …","Returns <code>true</code> if this span was disabled by the subscriber …","Returns true if this set of <code>Attributes</code> contains <em>no</em> values.","Returns true if this <code>Record</code> contains <em>no</em> values.","Returns <code>true</code> if this span was constructed by <code>Span::none</code> …","Returns true if the new span should be a root.","Returns the number of fields that would be visited from …","","Returns this span’s <code>Metadata</code>, if it is enabled.","Returns a reference to the new span’s metadata.","","Constructs a new <code>Span</code> with the given metadata and set of …","Returns <code>Attributes</code> describing a new child span of the …","Constructs a new <code>Record</code> from a <code>ValueSet</code>.","Constructs a new disabled span with the given <code>Metadata</code>.","Constructs a new <code>Span</code> as the root of its own trace tree, …","Returns <code>Attributes</code> describing a new span at the root of …","Constructs a new span that is <em>completely disabled</em>.","Returns this span, if it was enabled by the current …","Returns the new span’s explicitly-specified parent, if …","","Records that the field described by <code>field</code> has the value …","Records all the fields in this set of <code>Attributes</code> with the …","","Records all the fields in this <code>Record</code> with the provided …","","Records all the fields in the provided <code>ValueSet</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to a <code>ValueSet</code> containing any values …","","","","","","","","","Invokes a function with a reference to this span’s ID …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,5,0,5,0,0,5,0,0,5,5,5,8,10,5,8,10,5,8,5,8,5,5,5,0,8,10,8,8,8,8,5,5,8,8,8,5,5,5,0,0,0,8,5,5,8,10,5,5,5,5,5,5,5,0,0,0,8,10,5,5,5,8,0,5,5,5,5,8,0,0,8,5,5,0,0,8,10,5,8,10,5,8,10,5,8,10,5,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,0,0,0,0,0,39,31,31,50,31,40,39,24,35,37,31,40,39,24,35,37,31,35,31,24,31,24,35,37,31,31,39,31,40,39,31,31,31,24,24,24,24,39,31,35,31,40,39,24,35,37,31,31,40,39,24,35,37,24,24,31,31,24,31,39,31,31,31,40,39,24,35,37,24,24,35,31,35,37,31,35,37,31,31,35,35,31,35,37,31,31,35,31,31,35,35,31,35,35,37,37,31,31,40,39,31,24,31,40,39,24,35,37,31,40,39,24,35,37,31,40,39,24,35,37,35,35,37,31,40,39,24,35,37,31,0,0,48,48,48,48,48,48,0,48,48,48,48],"f":[0,0,0,[1,2],0,0,0,0,[[],2],0,0,0,[[[4,[3]]]],0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,6],[5,7],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[5,5],[[]],[[]],[[5,5],9],[[],9],0,[[],8],[[],10],[11,[[12,[8]]]],0,0,[[8,8],13],[[5,14],13],[[5,5],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,[[8,15],16],[[5,15],[[12,[17]]]],[[5,15],[[12,[17]]]],[[]],[[]],[[]],[7,[[12,[5,18]]]],[[5,14],13],[[5,5],13],[[5,5],13],[[5,14],13],[[5,19]],0,[[]],[[7,8,10],[[21,[20]]]],[[]],[[]],[[]],[[5,5],13],[[5,14],13],0,0,[[5,14],13],[[5,5],13],[[5,5],[[4,[9]]]],[[5,14],[[4,[9]]]],[[8,22],12],0,0,[[]],[[]],[[],3],0,[[],[[4,[2]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[]],[[]],[[]],0,0,[[]],[[]],[[[25,[[4,[24]]]],26,27]],[[26,27]],[28,29],0,[[28,15],[[12,[17]]]],[[]],[[]],[28,13],[28,13],[28,13],[28,26],0,[[26,27],28],[[[25,[[4,[24]]]],26,27],28],[28,[[4,[26]]]],[28,[[4,[24]]]],0,[[28,30]],[[28,30]],[[],12],[[],12],[[],23],[[]],0,0,0,0,0,0,0,0,[[31,32]],[[31,32,[21,[33,34]]]],[[],[[4,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[25,[[4,[24]]]],26,27],31],[[24,26,27],35],[31,31],[24,24],[[]],[[]],[[35,36],13],[[37,36],13],[31,38],[[],31],[39,31],[31],[40],[39],[31,40],[31,39],[[31,31],13],[[24,24],13],[[],13],[[],13],[[],13],[39,31],[[31,[0,[41,42]]],[[4,[36]]]],[35,43],[[31,15],[[12,[17]]]],[[40,15],[[12,[17]]]],[[39,15],[[12,[17]]]],[[24,15],[[12,[17]]]],[[35,15],[[12,[17]]]],[[37,15],[[12,[17]]]],[[31,[25,[[4,[24]]]]],31],[[]],[[]],[[]],[[]],[[]],[[]],[44,24],[2,24],[[31,[0,[41,42]]],13],[[31,19]],[[24,19]],[31,[[4,[24]]]],[39,[[4,[24]]]],[[31,45]],0,[[]],[[]],[[]],[[]],[[]],[[]],[24,44],[24,2],[35,13],[31,13],[35,13],[37,13],[31,13],[35,13],[37,46],0,[31,[[4,[26]]]],[35,26],0,[[26,27],31],[[26,27],35],[27,37],[26,31],[[26,27],31],[[26,27],35],[[],31],[31,31],[35,[[4,[24]]]],0,[[31,[0,[41,42]],47],31],[[35,30]],[[35,30]],[[37,30]],[[37,30]],[[31,27],31],[[31,38]],0,0,[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[35,27],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[31,45],4],[[],[[12,[3,3]]]],0,0,[[]],[[]],[48,49],[[]],[[]],[[]],[[],12],[[],12],[[],23],[[]]],"c":[],"p":[[8,"Hash"],[15,"u64"],[3,"String"],[4,"Option"],[3,"Level"],[4,"Level"],[15,"str"],[3,"LoggingOptions"],[4,"Ordering"],[3,"TracingOptions"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"LevelFilter"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"ParseLevelError"],[8,"Hasher"],[3,"WorkerGuard"],[3,"Vec"],[8,"Serializer"],[3,"TypeId"],[3,"Id"],[8,"Into"],[3,"Metadata"],[3,"ValueSet"],[3,"Event"],[3,"Iter"],[8,"Visit"],[3,"Span"],[3,"SpanContext"],[3,"KeyValue"],[3,"Global"],[3,"Attributes"],[3,"Field"],[3,"Record"],[3,"Context"],[3,"EnteredSpan"],[3,"Entered"],[8,"AsField"],[8,"Sized"],[3,"FieldSet"],[3,"NonZeroU64"],[8,"FnOnce"],[15,"usize"],[8,"Value"],[3,"PANIC_COUNTER"],[6,"IntCounter"],[8,"AsId"]]},\
"common_test_util":{"doc":"","t":"HFAAHFDDLLLLLLLLLLLLFFLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["WORKSPACE_ROOT","find_workspace_path","ports","temp_dir","PORTS","get_port","NamedTempFile","TempDir","as_fd","as_file","as_file_mut","as_raw_fd","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","close","close","create_named_temp_file","create_temp_dir","drop","file","flush","flush","fmt","fmt","from","from","from","from_parts","into","into","into_file","into_parts","into_path","into_temp_path","keep","new","new","new_in","new_in","path","path","path","path","persist","persist_noclobber","read","read","read_exact","read_exact","read_to_end","read_to_end","read_to_string","read_to_string","read_vectored","read_vectored","reopen","seek","seek","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_prefix","with_prefix","with_prefix_in","with_prefix_in","write","write","write_all","write_all","write_fmt","write_fmt","write_vectored","write_vectored"],"q":[[0,"common_test_util"],[4,"common_test_util::ports"],[6,"common_test_util::temp_dir"]],"d":["","Find the absolute path to a file or a directory in the …","","","","Return a unique port(in runtime) for test","A named temporary file.","A directory in the filesystem that is automatically …","","Get a reference to the underlying file.","Get a mutable reference to the underlying file.","","","","","","","","Closes and removes the temporary directory, returning a …","Close and remove the temporary file.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a <code>NamedTempFile</code> from its constituent parts.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the temporary file into a <code>std::fs::File</code>.","Converts the named temporary file into its constituent …","Persist the temporary directory to disk, returning the …","Closes the file, leaving only the temporary file path.","Keep the temporary file from being deleted. This function …","Attempts to make a temporary directory inside of …","Create a new named temporary file.","Attempts to make a temporary directory inside of <code>dir</code>. The …","Create a new named temporary file in the specified …","Accesses the <code>Path</code> to the temporary directory.","Get the temporary file’s path.","","","Persist the temporary file at the target path.","Persist the temporary file at the target path if and only …","","","","","","","","","","","Securely reopen the temporary file.","","","","","","","","","","","Attempts to make a temporary directory with the specified …","Create a new named temporary file with the specified …","Attempts to make a temporary directory with the specified …","Create a new named temporary file with the specified …","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,5,5,5,5,9,5,9,5,9,5,9,5,0,0,9,5,5,5,9,5,9,5,5,5,9,5,5,5,9,5,5,9,5,9,5,9,5,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9,5,9,5,9,5,9,5,9,5,9,5,5,5,5,5,5,5,5,5],"f":[0,[1,2],0,0,0,[[],3],0,0,[[[5,[4]]],6],[5],[5],[[[5,[7]]],8],[9,10],[5,10],[[]],[[]],[[]],[[]],[9,[[12,[11]]]],[5,[[12,[11]]]],[[],5],[1,9],[9],0,[[[5,[13]]],[[12,[11]]]],[[[5,[14]]],[[12,[11]]]],[[9,15],[[12,[16]]]],[[5,15],[[12,[16]]]],[[]],[[]],[17,5],[18,5],[[]],[[]],[5],[5],[9,2],[5,18],[5,[[12,[17]]]],[[],[[12,[9,11]]]],[[],[[12,[[5,[14]],11]]]],[[[19,[10]]],[[12,[9,11]]]],[[[19,[10]]],[[12,[[5,[14]],11]]]],[9,10],[5,10],0,0,[[5,[19,[10]]],[[12,[17]]]],[[5,[19,[10]]],[[12,[17]]]],[[[5,[20]],[22,[21]]],[[12,[3,11]]]],[[[5,[14]],[22,[21]]],[[12,[3,11]]]],[[[5,[20]],[22,[21]]],[[12,[11]]]],[[[5,[14]],[22,[21]]],[[12,[11]]]],[[[5,[20]],[24,[21,23]]],[[12,[3,11]]]],[[[5,[14]],[24,[21,23]]],[[12,[3,11]]]],[[[5,[20]],25],[[12,[3,11]]]],[[[5,[14]],25],[[12,[3,11]]]],[[[5,[20]],[22,[26]]],[[12,[3,11]]]],[[[5,[14]],[22,[26]]],[[12,[3,11]]]],[[[5,[14]]],[[12,[14,11]]]],[[[5,[27]],28],[[12,[29,11]]]],[[[5,[14]],28],[[12,[29,11]]]],[[],12],[[],12],[[],12],[[],12],[[],30],[[],30],[[]],[[]],[[[19,[31]]],[[12,[9,11]]]],[[[19,[31]]],[[12,[[5,[14]],11]]]],[[[19,[31]],[19,[10]]],[[12,[9,11]]]],[[[19,[31]],[19,[10]]],[[12,[[5,[14]],11]]]],[[[5,[14]],[22,[21]]],[[12,[3,11]]]],[[[5,[13]],[22,[21]]],[[12,[3,11]]]],[[[5,[14]],[22,[21]]],[[12,[11]]]],[[[5,[13]],[22,[21]]],[[12,[11]]]],[[[5,[14]],32],[[12,[11]]]],[[[5,[13]],32],[[12,[11]]]],[[[5,[14]],[22,[33]]],[[12,[3,11]]]],[[[5,[13]],[22,[33]]],[[12,[3,11]]]]],"c":[],"p":[[15,"str"],[3,"PathBuf"],[15,"usize"],[8,"AsFd"],[3,"NamedTempFile"],[3,"BorrowedFd"],[8,"AsRawFd"],[15,"i32"],[3,"TempDir"],[3,"Path"],[3,"Error"],[4,"Result"],[8,"Write"],[3,"File"],[3,"Formatter"],[3,"Error"],[3,"PersistError"],[3,"TempPath"],[8,"AsRef"],[8,"Read"],[15,"u8"],[15,"slice"],[3,"Global"],[3,"Vec"],[3,"String"],[3,"IoSliceMut"],[8,"Seek"],[4,"SeekFrom"],[15,"u64"],[3,"TypeId"],[3,"OsStr"],[3,"Arguments"],[3,"IoSlice"]]},\
"common_time":{"doc":"","t":"CCCCCCCCAAAAAAAAAAADRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMNDENDNDNDNDNDNDNDGNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMRNDDDESSNRRRRRRNLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLMLLLLLLLLMMMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDGGLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMNNNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMISSSDKKLLLLLLLLLLLLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLFLLLLLFFFFFFF","n":["Date","DateTime","Duration","Interval","RangeMillis","TimeZone","Timestamp","TimestampMillis","date","datetime","duration","error","interval","range","time","timestamp","timestamp_millis","timezone","util","Date","UNIX_EPOCH_FROM_CE","borrow","borrow_mut","clone","clone_into","cmp","compare","default","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_str","hash","into","new","partial_cmp","serialize","to_chrono_date","to_owned","to_secs","to_string","try_from","try_into","type_id","val","DATETIME_FORMAT","DATETIME_FORMAT_WITH_TZ","DateTime","borrow","borrow_mut","clone","clone_into","cmp","compare","default","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from_str","hash","into","new","partial_cmp","serialize","to_chrono_datetime","to_date","to_owned","to_string","try_from","try_into","type_id","val","Duration","borrow","borrow_mut","clone","clone_into","cmp","compare","default","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","hash","into","new","new_microsecond","new_millisecond","new_nanosecond","new_second","partial_cmp","serialize","split","to_owned","to_std_duration","to_string","try_from","try_into","type_id","unit","unit","value","value","ArithmeticOverflow","ArithmeticOverflowSnafu","Error","InvalidDateStr","InvalidDateStrSnafu","InvalidTimeZoneOffset","InvalidTimeZoneOffsetSnafu","ParseDateStr","ParseDateStrSnafu","ParseInterval","ParseIntervalSnafu","ParseOffsetStr","ParseOffsetStrSnafu","ParseTimeZoneName","ParseTimeZoneNameSnafu","ParseTimestamp","ParseTimestampSnafu","Result","TimestampOverflow","TimestampOverflowSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","debug_fmt","description","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hours","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","location_opt","minutes","msg","next","provide","raw","raw","raw","raw","raw","raw","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","error","error","error","hours","location","location","location","location","location","location","location","location","minutes","msg","raw","raw","raw","raw","raw","raw","DAYS_PER_MONTH","DayTime","Interval","IntervalCompare","IntervalFormat","IntervalUnit","MAX","MIN","MonthDayNano","NANOS_PER_DAY","NANOS_PER_HOUR","NANOS_PER_MICRO","NANOS_PER_MILLI","NANOS_PER_MONTH","NANOS_PER_SEC","YearMonth","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_mul_int","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","days","days","default","default","default","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_day_time","from_i128","from_i32","from_i64","from_month_day_nano","from_year_month","get_postgres_time_part","get_time_part","get_year_month","has_day","has_time_part","has_time_part_positive","has_year_month","hash","hash","hash","hours","into","into","into","into","is_positive","is_zero","is_zero","justified_interval","microseconds","minutes","months","months","nsecs","padding_i64","partial_cmp","partial_cmp","partial_cmp","seconds","serialize","serialize","serialize","to_i128","to_i32","to_i64","to_iso8601_string","to_iso8601_string","to_month_day_nano","to_nanosecond","to_owned","to_owned","to_owned","to_postgres_string","to_postgres_string","to_sql_standard_string","to_sql_standard_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unit","unit","years","GenericRange","RangeMillis","TimestampRange","and","borrow","borrow_mut","clone","clone_into","contains","deserialize","empty","end","end","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_optional","from_start","from_start","hash","intersects","into","is_empty","min_to_max","new","new_inclusive","new_inclusive","or","serialize","single","single","start","start","to_owned","to_string","try_from","try_into","type_id","until_end","until_end","with_unit","with_unit","Time","as_formatted_string","borrow","borrow_mut","clone","clone_into","cmp","compare","convert_to","default","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","from","hash","into","new","new_microsecond","new_millisecond","new_nanosecond","new_second","partial_cmp","serialize","split","to_chrono_time","to_iso8601_string","to_local_string","to_owned","to_timezone_aware_string","try_from","try_into","type_id","unit","unit","value","value","Microsecond","Millisecond","Nanosecond","Second","TimeUnit","Timestamp","align_by_bucket","align_to_ceil_by_bucket","as_arrow_time_unit","as_formatted_string","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare","convert_to","convert_to_ceil","current_millis","current_time","default","default","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","factor","fmt","fmt","fmt","from","from","from","from","from","from_chrono_date","from_chrono_datetime","from_splits","from_str","hash","into","into","naive_datetime_to_timestamp","new","new_microsecond","new_millisecond","new_nanosecond","new_second","partial_cmp","serialize","serialize","short_name","split","sub","sub_duration","to_chrono_date","to_chrono_datetime","to_chrono_time","to_iso8601_string","to_local_string","to_owned","to_owned","to_string","to_timezone_aware_string","try_from","try_from","try_into","try_into","type_id","type_id","unit","unit","value","value","BucketAligned","INF","MAX","MIN","TimestampMillis","align_by_bucket","align_to_ceil_by_bucket","as_i64","borrow","borrow_mut","clone","clone_into","cmp","compare","default","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","hash","into","new","partial_cmp","partial_cmp","to_owned","try_from","try_into","type_id","Named","Offset","TimeZone","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_tz_string","hours_mins_opt","into","system_time_zone_name","to_owned","to_string","try_from","try_into","type_id","current_time_millis","current_time_rfc3339","div_ceil","find_tz_from_env","format_utc_datetime","local_datetime_to_utc","yesterday_rfc3339"],"q":[[0,"common_time"],[19,"common_time::date"],[52,"common_time::datetime"],[87,"common_time::duration"],[125,"common_time::error"],[295,"common_time::error::Error"],[315,"common_time::interval"],[453,"common_time::range"],[499,"common_time::time"],[539,"common_time::timestamp"],[623,"common_time::timestamp_millis"],[655,"common_time::timezone"],[678,"common_time::util"]],"d":["","","","","","","","","","","","","","","","","","","","ISO 8601 Date values. The inner representation is a signed …","","","","","","","","","","","","","","","Date is formatted according to ISO-8601 standard.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","DateTime represents the <strong>milliseconds elapsed since “</strong>…","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Create a new DateTime from milliseconds elapsed since “…","","","Convert to NaiveDateTime.","Convert to [common_time::date].","","","","","","Get the milliseconds elapsed since “1970-01-01 00:00:00 …","Duration represents the elapsed time in either seconds, …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Create a new Duration with value and TimeUnit.","Create a new Duration in microsecond.","Create a new Duration in millisecond.","Create a new Duration in nanosecond.","Create a new Duration in second.","","","Split a Duration into seconds part and nanoseconds part. …","","Convert to std::time::Duration.","","","","","Return the TimeUnit of current Duration.","","Return the value of current Duration.","","","SNAFU context selector for the <code>Error::ArithmeticOverflow</code> …","","","SNAFU context selector for the <code>Error::InvalidDateStr</code> …","","SNAFU context selector for the <code>Error::InvalidTimeZoneOffset</code>…","","SNAFU context selector for the <code>Error::ParseDateStr</code> variant","","SNAFU context selector for the <code>Error::ParseInterval</code> variant","","SNAFU context selector for the <code>Error::ParseOffsetStr</code> …","","SNAFU context selector for the <code>Error::ParseTimeZoneName</code> …","","SNAFU context selector for the <code>Error::ParseTimestamp</code> …","","","SNAFU context selector for the <code>Error::TimestampOverflow</code> …","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates the number of elapsed days and milliseconds, …","Interval Type represents a period of time. It is composed …","IntervalCompare is used to compare two intervals It makes …","…","","Largest interval value.","Smallest interval value.","A triple of the number of elapsed months, days, and …","","","","","","","Indicates the number of elapsed whole months, stored as …","","","","","","","","","Multiple Interval by an integer with overflow check. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Creates a new interval from days and milliseconds.","Interval Type and i128 IntervalUnit::MonthDayNano Convert …","<code>Interval</code> Type and i32 IntervalUnit::YearMonth Convert v …","<code>Interval</code> Type and i64 IntervalUnit::DayTime Convert v …","Creates a new interval from months, days and nanoseconds. …","Creates a new interval from months.","get postgres time part(include hours, minutes, seconds, …","get time part string","get year month string","Determine if day exists","","Determine time part(includes hours, minutes, seconds, …","Determine if year or month exist","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert Interval to nanoseconds, to check whether Interval …","is_zero","All the field in the interval is 0","Returns the justified interval. allows you to adjust the …","","","","","","padding i64 to string with 2 digits","","","","","","","","","","","Convert Interval to ISO 8601 string","Convert IntervalFormat to iso8601 format string ISO …","Return a tuple(months, days, nanoseconds) from the …","Converts the interval to nanoseconds.","","","","Convert Interval to postgres verbose string","Convert IntervalFormat to postgres format string postgres …","Convert Interval to sql_standard string","Convert IntervalFormat to sql standard format string SQL …","","","","","","","","","","","","","","get unit","","","A half-open time range.","Time range in milliseconds.","","Computes the AND’ed range with other.  ","","","","","Returns true if <code>timestamp</code> is contained in the range.","","Create an empty range.","Returns the upper bound of the range (exclusive).","","","","","","","","Returns the argument unchanged.","Create GenericRange from optional start and end. If the …","Create a range <code>[start, INF)</code>.","Create a range <code>[start, INF)</code>.","","Checks if current range intersect with target.","Calls <code>U::from(self)</code>.","Returns true if the range contains no timestamps.","Return a range containing all possible values.","Creates a new range that contains values in <code>[start, end)</code>.","Create a TimestampRange with optional inclusive end …","Create a TimestampRange with optional inclusive end …","Compute the OR’ed range of two ranges. Notice: this …","","Create a range that containing only given <code>ts</code>.","Create a range that containing only given <code>ts</code>.","Returns the lower bound of the range (inclusive).","","","","","","","Create a range <code>[-INF, end)</code>.","Create a range <code>[-INF, end)</code>.","Shortcut method to create a timestamp range with given …","Shortcut method to create a timestamp range with given …","Time value, represents the elapsed time since midnight in …","","","","","","","","Convert a time to given time unit. Return <code>None</code> if …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates the time by value and <code>TimeUnit</code>.","Creates the time in microsecond.","Creates the time in millisecond.","Creates the time in nanosecond.","Creates the time in second.","","","Split a Time into seconds part and nanoseconds part. …","Cast the Time into chrono NaiveDateTime","Format Time to ISO8601 string. If the time exceeds what …","Format Time for local timezone.","","Format Time for given timezone. When timezone is None, …","","","","Returns the <code>TimeUnit</code> of the time.","","Returns the value of the time.","","","","","","","Timestamp represents the value of …","","","","","","","","","","","","","","","Convert a timestamp to given time unit. Conversion from a …","Convert a timestamp to given time unit. Conversion from a …","Creates current timestamp in millisecond.","Creates current timestamp in specific time <code>unit</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Creates a new Timestamp instance from seconds and …","Accepts a string in RFC3339 / ISO8601 standard format and …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the naive datetime (which has no specific …","","","","","","","","","","Split a Timestamp into seconds part and nanoseconds part. …","Subtracts current timestamp with another timestamp, …","Subtracts a duration from timestamp.","Convert timestamp to chrono date.","","Convert timestamp to chrono time.","Format timestamp to ISO8601 string. If the timestamp …","","","","","Format timestamp for given timezone. When timezone is …","","","","","","","","","","","","Positive infinity.","Maximum value of a timestamp.","Minimum value of a timestamp.","Unix timestamp in millisecond resolution.","Aligns the value by <code>bucket_duration</code> or <code>None</code> if underflow …","Aligns the value by <code>bucket_duration</code> to ceil or <code>None</code> if …","Returns the timestamp value as i64.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Create a new timestamp from unix timestamp in milliseconds.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Parse timezone offset string and return None if given …","Compute timezone from given offset hours and minutes …","Calls <code>U::from(self)</code>.","","","","","","","Returns the time duration since UNIX_EPOCH in milliseconds.","Returns the current time in rfc3339 format.","Port of rust unstable features <code>int_roundings</code>.","","","","Returns the yesterday time in rfc3339 format."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,0,0,23,0,23,0,23,0,23,0,23,0,23,0,23,0,0,23,0,23,23,23,36,28,29,30,37,31,33,38,34,23,36,28,29,30,37,31,33,38,34,23,28,29,30,31,33,34,23,36,28,29,30,37,31,33,38,34,36,28,29,30,37,31,33,38,34,23,23,28,29,30,31,33,34,36,28,29,30,37,31,33,38,34,23,23,36,28,29,30,37,31,33,38,34,23,33,36,28,29,30,37,31,33,38,34,23,36,28,29,30,37,31,33,38,34,23,33,31,23,23,36,28,29,30,38,34,23,23,36,28,29,30,37,31,33,38,34,23,36,28,29,30,37,31,33,38,34,23,36,28,29,30,37,31,33,38,34,23,36,28,29,30,37,31,33,38,34,23,71,72,73,74,75,76,77,72,78,74,73,79,74,78,71,75,76,77,73,79,0,48,0,0,0,0,46,46,48,0,0,0,0,0,0,48,48,46,49,50,48,46,49,50,46,48,46,49,48,46,49,48,46,50,48,46,50,46,49,48,46,49,48,46,49,48,46,50,48,48,48,46,46,46,50,50,50,48,46,46,49,48,48,48,46,46,49,49,50,50,46,46,46,46,46,46,49,0,0,49,49,49,49,48,46,50,49,48,46,49,50,46,46,49,46,49,49,46,49,46,49,48,46,50,49,48,46,49,46,46,46,46,49,46,46,48,46,49,46,49,46,49,46,48,46,49,50,48,46,49,50,48,46,49,50,46,46,49,0,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,59,56,56,56,59,56,56,56,56,56,56,56,59,56,56,56,59,56,56,56,56,56,56,56,56,59,56,59,56,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,22,22,22,22,0,0,60,60,22,60,60,22,60,22,60,22,60,22,60,60,60,60,60,60,60,22,60,22,60,22,60,60,60,22,22,22,22,60,22,22,60,60,22,22,22,60,60,60,60,60,60,22,0,60,60,60,60,60,60,60,22,22,60,60,60,60,60,60,60,60,60,22,22,60,60,22,60,22,60,22,60,60,60,60,0,68,68,68,0,80,80,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,64,64,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,64,64,64,64,64,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[],1],[3,[[4,[1]]]],[[1,1],5],[[],5],[[],5],[[],5],[[1,6],7],[[1,6],7],[8,1],[[]],[9,1],[10,[[11,[1]]]],[[1,12]],[[]],[8,1],[[1,1],[[13,[2]]]],[[1,14],4],[1,[[13,[9]]]],[[]],[1,15],[[],16],[[],4],[[],4],[[],17],[1,8],0,0,0,[[]],[[]],[18,18],[[]],[[18,18],2],[[],2],[[],18],[3,[[4,[18]]]],[[18,18],5],[[],5],[[],5],[[],5],[[18,6],7],[[18,6],7],[19,18],[[]],[15,18],[1,18],[10,[[11,[18]]]],[[18,12]],[[]],[15,18],[[18,18],[[13,[2]]]],[[18,14],4],[18,[[13,[19]]]],[18,[[13,[1]]]],[[]],[[],16],[[],4],[[],4],[[],17],[18,15],0,[[]],[[]],[20,20],[[]],[[20,20],2],[[],2],[[],20],[3,[[4,[20]]]],[[20,20],5],[[],5],[[],5],[[],5],[[20,6],7],[[20,6],7],[[]],[15,20],[21,20],[[20,12]],[[]],[[15,22],20],[15,20],[15,20],[15,20],[15,20],[[20,20],[[13,[2]]]],[[20,14],4],[20],[[]],[20,21],[[],16],[[],4],[[],4],[[],17],[20,22],0,[20,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[23,24],[[],25],[23,[[13,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[28,[[27,[16]]]]],23],[[[29,[[27,[16]]]]],23],[[[30,[[27,[16]]]]],23],[[[31,[[27,[16]]]]],23],[[[33,[[27,[8]],[27,[32]]]]],23],[[[34,[[27,[16]]]]],23],[23,[[13,[25]]]],[[[36,[35]]],[[36,[35]]]],[[[28,[35]]],[[28,[35]]]],[[[29,[35]]],[[29,[35]]]],[[[30,[35]]],[[30,[35]]]],[37,37],[[[31,[35]]],[[31,[35]]]],[[[33,[35,35]]],[[33,[35,35]]]],[[[38,[35]]],[[38,[35]]]],[[[34,[35]]],[[34,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[23,39,[40,[16]]]],[23,10],[[[28,[[27,[16]]]]],[[4,[23]]]],[[[29,[[27,[16]]]]],[[4,[23]]]],[[[30,[[27,[16]]]]],[[4,[23]]]],[[[31,[[27,[16]]]]],[[4,[23]]]],[[[33,[[27,[8]],[27,[32]]]]],[[4,[23]]]],[[[34,[[27,[16]]]]],[[4,[23]]]],[[[36,[41]],6],7],[[[28,[41]],6],7],[[[29,[41]],6],7],[[[30,[41]],6],7],[[37,6],7],[[[31,[41]],6],7],[[[33,[41,41]],6],7],[[[38,[41]],6],7],[[[34,[41]],6],7],[[23,6],7],[[23,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[[27,[16]]]]],23],[[[28,[[27,[16]]]]],23],[[[29,[[27,[16]]]]],23],[[[30,[[27,[16]]]]],23],[37,23],[[[31,[[27,[16]]]]],23],[[[33,[[27,[8]],[27,[32]]]]],23],[[[38,[[27,[16]]]]],23],[[[34,[[27,[16]]]]],23],[23,[[13,[42]]]],0,0,[23,[[13,[43]]]],[44],0,0,0,0,0,0,[23,[[13,[25]]]],[23,45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[46,[47,[8]]],[[13,[46]]]],[48,48],[46,46],[49,49],[[]],[[]],[[]],[[48,48],2],[[46,46],2],[[50,50],2],[[],2],[[],2],[[],2],0,0,[[],48],[[],46],[[],49],[3,[[4,[48]]]],[3,[[4,[46]]]],[3,[[4,[49]]]],[[48,48],5],[[46,46],5],[[50,50],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[48,6],7],[[46,6],7],[[46,6],7],[[49,6],7],[[]],[51,48],[51,48],[52,46],[[]],[[]],[46,49],[46,50],[[]],[[8,8],46],[52,46],[8,46],[15,46],[[8,8,15],46],[8,46],[49,16],[[15,15,15,15,5,5],16],[[8,8,5],16],[49,5],[49,5],[49,5],[49,5],[[48,12]],[[46,12]],[[50,12]],0,[[]],[[]],[[]],[[]],[46,5],[46,5],[49,5],[46,46],0,0,0,0,0,[15,16],[[48,48],[[13,[2]]]],[[46,46],[[13,[2]]]],[[50,50],[[13,[2]]]],0,[[48,14],4],[[46,14],4],[[49,14],4],[46,52],[46,8],[46,15],[46,16],[49,16],[46],[46,52],[[]],[[]],[[]],[46,16],[49,16],[46,16],[49,16],[[],16],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],17],[[],17],[[],17],[[],17],[46,48],0,0,0,0,0,[[[56,[[0,[53,54,55]]]],[56,[[0,[53,54,55]]]]],[[56,[[0,[53,54,55]]]]]],[[]],[[]],[[[56,[35]]],[[56,[35]]]],[[]],[[56,54],5],[3,[[4,[[56,[57]]]]]],[[],[[56,[[0,[53,54,55]]]]]],[56,13],0,[[[56,[58]],[56,[58]]],5],[[],5],[[],5],[[],5],[[59,6],7],[[[56,[41]],6],7],[[]],[[[13,[[0,[53,54,55]]]],[13,[[0,[53,54,55]]]]],[[56,[[0,[53,54,55]]]]]],[60,59],[60,[[56,[60]]]],[[[56,[61]],12]],[[[56,[[0,[53,54,55]]]],[56,[[0,[53,54,55]]]]],5],[[]],[[[56,[54]]],5],[[],56],[[[0,[54,27]],[0,[54,27]]],[[13,[56]]]],[[[13,[60]],[13,[60]]],59],[[[13,[60]],[13,[60]]],[[56,[60]]]],[[[56,[[0,[53,54,55]]]],[56,[[0,[53,54,55]]]]],[[56,[[0,[53,54,55]]]]]],[[[56,[62]],14],4],[60,59],[60,[[56,[60]]]],[56,13],0,[[]],[[],16],[[],4],[[],4],[[],17],[[60,5],59],[[60,5],[[56,[60]]]],[[15,15,22],[[13,[59]]]],[[15,15,22],[[13,[[56,[60]]]]]],0,[[63,10,[13,[64]]],16],[[]],[[]],[63,63],[[]],[[63,63],2],[[],2],[[63,22],[[13,[63]]]],[[],63],[3,[[4,[63]]]],[[63,63],5],[[],5],[[],5],[[],5],[[63,6],7],[15,63],[[]],[[63,12]],[[]],[[15,22],63],[15,63],[15,63],[15,63],[15,63],[[63,63],[[13,[2]]]],[[63,14],4],[63],[63,[[13,[65]]]],[63,16],[63,16],[[]],[[63,[13,[64]]],16],[[],4],[[],4],[[],17],[63,22],0,[63,15],0,0,0,0,0,0,0,[[60,15],[[13,[60]]]],[[60,15],[[13,[60]]]],[22,66],[[60,10,[13,[64]]],16],[[]],[[]],[[]],[[]],[60,60],[22,22],[[]],[[]],[[60,60],2],[[],2],[[60,22],[[13,[60]]]],[[60,22],[[13,[60]]]],[[],60],[22,60],[[],60],[[],22],[3,[[4,[60]]]],[3,[[4,[22]]]],[[60,60],5],[[22,22],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[22,32],[[60,6],7],[[22,6],7],[[22,6],7],[[]],[15,60],[[]],[66,22],[66,22],[9,[[13,[60]]]],[19,[[13,[60]]]],[[15,32],[[13,[60]]]],[10,[[4,[60]]]],[[60,12]],[[]],[[]],[[10,19],[[11,[60]]]],[[15,22],60],[15,60],[15,60],[15,60],[15,60],[[60,60],[[13,[2]]]],[[60,14],4],[[22,14],4],[22,10],[60],[[60,60],[[13,[67]]]],[[60,21],[[11,[60]]]],[60,[[13,[9]]]],[60,[[13,[19]]]],[60,[[13,[65]]]],[60,16],[60,16],[[]],[[]],[[],16],[[60,[13,[64]]],16],[[],4],[[],4],[[],4],[[],4],[[],17],[[],17],[60,22],0,[60,15],0,0,0,0,0,0,[15,13],[15,13],[68,15],[[]],[[]],[68,68],[[]],[[68,68],2],[[],2],[[],68],[[68,15],5],[[68,68],5],[[],5],[[],5],[[],5],[[68,6],7],[[]],[15,68],[[68,12]],[[]],[15,68],[[68,68],[[13,[2]]]],[[68,15],[[13,[2]]]],[[]],[[],4],[[],4],[[],17],0,0,0,[[]],[[]],[64,64],[[]],[[64,64],5],[[],5],[[],5],[[],5],[[64,6],7],[[64,6],7],[[]],[10,[[11,[[13,[64]]]]]],[[8,32],[[11,[64]]]],[[]],[[],16],[[]],[[],16],[[],4],[[],4],[[],17],[[],15],[[],16],[[15,15],15],[[],[[13,[69]]]],[[19,10],16],[19,[[70,[19]]]],[[],16]],"c":[],"p":[[3,"Date"],[4,"Ordering"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"i32"],[3,"NaiveDate"],[15,"str"],[6,"Result"],[8,"Hasher"],[4,"Option"],[8,"Serializer"],[15,"i64"],[3,"String"],[3,"TypeId"],[3,"DateTime"],[3,"NaiveDateTime"],[3,"Duration"],[3,"Duration"],[4,"TimeUnit"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"InvalidDateStrSnafu"],[3,"ParseTimestampSnafu"],[3,"ParseIntervalSnafu"],[3,"ArithmeticOverflowSnafu"],[15,"u32"],[3,"InvalidTimeZoneOffsetSnafu"],[3,"ParseTimeZoneNameSnafu"],[8,"Clone"],[3,"ParseDateStrSnafu"],[3,"TimestampOverflowSnafu"],[3,"ParseOffsetStrSnafu"],[15,"usize"],[3,"Vec"],[8,"Debug"],[3,"Location"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"Interval"],[8,"TryInto"],[4,"IntervalUnit"],[3,"IntervalFormat"],[3,"IntervalCompare"],[4,"IntervalUnit"],[15,"i128"],[8,"Copy"],[8,"PartialOrd"],[8,"Default"],[3,"GenericRange"],[8,"Deserialize"],[8,"PartialEq"],[6,"TimestampRange"],[3,"Timestamp"],[8,"Hash"],[8,"Serialize"],[3,"Time"],[4,"TimeZone"],[3,"NaiveTime"],[4,"TimeUnit"],[3,"Duration"],[3,"TimestampMillis"],[4,"Tz"],[4,"LocalResult"],[13,"ParseDateStr"],[13,"TimestampOverflow"],[13,"ParseOffsetStr"],[13,"InvalidTimeZoneOffset"],[13,"InvalidDateStr"],[13,"ParseTimestamp"],[13,"ParseInterval"],[13,"ArithmeticOverflow"],[13,"ParseTimeZoneName"],[8,"BucketAligned"]]},\
"common_version":{"doc":"","t":"RF","n":["DEFAULT_VALUE","setup_git_versions"],"q":[[0,"common_version"]],"d":["",""],"i":[0,0],"f":[0,[[]]],"c":[],"p":[]},\
"datanode":{"doc":"","t":"AAAAAAAAAAAEDDRDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLMLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLNDDRRDNNDDNDNDENDDEDNDDLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLMLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDDRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMLLLMMLLMMLLLLMMMLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNNDDNDNDNDNDNDNDNDNDNDNDNNDDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNNDDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNDEIGDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLFLLLLLLLLLLLMLLLLLLLLLMLDLLLLLLLLLLLLLLLALMLLLLLMFMMLMMFMMLMMLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLDRMLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDDDNEDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLMMMLLLMLMLMLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLAFFFAAFAAFFFFF","n":["alive_keeper","config","datanode","error","event_listener","greptimedb_telemetry","heartbeat","metrics","region_server","server","store","CountdownCommand","CountdownTask","CountdownTaskHandle","MAX_CLOSE_RETRY_TIMES","RegionAliveKeeper","Reset","Start","and","and","and","and","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","close_region","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deregister_region","drop","drop","drop","drop","drop","epoch","epoch","find_handle","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","handle","handler","heartbeat_interval_millis","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_acceptable","is_in_subset","is_in_subset","is_in_subset","is_in_subset","keep_lived","lift_into","lift_into","lift_into","lift_into","new","new","or","or","or","or","region_id","region_id","region_server","region_server","register_region","reset_deadline","run","rx","sculpt","sculpt","sculpt","sculpt","start","start","started","subset","subset","subset","subset","tasks","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Azblob","AzblobConfig","CompactionConfig","DEFAULT_DATA_HOME","DEFAULT_OBJECT_STORE_CACHE_SIZE","DatanodeOptions","File","File","FileConfig","FlushConfig","Gcs","GcsConfig","Mito","ObjectStorageCacheConfig","ObjectStoreConfig","Oss","OssConfig","ProcedureConfig","RegionEngineConfig","RegionManifestConfig","S3","S3Config","StorageConfig","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","access_key_id","access_key_id","access_key_secret","account_key","account_name","and","and","and","and","and","and","and","and","and","and","and","and","and","auto_flush_interval","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket","bucket","cache","cache","cache","cache","cache_capacity","cache_path","checkpoint_margin","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compaction","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compress","container","credential_path","data_home","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_telemetry","endpoint","endpoint","endpoint","endpoint","env_list_keys","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","gc_duration","global_ttl","global_write_buffer_size","heartbeat","http","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","logging","manifest","max_files_in_level0","max_flush_tasks","max_inflight_tasks","max_purge_tasks","max_retry_times","meta_client","mode","node_id","or","or","or","or","or","or","or","or","or","or","or","or","or","picker_schedule_interval","region","region_engine","region_write_buffer_size","require_lease_before_startup","retry_delay","root","root","root","root","rpc_addr","rpc_hostname","rpc_max_recv_message_size","rpc_max_send_message_size","rpc_runtime_size","sas_token","scope","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","secret_access_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sst_write_buffer_size","storage","store","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_toml_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wal","Datanode","DatanodeBuilder","OPEN_REGION_PARALLELISM","ProcedureConfig","__clone_box","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build_log_store","build_store_engines","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","greptimedb_telemetry_task","heartbeat_task","init","init","init","initialize_region_server","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","kv_backend","leases_notifier","lift_into","lift_into","lift_into","max_retry_times","meta_client","new","new_region_server","opts","opts","or","or","or","plugins","plugins","plugins","region_event_receiver","region_server","region_server","retry_delay","sculpt","sculpt","sculpt","serialize","services","shutdown","shutdown_services","start","start_heartbeat","start_services","subset","subset","subset","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_coordinated","with_meta_client","BuildRegionRequests","BuildRegionRequestsSnafu","BumpTableId","BumpTableIdSnafu","Catalog","CatalogNotFound","CatalogNotFoundSnafu","CatalogSnafu","ColumnDataType","ColumnDataTypeSnafu","ColumnDefaultValue","ColumnDefaultValueSnafu","ColumnNoneDefaultValue","ColumnNoneDefaultValueSnafu","ColumnNotFound","ColumnNotFoundSnafu","ColumnValuesNumberMismatch","ColumnValuesNumberMismatchSnafu","ConstraintNotSupported","ConstraintNotSupportedSnafu","CreateDir","CreateDirSnafu","CreateTable","CreateTableSnafu","DatabaseNotFound","DatabaseNotFoundSnafu","DecodeLogicalPlan","DecodeLogicalPlanSnafu","Delete","DeleteExprToRequest","DeleteExprToRequestSnafu","DeleteSnafu","DropTable","DropTableSnafu","EncodeJson","EncodeJsonSnafu","EngineProcedureNotFound","EngineProcedureNotFoundSnafu","Error","ExecuteLogicalPlan","ExecuteLogicalPlanSnafu","ExecuteSql","ExecuteSqlSnafu","ExecuteStatement","ExecuteStatementSnafu","FlushTable","FlushTableSnafu","GetMetadata","GetMetadataSnafu","GetRegionMetadata","GetRegionMetadataSnafu","HandleHeartbeatResponse","HandleHeartbeatResponseSnafu","HandleRegionRequest","HandleRegionRequestSnafu","IllegalPrimaryKeysDef","IllegalPrimaryKeysDefSnafu","IncorrectInternalState","IncorrectInternalStateSnafu","InitBackend","InitBackendSnafu","Insert","InsertData","InsertDataSnafu","InsertSnafu","InvalidSql","InvalidSqlSnafu","JoinTask","JoinTaskSnafu","KeyColumnNotFound","KeyColumnNotFoundSnafu","MetaClientInit","MetaClientInitSnafu","MissingInsertBody","MissingInsertBodySnafu","MissingKvBackend","MissingKvBackendSnafu","MissingMetaClient","MissingMetaClientSnafu","MissingMetasrvOpts","MissingMetasrvOptsSnafu","MissingNodeId","MissingNodeIdSnafu","MissingRequiredField","MissingRequiredFieldSnafu","MissingTimestampColumn","MissingTimestampColumnSnafu","MissingWalDirConfig","MissingWalDirConfigSnafu","NotSupportSql","NotSupportSqlSnafu","OpenLogStore","OpenLogStoreSnafu","ParseAddr","ParseAddrSnafu","ParseSql","ParseSqlSnafu","PayloadNotExist","PayloadNotExistSnafu","PlanStatement","PlanStatementSnafu","PrepareImmutableTable","PrepareImmutableTableSnafu","RegionEngineNotFound","RegionEngineNotFoundSnafu","RegionNotFound","RegionNotFoundSnafu","RegisterSchema","RegisterSchemaSnafu","RemoveDir","RemoveDirSnafu","Result","RuntimeResource","RuntimeResourceSnafu","SchemaExists","SchemaExistsSnafu","SchemaNotFound","SchemaNotFoundSnafu","ShutdownInstance","ShutdownInstanceSnafu","ShutdownServer","ShutdownServerSnafu","StartServer","StartServerSnafu","StopRegionEngine","StopRegionEngineSnafu","SubmitProcedure","SubmitProcedureSnafu","TableEngineNotFound","TableEngineNotFoundSnafu","TableIdProviderNotFound","TableIdProviderNotFoundSnafu","TableNotFound","TableNotFoundSnafu","Unexpected","UnexpectedSnafu","UnrecognizedTableOption","UnrecognizedTableOptionSnafu","UnsupportedGrpcRequest","UnsupportedGrpcRequestSnafu","UnsupportedOutput","UnsupportedOutputSnafu","WaitForGrpcServing","WaitForGrpcServingSnafu","WaitProcedure","WaitProcedureSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","addr","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","column_name","columns","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","constraint","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","dir","dir","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine","engine_name","engine_name","expected","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kind","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","msg","msg","name","name","name","name","name","name","name","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","procedure_id","procedure_id","provide","region_id","region_id","region_id","schema","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","source","state","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","table_name","table_name","table_name","table_name","table_name","table_name","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","violated","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","addr","catalog","column","column","column_name","columns","constraint","dir","dir","engine","engine_name","engine_name","error","error","error","error","error","error","expected","kind","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","msg","name","name","name","name","name","name","name","procedure_id","procedure_id","region_id","region_id","region_id","schema","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","state","table_name","table_name","table_name","table_name","table_name","table_name","table_name","values","violated","Deregistered","NoopRegionServerEventListener","RegionServerEvent","RegionServerEventListener","RegionServerEventListenerRef","RegionServerEventReceiver","RegionServerEventSender","Registered","__clone_box","and","and","and","and","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","new_region_server_event_channel","on_region_deregistered","on_region_deregistered","on_region_registered","on_region_registered","or","or","or","or","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","StandaloneGreptimeDBTelemetryCollector","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","get_greptimedb_telemetry_task","get_mode","get_nodes","get_retry","get_uuid_cache","inc_retry","init","into","into_request","is_in_subset","lift_into","or","retry","sculpt","set_uuid_cache","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","uuid","vzip","HeartbeatTask","and","borrow","borrow_mut","close","compat","compat_mut","compat_ref","create_streams","deref","deref_mut","drop","drop","from","from_subset","handle_response","handler","init","interval","into","into_request","is_in_subset","lift_into","load_region_stats","meta_client","new_metasrv_client","node_epoch","node_id","or","region_alive_keeper","region_server","resolve_addr","resp_handler_executor","running","sculpt","server_addr","server_hostname","start","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_new","type_id","vzip","RegionHeartbeatResponseHandler","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","fill_reply","from","from_ref","from_subset","handle","init","instruction_to_request","into","into_request","is_acceptable","is_in_subset","lift_into","new","or","region_ident_to_region_id","region_server","reply_template_from_instruction","sculpt","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","HANDLE_REGION_REQUEST_ELAPSED","REGION_REQUEST_TYPE","__private_field","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Deregisters","DummyCatalogList","DummyCatalogProvider","DummySchemaProvider","DummyTableProvider","None","RegionChange","RegionServer","RegionServerInner","RegionStat","Register","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","and","and","and","and","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog","catalog","catalog_names","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","do_get","drop","drop","drop","drop","drop","drop","drop","drop","engine","engine","engines","event_listener","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","handle","handle_read","handle_read","handle_request","handle_request","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","metadata","new","new","new","opened_regions","or","or","or","or","or","or","or","or","query_engine","region_disk_usage","region_id","region_id","region_map","register_catalog","register_engine","register_engine","role","runtime","runtime","scan","scan_request","schema","schema","schema","schema_names","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","set_writable","stop","stop","subset","subset","subset","subset","subset","subset","subset","subset","supports_filters_pushdown","table","table","table_exist","table_names","table_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Services","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","grpc_server","http_server","init","into","into_request","is_in_subset","lift_into","or","sculpt","shutdown","start","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_new","type_id","vzip","azblob","build_http_client","clean_temp_dir","create_object_store_with_cache","fs","gcs","new_object_store","oss","s3","new_azblob_object_store","new_fs_object_store","new_gcs_object_store","new_oss_object_store","new_s3_object_store"],"q":[[0,"datanode"],[11,"datanode::alive_keeper"],[149,"datanode::config"],[722,"datanode::datanode"],[848,"datanode::error"],[3505,"datanode::error::Error"],[3653,"datanode::event_listener"],[3776,"datanode::greptimedb_telemetry"],[3812,"datanode::heartbeat"],[3859,"datanode::heartbeat::handler"],[3899,"datanode::metrics"],[3929,"datanode::region_server"],[4222,"datanode::server"],[4254,"datanode::store"],[4263,"datanode::store::azblob"],[4264,"datanode::store::fs"],[4265,"datanode::store::gcs"],[4266,"datanode::store::oss"],[4267,"datanode::store::s3"]],"d":["","Datanode configurations","Datanode implementation.","","","","","","","","object storage utilities","","","","","RegionAliveKeeper manages all <code>CountdownTaskHandles</code>.","Reset countdown deadline to the given instance.","Start this countdown task. The first deadline will be set …","","","","","","","","","","","","","Returns if the region is closed successfully.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The epoch when RegionAliveKeeper is created. It’s used …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Creates a new CountdownTaskHandle and starts the countdown …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options for table compaction","Default data home in file storage","","","","","","","","","","","Object storage config","","","","","Options for region manifest","","","Storage engine config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Interval to auto flush a region if it has not flushed yet.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The cache capacity in bytes","The local file cache directory","Region manifest checkpoint actions margin. Manifest …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether to compress manifest and checkpoint file by gzip","","","The working directory of database","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Region manifest logs and checkpoints gc task execution …","Retention period for all tables.","Global write buffer size for all regions.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Max files in level 0 to trigger compaction.","Max inflight flush tasks.","Max task number that can concurrently run.","Max task number for SST purge task after compaction.","Max retry times of procedure.","","","","","","","","","","","","","","","","","Interval to schedule auto flush picker to find region to …","","Options for different store engines.","Default write buffer size for a region.","","Initial retry delay of procedures, increases exponentially.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Buffer threshold while writing SST files","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Datanode service.","","","","","","","","","","","","","","","Build RaftEngineLogStore","Build RegionEngineRef from <code>store_engine</code> section in <code>opts</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Open all regions belong to this datanode.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Max retry times of procedure.","","<code>kv_backend</code> is optional. If absent, the builder will try to …","","","","","","","","","","","","","Initial retry delay of procedures, increases exponentially.","","","","","","","","","","Start services of datanode. This method call will block …","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>leases_notifier</code> exists, it waits until leases have been …","","","SNAFU context selector for the <code>Error::BuildRegionRequests</code> …","","SNAFU context selector for the <code>Error::BumpTableId</code> variant","","","SNAFU context selector for the <code>Error::CatalogNotFound</code> …","SNAFU context selector for the <code>Error::Catalog</code> variant","","SNAFU context selector for the <code>Error::ColumnDataType</code> …","","SNAFU context selector for the <code>Error::ColumnDefaultValue</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ColumnNotFound</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::CreateDir</code> variant","","SNAFU context selector for the <code>Error::CreateTable</code> variant","","SNAFU context selector for the <code>Error::DatabaseNotFound</code> …","","SNAFU context selector for the <code>Error::DecodeLogicalPlan</code> …","","","SNAFU context selector for the <code>Error::DeleteExprToRequest</code> …","SNAFU context selector for the <code>Error::Delete</code> variant","","SNAFU context selector for the <code>Error::DropTable</code> variant","","SNAFU context selector for the <code>Error::EncodeJson</code> variant","","SNAFU context selector for the …","Business error of datanode.","","SNAFU context selector for the <code>Error::ExecuteLogicalPlan</code> …","","SNAFU context selector for the <code>Error::ExecuteSql</code> variant","","SNAFU context selector for the <code>Error::ExecuteStatement</code> …","","SNAFU context selector for the <code>Error::FlushTable</code> variant","","SNAFU context selector for the <code>Error::GetMetadata</code> variant","","SNAFU context selector for the <code>Error::GetRegionMetadata</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::HandleRegionRequest</code> …","","SNAFU context selector for the <code>Error::IllegalPrimaryKeysDef</code>…","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InitBackend</code> variant","","","SNAFU context selector for the <code>Error::InsertData</code> variant","SNAFU context selector for the <code>Error::Insert</code> variant","","SNAFU context selector for the <code>Error::InvalidSql</code> variant","","SNAFU context selector for the <code>Error::JoinTask</code> variant","","SNAFU context selector for the <code>Error::KeyColumnNotFound</code> …","","SNAFU context selector for the <code>Error::MetaClientInit</code> …","","SNAFU context selector for the <code>Error::MissingInsertBody</code> …","","SNAFU context selector for the <code>Error::MissingKvBackend</code> …","","SNAFU context selector for the <code>Error::MissingMetaClient</code> …","","SNAFU context selector for the <code>Error::MissingMetasrvOpts</code> …","","SNAFU context selector for the <code>Error::MissingNodeId</code> variant","","SNAFU context selector for the <code>Error::MissingRequiredField</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MissingWalDirConfig</code> …","","SNAFU context selector for the <code>Error::NotSupportSql</code> variant","","SNAFU context selector for the <code>Error::OpenLogStore</code> variant","","SNAFU context selector for the <code>Error::ParseAddr</code> variant","","SNAFU context selector for the <code>Error::ParseSql</code> variant","","SNAFU context selector for the <code>Error::PayloadNotExist</code> …","","SNAFU context selector for the <code>Error::PlanStatement</code> variant","","SNAFU context selector for the <code>Error::PrepareImmutableTable</code>…","","SNAFU context selector for the <code>Error::RegionEngineNotFound</code> …","","SNAFU context selector for the <code>Error::RegionNotFound</code> …","","SNAFU context selector for the <code>Error::RegisterSchema</code> …","","SNAFU context selector for the <code>Error::RemoveDir</code> variant","","","SNAFU context selector for the <code>Error::RuntimeResource</code> …","","SNAFU context selector for the <code>Error::SchemaExists</code> variant","","SNAFU context selector for the <code>Error::SchemaNotFound</code> …","","SNAFU context selector for the <code>Error::ShutdownInstance</code> …","","SNAFU context selector for the <code>Error::ShutdownServer</code> …","","SNAFU context selector for the <code>Error::StartServer</code> variant","","SNAFU context selector for the <code>Error::StopRegionEngine</code> …","","SNAFU context selector for the <code>Error::SubmitProcedure</code> …","","SNAFU context selector for the <code>Error::TableEngineNotFound</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::Unexpected</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnsupportedOutput</code> …","","SNAFU context selector for the <code>Error::WaitForGrpcServing</code> …","","SNAFU context selector for the <code>Error::WaitProcedure</code> variantonsume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Called <em>after</em> a region was closed.","","Called <em>after</em> a new region was created/opened.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","Create metasrv client instance and spawn heartbeat loop.","","","","","","Resolves hostname:port address for meta registration","","","","","","Start heartbeat task, spawn background task.","","","","","","","Create a new heartbeat task instance.","","","Handler for Instruction::OpenRegion and …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","The elapsed time of handling a request in the …","Region request type label.","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Resolve to the given region (specified by RegionId) …","For DummyCatalogList.","For DummyCatalogList.","For TableProvider and DummyCatalogList","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Keeping a mutable request makes it possible to change in …","","","","","","","","","","","","","","","Stop the region server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All rpc services.","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,7,9,3,13,7,9,3,13,7,9,3,13,3,7,9,3,13,7,9,3,13,7,9,3,13,7,9,3,13,7,9,3,13,7,7,9,9,3,13,7,7,7,13,7,9,3,13,7,9,3,13,7,9,7,7,9,3,13,7,9,3,13,7,9,3,13,7,7,9,3,13,7,7,9,3,13,7,9,7,9,3,13,9,3,7,3,7,9,3,3,7,9,3,13,7,9,7,7,9,3,13,7,7,9,3,13,7,9,3,13,7,9,3,13,7,7,9,9,3,3,13,13,9,7,9,3,13,7,9,3,13,33,0,0,0,0,0,33,45,0,0,33,0,45,0,0,33,0,0,0,0,33,0,0,33,34,35,36,37,38,39,40,41,42,43,44,45,37,38,38,39,39,33,34,35,36,37,38,39,40,41,42,43,44,45,43,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,37,38,40,37,38,39,40,36,36,41,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,34,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,41,39,40,34,33,34,35,36,37,38,39,40,41,42,43,44,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,44,37,38,39,40,44,35,41,42,43,45,35,35,35,35,35,41,41,41,41,41,42,42,42,42,42,43,43,43,43,43,45,45,45,45,45,34,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,41,34,43,44,44,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,44,34,42,43,42,42,57,44,44,44,33,34,35,36,37,38,39,40,41,42,43,44,45,43,37,44,43,44,57,37,38,39,40,44,44,44,44,44,39,40,33,34,35,36,37,38,39,40,41,42,43,44,45,37,33,34,35,36,37,38,39,40,41,42,43,44,45,42,44,34,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,44,33,34,35,36,37,38,39,40,41,42,43,44,45,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,33,34,35,36,37,38,39,40,41,42,43,44,45,33,34,35,36,37,38,39,40,41,42,43,44,45,44,0,0,0,0,57,52,51,57,52,51,57,52,51,57,51,51,51,57,57,52,51,57,52,51,57,52,51,57,57,52,51,57,52,51,57,57,52,51,57,57,57,57,57,57,57,57,52,51,57,57,52,51,57,52,52,52,51,57,51,52,51,57,52,51,57,52,51,57,51,52,52,51,57,57,51,51,51,52,51,52,51,57,52,52,51,52,52,52,57,52,51,57,57,52,52,52,52,52,52,52,51,57,57,52,51,57,52,51,57,52,51,57,52,52,51,51,57,57,52,51,57,52,51,57,52,51,63,0,63,0,63,63,0,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,63,0,0,63,0,63,0,63,0,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,63,0,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,63,0,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,114,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,63,63,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,87,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,128,88,72,74,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,81,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,63,115,116,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,138,106,107,95,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,94,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,77,78,80,69,70,79,82,86,93,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,130,131,63,137,92,138,87,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,63,68,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,104,105,71,72,109,110,111,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,96,96,97,97,98,98,99,99,100,100,101,101,102,102,68,68,69,69,70,70,104,104,105,105,106,106,107,107,71,71,72,72,73,73,74,74,108,108,109,109,110,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,75,75,76,76,77,77,78,78,79,79,80,80,81,81,120,120,82,82,121,121,122,122,123,123,124,124,125,125,126,126,83,83,127,127,84,84,85,85,86,86,87,87,128,128,88,88,129,129,130,130,131,131,132,132,133,133,134,134,89,89,90,90,135,135,136,136,91,91,137,137,92,92,93,93,94,94,95,95,138,138,139,139,140,140,63,63,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,74,91,96,97,98,99,100,101,102,68,69,70,104,105,106,107,71,72,73,74,108,109,110,111,112,113,114,115,116,117,118,119,75,76,77,78,79,80,81,120,82,121,122,123,124,125,126,83,127,84,85,86,87,128,88,129,130,131,132,133,134,89,90,135,136,91,137,92,93,94,95,138,139,140,63,193,194,195,196,197,198,199,200,201,202,203,204,193,200,201,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,203,204,222,223,224,225,226,227,228,229,230,205,231,232,233,234,235,199,236,237,238,239,240,241,242,243,244,245,246,247,248,195,196,249,250,251,252,253,206,254,255,207,256,257,258,259,260,209,208,202,261,262,263,264,235,218,219,234,237,248,260,262,250,251,258,259,202,194,210,211,212,213,214,215,216,220,221,203,204,224,225,226,227,228,229,230,231,236,238,239,240,241,242,243,245,195,249,250,251,252,253,256,258,202,261,262,217,220,221,222,197,225,226,227,198,257,265,0,0,0,0,0,0,265,146,265,266,27,146,265,266,27,146,265,266,27,146,146,146,265,266,27,146,265,266,27,146,265,266,27,146,265,266,27,146,265,266,27,146,265,266,27,146,146,265,266,27,146,146,265,266,27,146,265,266,27,146,265,266,27,146,265,266,27,146,265,266,27,146,265,266,27,146,0,267,146,267,146,265,266,27,146,265,266,27,146,265,266,27,146,146,265,266,27,146,265,266,27,146,265,266,27,146,265,265,266,266,27,27,146,146,265,266,27,146,265,266,27,146,0,149,149,149,149,149,149,149,149,149,149,149,0,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,152,152,152,152,152,152,152,152,0,152,152,152,152,152,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,0,0,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,268,0,0,0,0,268,0,0,0,0,268,22,168,169,170,171,181,175,268,22,168,169,170,171,168,169,170,171,181,175,268,22,168,169,170,171,181,175,268,22,168,169,170,171,168,168,168,22,168,169,170,171,22,168,169,170,171,181,175,268,22,168,169,170,171,181,175,268,22,168,169,170,171,181,175,268,22,168,169,170,171,181,175,268,22,168,169,170,171,181,175,268,22,168,169,170,171,22,181,175,268,22,168,169,170,171,181,171,175,175,181,175,268,22,168,169,170,171,22,168,169,170,171,181,175,268,22,168,169,170,171,22,175,22,175,22,181,175,268,22,168,169,170,171,22,181,175,268,22,168,169,170,171,181,175,268,22,168,169,170,171,181,175,268,22,168,169,170,171,181,175,268,22,168,169,170,171,171,175,22,168,22,181,175,268,22,168,169,170,171,175,22,181,171,175,168,175,22,181,22,175,171,171,169,171,169,169,181,175,268,22,168,169,170,171,22,175,22,181,175,268,22,168,169,170,171,171,170,170,170,170,171,22,168,169,170,171,181,175,268,22,168,169,170,171,181,175,268,22,168,169,170,171,181,175,268,22,168,169,170,171,181,181,175,175,268,268,22,22,168,168,169,169,170,170,171,171,181,175,268,22,168,169,170,171,181,175,268,22,168,169,170,171,0,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,4],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[6],[6],[6],[6],[6],[6],[6],[6],[[7,8]],[6],[6],[9],[6],[6],[7,10],0,[[7,8],[[12,[[11,[9]]]]]],[[13,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,16],[[19,[[18,[17]]]]]],0,0,[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[7,16],4],[[],4],[[],4],[[],4],[[],4],[[7,[21,[8]],10]],[[]],[[]],[[]],[[]],[[22,23],7],[[22,8,[0,[24,25]]],9],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],0,0,0,0,[[7,8]],[[9,10]],[3,[[12,[4]]]],0,[[]],[[]],[[]],[[]],[[[11,[7]],[12,[27]]],28],[[9,23]],0,[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],0,[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],0,[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,[[],33],[[],34],[[],35],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[46,[[30,[33]]]],[46,[[30,[34]]]],[46,[[30,[35]]]],[46,[[30,[36]]]],[46,[[30,[37]]]],[46,[[30,[38]]]],[46,[[30,[39]]]],[46,[[30,[40]]]],[46,[[30,[41]]]],[46,[[30,[42]]]],[46,[[30,[43]]]],[46,[[30,[44]]]],[46,[[30,[45]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,0,0,0,0,[[],[[12,[[48,[47]]]]]],[[35,35],4],[[41,41],4],[[42,42],4],[[43,43],4],[[45,45],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[33,14],15],[[34,14],15],[[35,14],15],[[36,14],15],[[37,14],15],[[38,14],15],[[39,14],15],[[40,14],15],[[41,14],15],[[42,14],15],[[43,14],15],[[44,14],15],[[45,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[33,49],30],[[34,49],30],[[35,49],30],[[36,49],30],[[37,49],30],[[38,49],30],[[39,49],30],[[40,49],30],[[41,49],30],[[42,49],30],[[43,49],30],[[44,49],30],[[45,49],30],0,0,0,[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,50],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[32],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[51,[[28,[52]]]],[44,[[28,[[11,[53]]]]]],[[44,[11,[54]],55],[[28,[[21,[56]]]]]],[57,57],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],57],[6],[6],[6],[6],[6],[6],[46,[[30,[57]]]],[6],[6],[6],[[57,57],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[57,14],[[30,[58]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],6],[[],6],[[],6],[[51,22,59,4],28],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],4],[[],4],[[],4],0,0,[[]],[[]],[[]],0,0,[[44,[12,[59]],60],51],[[44,60,[11,[53]],61],[[28,[22]]]],0,0,[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[52,60],0,0,0,[52,22],0,0,[[]],[[]],[[]],[[57,49],30],0,[52,28],[52,28],[52,28],[52,28],[52,28],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[]],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[]],[[]],[[]],[52],[[51,62],51],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],[32],0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[63,64],[[],65],[63,[[12,[66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[68,[[67,[50]]]]],63],[[[69,[[67,[50]]]]],63],[[[70,[[67,[50]]]]],63],[[[71,[[67,[50]]]]],63],[[[72,[[67,[50]],[67,[50]]]]],63],[73,63],[[[74,[[67,[6]],[67,[6]]]]],63],[75,63],[76,63],[[[77,[[67,[50]]]]],63],[[[78,[[67,[50]]]]],63],[[[79,[[67,[50]]]]],63],[[[80,[[67,[50]]]]],63],[[[81,[[67,[50]]]]],63],[[[82,[[67,[50]]]]],63],[83,63],[84,63],[85,63],[[[86,[[67,[50]]]]],63],[[[87,[[67,[50]],[67,[50]]]]],63],[[[88,[[67,[50]]]]],63],[89,63],[90,63],[[[91,[[67,[50]]]]],63],[[[92,[[67,[8]]]]],63],[[[93,[[67,[50]]]]],63],[[[94,[[67,[50]]]]],63],[[[95,[[67,[50]]]]],63],0,[63,[[12,[65]]]],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[[[68,[103]]],[[68,[103]]]],[[[69,[103]]],[[69,[103]]]],[[[70,[103]]],[[70,[103]]]],[[[104,[103]]],[[104,[103]]]],[[[105,[103]]],[[105,[103]]]],[[[106,[103]]],[[106,[103]]]],[[[107,[103]]],[[107,[103]]]],[[[71,[103]]],[[71,[103]]]],[[[72,[103,103]]],[[72,[103,103]]]],[73,73],[[[74,[103,103]]],[[74,[103,103]]]],[108,108],[[[109,[103]]],[[109,[103]]]],[[[110,[103]]],[[110,[103]]]],[[[111,[103]]],[[111,[103]]]],[112,112],[113,113],[[[114,[103]]],[[114,[103]]]],[[[115,[103]]],[[115,[103]]]],[[[116,[103]]],[[116,[103]]]],[117,117],[118,118],[119,119],[75,75],[76,76],[[[77,[103]]],[[77,[103]]]],[[[78,[103]]],[[78,[103]]]],[[[79,[103]]],[[79,[103]]]],[[[80,[103]]],[[80,[103]]]],[[[81,[103]]],[[81,[103]]]],[120,120],[[[82,[103]]],[[82,[103]]]],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[83,83],[127,127],[84,84],[85,85],[[[86,[103]]],[[86,[103]]]],[[[87,[103,103]]],[[87,[103,103]]]],[[[128,[103]]],[[128,[103]]]],[[[88,[103]]],[[88,[103]]]],[129,129],[[[130,[103]]],[[130,[103]]]],[[[131,[103]]],[[131,[103]]]],[132,132],[133,133],[134,134],[89,89],[90,90],[135,135],[136,136],[[[91,[103]]],[[91,[103]]]],[[[137,[103]]],[[137,[103]]]],[[[92,[103]]],[[92,[103]]]],[[[93,[103]]],[[93,[103]]]],[[[94,[103]]],[[94,[103]]]],[[[95,[103]]],[[95,[103]]]],[[[138,[103,103]]],[[138,[103,103]]]],[139,139],[[[140,[103]]],[[140,[103]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[63,6,[21,[50]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[63,47],0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,0,0,0,[[[68,[[67,[50]]]]],[[30,[63]]]],[[[69,[[67,[50]]]]],[[30,[63]]]],[[[70,[[67,[50]]]]],[[30,[63]]]],[[[71,[[67,[50]]]]],[[30,[63]]]],[[[72,[[67,[50]],[67,[50]]]]],[[30,[63]]]],[73,[[30,[63]]]],[[[74,[[67,[6]],[67,[6]]]]],[[30,[63]]]],[75,[[30,[63]]]],[76,[[30,[63]]]],[[[77,[[67,[50]]]]],[[30,[63]]]],[[[78,[[67,[50]]]]],[[30,[63]]]],[[[79,[[67,[50]]]]],[[30,[63]]]],[[[80,[[67,[50]]]]],[[30,[63]]]],[[[81,[[67,[50]]]]],[[30,[63]]]],[[[82,[[67,[50]]]]],[[30,[63]]]],[83,[[30,[63]]]],[84,[[30,[63]]]],[85,[[30,[63]]]],[[[86,[[67,[50]]]]],[[30,[63]]]],[[[87,[[67,[50]],[67,[50]]]]],[[30,[63]]]],[[[88,[[67,[50]]]]],[[30,[63]]]],[89,[[30,[63]]]],[90,[[30,[63]]]],[[[91,[[67,[50]]]]],[[30,[63]]]],[[[92,[[67,[8]]]]],[[30,[63]]]],[[[93,[[67,[50]]]]],[[30,[63]]]],[[[94,[[67,[50]]]]],[[30,[63]]]],[[[95,[[67,[50]]]]],[[30,[63]]]],[[96,14],15],[[97,14],15],[[98,14],15],[[99,14],15],[[100,14],15],[[101,14],15],[[102,14],15],[[[68,[141]],14],15],[[[69,[141]],14],15],[[[70,[141]],14],15],[[[104,[141]],14],15],[[[105,[141]],14],15],[[[106,[141]],14],15],[[[107,[141]],14],15],[[[71,[141]],14],15],[[[72,[141,141]],14],15],[[73,14],15],[[[74,[141,141]],14],15],[[108,14],15],[[[109,[141]],14],15],[[[110,[141]],14],15],[[[111,[141]],14],15],[[112,14],15],[[113,14],15],[[[114,[141]],14],15],[[[115,[141]],14],15],[[[116,[141]],14],15],[[117,14],15],[[118,14],15],[[119,14],15],[[75,14],15],[[76,14],15],[[[77,[141]],14],15],[[[78,[141]],14],15],[[[79,[141]],14],15],[[[80,[141]],14],15],[[[81,[141]],14],15],[[120,14],15],[[[82,[141]],14],15],[[121,14],15],[[122,14],15],[[123,14],15],[[124,14],15],[[125,14],15],[[126,14],15],[[83,14],15],[[127,14],15],[[84,14],15],[[85,14],15],[[[86,[141]],14],15],[[[87,[141,141]],14],15],[[[128,[141]],14],15],[[[88,[141]],14],15],[[129,14],15],[[[130,[141]],14],15],[[[131,[141]],14],15],[[132,14],15],[[133,14],15],[[134,14],15],[[89,14],15],[[90,14],15],[[135,14],15],[[136,14],15],[[[91,[141]],14],15],[[[137,[141]],14],15],[[[92,[141]],14],15],[[[93,[141]],14],15],[[[94,[141]],14],15],[[[95,[141]],14],15],[[[138,[141,141]],14],15],[[139,14],15],[[[140,[141]],14],15],[[63,14],15],[[63,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,63],[97,63],[98,63],[99,63],[100,63],[101,63],[102,63],[[[68,[[67,[50]]]]],63],[[[69,[[67,[50]]]]],63],[[[70,[[67,[50]]]]],63],[[[104,[[67,[50]]]]],63],[[[105,[[67,[50]]]]],63],[[[106,[[67,[50]]]]],63],[[[107,[[67,[50]]]]],63],[[[71,[[67,[50]]]]],63],[[[72,[[67,[50]],[67,[50]]]]],63],[73,63],[[[74,[[67,[6]],[67,[6]]]]],63],[108,63],[[[109,[[67,[50]]]]],63],[[[110,[[67,[50]]]]],63],[[[111,[[67,[50]]]]],63],[112,63],[113,63],[[[114,[[67,[50]]]]],63],[[[115,[[67,[50]]]]],63],[[[116,[[67,[50]]]]],63],[117,63],[118,63],[119,63],[75,63],[76,63],[[[77,[[67,[50]]]]],63],[[[78,[[67,[50]]]]],63],[[[79,[[67,[50]]]]],63],[[[80,[[67,[50]]]]],63],[[[81,[[67,[50]]]]],63],[120,63],[[[82,[[67,[50]]]]],63],[121,63],[122,63],[123,63],[124,63],[125,63],[126,63],[83,63],[127,63],[84,63],[85,63],[[[86,[[67,[50]]]]],63],[[[87,[[67,[50]],[67,[50]]]]],63],[[[128,[[67,[50]]]]],63],[[[88,[[67,[50]]]]],63],[129,63],[[[130,[[67,[142]]]]],63],[[[131,[[67,[142]]]]],63],[132,63],[133,63],[134,63],[89,63],[90,63],[135,63],[136,63],[[[91,[[67,[50]]]]],63],[[[137,[[67,[8]]]]],63],[[[92,[[67,[8]]]]],63],[[[93,[[67,[50]]]]],63],[[[94,[[67,[50]]]]],63],[[[95,[[67,[50]]]]],63],[[[138,[[67,[50]],[67,[8]]]]],63],[139,63],[[[140,[[67,[50]]]]],63],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[63,[[12,[143]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],0,0,[144],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,[[12,[65]]]],0,[63,145],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],50],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[32],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[146,146],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[146,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[8],[[146,8]],[8],[[146,8]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[[]],[[]],[[]],[[]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],0,[1,[[2,[1,1]]]],[[]],[[]],[[],5],[[],5],[[],5],[6],[6],[6],[[]],[[]],[[[12,[50]],147,4],[[11,[148]]]],[149,150],[149,[[19,[[18,[17]]]]]],[149,151],[149,[[12,[50]]]],[149],[[],6],[[]],[[],20],[[],4],[[]],[1,[[26,[1,1]]]],0,[[]],[[149,50]],[[],[[30,[29]]]],[[],12],[[]],[[],30],[[],30],[[],30],[[],31],0,[[]],0,[1,[[2,[1,1]]]],[[]],[[]],[152,28],[[],5],[[],5],[[],5],[[62,[11,[153]],154,155,[12,[[11,[156]]]],[11,[156]]],[[28,[157]]]],[6],[6],[6],[152],[[]],[[]],[[16,154],28],0,[[],6],0,[[]],[[],20],[[],4],[[]],[22,[[21,[158]]]],0,[[23,159],[[28,[62]]]],0,0,[1,[[26,[1,1]]]],0,0,[[47,[12,[50]]],50],0,0,[[]],0,0,[[152,27,[12,[[11,[156]]]]],28],[[],[[30,[29]]]],[[],12],[[]],[[],30],[[],30],[[],30],[[44,22,62],[[28,[152]]]],[[],31],[[]],0,[32],[1,[[2,[1,1]]]],[[]],[[]],[160,160],[[]],[[],5],[[],5],[[],5],[6],[6],[6],[[161,[28,[162]]],161],[[]],[[]],[[]],[[160,16],[[19,[[18,[17]]]]]],[[],6],[163,164],[[]],[[],20],[[160,16],4],[[],4],[[]],[22,160],[1,[[26,[1,1]]]],[165,8],0,[163,161],[[]],[[],[[30,[29]]]],[[]],[[],12],[[]],[[],30],[[],30],[[],30],[[],31],[[]],0,0,0,[1,[[2,[1,1]]]],[[]],[[]],[[],5],[[],5],[[],5],[166,167],[6],[6],[6],[[]],[[]],[[],6],[[]],[[],20],[[],4],[[]],[1,[[26,[1,1]]]],[[]],[[],[[30,[29]]]],[[],12],[[]],[[],30],[[],30],[[],30],[[],31],[[]],0,0,0,0,0,0,0,0,0,0,0,[32],[32],[32],[32],[32],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[168,64],[169,64],[170,64],[171,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[168,47],[[12,[[11,[172]]]]]],0,[168,[[21,[50]]]],[22,22],[168,168],[169,169],[170,170],[171,171],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[22,[20,[173]]],[[19,[[18,[17]]]]]],[6],[6],[6],[6],[6],[6],[6],[6],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,174],[[19,[[18,[17]]]]]],[[175,176],[[28,[177]]]],[[22,176],[[28,[177]]]],[[175,8,178],[[28,[162]]]],[[22,8,178],[[28,[162]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[179,[11,[180]],61],175],[[179,[11,[180]],61],22],[[8,56],[[28,[168]]]],[22,[[21,[181]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],[1,[[26,[1,1]]]],0,[[22,8],[[12,[182]]]],0,0,0,[[168,50,[11,[172]]],[[12,[[11,[172]]]]]],[[175,56]],[[22,56]],0,[22,[[11,[180]]]],0,[[171,183,[12,[[21,[6]]]],[48,[184]],[12,[6]]],[[19,[[18,[17]]]]]],0,[[169,47],[[12,[[11,[185]]]]]],[171,186],0,[169,[[21,[50]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,8,4],28],[175,28],[22,28],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[],[[30,[29]]]],[[171,[48,[184]]],[[188,[[21,[187]]]]]],[[170,47],[[19,[[18,[17]]]]]],0,[[170,47],4],[170,[[21,[50]]]],[171,189],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,[[2,[1,1]]]],[[]],[[]],[[],5],[[],5],[[],5],[6],[6],[6],[[]],[[]],0,0,[[],6],[[]],[[],20],[[],4],[[]],[1,[[26,[1,1]]]],[[]],[190,28],[[190,44],28],[[],[[30,[29]]]],[[],12],[[]],[[],30],[[],30],[[],30],[[22,44],[[28,[190]]]],[[],31],[[]],0,[[],[[28,[191]]]],[47,28],[[192,33],[[28,[192]]]],0,0,[44,[[28,[192]]]],0,0,[39,[[28,[192]]]],[[47,35],[[28,[192]]]],[40,[[28,[192]]]],[38,[[28,[192]]]],[37,[[28,[192]]]]],"c":[],"p":[[8,"Policy"],[3,"And"],[3,"CountdownTask"],[15,"bool"],[3,"Compat"],[15,"usize"],[3,"RegionAliveKeeper"],[3,"RegionId"],[3,"CountdownTaskHandle"],[3,"Instant"],[3,"Arc"],[4,"Option"],[4,"CountdownCommand"],[3,"Formatter"],[6,"Result"],[3,"HeartbeatResponseHandlerContext"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Request"],[3,"Vec"],[3,"RegionServer"],[15,"u64"],[8,"FnOnce"],[8,"Send"],[3,"Or"],[3,"RegionServerEventReceiver"],[6,"Result"],[4,"CNil"],[4,"Result"],[3,"TypeId"],[3,"Private"],[4,"ObjectStoreConfig"],[3,"StorageConfig"],[3,"FileConfig"],[3,"ObjectStorageCacheConfig"],[3,"S3Config"],[3,"OssConfig"],[3,"AzblobConfig"],[3,"GcsConfig"],[3,"RegionManifestConfig"],[3,"CompactionConfig"],[3,"FlushConfig"],[3,"DatanodeOptions"],[4,"RegionEngineConfig"],[8,"Deserializer"],[15,"str"],[15,"slice"],[8,"Serializer"],[3,"String"],[3,"DatanodeBuilder"],[3,"Datanode"],[3,"RaftEngineLogStore"],[8,"LogStore"],[6,"ObjectStoreManagerRef"],[6,"RegionEngineRef"],[3,"ProcedureConfig"],[3,"Error"],[6,"KvBackendRef"],[3,"Plugins"],[6,"RegionServerEventListenerRef"],[3,"MetaClient"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"IncorrectInternalStateSnafu"],[3,"CatalogNotFoundSnafu"],[3,"SchemaNotFoundSnafu"],[3,"TableNotFoundSnafu"],[3,"ColumnNotFoundSnafu"],[3,"MissingTimestampColumnSnafu"],[3,"ColumnValuesNumberMismatchSnafu"],[3,"MissingKvBackendSnafu"],[3,"MissingMetaClientSnafu"],[3,"InvalidSqlSnafu"],[3,"NotSupportSqlSnafu"],[3,"KeyColumnNotFoundSnafu"],[3,"IllegalPrimaryKeysDefSnafu"],[3,"ConstraintNotSupportedSnafu"],[3,"SchemaExistsSnafu"],[3,"TableIdProviderNotFoundSnafu"],[3,"MissingNodeIdSnafu"],[3,"MissingMetasrvOptsSnafu"],[3,"MissingRequiredFieldSnafu"],[3,"DatabaseNotFoundSnafu"],[3,"ColumnNoneDefaultValueSnafu"],[3,"PayloadNotExistSnafu"],[3,"MissingWalDirConfigSnafu"],[3,"UnexpectedSnafu"],[3,"RegionNotFoundSnafu"],[3,"RegionEngineNotFoundSnafu"],[3,"UnsupportedGrpcRequestSnafu"],[3,"UnsupportedOutputSnafu"],[3,"HandleHeartbeatResponseSnafu"],[3,"GetMetadataSnafu"],[3,"ExecuteSqlSnafu"],[3,"PlanStatementSnafu"],[3,"ExecuteStatementSnafu"],[3,"ExecuteLogicalPlanSnafu"],[3,"DecodeLogicalPlanSnafu"],[8,"Clone"],[3,"CreateTableSnafu"],[3,"DropTableSnafu"],[3,"TableEngineNotFoundSnafu"],[3,"EngineProcedureNotFoundSnafu"],[3,"MissingInsertBodySnafu"],[3,"InsertSnafu"],[3,"DeleteSnafu"],[3,"FlushTableSnafu"],[3,"StartServerSnafu"],[3,"WaitForGrpcServingSnafu"],[3,"ParseAddrSnafu"],[3,"CreateDirSnafu"],[3,"RemoveDirSnafu"],[3,"OpenLogStoreSnafu"],[3,"InitBackendSnafu"],[3,"RuntimeResourceSnafu"],[3,"RegisterSchemaSnafu"],[3,"DeleteExprToRequestSnafu"],[3,"ParseSqlSnafu"],[3,"PrepareImmutableTableSnafu"],[3,"CatalogSnafu"],[3,"MetaClientInitSnafu"],[3,"InsertDataSnafu"],[3,"BumpTableIdSnafu"],[3,"ColumnDefaultValueSnafu"],[3,"UnrecognizedTableOptionSnafu"],[3,"SubmitProcedureSnafu"],[3,"WaitProcedureSnafu"],[3,"ShutdownServerSnafu"],[3,"ShutdownInstanceSnafu"],[3,"EncodeJsonSnafu"],[3,"JoinTaskSnafu"],[3,"ColumnDataTypeSnafu"],[3,"HandleRegionRequestSnafu"],[3,"GetRegionMetadataSnafu"],[3,"BuildRegionRequestsSnafu"],[3,"StopRegionEngineSnafu"],[8,"Debug"],[3,"ProcedureId"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"RegionServerEventSender"],[4,"Mode"],[4,"GreptimeDBTelemetryTask"],[3,"StandaloneGreptimeDBTelemetryCollector"],[4,"Mode"],[15,"i32"],[3,"HeartbeatTask"],[3,"AtomicBool"],[6,"HeartbeatResponseHandlerExecutorRef"],[6,"MailboxRef"],[3,"Notify"],[3,"HeartbeatSender"],[3,"RegionStat"],[3,"MetaClientOptions"],[3,"RegionHeartbeatResponseHandler"],[4,"InstructionReply"],[4,"Output"],[4,"Instruction"],[6,"Result"],[3,"RegionIdent"],[3,"HANDLE_REGION_REQUEST_ELAPSED"],[6,"HistogramVec"],[3,"DummyCatalogList"],[3,"DummyCatalogProvider"],[3,"DummySchemaProvider"],[3,"DummyTableProvider"],[8,"CatalogProvider"],[3,"Ticket"],[4,"Body"],[3,"RegionServerInner"],[3,"QueryRequest"],[6,"SendableRecordBatchStream"],[4,"RegionRequest"],[6,"QueryEngineRef"],[3,"Runtime"],[3,"RegionStat"],[15,"i64"],[3,"SessionState"],[4,"Expr"],[8,"SchemaProvider"],[6,"SchemaRef"],[4,"TableProviderFilterPushDown"],[6,"Result"],[4,"TableType"],[3,"Services"],[3,"HttpClient"],[3,"Operator"],[13,"ParseAddr"],[13,"DatabaseNotFound"],[13,"ColumnDefaultValue"],[13,"ColumnNoneDefaultValue"],[13,"ColumnNotFound"],[13,"ColumnValuesNumberMismatch"],[13,"ConstraintNotSupported"],[13,"CreateDir"],[13,"RemoveDir"],[13,"GetRegionMetadata"],[13,"TableEngineNotFound"],[13,"EngineProcedureNotFound"],[13,"InitBackend"],[13,"EncodeJson"],[13,"JoinTask"],[13,"UnsupportedOutput"],[13,"UnsupportedGrpcRequest"],[13,"HandleHeartbeatResponse"],[13,"GetMetadata"],[13,"ExecuteSql"],[13,"PlanStatement"],[13,"ExecuteStatement"],[13,"ExecuteLogicalPlan"],[13,"DecodeLogicalPlan"],[13,"IncorrectInternalState"],[13,"CatalogNotFound"],[13,"SchemaNotFound"],[13,"CreateTable"],[13,"DropTable"],[13,"TableNotFound"],[13,"MissingTimestampColumn"],[13,"MissingInsertBody"],[13,"Insert"],[13,"Delete"],[13,"FlushTable"],[13,"StartServer"],[13,"WaitForGrpcServing"],[13,"OpenLogStore"],[13,"RuntimeResource"],[13,"MissingKvBackend"],[13,"MissingMetaClient"],[13,"KeyColumnNotFound"],[13,"IllegalPrimaryKeysDef"],[13,"RegisterSchema"],[13,"SchemaExists"],[13,"DeleteExprToRequest"],[13,"ParseSql"],[13,"PrepareImmutableTable"],[13,"Catalog"],[13,"MetaClientInit"],[13,"InsertData"],[13,"TableIdProviderNotFound"],[13,"BumpTableId"],[13,"MissingNodeId"],[13,"MissingMetasrvOpts"],[13,"MissingRequiredField"],[13,"UnrecognizedTableOption"],[13,"SubmitProcedure"],[13,"WaitProcedure"],[13,"ShutdownServer"],[13,"ShutdownInstance"],[13,"PayloadNotExist"],[13,"MissingWalDirConfig"],[13,"ColumnDataType"],[13,"Unexpected"],[13,"HandleRegionRequest"],[13,"RegionNotFound"],[13,"RegionEngineNotFound"],[13,"BuildRegionRequests"],[13,"StopRegionEngine"],[13,"InvalidSql"],[13,"NotSupportSql"],[4,"RegionServerEvent"],[3,"NoopRegionServerEventListener"],[8,"RegionServerEventListener"],[4,"RegionChange"]]},\
"datatypes":{"doc":"","t":"CCCAAAAOAAAAAAAAAAAAOGGGGNNEIGNNNNNNNNNNNNNNNNNNNNKLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLKLKLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDNDNDNDNDENDNDNDNDNDGNDNDNDNDNDNDNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCCCCCCCCCCQQQQQIIQIIQQKKLLLLKFOKKKKKREDDNSGDDDGRRNLLMLLLLLLLLLFLLALLMMMALMLMLLLLMMLLLLLLLLMMLMMMMMMLLALLMMMMLLLLLLLLLLLLLLFLLLLFLLMMMLLLRDRGRLLLLLLLMLMLLLLLLLLLMLMLMLMLLLLLLLLLLLRRENRNLLLLFFLLLLLLLLLLLLLLLLLLLLLLDLLLLMLLLLLLLLLLLMLLLLMLIKDDDDLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNLLLLLLLLLLLLLLLLQDDDDNDDDDDEDDDDDDDDEDQDIQNNNNNNNNNNQQIDDNNNDDDDDEDDDDEDDDDQINAAKAKKCAAAAKAKMMAAAAAAKMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLFLLLLLLLLLLLLLLLLLLLLFLLLLLLLLDLLFFLLLLLLLLLLLFLMLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLDDDDENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQDDDDDDQIQQQIDDDDDQILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLOOLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRNNRNRNDDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRNNRNRNDDDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNDNNLLLLLLLLLLNNNNNNNNNNNNNNNLLLLNNDENNGGDLNLNNNNNNNNNNNNNNEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMDDDDDGGGGGGGGGGGGGGGGDGGGGGGGGGGGGGGDDDIDDDDDDDGGGGGGGGGGGGGGGGGGGGGGGGDIGMMMMMMKKKAAAKKAAAALKKKAMOOOOOALLLKMMMMKKMMAKMMMMAMKMLAAKLKAAAKKKLKAKMMMKDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLGGGGGGGGGGGGFODLLLLLLLLLLLLLLLLLLGGGGGGDDDDLLLMLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLLLLMLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLFLLLLLLLLLLLLLLLLLLIAKAKAKOAKAKOOFFFFOGGGGGGGGGGGGDDDGGGGGGGGMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLGGGGGGGGGGGGGGGGNNNDELLLLLLLLLLLLLLLLLLMLLLLLLLLLMMMMM","n":["Error","Result","arrow","arrow_array","data_type","duration","error","for_all_primitive_types","interval","macros","prelude","scalars","schema","serialize","time","timestamp","type_id","types","value","vectors","with_match_primitive_type_id","BinaryArray","MutableBinaryArray","MutableStringArray","StringArray","Binary","Boolean","ConcreteDataType","DataType","DataTypeRef","Date","DateTime","Dictionary","Duration","Float32","Float64","Int16","Int32","Int64","Int8","Interval","List","Null","String","Time","Timestamp","UInt16","UInt32","UInt64","UInt8","as_arrow_type","as_arrow_type","as_duration","as_list","as_time","as_timestamp","binary_datatype","boolean_datatype","borrow","borrow_mut","can_arrow_type_cast_to","clone","clone_into","cmp","compare","create_mutable_vector","create_mutable_vector","date_datatype","datetime_datatype","default_value","default_value","deserialize","dictionary_datatype","duration_datatype","duration_microsecond_datatype","duration_millisecond_datatype","duration_nanosecond_datatype","duration_second_datatype","eq","equivalent","equivalent","equivalent","float32_datatype","float64_datatype","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow_interval_unit","from_arrow_time_unit","from_arrow_type","hash","impl_new_concrete_type_functions","int16_datatype","int32_datatype","int64_datatype","int8_datatype","interval_datatype","interval_day_time_datatype","interval_month_day_nano_datatype","interval_year_month_datatype","into","is_boolean","is_float","is_null","is_numeric","is_signed","is_string","is_stringifiable","is_timestamp","is_unsigned","list_datatype","logical_type_id","logical_type_id","name","name","null_datatype","numerics","partial_cmp","serialize","string_datatype","time_datatype","time_microsecond_datatype","time_millisecond_datatype","time_nanosecond_datatype","time_second_datatype","timestamp_datatype","timestamp_microsecond_datatype","timestamp_millisecond_datatype","timestamp_nanosecond_datatype","timestamp_second_datatype","to_owned","to_string","try_cast","try_cast","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","uint16_datatype","uint32_datatype","uint64_datatype","uint8_datatype","vzip","DurationMicrosecond","DurationMillisecond","DurationNanosecond","DurationSecond","as_scalar_ref","as_scalar_ref","as_scalar_ref","as_scalar_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","define_duration_with_unit","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_native","from_native","from_native","from_native","into","into","into","into","into_native","into_native","into_native","into_native","new","new","new","new","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned_scalar","to_owned_scalar","to_owned_scalar","to_owned_scalar","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_gat","upcast_gat","upcast_gat","upcast_gat","vzip","vzip","vzip","vzip","ArrowCompute","ArrowComputeSnafu","BadArrayAccess","BadArrayAccessSnafu","CastTimeType","CastTimeTypeSnafu","CastType","CastTypeSnafu","Conversion","ConversionSnafu","DefaultValueType","DefaultValueTypeSnafu","Deserialize","DeserializeSnafu","DuplicateColumn","DuplicateColumnSnafu","DuplicateMeta","DuplicateMetaSnafu","Error","InvalidTimestampIndex","InvalidTimestampIndexSnafu","InvalidTimestampPrecision","InvalidTimestampPrecisionSnafu","NullDefault","NullDefaultSnafu","ParseSchemaVersion","ParseSchemaVersionSnafu","ProjectArrowSchema","ProjectArrowSchemaSnafu","Result","Serialize","SerializeSnafu","ToScalarValue","ToScalarValueSnafu","TryFromValue","TryFromValueSnafu","UnknownVector","UnknownVectorSnafu","UnsupportedArrowType","UnsupportedArrowTypeSnafu","UnsupportedDefaultExpr","UnsupportedDefaultExprSnafu","UnsupportedOperation","UnsupportedOperationSnafu","arrow_type","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","debug_fmt","description","expr","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","json","key","msg","msg","next","op","precision","provide","reason","reason","reason","size","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vector_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","arrow_type","column","error","error","error","error","error","error","expr","from","index","index","json","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","op","precision","reason","reason","reason","size","value","vector_type","IntervalDayTime","IntervalMonthDayNano","IntervalYearMonth","as_scalar_ref","as_scalar_ref","as_scalar_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","define_interval_with_unit","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from_native","from_native","from_native","into","into","into","into_native","into_native","into_native","new","new","new","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned_scalar","to_owned_scalar","to_owned_scalar","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast_gat","upcast_gat","upcast_gat","vzip","vzip","vzip","ConcreteDataType","DataType","DataTypeRef","LogicalPrimitiveType","LogicalTypeId","MutableVector","Scalar","ScalarRef","ScalarVector","ScalarVectorBuilder","Validity","Value","ValueRef","Vector","VectorRef","WrapperType","Builder","Iter","OwnedItem","RefItem","RefType","Scalar","ScalarRef","ScalarType","ScalarVector","ScalarVectorBuilder","VectorType","VectorType","as_scalar_ref","finish","from_iterator","from_owned_iterator","from_slice","from_vec","get_data","get_iter_capacity","impl_scalar_for_native","iter_data","push","to_owned_scalar","upcast_gat","with_capacity","COMMENT_KEY","ColumnDefaultConstraint","ColumnSchema","FieldsAndIndices","Function","INITIAL_VERSION","Metadata","RawSchema","Schema","SchemaBuilder","SchemaRef","TIME_INDEX_KEY","VERSION_KEY","Value","add_metadata","arrow_schema","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","collect_fields","column_index_by_name","column_name_by_index","column_schema","column_schema_by_name","column_schemas","column_schemas","column_schemas","column_schemas","constraint","contains_column","data_type","default","default_constraint","eq","equivalent","equivalent","equivalent","fields","fields","fmt","from","from","from","into","into","into","is_empty","is_nullable","is_time_index","metadata","metadata","metadata","name","name_to_index","name_to_index","name_to_index","new","num_columns","raw","timestamp_column","timestamp_index","timestamp_index","timestamp_index","timestamp_index","timestamp_index","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_columns","try_into","try_into","try_into","try_new","try_parse_version","try_project","type_id","type_id","type_id","validate_timestamp_index","version","version","version","version","version","vzip","vzip","vzip","COMMENT_KEY","ColumnSchema","DEFAULT_CONSTRAINT_KEY","Metadata","TIME_INDEX_KEY","borrow","borrow_mut","clone","clone_into","create_default","create_default_vector","create_default_vector_for_padding","data_type","default_constraint","default_constraint","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","into","is_nullable","is_nullable","is_time_index","is_time_index","metadata","metadata","mut_metadata","name","new","serialize","to_owned","try_from","try_from","try_into","type_id","vzip","with_default_constraint","with_metadata","with_time_index","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP_FN","ColumnDefaultConstraint","Function","NOW_FN","Value","borrow","borrow_mut","clone","clone_into","create_current_timestamp","create_current_timestamp_vector","create_default","create_default_vector","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","into","maybe_null","null_value","serialize","to_owned","to_string","try_from","try_from","try_into","type_id","validate","vzip","RawSchema","borrow","borrow_mut","clone","clone_into","column_schemas","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","from","into","new","serialize","timestamp_index","to_owned","try_from","try_into","type_id","version","vzip","Serializable","serialize_to_json","TimeMicrosecond","TimeMillisecond","TimeNanosecond","TimeSecond","as_scalar_ref","as_scalar_ref","as_scalar_ref","as_scalar_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","define_time_with_unit","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_native","from_native","from_native","from_native","into","into","into","into","into_native","into_native","into_native","into_native","new","new","new","new","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned_scalar","to_owned_scalar","to_owned_scalar","to_owned_scalar","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_gat","upcast_gat","upcast_gat","upcast_gat","vzip","vzip","vzip","vzip","TimestampMicrosecond","TimestampMillisecond","TimestampNanosecond","TimestampSecond","as_scalar_ref","as_scalar_ref","as_scalar_ref","as_scalar_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","define_timestamp_with_unit","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_native","from_native","from_native","from_native","into","into","into","into","into_native","into_native","into_native","into_native","new","new","new","new","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned_scalar","to_owned_scalar","to_owned_scalar","to_owned_scalar","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast_gat","upcast_gat","upcast_gat","upcast_gat","vzip","vzip","vzip","vzip","Binary","Boolean","Date","DateTime","Dictionary","DurationMicrosecond","DurationMillisecond","DurationNanosecond","DurationSecond","Float32","Float64","Int16","Int32","Int64","Int8","IntervalDayTime","IntervalMonthDayNano","IntervalYearMonth","List","LogicalTypeId","Null","String","TimeMicrosecond","TimeMillisecond","TimeNanosecond","TimeSecond","TimestampMicrosecond","TimestampMillisecond","TimestampNanosecond","TimestampSecond","UInt16","UInt32","UInt64","UInt8","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","ArrowPrimitive","BinaryType","BooleanType","DateTimeType","DateType","DayTime","DictionaryType","DurationMicrosecondType","DurationMillisecondType","DurationNanosecondType","DurationSecondType","DurationType","Float32Type","Float64Type","Int16Type","Int32Type","Int64Type","Int8Type","IntervalDayTimeType","IntervalMonthDayNanoType","IntervalType","IntervalYearMonthType","LargestType","ListType","LogicalPrimitiveType","LogicalType","Microsecond","Microsecond","Microsecond","Millisecond","Millisecond","Millisecond","MonthDayNano","Nanosecond","Nanosecond","Nanosecond","Native","Native","NativeType","NullType","OrdPrimitive","Second","Second","Second","StringType","TimeMicrosecondType","TimeMillisecondType","TimeNanosecondType","TimeSecondType","TimeType","TimestampMicrosecondType","TimestampMillisecondType","TimestampNanosecondType","TimestampSecondType","TimestampType","UInt16Type","UInt32Type","UInt64Type","UInt8Type","Wrapper","WrapperType","YearMonth","binary_type","boolean_type","build_data_type","cast","cast_value_ref","cast_vector","cast_with_opt","date_type","datetime_type","dictionary_type","duration_type","from_native","interval_type","into_native","item_type","key_type","list_type","null_type","primitive_type","string_type","time_type","timestamp_type","type_name","value_type","BinaryType","arc","as_arrow_type","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","hash","into","logical_type_id","name","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","vzip","BooleanType","arc","as_arrow_type","bool_to_numeric","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","hash","into","logical_type_id","name","numeric_to_bool","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","vzip","CastOption","borrow","borrow_mut","can_cast_type","cast_with_opt","clone","clone_into","default","eq","equivalent","equivalent","equivalent","fmt","from","hash","into","invalid_type_cast","is_strict","strict","to_owned","try_from","try_into","type_id","vzip","DateType","as_arrow_type","borrow","borrow_mut","build_data_type","cast_value_ref","cast_vector","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","hash","into","logical_type_id","name","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","type_name","vzip","DateTimeType","as_arrow_type","borrow","borrow_mut","build_data_type","cast_value_ref","cast_vector","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","hash","into","logical_type_id","name","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","type_name","vzip","DictionaryType","as_arrow_type","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","hash","into","key_type","key_type","logical_type_id","name","new","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","value_type","value_type","vzip","DurationMicrosecondType","DurationMillisecondType","DurationNanosecondType","DurationSecondType","DurationType","Microsecond","Millisecond","Nanosecond","Second","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_type","build_data_type","build_data_type","build_data_type","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_vector","cast_vector","cast_vector","cast_vector","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","default","default","default","default","default_value","default_value","default_value","default_value","default_value","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_unit","hash","hash","hash","hash","hash","impl_data_type_for_duration","into","into","into","into","into","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","name","name","name","name","name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_cast","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unit","vzip","vzip","vzip","vzip","vzip","DayTime","IntervalDayTimeType","IntervalMonthDayNanoType","IntervalType","IntervalYearMonthType","MonthDayNano","YearMonth","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_type","build_data_type","build_data_type","cast_value_ref","cast_value_ref","cast_value_ref","cast_vector","cast_vector","cast_vector","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","compare","compare","compare","compare","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","default","default","default","default_value","default_value","default_value","default_value","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","impl_data_type_for_interval","into","into","into","into","logical_type_id","logical_type_id","logical_type_id","logical_type_id","name","name","name","name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_name","type_name","type_name","unit","vzip","vzip","vzip","vzip","ListType","as_arrow_type","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","hash","into","item_type","item_type","logical_type_id","name","new","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","vzip","NullType","arc","as_arrow_type","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","hash","into","logical_type_id","name","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","vzip","ArrowPrimitive","Float32Type","Float64Type","Int16Type","Int32Type","Int64Type","Int8Type","LargestType","LogicalPrimitiveType","LogicalType","Native","Native","NativeType","OrdPrimitive","UInt16Type","UInt32Type","UInt64Type","UInt8Type","Wrapper","WrapperType","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_primitive","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","build_data_type","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","cast_vector","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","default","default","default","default","default","default","default","default","default","default","default_value","default_value","default_value","default_value","default_value","default_value","default_value","default_value","default_value","default_value","define_logical_primitive_type","define_non_timestamp_primitive","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_native","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","impl_native_type","impl_wrapper","into","into","into","into","into","into","into","into","into","into","into","into_native","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","name","name","name","name","name","name","name","name","name","name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","StringType","arc","as_arrow_type","borrow","borrow_mut","clone","clone_into","cmp","compare","create_mutable_vector","default","default_value","deserialize","eq","equivalent","equivalent","equivalent","fmt","from","hash","into","logical_type_id","name","partial_cmp","serialize","to_owned","try_cast","try_from","try_into","type_id","vzip","MICROSECOND_VARIATION","MILLISECOND_VARIATION","Microsecond","Millisecond","NANOSECOND_VARIATION","Nanosecond","SECOND_VARIATION","Second","TimeMicrosecondType","TimeMillisecondType","TimeNanosecondType","TimeSecondType","TimeType","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_type","build_data_type","build_data_type","build_data_type","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_vector","cast_vector","cast_vector","cast_vector","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","default","default","default","default","default_value","default_value","default_value","default_value","default_value","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_unit","hash","hash","hash","hash","hash","impl_data_type_for_time","into","into","into","into","into","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","name","name","name","name","name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","precision","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_cast","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unit","vzip","vzip","vzip","vzip","vzip","MICROSECOND_VARIATION","MILLISECOND_VARIATION","Microsecond","Millisecond","NANOSECOND_VARIATION","Nanosecond","SECOND_VARIATION","Second","TimestampMicrosecondType","TimestampMillisecondType","TimestampNanosecondType","TimestampSecondType","TimestampType","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","as_arrow_type","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_data_type","build_data_type","build_data_type","build_data_type","cast_value_ref","cast_value_ref","cast_value_ref","cast_value_ref","cast_vector","cast_vector","cast_vector","cast_vector","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_mutable_vector","create_timestamp","default","default","default","default","default_value","default_value","default_value","default_value","default_value","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","impl_data_type_for_timestamp","into","into","into","into","into","logical_type_id","logical_type_id","logical_type_id","logical_type_id","logical_type_id","name","name","name","name","name","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","precision","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","try_cast","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","unit","vzip","vzip","vzip","vzip","vzip","Binary","Binary","Boolean","Boolean","Date","Date","DateTime","DateTime","DictionaryValue","Duration","Duration","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float32","Float32","Float64","Float64","Indexed","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Interval","Interval","LN_10","LN_2","LOG10_E","LOG2_E","List","List","ListValue","ListValueRef","Null","Null","OrderedF32","OrderedF64","OrderedFloat","PI","Ref","SQRT_2","String","String","Time","Time","Timestamp","Timestamp","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","Value","ValueRef","abs","abs","abs","abs","abs","abs_sub","abs_sub","abs_sub","acos","acos","acos","acosh","acosh","acosh","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","arg","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_binary","as_boolean","as_date","as_date","as_datetime","as_datetime","as_duration","as_f32","as_f64","as_i16","as_i32","as_i64","as_i8","as_interval","as_list","as_list","as_mut","as_ref","as_scalar_ref","as_string","as_time","as_time","as_timestamp","as_timestamp","as_u16","as_u32","as_u64","as_u8","as_value_ref","asin","asin","asin","asinh","asinh","asinh","atan","atan","atan","atan2","atan2","atanh","atanh","atanh","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","ceil","ceil","ceil","classify","classify","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","conj","cos","cos","cos","cosh","cosh","cosh","data_size","data_type","datatype","datatype","default","default","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","duration_to_scalar_value","epsilon","epsilon","epsilon","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","estimated_size","exp","exp","exp","exp2","exp2","exp2","exp_m1","exp_m1","expf","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f32","from_f64","from_i16","from_i32","from_i64","from_i8","from_isize","from_str","from_str_radix","from_u16","from_u32","from_u64","from_u8","from_usize","ge","gt","hash","hash","hash","hypot","hypot","im","impl_as_for_value_ref","impl_ord_for_value_like","impl_try_from_value","impl_value_from","impl_value_ref_from","infinity","infinity","integer_decode","integer_decode","into","into","into","into","into","into","into_inner","is_finite","is_finite","is_finite","is_infinite","is_infinite","is_infinite","is_nan","is_nan","is_nan","is_negative","is_normal","is_normal","is_normal","is_null","is_null","is_positive","is_sign_negative","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","is_sign_positive","is_zero","items","items","key_type","l1_norm","le","ln","ln","ln","ln_1p","ln_1p","log","log","log","log10","log10","log10","log2","log2","log2","logical_type_id","lt","max","max","max_value","max_value","max_value","max_value","max_value","min","min","min_positive_value","min_positive_value","min_positive_value","min_value","min_value","min_value","min_value","min_value","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_assign","mul_assign","mul_assign","mul_assign","nan","nan","neg","neg","neg_infinity","neg_infinity","neg_zero","neg_zero","new","new_item_field","one","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","powc","powf","powf","powf","powi","powi","powi","powi","product","product","re","recip","recip","recip","recip","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","round","round","scalar_value_to_interval","scalar_value_to_timestamp","serialize","serialize","serialize","serialize","signum","signum","signum","signum","sin","sin","sin","sin_cos","sin_cos","sinh","sinh","sinh","sqrt","sqrt","sqrt","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","tan","tan","tan","tanh","tanh","tanh","time_to_scalar_value","timestamp_to_scalar_value","to_degrees","to_degrees","to_degrees","to_f32","to_f64","to_i16","to_i32","to_i64","to_i8","to_isize","to_null_scalar_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned_scalar","to_radians","to_radians","to_radians","to_string","to_string","to_u16","to_u32","to_u64","to_u8","to_usize","to_value","trunc","trunc","trunc","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_to_scalar_value","try_to_scalar_value","type_id","type_id","type_id","type_id","type_id","type_id","upcast_gat","value_type","vzip","vzip","vzip","vzip","vzip","vzip","zero","idx","val","vector","BinaryVector","BinaryVectorBuilder","BooleanVector","BooleanVectorBuilder","ConstantVector","DateTimeVector","DateTimeVectorBuilder","DateVector","DateVectorBuilder","DurationMicrosecondVector","DurationMicrosecondVectorBuilder","DurationMillisecondVector","DurationMillisecondVectorBuilder","DurationNanosecondVector","DurationNanosecondVectorBuilder","DurationSecondVector","DurationSecondVectorBuilder","Float32Vector","Float32VectorBuilder","Float64Vector","Float64VectorBuilder","Helper","Int16Vector","Int16VectorBuilder","Int32Vector","Int32VectorBuilder","Int64Vector","Int64VectorBuilder","Int8Vector","Int8VectorBuilder","IntervalDayTimeVector","IntervalDayTimeVectorBuilder","IntervalMonthDayNanoVector","IntervalMonthDayNanoVectorBuilder","IntervalYearMonthVector","IntervalYearMonthVectorBuilder","ListIter","ListVector","ListVectorBuilder","MutableVector","NullVector","NullVectorBuilder","PrimitiveIter","PrimitiveVector","PrimitiveVectorBuilder","StringVector","StringVectorBuilder","TimeMicrosecondVector","TimeMicrosecondVectorBuilder","TimeMillisecondVector","TimeMillisecondVectorBuilder","TimeNanosecondVector","TimeNanosecondVectorBuilder","TimeSecondVector","TimeSecondVectorBuilder","TimestampMicrosecondVector","TimestampMicrosecondVectorBuilder","TimestampMillisecondVector","TimestampMillisecondVectorBuilder","TimestampNanosecondVector","TimestampNanosecondVectorBuilder","TimestampSecondVector","TimestampSecondVectorBuilder","UInt16Vector","UInt16VectorBuilder","UInt32Vector","UInt32VectorBuilder","UInt64Vector","UInt64VectorBuilder","UInt8Vector","UInt8VectorBuilder","Validity","Vector","VectorRef","array","array","array","array","array","array","as_any","as_any","as_mut_any","binary","boolean","constant","data_type","data_type","date","datetime","duration","eq","eq","extend_slice_of","get","get_ref","helper","idx","impl_extend_for_builder","impl_get_for_vector","impl_get_ref_for_vector","impl_try_from_arrow_array_for_vector","impl_validity_for_vector","interval","is_const","is_empty","is_empty","is_null","item_type","item_type","iter","kind","len","len","length","length","list","memory_size","mutable_array","mutable_array","mutable_array","mutable_array","null","null_buffer_builder","null_count","offsets_builder","only_null","operations","primitive","push_null","push_value_ref","slice","string","time","timestamp","to_arrow_array","to_boxed_arrow_array","to_vector","try_get","try_push_value_ref","validity","validity","values_builder","vector","vector","vector_type_name","BinaryVector","BinaryVectorBuilder","array","as_any","as_any","as_arrow","as_mut_any","borrow","borrow","borrow_mut","borrow_mut","cast","data_type","data_type","eq","extend_slice_of","filter","find_unique","finish","fmt","from","from","from","from","from","get","get_data","get_ref","into","into","is_null","iter_data","len","len","memory_size","mutable_array","null_count","push","push_null","replicate","serialize_to_json","slice","take","to_array_data","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from_arrow_array","try_into","try_into","try_push_value_ref","type_id","type_id","validity","vector_type_name","vzip","vzip","with_capacity","BooleanVector","BooleanVectorBuilder","array","as_any","as_any","as_arrow","as_boolean_array","as_mut_any","borrow","borrow","borrow_mut","borrow_mut","cast","data_type","data_type","eq","extend_slice_of","false_count","filter","find_unique","finish","fmt","from","from","from","from","from","from_array_data","from_iter","get","get_data","get_ref","into","into","is_null","iter_data","len","len","memory_size","mutable_array","null_count","push","push_null","replicate","serialize_to_json","slice","take","to_array_data","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from_arrow_array","try_into","try_into","try_push_value_ref","type_id","type_id","validity","vector_type_name","vzip","vzip","with_capacity","ConstantVector","as_any","borrow","borrow_mut","cast","cast_vector","clone","clone_into","data_type","filter","filter_vector","find_unique","fmt","from","get","get_constant_ref","get_ref","inner","into","is_const","is_null","len","length","memory_size","new","null_count","only_null","replicate","replicate_vector","serialize_to_json","slice","take","take_vector","to_arrow_array","to_boxed_arrow_array","to_owned","try_from","try_into","type_id","validity","vector","vector_type_name","vzip","DateVector","DateVectorBuilder","DateTimeVector","DateTimeVectorBuilder","DurationMicrosecondVector","DurationMicrosecondVectorBuilder","DurationMillisecondVector","DurationMillisecondVectorBuilder","DurationNanosecondVector","DurationNanosecondVectorBuilder","DurationSecondVector","DurationSecondVectorBuilder","equal","is_vector_eq","Helper","borrow","borrow_mut","check_get","check_get_mutable_vector","check_get_scalar","check_get_scalar_vector","from","into","like_utf8","like_utf8_filter","static_cast","try_from","try_from_scalar_value","try_into","try_into_vector","try_into_vectors","type_id","vzip","IntervalDayTimeVector","IntervalDayTimeVectorBuilder","IntervalMonthDayNanoVector","IntervalMonthDayNanoVectorBuilder","IntervalYearMonthVector","IntervalYearMonthVectorBuilder","ListIter","ListVector","ListVectorBuilder","NullBufferBuilder","append","append_non_null","append_null","array","as_any","as_any","as_arrow","as_mut_any","bitmap_builder","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","cast","data_type","data_type","eq","extend_slice_of","filter","find_unique","finish","finish","finish_list","fmt","fmt","from","from","from","from","from","from_array_data_and_type","get","get_data","get_ref","idx","into","into","into","into","into_iter","is_null","item_type","item_type","iter_data","len","len","len","len","materialize","materialize_if_needed","memory_size","new","new","next","null_buffer_builder","null_count","offsets_builder","push","push_list_value","push_null","replicate","serialize_to_json","size_hint","slice","take","to_array_data","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from","try_from","try_from_arrow_array","try_into","try_into","try_into","try_into","try_push_value_ref","type_id","type_id","type_id","type_id","validity","values_builder","values_iter","vector","vector_type_name","vzip","vzip","vzip","vzip","with_capacity","with_type_capacity","NullVector","NullVectorBuilder","array","as_any","as_any","as_arrow","as_mut_any","borrow","borrow","borrow_mut","borrow_mut","cast","data_type","data_type","default","eq","extend_slice_of","filter","find_unique","fmt","from","from","from","get","get_ref","into","into","is_null","len","len","length","memory_size","new","null_count","only_null","push_null","replicate","replicate_null","serialize_to_json","slice","take","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from_arrow_array","try_into","try_into","try_push_value_ref","type_id","type_id","validity","vector_type_name","vzip","vzip","VectorOp","cast","cast","filter","filter","find_unique","find_unique","impl_scalar_vector_op","replicate","replicate","take","take","cast_non_constant","filter_non_constant","find_unique_constant","find_unique_null","find_unique_scalar","replicate_scalar","take_indices","Float32Vector","Float32VectorBuilder","Float64Vector","Float64VectorBuilder","Int16Vector","Int16VectorBuilder","Int32Vector","Int32VectorBuilder","Int64Vector","Int64VectorBuilder","Int8Vector","Int8VectorBuilder","PrimitiveIter","PrimitiveVector","PrimitiveVectorBuilder","UInt16Vector","UInt16VectorBuilder","UInt32Vector","UInt32VectorBuilder","UInt64Vector","UInt64VectorBuilder","UInt8Vector","UInt8VectorBuilder","array","as_any","as_any","as_arrow","as_mut_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","data_type","data_type","eq","extend_slice_of","filter","find_unique","finish","fmt","from","from","from","from","from","from_array_data","from_iter_values","from_slice","from_values","from_vec","from_wrapper_slice","get","get_data","get_ref","get_slice","into","into","into","into_iter","is_null","iter","iter_data","len","len","memory_size","mutable_array","new","next","null_count","push","push_null","replicate","replicate_primitive","serialize_to_json","size_hint","slice","take","to_array_data","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from","try_from_arrow_array","try_from_arrow_duration_array","try_from_arrow_interval_array","try_from_arrow_time_array","try_from_arrow_timestamp_array","try_into","try_into","try_into","try_push_value_ref","type_id","type_id","type_id","validity","vector_type_name","vzip","vzip","vzip","with_capacity","StringVector","StringVectorBuilder","array","as_any","as_any","as_arrow","as_mut_any","borrow","borrow","borrow_mut","borrow_mut","cast","data_type","data_type","eq","extend_slice_of","filter","find_unique","finish","fmt","from","from","from","from","from","from","from","from","from","from_array_data","get","get_data","get_ref","into","into","is_null","iter_data","len","len","memory_size","mutable_array","null_count","push","push_null","replicate","serialize_to_json","slice","take","to_array_data","to_arrow_array","to_boxed_arrow_array","to_vector","try_from","try_from","try_from_arrow_array","try_into","try_into","try_push_value_ref","type_id","type_id","validity","vector_type_name","vzip","vzip","with_capacity","TimeMicrosecondVector","TimeMicrosecondVectorBuilder","TimeMillisecondVector","TimeMillisecondVectorBuilder","TimeNanosecondVector","TimeNanosecondVectorBuilder","TimeSecondVector","TimeSecondVectorBuilder","TimestampMicrosecondVector","TimestampMicrosecondVectorBuilder","TimestampMillisecondVector","TimestampMillisecondVectorBuilder","TimestampNanosecondVector","TimestampNanosecondVectorBuilder","TimestampSecondVector","TimestampSecondVectorBuilder","AllNull","AllValid","Slots","Validity","ValidityKind","all_null","all_valid","borrow","borrow","borrow_mut","borrow_mut","eq","eq","fmt","fmt","from","from","from_array_data","into","into","is_all_null","is_all_valid","is_set","kind","null_count","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","bitmap","len","len","len","null_count"],"q":[[0,"datatypes"],[21,"datatypes::arrow_array"],[25,"datatypes::data_type"],[188,"datatypes::duration"],[297,"datatypes::error"],[683,"datatypes::error::Error"],[728,"datatypes::interval"],[810,"datatypes::prelude"],[826,"datatypes::scalars"],[852,"datatypes::schema"],[952,"datatypes::schema::column_schema"],[994,"datatypes::schema::constraint"],[1028,"datatypes::schema::raw"],[1052,"datatypes::serialize"],[1054,"datatypes::time"],[1163,"datatypes::timestamp"],[1272,"datatypes::type_id"],[1322,"datatypes::types"],[1408,"datatypes::types::binary_type"],[1439,"datatypes::types::boolean_type"],[1472,"datatypes::types::cast"],[1496,"datatypes::types::date_type"],[1530,"datatypes::types::datetime_type"],[1564,"datatypes::types::dictionary_type"],[1599,"datatypes::types::duration_type"],[1779,"datatypes::types::interval_type"],[1921,"datatypes::types::list_type"],[1954,"datatypes::types::null_type"],[1985,"datatypes::types::primitive_type"],[2365,"datatypes::types::string_type"],[2396,"datatypes::types::time_type"],[2581,"datatypes::types::timestamp_type"],[2767,"datatypes::value"],[3524,"datatypes::value::ListValueRef"],[3527,"datatypes::vectors"],[3673,"datatypes::vectors::binary"],[3733,"datatypes::vectors::boolean"],[3797,"datatypes::vectors::constant"],[3840,"datatypes::vectors::date"],[3842,"datatypes::vectors::datetime"],[3844,"datatypes::vectors::duration"],[3852,"datatypes::vectors::eq"],[3854,"datatypes::vectors::helper"],[3873,"datatypes::vectors::interval"],[3879,"datatypes::vectors::list"],[3982,"datatypes::vectors::null"],[4038,"datatypes::vectors::operations"],[4050,"datatypes::vectors::operations::cast"],[4051,"datatypes::vectors::operations::filter"],[4052,"datatypes::vectors::operations::find_unique"],[4055,"datatypes::vectors::operations::replicate"],[4056,"datatypes::vectors::operations::take"],[4057,"datatypes::vectors::primitive"],[4162,"datatypes::vectors::string"],[4227,"datatypes::vectors::time"],[4235,"datatypes::vectors::timestamp"],[4243,"datatypes::vectors::validity"],[4276,"datatypes::vectors::validity::ValidityKind"]],"d":["","","","","","","","Apply the macro rules to all primitive types.","","Some helper macros for datatypes, copied from databend.","","","","","","","","","","","Match the logical type and apply <code>$body</code> to all primitive …","","","","","","","","Data type abstraction.","","","","","","","","","","","","","","","","","","","","","","Convert this type as arrow::datatypes::DataType.","Convert this type as arrow::datatypes::DataType.","Try to cast data type as a <code>DurationType</code>.","Try to cast the type as a <code>ListType</code>.","Try to cast data type as a <code>TimeType</code>.","Try to cast data type as a <code>TimestampType</code>.","","","","","Checks if the data type can cast to another data type.","","","","","Creates a mutable vector with given <code>capacity</code> of this type.","Creates a mutable vector with given <code>capacity</code> of this type.","","","Returns the default value of this type.","Returns the default value of this type.","","","","Creates a [Duration(DurationMicrosecondType)] datatype.","Creates a [Duration(DurationMillisecondType)] datatype.","Creates a [Duration(DurationNanosecondType)] datatype.","Creates a [Duration(DurationSecondType)] datatype.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Converts from arrow timestamp unit to","Convert arrow data type to ConcreteDataType.","","","","","","","","Creates a [Interval(IntervalDayTimeType)] datatype.","Creates a [Interval(IntervalMonthDayNanoType)] datatype.","Creates a [Interval(IntervalYearMonthType)] datatype.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns id of the Logical data type.","Returns id of the Logical data type.","Name of this data type.","Name of this data type.","","","","","","Returns the time data type with <code>TimeUnit</code>.","Creates a [Time(TimeMicrosecond)] datatype.","Creates a [Time(TimeMillisecondType)] datatype.","Creates a [Time(TimeNanosecond)] datatype.","Creates a [Time(TimeSecondType)] datatype.","","","","","","","","Casts the value to specific DataType. Return None if cast …","Casts the value to specific DataType. Return None if cast …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::ArrowCompute</code> variant","","SNAFU context selector for the <code>Error::BadArrayAccess</code> …","","SNAFU context selector for the <code>Error::CastTimeType</code> variant","","SNAFU context selector for the <code>Error::CastType</code> variant","","SNAFU context selector for the <code>Error::Conversion</code> variant","","SNAFU context selector for the <code>Error::DefaultValueType</code> …","","SNAFU context selector for the <code>Error::Deserialize</code> variant","","SNAFU context selector for the <code>Error::DuplicateColumn</code> …","","SNAFU context selector for the <code>Error::DuplicateMeta</code> variant","","","SNAFU context selector for the <code>Error::InvalidTimestampIndex</code>…","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::NullDefault</code> variant","","SNAFU context selector for the <code>Error::ParseSchemaVersion</code> …","","SNAFU context selector for the <code>Error::ProjectArrowSchema</code> …","","","SNAFU context selector for the <code>Error::Serialize</code> variant","","SNAFU context selector for the <code>Error::ToScalarValue</code> variant","","SNAFU context selector for the <code>Error::TryFromValue</code> variant","","SNAFU context selector for the <code>Error::UnknownVector</code> variant","","SNAFU context selector for the <code>Error::UnsupportedArrowType</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnsupportedOperation</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builder type to build this vector.","Iterator type of this vector.","","The reference item of this vector.","","Owned scalar value e.g. primitive types, bool, <code>Vec&lt;u8&gt;</code> …","","The corresponding <code>Scalar</code> type.","A sub trait of Vector to add scalar operation support.","A trait over all vector builders.","","","Get a reference of the current value.","Finish build and return a new vector.","","","","","Returns the reference to an element at given position.","","","Returns iterator of current vector.","Push a value into the builder.","Convert the reference into an owned value.","Upcast GAT type’s lifetime.","Create a new builder with initial <code>capacity</code>.","","Column’s default constraint.","Schema of a column, used as an immutable struct.","","","Initial version of the schema.","","Struct used to serialize and deserialize <code>Schema</code>.","A common schema, should be immutable.","","","Key used to store whether the column is time index in …","Key used to store version number of the schema in metadata.","","Add key value pair to metadata.","","","","","","","","","","","","","","Retrieve the column’s name by index","","","","Schema of columns.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a schema from a vector of ColumnSchema.","","","","Returns index of the timestamp key column.","","Index of the timestamp column.","Index of the timestamp key column.","","","","","","","","","","","","","","","Try to Create a schema from a vector of ColumnSchema.","","Generate a new projected schema","","","","","","","Schema version.","Version of the schema.","","","","","","Schema of a column, used as an immutable struct.","Key used to store default constraint in arrow field’s …","","Key used to store whether the column is time index in …","","","","","Creates a default value for this column.","Creates a vector with default value for this column.","Creates a vector for padding.","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Creates a new <code>ColumnSchema</code> with given metadata.","","","","Column’s default constraint.","","","","","","","","","","Create a default value for given <code>data_type</code>.","Create a vector that contains <code>num_rows</code> default values for …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true if this constraint might creates NULL.","Returns a default null constraint.","","","","","","","","Check whether the constraint is valid for columns with …","","Struct used to serialize and deserialize <code>Schema</code>.","","","","","Schema of columns.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates a new RawSchema from specific <code>column_schemas</code>.","","Index of the timestamp column.","","","","","Schema version.","","","Serialize a column of value with given type to JSON value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date representing the elapsed time since UNIX epoch …","Datetime representing the elapsed time since UNIX epoch …","","","","","A 64-bit duration representing the elapsed time in either …","","","","","","","A 64-bit interval representing the elapsed time in days …","A 128-bit interval representing the elapsed time in …","A 32-bit interval representing the elapsed time in months.","","Unique identifier for logical data type.","","","","","","A 64-bit time representing the elapsed time since midnight …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Arrow primitive type of this logical type.","","","Data type for <code>DateTime</code>.","Data type for Date (YYYY-MM-DD).","","Used to represent the Dictionary datatype.","","","","","","","","","","","","","","The “calendar” interval is a type of time interval …","","Largest type this primitive type can cast to.","Used to represent the List datatype.","Trait bridging the logical primitive type with …","Logical primitive type that this wrapper type belongs to.","","","","","","","","","","","The underlying native type.","Native (physical) type of this logical type.","Data types that can be used as arrow’s native type.","","A new type for WrapperType, complement the <code>Ord</code> feature for …","","","","","","","","","","","","","","","","","","","Wrapper type that the vector returns.","Represents the wrapper type that wraps a native type using …","","","","Construct the data type struct.","","Cast value ref to the primitive type.","Dynamic cast the vector to the concrete vector type.","","","","","","Convert native type into this wrapper type.","","Convert this wrapper type into native type.","The type of List’s item.","The type of Dictionary key.","","","","","TimeType represents the elapsed time since midnight in the …","","Return the name of the type.","The type of Dictionary value.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Cast options for cast functions.","","","Return true if the src_value can be casted to dest_type, …","Cast the value to dest_type with CastOption.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","decide how to handle cast failures, either return NULL …","","","","","","Data type for Date (YYYY-MM-DD).","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Data type for <code>DateTime</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Used to represent the Dictionary datatype.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns the key data type.","The type of Dictionary key.","","","Create a new <code>DictionaryType</code> whose item’s data type is …","","","","","","","","Returns the value data type.","The type of Dictionary value.","","","","","","","","","","","Convert this type as arrow::datatypes::DataType.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a mutable vector with given <code>capacity</code> of this type.","","","","","","","","","Returns the default value of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates time type from <code>TimeUnit</code>.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns id of the Logical data type.","","","","","Name of this data type.","","","","","","","","","","","","","","","","","","","","Casts the value to specific DataType. Return None if cast …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>TimeUnit</code> of this type.","","","","","","","","","The “calendar” interval is a type of time interval …","","","","Convert this type as arrow::datatypes::DataType.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a mutable vector with given <code>capacity</code> of this type.","","","","","","","Returns the default value of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns id of the Logical data type.","","","","Name of this data type.","","","","","","","","","","","","","","","","Casts the value to specific DataType. Return None if cast …","","","","","","","","","","","","","","","","","","","","","","Returns the unit of the interval.","","","","","Used to represent the List datatype.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns the item data type.","The type of List’s item.","","","Create a new <code>ListType</code> whose item’s data type is <code>item_type</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Arrow primitive type of this logical type.","","","","","","","Largest type this primitive type can cast to.","Trait bridging the logical primitive type with …","Logical primitive type that this wrapper type belongs to.","The underlying native type.","Native (physical) type of this logical type.","Data types that can be used as arrow’s native type.","A new type for WrapperType, complement the <code>Ord</code> feature for …","","","","","Wrapper type that the vector returns.","Represents the wrapper type that wraps a native type using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct the data type struct.","","","","","","","","","","","Cast value ref to the primitive type.","","","","","","","","","","","Dynamic cast the vector to the concrete vector type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert native type into this wrapper type.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this wrapper type into native type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the name of the type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Convert this type as arrow::datatypes::DataType.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a mutable vector with given <code>capacity</code> of this type.","","","","","","","","","Returns the default value of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates time type from <code>TimeUnit</code>.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns id of the Logical data type.","","","","","Name of this data type.","","","","","","","","","","Returns the time type’s precision.","","","","","","","","","","","Casts the value to specific DataType. Return None if cast …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the time type’s <code>TimeUnit</code>.","","","","","","","","","","","","","","","","","","","Convert this type as arrow::datatypes::DataType.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a mutable vector with given <code>capacity</code> of this type.","","","","","","","","","","Returns the default value of this type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns id of the Logical data type.","","","","","Name of this data type.","","","","","","","","","","","","","","","","","","","","","Casts the value to specific DataType. Return None if cast …","","","","","Convert fractional timestamp precision to timestamp types. …","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>TimeUnit</code> of this type.","","","","","","","","","","","","","","Dictionary value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List value.","Reference to a ListValue.","","","","","A wrapper around floats providing implementations of <code>Eq</code>, …","","","","","","","","","","","","","","","","","","Value holds a single arbitrary value of any DataType.","Reference to Value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast itself to binary slice.","Cast itself to boolean.","Cast Value to Date. Return None if value is not a valid …","Cast itself to Date.","Cast Value to DateTime. Return None if value is not a …","Cast itself to DateTime.","","","","","","","","Cast itself to Interval.","Cast itself to ListValue.","Cast itself to ListValueRef.","","","","Cast itself to string slice.","Cast Value to Time. Return None if value is not a valid …","Cast itself to Time.","Cast Value to timestamp. Return None if value is not a …","Cast itself to Timestamp.","","","","","Cast itself to ValueRef.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the size of the underlying data in bytes, The size …","Returns data type of the value.","","Inner values datatype, to distinguish empty lists of …","","","","","","","","","","","","","","","","","","","","Cast the 64-bit duration into the arrow ScalarValue with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","use ‘the first item size’ * ‘length of items’ to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Convert a &amp;str to <code>OrderedFloat</code>. Returns an error if the …","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the value out.","","","","","","","","","","","","","","Returns true if this is a null value.","Returns true if this is null.","","","","","","","","","","List of nested Values (boxed to reduce size_of(Value))","Inner values datatypes","","","","","","","","","","","","","","","","","Returns the logical type of the value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert ScalarValue to Interval.","Convert ScalarValue to Timestamp. Return <code>None</code> if given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cast the 64-bit elapsed time into the arrow ScalarValue by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert self to Value. This method would clone the …","","","","","","","","","","","","","","","","","","","Convert the value into <code>ScalarValue</code> according to the …","","","","","","","","","","","","","","","","","","","","Vector of binary strings.","","Vector of boolean.","","","Vector of <code>DateTime</code>","Builder for <code>DateTimeVector</code>.","","","","","","","","","","","","","","","Helper functions for <code>Vector</code>.","","","","","","","","","","","","","","","","Vector of Lists, basically backed by Arrow’s <code>ListArray</code>.","ListVector builder.","Mutable vector that could be used to build an immutable …","A vector where all elements are nulls.","","","Vector for primitive data types.","Builder to build a primitive vector.","Vector of strings.","","","","","","","","","","","","","","","","","","","","","","","","","","Validity of a vector.","Vector of data values.","","","","","","","","Returns the vector as Any so that it can be downcast to a …","Convert to Any, to enable dynamic casting.","Convert to mutable Any, to enable dynamic casting.","","","","Returns the data type of the vector.","Returns the data type of the vector.","","","","","","Extend this mutable vector by slice of <code>vector</code>.","Returns the clone of value at <code>index</code>.","Returns the reference of value at <code>index</code>.","Vector helper functions, inspired by databend Series mod","","","","","Helper to define …","","","Returns true when it’s a ConstantColumn","Returns whether the vector is empty.","Returns whether the vector is empty.","Returns whether row is null.","","The datatype of the items in the list.","","","Returns number of elements in the vector.","Returns the length of the vector.","","","","Returns the memory size of vector.","","","","","","","The number of null slots on this <code>Vector</code>.","","If the vector only contains NULL.","","","","Push value ref to this mutable vector.","Slices the <code>Vector</code>, returning a new <code>VectorRef</code>.","","","","Convert this vector to a new arrow ArrayRef.","Convert this vector to a new boxed arrow Array.","Convert <code>self</code> to an (immutable) VectorRef and reset <code>self</code>.","Returns the clone of value at <code>index</code> or error if <code>index</code> is …","Try to push value ref to this mutable vector.","","Returns the validity of the Array.","","","","","Vector of binary strings.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Vector of boolean.","","","","","","Get the inner boolean array.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the constant value.","","","Calls <code>U::from(self)</code>.","","","","","","Create a new ConstantVector.","","","","","","","","","","","","","","","","","","","","","Vector of <code>DateTime</code>","Builder for <code>DateTimeVector</code>.","","","","","","","","","","","Helper functions for <code>Vector</code>.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Perform SQL like operation on <code>names</code> and a scalar <code>s</code>.","","Get a pointer to the underlying data of this vectors. Can …","","Try to cast an arrow scalar value into vector","","Try to cast an arrow array into vector","Try to cast slice of <code>arrays</code> to vectors.","","","","","","","","","","Vector of Lists, basically backed by Arrow’s <code>ListArray</code>.","ListVector builder.","Builder for creating the null bit buffer. This builder …","Appends a boolean value into the builder.","Appends a <code>true</code> into the builder to indicate that this item …","Appends a <code>false</code> into the builder to indicate that this …","","","","","","","","","","","","","","","","","","","","","","","","Builds the null buffer and resets the builder. Returns <code>None</code>…","Finish the current variable-length list vector slot.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The datatype of the items in the list.","","","","","Store the length of the buffer before materializing.","","","","","Creates a new empty builder. <code>capacity</code> is the number of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate elements as VectorRef.","","","","","","","","Creates a new <code>ListVectorBuilder</code>. <code>item_type</code> is the data …","A vector where all elements are nulls.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Create a new <code>NullVector</code> with <code>n</code> elements.","","","","","","","","","","","","","","","","","","","","","","","","Vector compute operations.","","Cast vector to the provided data type and return a new …","","Filters the vector, returns elements matching the <code>filter</code> …","","Mark <code>i-th</code> bit of <code>selected</code> to <code>true</code> if the <code>i-th</code> element of …","","","Copies each element according <code>offsets</code> parameter.","","Take elements from the vector by the given indices.","","","","","","","","","","","","","","","","","","","","","Vector for primitive data types.","Builder to build a primitive vector.","","","","","","","","","","","","Get the inner arrow array.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Slice the batch, returning a new batch.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts arrow time array to vectors","Converts arrow timestamp array to vectors, ignoring time …","","","","","","","","","","","","","","Vector of strings.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All slots are null.","All slots are valid.","Whether the array slot is valid or not (null).","Validity of a vector.","","Returns <code>Validity</code> that all elements are null.","Returns <code>Validity</code> that all elements are valid.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Validity</code> from <code>ArrayData</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if all bits are null.","Returns true if all bits are valid.","Returns whether <code>i-th</code> bit is set.","","The number of null slots.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,227,2,2,2,2,2,2,2,2,2,2,2,2,2,2,227,2,2,2,227,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,227,2,227,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,227,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,0,48,49,50,51,48,49,50,51,48,48,48,49,49,49,50,50,50,51,51,51,48,49,50,51,48,48,49,49,50,50,51,51,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,48,49,50,51,53,0,53,0,53,0,53,0,53,0,53,0,53,0,53,0,53,0,0,53,0,53,0,53,0,53,0,53,0,0,53,0,53,0,53,0,53,0,53,0,53,0,53,0,61,53,53,53,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,53,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,53,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,53,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,72,53,53,65,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,53,53,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,53,58,59,63,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,53,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,76,68,60,64,53,62,71,53,67,69,73,59,53,53,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,53,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,53,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,53,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,53,77,62,74,76,58,59,60,61,62,77,63,64,78,79,80,65,66,67,68,69,71,72,73,53,228,229,230,231,232,233,234,235,236,237,238,239,231,240,230,231,237,238,241,228,242,232,239,243,233,234,235,236,244,245,240,246,247,229,248,241,243,242,247,245,246,248,238,232,242,0,0,0,85,86,87,85,86,87,85,86,87,85,86,87,85,86,87,85,86,87,0,85,86,87,85,86,87,85,85,85,86,86,86,87,87,87,85,86,87,85,85,86,86,87,87,85,86,87,85,86,87,85,86,87,85,86,87,85,86,87,85,86,87,85,86,87,85,86,87,85,86,87,85,86,87,85,86,87,85,86,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,218,218,218,218,249,0,0,250,0,0,249,251,249,251,218,218,218,218,218,0,0,218,251,250,249,251,0,0,0,0,103,93,0,0,0,0,0,0,0,103,92,93,93,97,93,92,97,93,92,92,93,93,0,93,93,0,93,93,99,93,92,0,93,96,92,96,93,93,93,93,97,92,93,97,93,92,97,93,92,93,96,96,93,96,92,96,97,93,92,93,93,0,93,93,97,99,93,92,93,97,93,93,93,93,93,92,92,92,97,93,92,93,0,93,97,93,92,0,93,92,99,93,92,97,93,92,0,0,0,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,0,0,103,0,103,103,103,103,103,0,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,252,0,0,0,0,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,0,108,109,110,111,108,109,110,111,108,108,108,109,109,109,110,110,110,111,111,111,108,109,110,111,108,108,109,109,110,110,111,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,108,109,110,111,0,0,0,0,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,0,112,113,114,115,112,113,114,115,112,112,112,113,113,113,114,114,114,115,115,115,112,113,114,115,112,112,113,113,114,114,115,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,112,113,114,115,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,219,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,219,0,0,132,3,6,7,3,6,7,25,3,6,7,132,219,0,0,0,3,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,219,0,25,0,0,219,0,219,219,0,0,0,0,0,132,0,132,5,21,0,0,0,0,0,0,219,21,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,36,36,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,36,36,36,36,36,36,36,36,0,122,122,0,0,122,122,122,122,122,122,122,122,122,122,122,0,122,122,122,122,122,122,122,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,3,3,3,3,3,125,126,127,128,3,125,126,127,128,3,125,126,127,128,125,126,127,128,125,126,127,128,125,126,127,128,3,125,126,127,128,3,125,126,127,128,3,125,126,127,128,3,125,126,127,128,3,125,126,127,128,125,126,127,128,3,125,126,127,128,3,125,126,127,128,3,125,126,127,128,3,3,3,125,125,125,126,126,126,127,127,127,128,128,128,3,125,126,127,128,3,3,3,3,3,125,126,127,128,3,3,125,126,127,128,0,3,125,126,127,128,3,125,126,127,128,3,125,126,127,128,3,125,126,127,128,3,125,126,127,128,3,125,126,127,128,3,125,126,127,128,3,125,126,127,128,3,3,3,3,3,125,126,127,128,3,125,126,127,128,125,126,127,128,3,3,125,126,127,128,25,0,0,0,0,25,25,25,129,130,131,25,129,130,131,25,129,130,131,129,130,131,129,130,131,129,130,131,25,129,130,131,25,129,130,131,25,129,130,131,25,129,130,131,25,129,130,131,129,130,131,25,129,130,131,25,129,130,131,25,129,130,131,25,25,25,129,129,129,130,130,130,131,131,131,25,129,130,131,25,25,25,25,129,130,131,25,129,130,131,0,25,129,130,131,25,129,130,131,25,129,130,131,25,129,130,131,25,129,130,131,25,129,130,131,25,129,130,131,25,129,130,131,25,25,25,25,129,130,131,25,129,130,131,129,130,131,25,25,129,130,131,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,219,0,0,0,0,0,0,219,0,132,132,219,0,0,0,0,0,0,219,0,24,32,30,19,33,34,22,28,29,27,133,133,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,219,24,32,30,19,33,34,22,28,29,27,219,24,32,30,19,33,34,22,28,29,27,219,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,24,32,30,19,33,34,22,28,29,27,24,32,30,19,33,34,22,28,29,27,24,32,30,19,33,34,22,28,29,27,0,0,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,133,133,133,24,24,24,32,32,32,30,30,30,19,19,19,33,33,33,34,34,34,22,22,22,28,28,28,29,29,29,27,27,27,133,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,132,24,32,30,19,33,34,22,28,29,27,0,0,133,24,32,30,19,33,34,22,28,29,27,132,24,32,30,19,33,34,22,28,29,27,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,219,24,32,30,19,33,34,22,28,29,27,133,24,32,30,19,33,34,22,28,29,27,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,6,6,0,6,0,6,0,0,0,0,0,6,140,141,142,143,6,140,141,142,143,6,140,141,142,143,140,141,142,143,140,141,142,143,140,141,142,143,6,140,141,142,143,6,140,141,142,143,6,140,141,142,143,6,140,141,142,143,6,140,141,142,143,140,141,142,143,6,140,141,142,143,6,140,141,142,143,6,140,141,142,143,6,6,6,140,140,140,141,141,141,142,142,142,143,143,143,6,140,141,142,143,6,6,6,6,6,140,141,142,143,6,6,140,141,142,143,0,6,140,141,142,143,6,140,141,142,143,6,140,141,142,143,6,140,141,142,143,6,6,140,141,142,143,6,140,141,142,143,6,140,141,142,143,6,140,141,142,143,6,6,6,6,6,140,141,142,143,6,140,141,142,143,140,141,142,143,6,6,140,141,142,143,0,0,7,7,0,7,0,7,0,0,0,0,0,7,144,145,146,147,7,144,145,146,147,7,144,145,146,147,144,145,146,147,144,145,146,147,144,145,146,147,7,144,145,146,147,7,144,145,146,147,7,144,145,146,147,7,144,145,146,147,7,144,145,146,147,7,144,145,146,147,7,144,145,146,147,7,144,145,146,147,7,144,145,146,147,7,7,7,144,144,144,145,145,145,146,146,146,147,147,147,7,144,145,146,147,7,7,7,7,7,144,145,146,147,7,144,145,146,147,0,7,144,145,146,147,7,144,145,146,147,7,144,145,146,147,7,144,145,146,147,7,7,144,145,146,147,7,144,145,146,147,7,144,145,146,147,7,7,144,145,146,147,7,7,7,7,7,144,145,146,147,7,144,145,146,147,144,145,146,147,7,7,144,145,146,147,13,116,13,116,13,116,13,116,0,13,116,150,150,150,150,150,150,150,150,150,150,13,116,13,116,160,13,116,13,116,13,116,13,116,13,116,150,150,150,150,13,116,0,0,13,116,0,0,0,150,160,150,13,116,13,116,13,116,13,116,13,116,13,116,13,116,0,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,116,116,13,116,13,116,116,116,116,116,116,116,116,116,13,116,150,150,159,116,13,116,13,116,116,116,116,116,13,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,13,159,163,116,160,150,13,159,163,116,160,150,150,150,150,150,150,150,150,150,13,159,163,116,160,150,13,159,163,116,160,150,13,159,116,160,150,13,159,116,160,150,150,150,150,150,150,150,116,13,159,159,150,159,150,150,150,13,159,163,150,150,150,150,150,150,150,150,150,150,150,0,150,150,150,150,150,13,159,163,116,160,150,150,150,13,13,13,159,159,159,163,163,163,116,116,116,160,160,160,159,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,13,13,159,163,116,160,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,159,163,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,160,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,13,159,150,150,150,0,0,0,0,0,150,150,150,150,150,13,159,163,116,160,150,150,150,150,150,150,150,150,150,150,150,150,150,150,13,116,150,150,150,150,150,150,150,150,159,159,163,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,13,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,159,0,150,150,13,159,116,160,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,0,0,150,13,159,163,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,0,0,150,150,150,150,150,150,150,150,150,150,0,150,13,159,163,116,160,160,150,150,150,150,13,150,150,150,150,150,160,150,150,150,150,176,174,13,13,159,163,116,160,150,13,159,163,116,160,13,159,150,13,159,163,116,160,159,163,150,13,159,163,116,160,150,253,254,253,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,198,199,211,215,224,117,11,11,0,0,0,117,11,0,0,0,0,117,11,117,117,0,214,0,0,0,0,0,0,117,117,11,117,210,211,222,196,117,11,208,216,0,117,197,205,220,223,0,210,117,210,117,0,0,11,11,117,0,0,0,117,117,11,117,11,0,117,210,214,208,117,0,0,198,197,198,198,197,197,198,197,198,198,197,198,198,197,198,198,197,198,197,198,198,198,198,198,198,198,197,198,198,198,197,198,198,197,198,197,197,198,198,198,198,198,198,198,197,197,198,198,197,198,197,197,198,198,198,197,198,197,0,0,199,205,199,199,199,205,205,199,205,199,199,205,199,199,205,199,199,199,205,199,205,199,199,199,199,199,199,199,199,199,205,199,199,199,205,199,199,205,199,205,205,199,199,199,199,199,199,199,205,205,199,199,205,199,205,205,199,199,199,205,199,205,0,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,209,209,209,211,210,211,211,210,209,214,210,211,209,214,210,211,209,209,211,210,211,211,210,211,211,210,209,210,211,209,214,210,211,211,209,211,211,211,211,214,214,210,211,209,214,211,210,211,211,210,211,209,209,209,209,211,214,209,214,210,211,210,210,210,210,211,211,214,211,211,211,211,211,210,214,210,211,209,211,214,210,211,209,210,214,210,211,209,211,210,211,214,211,214,210,211,209,210,210,0,0,215,215,216,215,216,215,216,215,216,215,215,216,216,215,216,215,215,215,215,215,216,215,215,215,216,215,215,216,216,215,215,215,215,216,215,0,215,215,215,215,215,216,215,216,215,215,216,216,215,216,215,215,215,216,0,0,256,0,256,0,256,0,0,256,0,256,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,118,220,118,220,118,222,220,118,222,220,118,118,220,118,220,118,118,220,118,118,118,118,222,220,118,118,118,118,118,118,118,118,118,118,118,222,220,222,118,222,118,118,220,118,220,118,222,118,220,220,118,0,118,222,118,118,118,118,118,220,118,222,220,118,118,118,118,118,118,222,220,220,118,222,220,118,118,118,222,220,220,0,0,224,223,224,224,223,223,224,223,224,224,223,224,224,223,224,224,223,224,223,224,224,224,224,224,224,224,224,224,224,224,224,223,224,224,224,223,224,224,223,224,223,223,224,224,224,224,224,224,224,223,223,224,224,223,224,223,223,224,224,224,223,224,223,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,226,226,226,0,0,196,196,226,196,226,196,226,196,226,196,226,196,196,226,196,196,196,196,196,196,226,196,226,196,226,196,226,196,257,257,258,259,257],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,1],[2,[[4,[3]]]],[2,[[4,[5]]]],[2,[[4,[6]]]],[2,[[4,[7]]]],[[],2],[[],2],[[]],[[]],[[2,2],8],[2,2],[[]],[[2,2],9],[[],9],[10,[[12,[11]]]],[[2,10],[[12,[11]]]],[[],2],[[],2],[[],13],[2,13],[14,[[15,[2]]]],[[2,2],2],[16,2],[[],2],[[],2],[[],2],[[],2],[[2,2],8],[[],8],[[],8],[[],8],[[],2],[[],2],[[2,17],18],[[2,17],18],[19,2],[20,2],[7,2],[21,2],[5,2],[22,2],[[]],[23,2],[24,2],[25,2],[26,2],[27,2],[28,2],[29,2],[30,2],[31,2],[3,2],[32,2],[33,2],[34,2],[2,2],[35,2],[36,2],[6,2],[37,2],[38,2],[1,2],[[2,39]],0,[[],2],[[],2],[[],2],[[],2],[40,2],[[],2],[[],2],[[],2],[[]],[2,8],[2,8],[2,8],[2,8],[2,8],[2,8],[2,8],[2,8],[2,8],[2,2],[[],41],[2,41],[[],42],[2,42],[[],2],[[],[[43,[2]]]],[[2,2],[[4,[9]]]],[[2,44],15],[[],2],[16,2],[[],2],[[],2],[[],2],[[],2],[16,2],[[],2],[[],2],[[],2],[[],2],[[]],[[],45],[13,[[4,[13]]]],[[2,13],[[4,[13]]]],[1,[[46,[2]]]],[[],15],[2,[[15,[25]]]],[2,[[15,[21]]]],[2,[[15,[3]]]],[2,[[15,[36]]]],[2,[[15,[22]]]],[2,[[15,[27]]]],[2,[[15,[30]]]],[2,[[15,[5]]]],[2,[[15,[33]]]],[2,[[15,[20]]]],[2,[[15,[28]]]],[2,[[15,[32]]]],[2,[[15,[23]]]],[2,[[15,[6]]]],[2,[[15,[34]]]],[2,[[15,[26]]]],[2,[[15,[29]]]],[2,[[15,[7]]]],[2,[[15,[31]]]],[[],15],[2,[[15,[35]]]],[2,[[15,[19]]]],[2,[[15,[24]]]],[[],47],[[],2],[[],2],[[],2],[[],2],[[]],0,0,0,0,[48],[49],[50],[51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,48],[49,49],[50,50],[51,51],[[]],[[]],[[]],[[]],[[],48],[[],49],[[],50],[[],51],0,[14,[[15,[48]]]],[14,[[15,[49]]]],[14,[[15,[50]]]],[14,[[15,[51]]]],[[48,48],8],[[49,49],8],[[50,50],8],[[51,51],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[48,17],18],[[49,17],18],[[50,17],18],[[51,17],18],[52,48],[[]],[52,49],[[]],[[]],[52,50],[[]],[52,51],[[],48],[[],49],[[],50],[[],51],[[]],[[]],[[]],[[]],[48],[49],[50],[51],[52,48],[52,49],[52,50],[52,51],[[48,44],15],[[49,44],15],[[50,44],15],[[51,44],15],[[]],[[]],[[]],[[]],[48],[49],[50],[51],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],47],[[],47],[[],47],[[],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[53,54],[[],55],[53,[[4,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[58,[[57,[45]]]]],53],[[[59,[[57,[10]],[57,[10]]]]],53],[[[60,[[57,[45]]]]],53],[[[61,[[57,[1]]]]],53],[[[62,[[57,[45]],[57,[45]]]]],53],[[[63,[[57,[10]]]]],53],[[[64,[[57,[45]]]]],53],[[[65,[[57,[45]]]]],53],[66,53],[[[67,[[57,[45]]]]],53],[[[68,[[57,[45]]]]],53],[[[69,[[57,[45]]]]],53],[[[71,[[57,[70]]]]],53],[[[72,[[57,[45]]]]],53],[[[73,[[57,[45]]]]],53],[53,[[4,[55]]]],[74,74],[[[76,[75]]],[[76,[75]]]],[[[58,[75]]],[[58,[75]]]],[[[59,[75,75]]],[[59,[75,75]]]],[[[60,[75]]],[[60,[75]]]],[[[61,[75]]],[[61,[75]]]],[[[62,[75,75]]],[[62,[75,75]]]],[[[77,[75]]],[[77,[75]]]],[[[63,[75]]],[[63,[75]]]],[[[64,[75]]],[[64,[75]]]],[78,78],[79,79],[80,80],[[[65,[75]]],[[65,[75]]]],[66,66],[[[67,[75]]],[[67,[75]]]],[[[68,[75]]],[[68,[75]]]],[[[69,[75]]],[[69,[75]]]],[[[71,[75]]],[[71,[75]]]],[[[72,[75]]],[[72,[75]]]],[[[73,[75]]],[[73,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[53,10,[43,[45]]]],[53,42],0,[[[58,[[57,[45]]]]],[[15,[53]]]],[[[59,[[57,[10]],[57,[10]]]]],[[15,[53]]]],[[[60,[[57,[45]]]]],[[15,[53]]]],[[[61,[[57,[1]]]]],[[15,[53]]]],[[[62,[[57,[45]],[57,[45]]]]],[[15,[53]]]],[[[63,[[57,[10]]]]],[[15,[53]]]],[[[64,[[57,[45]]]]],[[15,[53]]]],[[[65,[[57,[45]]]]],[[15,[53]]]],[66,[[15,[53]]]],[[[67,[[57,[45]]]]],[[15,[53]]]],[[[68,[[57,[45]]]]],[[15,[53]]]],[[[69,[[57,[45]]]]],[[15,[53]]]],[[[71,[[57,[70]]]]],[[15,[53]]]],[[[72,[[57,[45]]]]],[[15,[53]]]],[[[73,[[57,[45]]]]],[[15,[53]]]],[[74,17],18],[[[76,[81]],17],18],[[[58,[81]],17],18],[[[59,[81,81]],17],18],[[[60,[81]],17],18],[[[61,[81]],17],18],[[[62,[81,81]],17],18],[[[77,[81]],17],18],[[[63,[81]],17],18],[[[64,[81]],17],18],[[78,17],18],[[79,17],18],[[80,17],18],[[[65,[81]],17],18],[[66,17],18],[[[67,[81]],17],18],[[[68,[81]],17],18],[[[69,[81]],17],18],[[[71,[81]],17],18],[[[72,[81]],17],18],[[[73,[81]],17],18],[[53,17],18],[[53,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,53],[[[76,[[57,[45]]]]],53],[[[58,[[57,[45]]]]],53],[[[59,[[57,[10]],[57,[10]]]]],53],[[[60,[[57,[45]]]]],53],[[[61,[[57,[1]]]]],53],[[[62,[[57,[45]],[57,[45]]]]],53],[[[77,[[57,[45]]]]],53],[[[63,[[57,[10]]]]],53],[[[64,[[57,[45]]]]],53],[78,53],[79,53],[80,53],[[[65,[[57,[45]]]]],53],[66,53],[[[67,[[57,[45]]]]],53],[[[68,[[57,[45]]]]],53],[[[69,[[57,[45]]]]],53],[[[71,[[57,[70]]]]],53],[[[72,[[57,[45]]]]],53],[[[73,[[57,[45]]]]],53],0,0,0,0,[53,[[4,[82]]]],0,0,[83],0,0,0,0,[53,[[4,[55]]]],[53,84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[85],[86],[87],[[]],[[]],[[]],[[]],[[]],[[]],[85,85],[86,86],[87,87],[[]],[[]],[[]],[[],85],[[],86],[[],87],0,[14,[[15,[85]]]],[14,[[15,[86]]]],[14,[[15,[87]]]],[[85,85],8],[[86,86],8],[[87,87],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[85,17],18],[[86,17],18],[[87,17],18],[[]],[88,85],[52,86],[[]],[[]],[89,87],[[],85],[[],86],[[],87],[[]],[[]],[[]],[85],[86],[87],[88,85],[52,86],[89,87],[[85,44],15],[[86,44],15],[[87,44],15],[[]],[[]],[[]],[85],[86],[87],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],47],[[],47],[[],47],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[90],[90],[91],[[[43,[57]]]],[10,4],[90,10],0,[[]],[4],[[]],[[]],[10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[92,[57,[45]],[57,[45]]],92],[93,[[95,[94]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[92,[[46,[93]]]],[93,93],[[]],[[[91,[96]]],[[46,[97]]]],[[93,42],[[4,[10]]]],[[93,10],42],0,[[93,42],[[4,[96]]]],[93,[[91,[96]]]],0,0,0,0,[[93,42],8],0,[[],92],0,[[93,93],8],[[],8],[[],8],[[],8],0,0,[[93,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[93,8],0,0,[93,[[98,[45,45]]]],0,0,0,0,0,0,[[[43,[96]]],93],[93,10],0,[93,[[4,[96]]]],[93,[[4,[10]]]],0,0,0,0,[[]],[[],15],[99,[[46,[93]]]],[[[95,[94]]],[[46,[93]]]],[100,[[46,[93]]]],[94,[[46,[93]]]],[[],15],[[[43,[96]]],[[46,[92]]]],[[],15],[[[43,[96]]],[[46,[92]]]],[[],15],[[],15],[[],15],[[[43,[96]]],[[46,[93]]]],[[[98,[45,45]],42],[[46,[101]]]],[[93,[91,[10]]],[[46,[93]]]],[[],47],[[],47],[[],47],[[[91,[96]],10],46],[93,101],[[92,101],92],0,0,0,[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[96,96],[[]],[96,[[46,[[4,[13]]]]]],[[96,10],[[46,[[4,[102]]]]]],[[96,10],102],0,[96,[[4,[103]]]],0,[14,[[15,[96]]]],[[96,96],8],[[],8],[[],8],[[],8],[[96,17],18],[[]],[[]],[96,8],0,[96,8],0,[96,104],0,[96,104],0,[[[57,[45]],2,8],96],[[96,44],15],[[]],[[],15],[105,[[46,[96]]]],[[],15],[[],47],[[]],[[96,[4,[103]]],[[46,[96]]]],[[96,104],96],[[96,8],96],0,0,0,0,0,0,[[]],[[]],[103,103],[[]],[2,[[46,[13]]]],[[2,10],[[46,[102]]]],[[103,2,8],[[46,[13]]]],[[103,2,8,10],[[46,[102]]]],[14,[[15,[103]]]],[[103,103],8],[[],8],[[],8],[[],8],[[103,17],18],[[103,17],18],[[]],[[]],[103,8],[[],103],[[103,44],15],[[]],[[],45],[[],15],[[[91,[106]]],[[46,[103]]]],[[],15],[[],47],[[103,2,8],46],[[]],0,[[]],[[]],[99,99],[[]],0,[14,[[15,[99]]]],[[99,99],8],[[],8],[[],8],[[],8],[[99,17],18],[[]],[93,99],[[]],[[[43,[96]]],99],[[99,44],15],0,[[]],[[],15],[[],15],[[],47],0,[[]],0,[[],[[46,[[43,[107]]]]]],0,0,0,0,[108],[109],[110],[111],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[108,108],[109,109],[110,110],[111,111],[[]],[[]],[[]],[[]],[[],108],[[],109],[[],110],[[],111],0,[14,[[15,[108]]]],[14,[[15,[109]]]],[14,[[15,[110]]]],[14,[[15,[111]]]],[[108,108],8],[[109,109],8],[[110,110],8],[[111,111],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[108,17],18],[[109,17],18],[[110,17],18],[[111,17],18],[[]],[52,108],[[]],[52,109],[[]],[52,110],[52,111],[[]],[[],108],[[],109],[[],110],[[],111],[[]],[[]],[[]],[[]],[108],[109],[110],[111],[52,108],[52,109],[52,110],[52,111],[[108,44],15],[[109,44],15],[[110,44],15],[[111,44],15],[[]],[[]],[[]],[[]],[108],[109],[110],[111],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],47],[[],47],[[],47],[[],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[112],[113],[114],[115],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[112,112],[113,113],[114,114],[115,115],[[]],[[]],[[]],[[]],[[],112],[[],113],[[],114],[[],115],0,[14,[[15,[112]]]],[14,[[15,[113]]]],[14,[[15,[114]]]],[14,[[15,[115]]]],[[112,112],8],[[113,113],8],[[114,114],8],[[115,115],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[112,17],18],[[113,17],18],[[114,17],18],[[115,17],18],[[]],[52,112],[[]],[52,113],[[]],[52,114],[[]],[52,115],[[],112],[[],113],[[],114],[[],115],[[]],[[]],[[]],[[]],[112],[113],[114],[115],[52,112],[52,113],[52,114],[52,115],[[112,44],15],[[113,44],15],[[114,44],15],[[115,44],15],[[]],[[]],[[]],[[]],[112],[113],[114],[115],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],47],[[],47],[[],47],[[],47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[41,41],[[]],[[41,41],8],[[],8],[[],8],[[],8],[[41,17],18],[[]],[[]],[[]],[[],15],[[],15],[[],47],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,[116,[[46,[4]]]],[117,[[46,[118]]]],0,0,0,0,0,[[]],0,[[]],0,0,0,0,0,0,0,0,[[],42],0,0,[[],119],[31,1],[[]],[[]],[31,31],[[]],[[31,31],9],[[],9],[[31,10],[[12,[11]]]],[[],31],[31,13],[14,[[15,[31]]]],[[31,31],8],[[],8],[[],8],[[],8],[[31,17],18],[[]],[[31,39]],[[]],[31,41],[31,42],[[31,31],[[4,[9]]]],[[31,44],15],[[]],[[31,13],[[4,[13]]]],[[],15],[[],15],[[],47],[[]],0,[[],119],[36,1],[8,[[4,[120]]]],[[]],[[]],[36,36],[[]],[[36,36],9],[[],9],[[36,10],[[12,[11]]]],[[],36],[36,13],[14,[[15,[36]]]],[[36,36],8],[[],8],[[],8],[[],8],[[36,17],18],[[]],[[36,39]],[[]],[36,41],[36,42],[[[0,[120,121]]],[[4,[13]]]],[[36,36],[[4,[9]]]],[[36,44],15],[[]],[[36,13],[[4,[13]]]],[[],15],[[],15],[[],47],[[]],0,[[]],[[]],[[13,2],8],[[13,2,122],[[46,[13]]]],[122,122],[[]],[[],122],[[122,122],8],[[],8],[[],8],[[],8],[[122,17],18],[[]],[[122,39]],[[]],[[13,2],53],[122,8],0,[[]],[[],15],[[],15],[[],47],[[]],0,[23,1],[[]],[[]],[[],2],[116,[[46,[[4,[123]]]]]],[117,[[46,[124]]]],[23,23],[[]],[[23,23],9],[[],9],[[23,10],[[12,[11]]]],[[],23],[23,13],[14,[[15,[23]]]],[[23,23],8],[[],8],[[],8],[[],8],[[23,17],18],[[]],[[23,39]],[[]],[23,41],[23,42],[[23,23],[[4,[9]]]],[[23,44],15],[[]],[[23,13],[[4,[13]]]],[[],15],[[],15],[[],47],[[],42],[[]],0,[35,1],[[]],[[]],[[],2],[116,[[46,[4]]]],[117,[[46,[[118,[35]]]]]],[35,35],[[]],[[35,35],9],[[],9],[[35,10],[[12,[11]]]],[[],35],[35,13],[14,[[15,[35]]]],[[35,35],8],[[],8],[[],8],[[],8],[[35,17],18],[[]],[[35,39]],[[]],[35,41],[35,42],[[35,35],[[4,[9]]]],[[35,44],15],[[]],[[35,13],[[4,[13]]]],[[],15],[[],15],[[],47],[[],42],[[]],0,[21,1],[[]],[[]],[21,21],[[]],[[21,21],9],[[],9],[[21,10],[[12,[11]]]],[[],21],[21,13],[14,[[15,[21]]]],[[21,21],8],[[],8],[[],8],[[],8],[[21,17],18],[[]],[[21,39]],[[]],[21,2],0,[21,41],[21,42],[[2,2],21],[[21,21],[[4,[9]]]],[[21,44],15],[[]],[[21,13],[[4,[13]]]],[[],15],[[],15],[[],47],[21,2],0,[[]],0,0,0,0,0,0,0,0,0,[3,1],[125,1],[126,1],[127,1],[128,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[116,[[46,[4]]]],[116,[[46,[4]]]],[116,[[46,[4]]]],[116,[[46,[4]]]],[117,[[46,[[118,[125]]]]]],[117,[[46,[[118,[126]]]]]],[117,[[46,[[118,[127]]]]]],[117,[[46,[[118,[128]]]]]],[3,3],[125,125],[126,126],[127,127],[128,128],[[]],[[]],[[]],[[]],[[]],[[3,3],9],[[125,125],9],[[126,126],9],[[127,127],9],[[128,128],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[3,10],[[12,[11]]]],[[125,10],[[12,[11]]]],[[126,10],[[12,[11]]]],[[127,10],[[12,[11]]]],[[128,10],[[12,[11]]]],[[],125],[[],126],[[],127],[[],128],[3,13],[125,13],[126,13],[127,13],[128,13],[14,[[15,[3]]]],[14,[[15,[125]]]],[14,[[15,[126]]]],[14,[[15,[127]]]],[14,[[15,[128]]]],[[3,3],8],[[125,125],8],[[126,126],8],[[127,127],8],[[128,128],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[3,17],18],[[125,17],18],[[126,17],18],[[127,17],18],[[128,17],18],[127,3],[126,3],[[]],[128,3],[125,3],[[]],[[]],[[]],[[]],[16,3],[[3,39]],[[125,39]],[[126,39]],[[127,39]],[[128,39]],0,[[]],[[]],[[]],[[]],[[]],[3,41],[125,41],[126,41],[127,41],[128,41],[3,42],[125,42],[126,42],[127,42],[128,42],[[3,3],[[4,[9]]]],[[125,125],[[4,[9]]]],[[126,126],[[4,[9]]]],[[127,127],[[4,[9]]]],[[128,128],[[4,[9]]]],[[3,44],15],[[125,44],15],[[126,44],15],[[127,44],15],[[128,44],15],[[]],[[]],[[]],[[]],[[]],[[3,13],[[4,[13]]]],[[125,13],[[4,[13]]]],[[126,13],[[4,[13]]]],[[127,13],[[4,[13]]]],[[128,13],[[4,[13]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[3,[[15,[125]]]],[3,[[15,[126]]]],[3,[[15,[128]]]],[3,[[15,[127]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],47],[[],47],[[],47],[[],47],[[],47],[[],42],[[],42],[[],42],[[],42],[3,16],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[25,1],[129,1],[130,1],[131,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[116,[[46,[4]]]],[116,[[46,[4]]]],[116,[[46,[4]]]],[117,[[46,[[118,[129]]]]]],[117,[[46,[[118,[130]]]]]],[117,[[46,[[118,[131]]]]]],[25,25],[129,129],[130,130],[131,131],[[]],[[]],[[]],[[]],[[25,25],9],[[129,129],9],[[130,130],9],[[131,131],9],[[],9],[[],9],[[],9],[[],9],[[25,10],[[12,[11]]]],[[129,10],[[12,[11]]]],[[130,10],[[12,[11]]]],[[131,10],[[12,[11]]]],[[],129],[[],130],[[],131],[25,13],[129,13],[130,13],[131,13],[14,[[15,[25]]]],[14,[[15,[129]]]],[14,[[15,[130]]]],[14,[[15,[131]]]],[[25,25],8],[[129,129],8],[[130,130],8],[[131,131],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[25,17],18],[[129,17],18],[[130,17],18],[[131,17],18],[[]],[130,25],[129,25],[131,25],[[]],[[]],[[]],[[25,39]],[[129,39]],[[130,39]],[[131,39]],0,[[]],[[]],[[]],[[]],[25,41],[129,41],[130,41],[131,41],[25,42],[129,42],[130,42],[131,42],[[25,25],[[4,[9]]]],[[129,129],[[4,[9]]]],[[130,130],[[4,[9]]]],[[131,131],[[4,[9]]]],[[25,44],15],[[129,44],15],[[130,44],15],[[131,44],15],[[]],[[]],[[]],[[]],[[25,13],[[4,[13]]]],[[129,13],[[4,[13]]]],[[130,13],[[4,[13]]]],[[131,13],[[4,[13]]]],[[],15],[[],15],[[],15],[[],15],[25,[[15,[130]]]],[[],15],[25,[[15,[129]]]],[25,[[15,[131]]]],[[],15],[[],15],[[],15],[[],47],[[],47],[[],47],[[],47],[[],42],[[],42],[[],42],[25,40],[[]],[[]],[[]],[[]],0,[5,1],[[]],[[]],[5,5],[[]],[[5,5],9],[[],9],[[5,10],[[12,[11]]]],[[],5],[5,13],[14,[[15,[5]]]],[[5,5],8],[[],8],[[],8],[[],8],[[5,17],18],[[]],[[5,39]],[[]],[5,2],0,[5,41],[5,42],[2,5],[[5,5],[[4,[9]]]],[[5,44],15],[[]],[[5,13],[[4,[13]]]],[[],15],[[],15],[[],47],[[]],0,[[],119],[26,1],[[]],[[]],[26,26],[[]],[[26,26],9],[[],9],[[26,10],[[12,[11]]]],[[],26],[26,13],[14,[[15,[26]]]],[[26,26],8],[[],8],[[],8],[[],8],[[26,17],18],[[]],[[26,39]],[[]],[26,41],[26,42],[[26,26],[[4,[9]]]],[[26,44],15],[[]],[[26,13],[[4,[13]]]],[[],15],[[],15],[[],47],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[24,1],[32,1],[30,1],[19,1],[33,1],[34,1],[22,1],[28,1],[29,1],[27,1],[[[133,[132]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[116,[[46,[4]]]],[116,[[46,[[4,[106]]]]]],[116,[[46,[[4,[134]]]]]],[116,[[46,[[4,[101]]]]]],[116,[[46,[[4,[70]]]]]],[116,[[46,[[4,[135]]]]]],[116,[[46,[[4,[136]]]]]],[116,[[46,[[4,[137]]]]]],[116,[[46,[[4,[138]]]]]],[116,[[46,[[4,[52]]]]]],[116,[[46,[[4,[88]]]]]],[117,[[46,[118]]]],[117,[[46,[[118,[24]]]]]],[117,[[46,[[118,[32]]]]]],[117,[[46,[[118,[30]]]]]],[117,[[46,[[118,[19]]]]]],[117,[[46,[[118,[33]]]]]],[117,[[46,[[118,[34]]]]]],[117,[[46,[[118,[22]]]]]],[117,[[46,[[118,[28]]]]]],[117,[[46,[[118,[29]]]]]],[117,[[46,[[118,[27]]]]]],[[[133,[[0,[75,132]]]]],[[133,[[0,[75,132]]]]]],[24,24],[32,32],[30,30],[19,19],[33,33],[34,34],[22,22],[28,28],[29,29],[27,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[133,[132]],[133,[132]]],9],[[24,24],9],[[32,32],9],[[30,30],9],[[19,19],9],[[33,33],9],[[34,34],9],[[22,22],9],[[28,28],9],[[29,29],9],[[27,27],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[24,10],[[12,[11]]]],[[32,10],[[12,[11]]]],[[30,10],[[12,[11]]]],[[19,10],[[12,[11]]]],[[33,10],[[12,[11]]]],[[34,10],[[12,[11]]]],[[22,10],[[12,[11]]]],[[28,10],[[12,[11]]]],[[29,10],[[12,[11]]]],[[27,10],[[12,[11]]]],[[],24],[[],32],[[],30],[[],19],[[],33],[[],34],[[],22],[[],28],[[],29],[[],27],[24,13],[32,13],[30,13],[19,13],[33,13],[34,13],[22,13],[28,13],[29,13],[27,13],0,0,[14,[[15,[24]]]],[14,[[15,[32]]]],[14,[[15,[30]]]],[14,[[15,[19]]]],[14,[[15,[33]]]],[14,[[15,[34]]]],[14,[[15,[22]]]],[14,[[15,[28]]]],[14,[[15,[29]]]],[14,[[15,[27]]]],[[[133,[[0,[139,132]]]],[133,[[0,[139,132]]]]],8],[[24,24],8],[[32,32],8],[[30,30],8],[[19,19],8],[[33,33],8],[[34,34],8],[[22,22],8],[[28,28],8],[[29,29],8],[[27,27],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[[133,[[0,[81,132]]]],17],18],[[24,17],18],[[32,17],18],[[30,17],18],[[19,17],18],[[33,17],18],[[34,17],18],[[22,17],18],[[28,17],18],[[29,17],18],[[27,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,39]],[[32,39]],[[30,39]],[[19,39]],[[33,39]],[[34,39]],[[22,39]],[[28,39]],[[29,39]],[[27,39]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,41],[32,41],[30,41],[19,41],[33,41],[34,41],[22,41],[28,41],[29,41],[27,41],[24,42],[32,42],[30,42],[19,42],[33,42],[34,42],[22,42],[28,42],[29,42],[27,42],[[[133,[132]],[133,[132]]],[[4,[9]]]],[[24,24],[[4,[9]]]],[[32,32],[[4,[9]]]],[[30,30],[[4,[9]]]],[[19,19],[[4,[9]]]],[[33,33],[[4,[9]]]],[[34,34],[[4,[9]]]],[[22,22],[[4,[9]]]],[[28,28],[[4,[9]]]],[[29,29],[[4,[9]]]],[[27,27],[[4,[9]]]],[[24,44],15],[[32,44],15],[[30,44],15],[[19,44],15],[[33,44],15],[[34,44],15],[[22,44],15],[[28,44],15],[[29,44],15],[[27,44],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[24,13],[[4,[13]]]],[[32,13],[[4,[13]]]],[[30,13],[[4,[13]]]],[[19,13],[[4,[13]]]],[[33,13],[[4,[13]]]],[[34,13],[[4,[13]]]],[[22,13],[[4,[13]]]],[[28,13],[[4,[13]]]],[[29,13],[[4,[13]]]],[[27,13],[[4,[13]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],119],[20,1],[[]],[[]],[20,20],[[]],[[20,20],9],[[],9],[[20,10],[[12,[11]]]],[[],20],[20,13],[14,[[15,[20]]]],[[20,20],8],[[],8],[[],8],[[],8],[[20,17],18],[[]],[[20,39]],[[]],[20,41],[20,42],[[20,20],[[4,[9]]]],[[20,44],15],[[]],[[20,13],[[4,[13]]]],[[],15],[[],15],[[],47],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[6,1],[140,1],[141,1],[142,1],[143,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[116,[[46,[4]]]],[116,[[46,[4]]]],[116,[[46,[4]]]],[116,[[46,[4]]]],[117,[[46,[[118,[140]]]]]],[117,[[46,[[118,[141]]]]]],[117,[[46,[[118,[142]]]]]],[117,[[46,[[118,[143]]]]]],[6,6],[140,140],[141,141],[142,142],[143,143],[[]],[[]],[[]],[[]],[[]],[[6,6],9],[[140,140],9],[[141,141],9],[[142,142],9],[[143,143],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[6,10],[[12,[11]]]],[[140,10],[[12,[11]]]],[[141,10],[[12,[11]]]],[[142,10],[[12,[11]]]],[[143,10],[[12,[11]]]],[[],140],[[],141],[[],142],[[],143],[6,13],[140,13],[141,13],[142,13],[143,13],[14,[[15,[6]]]],[14,[[15,[140]]]],[14,[[15,[141]]]],[14,[[15,[142]]]],[14,[[15,[143]]]],[[6,6],8],[[140,140],8],[[141,141],8],[[142,142],8],[[143,143],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[6,17],18],[[140,17],18],[[141,17],18],[[142,17],18],[[143,17],18],[142,6],[[]],[141,6],[140,6],[143,6],[[]],[[]],[[]],[[]],[16,6],[[6,39]],[[140,39]],[[141,39]],[[142,39]],[[143,39]],0,[[]],[[]],[[]],[[]],[[]],[6,41],[140,41],[141,41],[142,41],[143,41],[6,42],[140,42],[141,42],[142,42],[143,42],[[6,6],[[4,[9]]]],[[140,140],[[4,[9]]]],[[141,141],[[4,[9]]]],[[142,142],[[4,[9]]]],[[143,143],[[4,[9]]]],[6,70],[[6,44],15],[[140,44],15],[[141,44],15],[[142,44],15],[[143,44],15],[[]],[[]],[[]],[[]],[[]],[[6,13],[[4,[13]]]],[[140,13],[[4,[13]]]],[[141,13],[[4,[13]]]],[[142,13],[[4,[13]]]],[[143,13],[[4,[13]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[6,[[15,[143]]]],[6,[[15,[142]]]],[6,[[15,[140]]]],[6,[[15,[141]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],47],[[],47],[[],47],[[],47],[[],47],[[],42],[[],42],[[],42],[[],42],[6,16],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[7,1],[144,1],[145,1],[146,1],[147,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[116,[[46,[4]]]],[116,[[46,[4]]]],[116,[[46,[4]]]],[116,[[46,[4]]]],[117,[[46,[[118,[144]]]]]],[117,[[46,[[118,[145]]]]]],[117,[[46,[[118,[146]]]]]],[117,[[46,[[118,[147]]]]]],[7,7],[144,144],[145,145],[146,146],[147,147],[[]],[[]],[[]],[[]],[[]],[[7,7],9],[[144,144],9],[[145,145],9],[[146,146],9],[[147,147],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[7,10],[[12,[11]]]],[[144,10],[[12,[11]]]],[[145,10],[[12,[11]]]],[[146,10],[[12,[11]]]],[[147,10],[[12,[11]]]],[[7,52],148],[[],144],[[],145],[[],146],[[],147],[7,13],[144,13],[145,13],[146,13],[147,13],[14,[[15,[7]]]],[14,[[15,[144]]]],[14,[[15,[145]]]],[14,[[15,[146]]]],[14,[[15,[147]]]],[[7,7],8],[[144,144],8],[[145,145],8],[[146,146],8],[[147,147],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[7,17],18],[[144,17],18],[[145,17],18],[[146,17],18],[[147,17],18],[147,7],[[]],[145,7],[146,7],[144,7],[[]],[[]],[[]],[[]],[[7,39]],[[144,39]],[[145,39]],[[146,39]],[[147,39]],0,[[]],[[]],[[]],[[]],[[]],[7,41],[144,41],[145,41],[146,41],[147,41],[7,42],[144,42],[145,42],[146,42],[147,42],[[7,7],[[4,[9]]]],[[144,144],[[4,[9]]]],[[145,145],[[4,[9]]]],[[146,146],[[4,[9]]]],[[147,147],[[4,[9]]]],[7,70],[[7,44],15],[[144,44],15],[[145,44],15],[[146,44],15],[[147,44],15],[[]],[[]],[[]],[[]],[[]],[[7,13],[[4,[13]]]],[[144,13],[[4,[13]]]],[[145,13],[[4,[13]]]],[[146,13],[[4,[13]]]],[[147,13],[[4,[13]]]],[70,[[15,[7]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[7,[[15,[144]]]],[7,[[15,[145]]]],[7,[[15,[146]]]],[7,[[15,[147]]]],[[],15],[[],15],[[],15],[[],15],[[],47],[[],47],[[],47],[[],47],[[],47],[[],42],[[],42],[[],42],[[],42],[7,16],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],[[150,[149]]]],[[],[[150,[149]]]],[[],[[150,[149]]]],[[],[[150,[149]]]],[[],[[150,[149]]]],[[],[[150,[149]]]],[[],[[150,[149]]]],[[],[[150,[149]]]],[[],[[150,[149]]]],[[],[[150,[149]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[150,[149]]]],[[],[[150,[149]]]],[[],[[150,[149]]]],[[],[[150,[149]]]],0,0,0,0,0,0,0,0,0,[[],[[150,[149]]]],0,[[],[[150,[149]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[150,[[0,[151,152]]]]],[[150,[[0,[151,152]]]]]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[[0,[151,152]]]],[150,[[0,[151,152]]]]],[[150,[[0,[151,152]]]]]],[[[150,[151]],[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[[150,[[153,[[153,[[153,[153]]]]]]]],[153,[[153,[[153,[[153,[153]]]]]]]]]],[[[150,[[153,[[153,[[153,[153]]]]]]]],[150,[[153,[[153,[[153,[153]]]]]]]]]],[[[150,[[153,[[153,[[153,[153]]]]]]]],[153,[[153,[[153,[[153,[153]]]]]]]]]],[[150,150]],[150],[150],[[[150,[[153,[[153,[[153,[153]]]]]]]],[150,[[153,[[153,[[153,[153]]]]]]]]]],[[[150,[[154,[[154,[[154,[154]]]]]]]],[150,[[154,[[154,[[154,[154]]]]]]]]]],[[[150,[[154,[[154,[[154,[154]]]]]]]],[150,[[154,[[154,[[154,[154]]]]]]]]]],[[[150,[[154,[[154,[[154,[154]]]]]]]],[154,[[154,[[154,[[154,[154]]]]]]]]]],[[[150,[[154,[[154,[[154,[154]]]]]]]],[154,[[154,[[154,[[154,[154]]]]]]]]]],[[]],[[[150,[138]]],101],[[[150,[137]]],137],[[[150,[138]]],10],[[[150,[137]]],88],[[[150,[138]]],155],[[[150,[138]]],70],[[[150,[137]]],52],[[[150,[137]]],138],[[[150,[137]]],[[150,[138]]]],[[[150,[137]]],106],[[[150,[138]]],136],[[[150,[137]]],10],[[[150,[138]]],52],[[[150,[138]]],88],[[[150,[138]]],106],[[[150,[137]]],155],[[[150,[137]]],70],[[[150,[137]]],134],[[[150,[138]]],138],[[[150,[137]]],101],[[[150,[137]]],[[150,[137]]]],[[[150,[138]]],[[150,[138]]]],[[[150,[138]]],[[150,[137]]]],[[[150,[138]]],134],[[[150,[138]]],137],[[[150,[138]]],135],[[[150,[137]]],136],[[[150,[137]]],135],[116,[[46,[[4,[[91,[106]]]]]]]],[116,[[46,[[4,[8]]]]]],[13,[[4,[123]]]],[116,[[46,[[4,[123]]]]]],[13,[[4,[156]]]],[116,[[46,[[4,[156]]]]]],[116,[[46,[[4,[157]]]]]],[116,[[46,[[4,[137]]]]]],[116,[[46,[[4,[138]]]]]],[116,[[46,[[4,[136]]]]]],[116,[[46,[[4,[88]]]]]],[116,[[46,[[4,[52]]]]]],[116,[[46,[[4,[135]]]]]],[116,[[46,[[4,[158]]]]]],[13,[[46,[[4,[159]]]]]],[116,[[46,[[4,[160]]]]]],[[[150,[151]]],151],[[[150,[151]]],151],[159],[116,[[46,[[4,[42]]]]]],[13,[[4,[161]]]],[116,[[46,[[4,[161]]]]]],[13,[[4,[148]]]],[116,[[46,[[4,[148]]]]]],[116,[[46,[[4,[134]]]]]],[116,[[46,[[4,[101]]]]]],[116,[[46,[[4,[70]]]]]],[116,[[46,[[4,[106]]]]]],[13,116],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[[150,[151]],[150,[151]]],[[150,[151]]]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]]],[[150,[151]]]],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]]],162],[[[150,[151]]],162],[[[150,[75]]],[[150,[75]]]],[13,13],[159,159],[163,163],[116,116],[160,160],[[]],[[]],[[]],[[]],[[]],[[]],[[[150,[151]],[150,[151]]],9],[[13,13],9],[[159,159],9],[[116,116],9],[[160,160],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[]],[[[150,[151]]],[[150,[151]]]],[116,10],[13,2],[159,2],0,[[],[[150,[121]]]],[[],159],[[[150,[151]]]],[[[150,[151]]]],[14,[[15,[[150,[[0,[151,164]]]]]]]],[14,[[15,[13]]]],[14,[[15,[159]]]],[14,[[15,[163]]]],[150],[[150,150]],[[[150,[[165,[[165,[[165,[165]]]]]]]],[165,[[165,[[165,[[165,[165]]]]]]]]]],[[[150,[[165,[[165,[[165,[165]]]]]]]],[150,[[165,[[165,[[165,[165]]]]]]]]]],[150],[[[150,[[165,[[165,[[165,[165]]]]]]]],[165,[[165,[[165,[[165,[165]]]]]]]]]],[[[150,[[165,[[165,[[165,[165]]]]]]]],[150,[[165,[[165,[[165,[165]]]]]]]]]],[[[150,[[166,[[166,[[166,[166]]]]]]]],[166,[[166,[[166,[[166,[166]]]]]]]]]],[[[150,[[166,[[166,[[166,[166]]]]]]]],[166,[[166,[[166,[[166,[166]]]]]]]]]],[[[150,[[166,[[166,[[166,[166]]]]]]]],[150,[[166,[[166,[[166,[166]]]]]]]]]],[[[150,[[166,[[166,[[166,[166]]]]]]]],[150,[[166,[[166,[[166,[166]]]]]]]]]],[[16,[4,[52]]],167],[[],[[150,[151]]]],[[],[[150,[151]]]],[[]],[[[150,[151]],[150,[151]]],8],[[[150,[151]],151],8],[[13,13],8],[[159,159],8],[[163,163],8],[[116,116],8],[[160,160],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[159,10],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]]],[[150,[151]]]],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[[0,[151,168]]]],17],[[15,[169]]]],[[[150,[[0,[151,170]]]],17],[[15,[169]]]],[[[150,[[0,[151,171]]]],17],[[15,[169]]]],[[[150,[81]],17],[[15,[169]]]],[[13,17],18],[[13,17],18],[[159,17],18],[[163,17],18],[[116,17],18],[[160,17],18],[[]],[[[150,[151]]],[[150,[151]]]],[[[150,[151]]],[[150,[151]]]],[8,[[150,[137]]]],[136,[[150,[137]]]],[151,[[150,[151]]]],[88,[[150,[138]]]],[106,[[150,[138]]]],[106,[[150,[137]]]],[136,[[150,[138]]]],[151,[[150,[151]]]],[134,[[150,[138]]]],[172,[[4,[[150,[173]]]]]],[151,[[150,[151]]]],[134,[[150,[137]]]],[135,[[150,[138]]]],[135,[[150,[137]]]],[8,[[150,[138]]]],[101,[[150,[138]]]],[[]],[8,13],[[[4,[70]]],13],[[[4,[106]]],13],[161,13],[48,13],[134,13],[123,13],[138,13],[[[4,[157]]],13],[148,13],[[[4,[88]]],13],[[[4,[8]]],13],[49,13],[[[4,[136]]],13],[45,13],[157,13],[[[4,[174]]],13],[[[4,[175]]],13],[108,13],[[[4,[52]]],13],[137,13],[112,13],[156,13],[[[91,[106]]],13],[86,13],[114,13],[52,13],[[[4,[176]]],13],[101,13],[109,13],[106,13],[51,13],[135,13],[176,13],[136,13],[[[4,[138]]],13],[[[4,[123]]],13],[[[133,[132]]],13],[175,13],[[]],[[[4,[161]]],13],[[[4,[158]]],13],[116,13],[[[4,[137]]],13],[[[4,[45]]],13],[[[4,[135]]],13],[110,13],[174,13],[88,13],[50,13],[115,13],[177,13],[[[4,[156]]],13],[85,13],[111,13],[87,13],[158,13],[[[4,[177]]],13],[42,13],[[[4,[134]]],13],[70,13],[[[4,[101]]],13],[113,13],[[[43,[106]]],13],[[[4,[148]]],13],[[]],[[]],[[[4,[123]]],116],[115,116],[135,116],[[[4,[52]]],116],[[[4,[160]]],116],[[[4,[70]]],116],[158,116],[[[4,[138]]],116],[8,116],[161,116],[110,116],[[[4,[88]]],116],[[[4,[136]]],116],[113,116],[[[4,[106]]],116],[86,116],[52,116],[[]],[49,116],[112,116],[85,116],[[[4,[101]]],116],[42,116],[[[4,[134]]],116],[[[4,[137]]],116],[123,116],[136,116],[[[4,[161]]],116],[70,116],[148,116],[50,116],[114,116],[48,116],[[[4,[135]]],116],[111,116],[156,116],[109,116],[[[4,[148]]],116],[138,116],[134,116],[[[4,[8]]],116],[106,116],[51,116],[88,116],[[[4,[156]]],116],[157,116],[87,116],[108,116],[137,116],[[[91,[106]]],116],[[[4,[157]]],116],[101,116],[[[4,[158]]],116],[[]],[137,[[4,[[150,[178]]]]]],[138,[[4,[[150,[178]]]]]],[136,[[4,[[150,[178]]]]]],[88,[[4,[[150,[178]]]]]],[52,[[4,[[150,[178]]]]]],[135,[[4,[[150,[178]]]]]],[155,[[4,[[150,[178]]]]]],[42,[[15,[[150,[179]]]]]],[[42,101],[[15,[[150,[[0,[151,120]]]]]]]],[134,[[4,[[150,[178]]]]]],[101,[[4,[[150,[178]]]]]],[70,[[4,[[150,[178]]]]]],[106,[[4,[[150,[178]]]]]],[10,[[4,[[150,[178]]]]]],[[[150,[151]],[150,[151]]],8],[[[150,[151]],[150,[151]]],8],[[[150,[151]],39]],[[13,39]],[[159,39]],[[]],[[[150,[151]],[150,[151]]],[[150,[151]]]],[[]],0,0,0,0,0,[[],[[150,[151]]]],[[],[[150,[151]]]],[[[150,[151]]]],[[[150,[151]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[150,[151]]],151],[[[150,[151]]],8],[[],8],[[[150,[151]]],8],[[],8],[[[150,[151]]],8],[[[150,[151]]],8],[[],8],[[[150,[151]]],8],[[[150,[151]]],8],[[[150,[[0,[151,152]]]]],8],[[],8],[[[150,[151]]],8],[[[150,[151]]],8],[13,8],[116,8],[[[150,[[0,[151,152]]]]],8],[[],8],[[[150,[151]]],8],[[[150,[151]]],8],[[[150,[151]]],8],[[[150,[151]]],8],[[],8],[[[150,[180]]],8],[159,[[4,[[12,[[43,[13]]]]]]]],0,0,[[]],[[[150,[151]],[150,[151]]],8],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[]],[[[150,[151]]],[[150,[151]]]],[[[150,[151]],[150,[151]]],[[150,[151]]]],[[]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[13,41],[[[150,[151]],[150,[151]]],8],[[[150,[151]],[150,[151]]],[[150,[151]]]],[[]],[[],[[150,[181]]]],[[]],[[]],[[],[[150,[151]]]],[[],[[150,[151]]]],[[[150,[151]],[150,[151]]],[[150,[151]]]],[[]],[[],[[150,[151]]]],[[],[[150,[151]]]],[[]],[[]],[[],[[150,[181]]]],[[],[[150,[151]]]],[[]],[[],[[150,[151]]]],[[[150,[[182,[[182,[[182,[182]]]]]]]],[150,[[182,[[182,[[182,[182]]]]]]]]]],[[150,150]],[[[150,[[182,[[182,[[182,[182]]]]]]]],[182,[[182,[[182,[[182,[182]]]]]]]]]],[[[150,[[182,[[182,[[182,[182]]]]]]]],[182,[[182,[[182,[[182,[182]]]]]]]]]],[[[150,[[182,[[182,[[182,[182]]]]]]]],[150,[[182,[[182,[[182,[182]]]]]]]]]],[150],[150],[[[150,[151]],[150,[151]],[150,[151]]],[[150,[151]]]],[[]],[[[150,[[183,[[183,[[183,[183]]]]]]]],[150,[[183,[[183,[[183,[183]]]]]]]]]],[[[150,[[183,[[183,[[183,[183]]]]]]]],[150,[[183,[[183,[[183,[183]]]]]]]]]],[[[150,[[183,[[183,[[183,[183]]]]]]]],[183,[[183,[[183,[[183,[183]]]]]]]]]],[[[150,[[183,[[183,[[183,[183]]]]]]]],[183,[[183,[[183,[[183,[183]]]]]]]]]],[[],[[150,[151]]]],[[],[[150,[151]]]],[150],[[[150,[184]]]],[[],[[150,[151]]]],[[],[[150,[151]]]],[[],[[150,[151]]]],[[],[[150,[151]]]],[[[4,[[12,[[43,[13]]]]]],2],159],[1,105],[[],[[150,[185]]]],[[[150,[151]],[150,[151]]],[[4,[9]]]],[[13,13],[[4,[9]]]],[[159,159],[[4,[9]]]],[[116,116],[[4,[9]]]],[[160,160],[[4,[9]]]],[[[150,[138]],106],[[150,[138]]]],[[[150,[138]],135],[[150,[138]]]],[[[150,[138]],[150,[137]]],[[150,[138]]]],[[[150,[137]],135],[[150,[137]]]],[[[150,[138]],137],[[150,[138]]]],[[[150,[138]],135],[[150,[138]]]],[[[150,[137]],134],[[150,[137]]]],[[[150,[138]],138],[[150,[138]]]],[[[150,[138]],137],[[150,[138]]]],[[[150,[137]],88],[[150,[137]]]],[[[150,[138]],[150,[137]]],[[150,[138]]]],[[[150,[137]],137],[[150,[137]]]],[[[150,[137]],106],[[150,[137]]]],[[[150,[137]],106],[[150,[137]]]],[[[150,[138]],106],[[150,[138]]]],[[[150,[138]],135],[[150,[138]]]],[[[150,[137]],135],[[150,[137]]]],[[[150,[137]],137],[[150,[137]]]],[[[150,[137]],136],[[150,[137]]]],[[[150,[137]],136],[[150,[137]]]],[[[150,[137]],135],[[150,[137]]]],[[[150,[138]],[150,[138]]],[[150,[138]]]],[[[150,[137]],137],[[150,[137]]]],[[[150,[138]],138],[[150,[138]]]],[[[150,[138]],88],[[150,[138]]]],[[[150,[137]],136],[[150,[137]]]],[[[150,[138]],138],[[150,[138]]]],[[[150,[138]],137],[[150,[138]]]],[[[150,[138]],[150,[138]]],[[150,[138]]]],[[[150,[137]],106],[[150,[137]]]],[[[150,[138]],[150,[137]]],[[150,[138]]]],[[[150,[137]],[150,[137]]],[[150,[137]]]],[[[150,[138]],106],[[150,[138]]]],[[[150,[138]],138],[[150,[138]]]],[[[150,[138]],[150,[138]]],[[150,[138]]]],[[[150,[138]],136],[[150,[138]]]],[[[150,[138]],137],[[150,[138]]]],[[[150,[138]],134],[[150,[138]]]],[[[150,[137]],[150,[137]]],[[150,[137]]]],[[[150,[137]],135],[[150,[137]]]],[[[150,[137]],88],[[150,[137]]]],[[[150,[138]],[150,[137]]],[[150,[138]]]],[[[150,[138]],136],[[150,[138]]]],[[[150,[137]],134],[[150,[137]]]],[[[150,[138]],134],[[150,[138]]]],[[[150,[138]],135],[[150,[138]]]],[[[150,[137]],88],[[150,[137]]]],[[[150,[137]],[150,[137]]],[[150,[137]]]],[[[150,[138]],88],[[150,[138]]]],[[[150,[138]],106],[[150,[138]]]],[[[150,[137]],106],[[150,[137]]]],[[[150,[137]],134],[[150,[137]]]],[[[150,[138]],134],[[150,[138]]]],[[[150,[138]],[150,[138]]],[[150,[138]]]],[[[150,[137]],[150,[137]]],[[150,[137]]]],[[[150,[138]],88],[[150,[138]]]],[[[150,[137]],137],[[150,[137]]]],[[[150,[137]],88],[[150,[137]]]],[[[150,[138]],136],[[150,[138]]]],[[[150,[138]],134],[[150,[138]]]],[[[150,[138]],88],[[150,[138]]]],[[[150,[137]],134],[[150,[137]]]],[[[150,[138]],136],[[150,[138]]]],[[[150,[137]],136],[[150,[137]]]],[186,186],[[]],[[[150,[151]],[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]],88],[[150,[151]]]],[88],[[[150,[151]],88],[[150,[151]]]],[88],[90,[[150,[[0,[151,[187,[[0,[151,[187,[[0,[151,[187,[[0,[151,187]]]]]]]]]]]]]]]]]],[90,[[150,[[0,[151,[187,[[0,[151,[187,[[0,[151,[187,[[0,[151,187]]]]]]]]]]]]]]]]]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[150],[[150,150]],[150],[[[150,[[188,[[188,[[188,[188]]]]]]]],[150,[[188,[[188,[[188,[188]]]]]]]]]],[[[150,[[188,[[188,[[188,[188]]]]]]]],[150,[[188,[[188,[[188,[188]]]]]]]]]],[[[150,[[188,[[188,[[188,[188]]]]]]]],[188,[[188,[[188,[[188,[188]]]]]]]]]],[[[150,[[188,[[188,[[188,[188]]]]]]]],[188,[[188,[[188,[[188,[188]]]]]]]]]],[[[150,[[189,[[189,[[189,[189]]]]]]]],[150,[[189,[[189,[[189,[189]]]]]]]]]],[[[150,[[189,[[189,[[189,[189]]]]]]]],[150,[[189,[[189,[[189,[189]]]]]]]]]],[[[150,[[189,[[189,[[189,[189]]]]]]]],[189,[[189,[[189,[[189,[189]]]]]]]]]],[[[150,[[189,[[189,[[189,[189]]]]]]]],[189,[[189,[[189,[[189,[189]]]]]]]]]],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]]],[[150,[151]]]],[167,[[4,[158]]]],[167,[[4,[148]]]],[[[150,[[0,[151,190]]]],44],15],[[13,44],15],[[159,44],15],[[163,44],15],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]]],[[150,[151]]]],[[[150,[[0,[151,152]]]]],[[150,[[0,[151,152]]]]]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[[150,[151]]]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[150],[[[150,[[191,[[191,[[191,[191]]]]]]]],[150,[[191,[[191,[[191,[191]]]]]]]]]],[[[150,[[191,[[191,[[191,[191]]]]]]]],[150,[[191,[[191,[[191,[191]]]]]]]]]],[[150,150]],[[[150,[[191,[[191,[[191,[191]]]]]]]],[191,[[191,[[191,[[191,[191]]]]]]]]]],[[[150,[[191,[[191,[[191,[191]]]]]]]],[191,[[191,[[191,[[191,[191]]]]]]]]]],[150],[[[150,[[192,[[192,[[192,[192]]]]]]]],[150,[[192,[[192,[[192,[192]]]]]]]]]],[[[150,[[192,[[192,[[192,[192]]]]]]]],[192,[[192,[[192,[[192,[192]]]]]]]]]],[[[150,[[192,[[192,[[192,[192]]]]]]]],[150,[[192,[[192,[[192,[192]]]]]]]]]],[[[150,[[192,[[192,[[192,[192]]]]]]]],[192,[[192,[[192,[[192,[192]]]]]]]]]],[90,[[150,[[0,[151,[193,[[0,[151,[193,[[0,[151,[193,[[0,[151,193]]]]]]]]]]]]]]]]]],[90,[[150,[[0,[151,[193,[[0,[151,[193,[[0,[151,[193,[[0,[151,193]]]]]]]]]]]]]]]]]],[[[150,[151]]],[[150,[151]]]],[[]],[[]],[[]],[[[150,[151]]],[[150,[151]]]],[[]],[[16,[4,[52]]],[[46,[167]]]],[[16,[4,[52]]],167],[[]],[[[150,[151]]],[[150,[151]]]],[[[150,[151]]],[[150,[151]]]],[[[150,[172]]],[[4,[137]]]],[[[150,[172]]],[[4,[138]]]],[[[150,[172]]],[[4,[136]]]],[[[150,[172]]],[[4,[88]]]],[[[150,[172]]],[[4,[52]]]],[[[150,[172]]],[[4,[135]]]],[[[150,[172]]],[[4,[155]]]],[2,[[46,[167]]]],[[]],[[]],[[]],[[]],[[]],[[]],[160],[[[150,[151]]],[[150,[151]]]],[[]],[[[150,[151]]],[[150,[151]]]],[[],45],[[],45],[[[150,[172]]],[[4,[134]]]],[[[150,[172]]],[[4,[101]]]],[[[150,[172]]],[[4,[70]]]],[[[150,[172]]],[[4,[106]]]],[[[150,[172]]],[[4,[10]]]],[160,13],[[]],[[[150,[151]]],[[150,[151]]]],[[[150,[151]]],[[150,[151]]]],[[],15],[13,[[15,[176]]]],[13,[[15,[174]]]],[[],15],[167,[[46,[13]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[13,2],[[46,[167]]]],[[159,5],[[46,[167]]]],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[150,[180]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],54],[[],54],[[],54],0,0,0,[[],2],[[],2],0,0,0,0,[[117,117],8],[[117,10,10],46],[10,13],[10,116],0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[10,8],0,0,0,0,[[],10],[[],10],0,0,0,[[],10],0,0,0,0,0,0,[[],10],0,[[],8],0,0,[[]],[116],[[10,10],102],0,0,0,[[],194],[[],[[12,[195]]]],[[],102],[10,[[46,[13]]]],[116,46],0,[[],196],0,0,0,[[],45],0,0,0,[197,54],[198,54],[198,195],[197,54],[[]],[[]],[[]],[[]],[[198,2],[[46,[102]]]],[197,2],[198,2],[[198,198],8],[[197,117,10,10],46],[[198,199],[[46,[102]]]],[[198,200,[4,[117]]]],[197],[[198,17],18],[[]],[[]],[[[43,[[43,[106]]]]],198],[[[43,[[4,[[43,[106]]]]]]],198],[201,198],[[198,10],13],[[198,10],4],[[198,10],116],[[]],[[]],[[198,10],8],[198],[197,10],[198,10],[198,10],0,[198,10],[[197,4]],[197],[[198,[91,[10]]],102],[198,[[46,[[43,[107]]]]]],[[198,10,10],102],[[198,202],[[46,[102]]]],[198,203],[198,194],[198,[[12,[195]]]],[197,102],[[],15],[[],15],[[[204,[195]]],[[46,[198]]]],[[],15],[[],15],[[197,116],46],[[],47],[[],47],[198,196],[198,45],[[]],[[]],[10,197],0,0,0,[205,54],[199,54],[199,195],[199,206],[205,54],[[]],[[]],[[]],[[]],[[199,2],[[46,[102]]]],[205,2],[199,2],[[199,199],8],[[205,117,10,10],46],[199,10],[[199,199],[[46,[102]]]],[[199,200,[4,[117]]]],[205],[[199,17],18],[[]],[206,199],[[]],[[[43,[8]]],199],[[[43,[[4,[8]]]]],199],[203,199],[207,199],[[199,10],13],[[199,10],4],[[199,10],116],[[]],[[]],[[199,10],8],[199],[205,10],[199,10],[199,10],0,[199,10],[[205,4]],[205],[[199,[91,[10]]],102],[199,[[46,[[43,[107]]]]]],[[199,10,10],102],[[199,202],[[46,[102]]]],[199,203],[199,194],[199,[[12,[195]]]],[205,102],[[],15],[[],15],[[[204,[195]]],[[46,[199]]]],[[],15],[[],15],[[205,116],46],[[],47],[[],47],[199,196],[199,45],[[]],[[]],[10,205],0,[208,54],[[]],[[]],[[208,2],[[46,[102]]]],[[208,2],[[46,[102]]]],[208,208],[[]],[208,2],[[208,199],[[46,[102]]]],[[208,199],[[46,[102]]]],[[208,200,[4,[117]]]],[[208,17],18],[[]],[[208,10],13],[208,116],[[208,10],116],[208,102],[[]],[208,8],[[208,10],8],[208,10],0,[208,10],[[102,10],208],[208,10],[208,8],[[208,[91,[10]]],102],[[208,[91,[10]]],102],[208,[[46,[[43,[107]]]]]],[[208,10,10],102],[[208,202],[[46,[102]]]],[[208,202],[[46,[102]]]],[208,194],[208,[[12,[195]]]],[[]],[[],15],[[],15],[[],47],[208,196],0,[208,45],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[117,117],8],0,0,[[]],[[]],[102,[[46,[117]]]],[11,[[46,[11]]]],[102,46],[102,46],[[]],[[]],[[[43,[45]],42],[[46,[102]]]],[[[43,[45]],42],46],[102,54],[[],15],[[167,10],[[46,[102]]]],[[],15],[[[204,[195]]],[[46,[102]]]],[[[91,[194]]],[[46,[[43,[102]]]]]],[[],47],[[]],0,0,0,0,0,0,0,0,0,0,[[209,8]],[209],[209],0,[210,54],[211,54],[211,195],[210,54],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[211,2],[[46,[102]]]],[210,2],[211,2],[[211,211],8],[[210,117,10,10],46],[[211,199],[[46,[102]]]],[[211,200,[4,[117]]]],[210],[209,[[4,[212]]]],[[210,8]],[[211,17],18],[[209,17],18],[[]],[[]],[213,211],[[]],[[]],[[203,2],211],[[211,10],13],[[211,10],4],[[211,10],116],0,[[]],[[]],[[]],[[]],[[]],[[211,10],8],0,0,[211],[210,10],[211,10],[209,10],0,[209],[209],[211,10],[211,214],[10,209],[214,4],0,[211,10],0,[[210,4]],[[210,159],46],[210],[[211,[91,[10]]],102],[211,[[46,[[43,[107]]]]]],[214],[[211,10,10],102],[[211,202],[[46,[102]]]],[211,203],[211,194],[211,[[12,[195]]]],[210,102],[[],15],[[],15],[[],15],[[],15],[[[204,[195]]],[[46,[211]]]],[[],15],[[],15],[[],15],[[],15],[[210,116],46],[[],47],[[],47],[[],47],[[],47],[211,196],0,[211,90],0,[211,45],[[]],[[]],[[]],[[]],[10,210],[[2,10],210],0,0,0,[215,54],[216,54],[215,195],[216,54],[[]],[[]],[[]],[[]],[[215,2],[[46,[102]]]],[215,2],[216,2],[[],216],[[215,215],8],[[216,117,10,10],46],[[215,199],[[46,[102]]]],[[215,200,[4,[117]]]],[[215,17],18],[[]],[217,215],[[]],[[215,10],13],[[215,10],116],[[]],[[]],[[215,10],8],[215,10],[216,10],0,[215,10],[10,215],[215,10],[215,8],[216],[[215,[91,[10]]],102],[[215,[91,[10]]],102],[215,[[46,[[43,[107]]]]]],[[215,10,10],102],[[215,202],[[46,[102]]]],[215,194],[215,[[12,[195]]]],[216,102],[[],15],[[],15],[[[204,[195]]],[[46,[215]]]],[[],15],[[],15],[[216,116],46],[[],47],[[],47],[215,196],[215,45],[[]],[[]],0,0,[2,[[46,[102]]]],0,[199,[[46,[102]]]],0,[[200,[4,[117]]]],0,0,[[[91,[10]]],102],0,[202,[[46,[102]]]],0,0,[[208,200,[4,[208]]]],[[215,200,[4,[215]]]],[[218,200,[4,[218]]]],[[218,[91,[10]]],102],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[118,[219]]],54],[[[220,[219]]],54],[[[118,[219]]],221],[[[220,[219]]],54],[[]],[[]],[[]],[[]],[[]],[[]],[[[118,[219]],2],[[46,[102]]]],[[[118,[219]]],2],[[[220,[219]]],2],[[[118,[219]],[118,[219]]],8],[[[220,[219]],117,10,10],46],[[[118,[219]],199],[[46,[102]]]],[[[118,[219]],200,[4,[117]]]],[[[220,[219]]]],[[[118,[219]],17],18],[221,[[118,[219]]]],[[[43,[4]]],[[118,[219]]]],[[]],[[]],[[]],[203,[[118,[219]]]],[207,[[118,[219]]]],[[[204,[91]]],[[118,[219]]]],[207,[[118,[219]]]],[43,[[118,[219]]]],[[[204,[91]]],[[118,[219]]]],[[[118,[219]],10],13],[[[118,[219]],10],4],[[[118,[219]],10],116],[[[118,[219]],10,10],[[118,[219]]]],[[]],[[]],[[]],[[]],[[[118,[219]],10],8],0,[[[118,[219]]]],[[[118,[219]]],10],[[[220,[219]]],10],[[[118,[219]]],10],0,[221,[[118,[219]]]],[[[222,[219]]],[[4,[4]]]],[[[118,[219]]],10],[[[220,[219]],4]],[[[220,[219]]]],[[[118,[219]],[91,[10]]],102],[[[118,[219]],[91,[10]]],[[118,[219]]]],[[[118,[219]]],[[46,[[43,[107]]]]]],[[[222,[219]]]],[[[118,[219]],10,10],102],[[[118,[219]],202],[[46,[102]]]],[[[118,[219]]],203],[[[118,[219]]],194],[[[118,[219]]],[[12,[195]]]],[[[220,[219]]],102],[[],15],[[],15],[[],15],[[[204,[195]]],[[46,[[118,[219]]]]]],[[[204,[195]]],[[46,[[118,[219]]]]]],[[[204,[195]]],[[46,[[118,[219]]]]]],[[[204,[195]]],[[46,[[118,[219]]]]]],[[[204,[195]]],[[46,[[118,[219]]]]]],[[],15],[[],15],[[],15],[[[220,[219]],116],46],[[],47],[[],47],[[],47],[[[118,[219]]],196],[[[118,[219]]],45],[[]],[[]],[[]],[10,[[220,[219]]]],0,0,0,[223,54],[224,54],[224,195],[223,54],[[]],[[]],[[]],[[]],[[224,2],[[46,[102]]]],[223,2],[224,2],[[224,224],8],[[223,117,10,10],46],[[224,199],[[46,[102]]]],[[224,200,[4,[117]]]],[223],[[224,17],18],[[]],[[[43,[[4,[45]]]]],224],[[[43,[45]]],224],[225,224],[[[43,[[4,[42]]]]],224],[[]],[[[91,[[4,[42]]]]],224],[[[43,[42]]],224],[[[91,[[4,[45]]]]],224],[203,224],[[224,10],13],[[224,10],4],[[224,10],116],[[]],[[]],[[224,10],8],[224],[223,10],[224,10],[224,10],0,[224,10],[[223,4]],[223],[[224,[91,[10]]],102],[224,[[46,[[43,[107]]]]]],[[224,10,10],102],[[224,202],[[46,[102]]]],[224,203],[224,194],[224,[[12,[195]]]],[223,102],[[],15],[[],15],[[[204,[195]]],[[46,[224]]]],[[],15],[[],15],[[223,116],46],[[],47],[[],47],[224,196],[224,45],[[]],[[]],[10,223],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,196],[10,196],[[]],[[]],[[]],[[]],[[226,226],8],[[196,196],8],[[226,17],18],[[196,17],18],[[]],[[]],[203,196],[[]],[[]],[196,8],[196,8],[[196,10],8],0,[196,10],[[],15],[[],15],[[],15],[[],15],[[],47],[[],47],[[]],[[]],0,0,0,0,0],"c":[],"p":[[4,"DataType"],[4,"ConcreteDataType"],[4,"DurationType"],[4,"Option"],[3,"ListType"],[4,"TimeType"],[4,"TimestampType"],[15,"bool"],[4,"Ordering"],[15,"usize"],[8,"MutableVector"],[3,"Box"],[4,"Value"],[8,"Deserializer"],[4,"Result"],[4,"TimeUnit"],[3,"Formatter"],[6,"Result"],[3,"UInt64Type"],[3,"StringType"],[3,"DictionaryType"],[3,"Float32Type"],[3,"DateType"],[3,"UInt8Type"],[4,"IntervalType"],[3,"NullType"],[3,"Int32Type"],[3,"Float64Type"],[3,"Int64Type"],[3,"UInt32Type"],[3,"BinaryType"],[3,"UInt16Type"],[3,"Int8Type"],[3,"Int16Type"],[3,"DateTimeType"],[3,"BooleanType"],[4,"IntervalUnit"],[4,"TimeUnit"],[8,"Hasher"],[4,"IntervalUnit"],[4,"LogicalTypeId"],[15,"str"],[3,"Vec"],[8,"Serializer"],[3,"String"],[6,"Result"],[3,"TypeId"],[3,"DurationSecond"],[3,"DurationMillisecond"],[3,"DurationMicrosecond"],[3,"DurationNanosecond"],[15,"i64"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"ConversionSnafu"],[3,"BadArrayAccessSnafu"],[3,"UnknownVectorSnafu"],[3,"UnsupportedArrowTypeSnafu"],[3,"UnsupportedOperationSnafu"],[3,"InvalidTimestampIndexSnafu"],[3,"CastTypeSnafu"],[3,"UnsupportedDefaultExprSnafu"],[3,"NullDefaultSnafu"],[3,"DefaultValueTypeSnafu"],[3,"DuplicateMetaSnafu"],[3,"ToScalarValueSnafu"],[15,"u64"],[3,"InvalidTimestampPrecisionSnafu"],[3,"DuplicateColumnSnafu"],[3,"TryFromValueSnafu"],[3,"SerializeSnafu"],[8,"Clone"],[3,"DeserializeSnafu"],[3,"ParseSchemaVersionSnafu"],[3,"CastTimeTypeSnafu"],[3,"ArrowComputeSnafu"],[3,"ProjectArrowSchemaSnafu"],[8,"Debug"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"IntervalYearMonth"],[3,"IntervalDayTime"],[3,"IntervalMonthDayNano"],[15,"i32"],[15,"i128"],[8,"Iterator"],[15,"slice"],[3,"SchemaBuilder"],[3,"Schema"],[3,"Schema"],[3,"Arc"],[3,"ColumnSchema"],[3,"FieldsAndIndices"],[3,"HashMap"],[3,"RawSchema"],[6,"DFSchemaRef"],[15,"u32"],[6,"VectorRef"],[4,"ColumnDefaultConstraint"],[6,"Metadata"],[3,"Field"],[15,"u8"],[4,"Value"],[3,"TimeSecond"],[3,"TimeMillisecond"],[3,"TimeMicrosecond"],[3,"TimeNanosecond"],[3,"TimestampSecond"],[3,"TimestampMillisecond"],[3,"TimestampMicrosecond"],[3,"TimestampNanosecond"],[4,"ValueRef"],[8,"Vector"],[3,"PrimitiveVector"],[6,"DataTypeRef"],[8,"Num"],[8,"Default"],[3,"CastOption"],[3,"Date"],[6,"DateVector"],[3,"DurationSecondType"],[3,"DurationMillisecondType"],[3,"DurationMicrosecondType"],[3,"DurationNanosecondType"],[3,"IntervalYearMonthType"],[3,"IntervalDayTimeType"],[3,"IntervalMonthDayNanoType"],[8,"WrapperType"],[3,"OrdPrimitive"],[15,"u16"],[15,"i8"],[15,"i16"],[15,"f32"],[15,"f64"],[8,"PartialEq"],[3,"TimeSecondType"],[3,"TimeMillisecondType"],[3,"TimeNanosecondType"],[3,"TimeMicrosecondType"],[3,"TimestampNanosecondType"],[3,"TimestampSecondType"],[3,"TimestampMillisecondType"],[3,"TimestampMicrosecondType"],[3,"Timestamp"],[8,"FloatConst"],[3,"OrderedFloat"],[8,"Float"],[8,"Signed"],[8,"Add"],[8,"AddAssign"],[15,"isize"],[3,"DateTime"],[3,"Duration"],[3,"Interval"],[3,"ListValue"],[4,"ListValueRef"],[3,"Time"],[4,"FpCategory"],[3,"DictionaryValue"],[8,"Deserialize"],[8,"Div"],[8,"DivAssign"],[4,"ScalarValue"],[8,"LowerExp"],[3,"Error"],[8,"UpperExp"],[8,"Display"],[8,"ToPrimitive"],[8,"NumCast"],[6,"OrderedF64"],[3,"StringBytes"],[6,"OrderedF32"],[3,"Bytes"],[8,"FromPrimitive"],[8,"FromStr"],[8,"Zero"],[8,"Bounded"],[8,"Mul"],[8,"MulAssign"],[8,"Neg"],[8,"One"],[3,"Complex"],[8,"Product"],[8,"Rem"],[8,"RemAssign"],[8,"Serialize"],[8,"Sub"],[8,"SubAssign"],[8,"Sum"],[6,"ArrayRef"],[8,"Array"],[3,"Validity"],[3,"BinaryVectorBuilder"],[3,"BinaryVector"],[3,"BooleanVector"],[6,"BitVec"],[6,"BinaryArray"],[6,"UInt32Vector"],[3,"ArrayData"],[8,"AsRef"],[3,"BooleanVectorBuilder"],[3,"BooleanArray"],[8,"IntoIterator"],[3,"ConstantVector"],[3,"NullBufferBuilder"],[3,"ListVectorBuilder"],[3,"ListVector"],[3,"Buffer"],[6,"ListArray"],[3,"ListIter"],[3,"NullVector"],[3,"NullVectorBuilder"],[3,"NullArray"],[8,"ScalarVector"],[8,"LogicalPrimitiveType"],[3,"PrimitiveVectorBuilder"],[3,"PrimitiveArray"],[3,"PrimitiveIter"],[3,"StringVectorBuilder"],[3,"StringVector"],[6,"StringArray"],[4,"ValidityKind"],[8,"DataType"],[13,"UnsupportedArrowType"],[13,"DuplicateColumn"],[13,"Serialize"],[13,"Deserialize"],[13,"ParseSchemaVersion"],[13,"CastTimeType"],[13,"ArrowCompute"],[13,"ProjectArrowSchema"],[13,"UnsupportedDefaultExpr"],[13,"Conversion"],[13,"BadArrayAccess"],[13,"InvalidTimestampIndex"],[13,"DuplicateMeta"],[13,"UnknownVector"],[13,"UnsupportedOperation"],[13,"CastType"],[13,"NullDefault"],[13,"DefaultValueType"],[13,"ToScalarValue"],[13,"InvalidTimestampPrecision"],[13,"TryFromValue"],[8,"Scalar"],[8,"ScalarRef"],[8,"ScalarVectorBuilder"],[8,"Serializable"],[13,"Indexed"],[13,"Ref"],[3,"Helper"],[8,"VectorOp"],[13,"Slots"],[13,"AllValid"],[13,"AllNull"]]},\
"decimal":{"doc":"","t":"AARRRRDLLLLLLLLLLFLLLLLLLLLMLMLLLLLLLLLLFMNDENDNDNDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMM","n":["decimal128","error","BYTES_TO_OVERFLOW_RUST_DECIMAL","DECIMAL128_DEFAULT_SCALE","DECIMAL128_MAX_PRECISION","DECIMAL128_MAX_SCALE","Decimal128","borrow","borrow_mut","clone","clone_into","default","deserialize","eq","equivalent","fmt","fmt","format_decimal_str","from","from","from","from_str","hash","into","new_unchecked","partial_cmp","precision","precision","scale","scale","serialize","to_owned","to_scalar_value","to_string","try_from","try_from","try_into","try_new","type_id","val","valid_precision_and_scale","value","BigDecimalOutOfRange","BigDecimalOutOfRangeSnafu","Error","InvalidPrecisionOrScale","InvalidPrecisionOrScaleSnafu","ParseBigDecimalStr","ParseBigDecimalStrSnafu","ParseRustDecimalStr","ParseRustDecimalStrSnafu","Result","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","debug_fmt","description","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_error","into_error","into_error","into_error","location_opt","next","provide","raw","raw","reason","source","status_code","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","error","error","location","location","raw","raw","reason","value"],"q":[[0,"decimal"],[2,"decimal::decimal128"],[42,"decimal::error"],[129,"decimal::error::Error"]],"d":["","","The maximum bytes length that an accurate RustDecimal can …","The default scale for Decimal128 values","The maximum precision for Decimal128 values","The maximum scale for Decimal128 values","128bit decimal, using the i128 to represent the decimal.","","","","","","","","","","","Port from arrow-rs, see …","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Create a new Decimal128 from i128, precision and scale.","","Returns the precision of this decimal.","","Returns the scale of this decimal.","","","","Convert to ScalarValue","","","","","","","","check whether precision and scale is valid","","","SNAFU context selector for the <code>Error::BigDecimalOutOfRange</code> …","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ParseBigDecimalStr</code> …","","SNAFU context selector for the <code>Error::ParseRustDecimalStr</code> …","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,21,0,0,21,0,21,0,21,0,0,21,21,21,26,29,30,27,21,26,29,30,27,21,26,27,21,26,29,30,27,26,29,30,27,21,21,26,27,26,29,30,27,21,21,26,29,30,27,21,26,29,30,27,21,26,29,30,27,21,21,21,29,30,27,21,21,26,29,30,27,21,26,29,30,27,21,26,29,30,27,21,26,29,30,27,21,26,37,38,39,40,37,38,40,39],"f":[0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[],1],[2,[[3,[1]]]],[[1,1],4],[[],4],[[1,5],6],[[1,5],6],[[7,8,9],10],[[]],[11,1],[12,1],[7,[[3,[1]]]],[[1,13]],[[]],[[12,14,9],1],[[1,1],[[16,[15]]]],[1,14],0,[1,9],0,[[1,17],3],[[]],[1],[[],10],[[],3],[18,[[3,[1]]]],[[],3],[[12,14,9],[[19,[1]]]],[[],20],[1,12],[[14,9],19],0,0,0,0,0,0,0,0,0,0,0,[21,22],[[],23],[21,[[16,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[[25,[18]]]]],21],[[[27,[[25,[10]]]]],21],[21,[[16,[23]]]],[[[26,[28]]],[[26,[28]]]],[[[29,[28]]],[[29,[28]]]],[[[30,[28]]],[[30,[28]]]],[[[27,[28]]],[[27,[28]]]],[[]],[[]],[[]],[[]],[[21,8,[31,[10]]]],[21,7],[[[26,[[25,[18]]]]],[[3,[21]]]],[[[27,[[25,[10]]]]],[[3,[21]]]],[[[26,[32]],5],6],[[[29,[32]],5],6],[[[30,[32]],5],6],[[[27,[32]],5],6],[[21,5],6],[[21,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[26,[[25,[18]]]]],21],[[[29,[[25,[10]]]]],21],[[[30,[[25,[10]]]]],21],[[[27,[[25,[10]]]]],21],[21,[[16,[33]]]],[21,[[16,[34]]]],[35],0,0,0,[21,[[16,[23]]]],[21,36],[[]],[[]],[[]],[[]],[[],10],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Decimal128"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"str"],[15,"usize"],[15,"i8"],[3,"String"],[3,"Decimal"],[15,"i128"],[8,"Hasher"],[15,"u8"],[4,"Ordering"],[4,"Option"],[8,"Serializer"],[3,"BigDecimal"],[6,"Result"],[3,"TypeId"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"BigDecimalOutOfRangeSnafu"],[3,"InvalidPrecisionOrScaleSnafu"],[8,"Clone"],[3,"ParseRustDecimalStrSnafu"],[3,"ParseBigDecimalStrSnafu"],[3,"Vec"],[8,"Debug"],[3,"Location"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[13,"ParseRustDecimalStr"],[13,"ParseBigDecimalStr"],[13,"BigDecimalOutOfRange"],[13,"InvalidPrecisionOrScale"]]},\
"file_engine":{"doc":"","t":"DLLLLLLLALLLLAAMMLLLLLLLLAAALLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLNDNDNNDDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDLLMLLLLLLLLLLLLLLLLLLLLLLMMMFLLLLLLLLLDLLLLLLLLLLLLAMLLLLLLLLLMLLLLLLLLLDRDLLLLFFFFLLLLLLLLLLFLLLLLLLMMMLLLLLLLLLLLLLLLLMFFFFMMLLLLLLLLLLLLLLDGLLLLLLLLLLMLLMLLLLLLLMLMLLMLLLLLLML","n":["FileOptions","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","config","deref","deref_mut","deserialize","drop","engine","error","file_column_schemas","files","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","manifest","query","region","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","EngineConfig","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","EngineInner","EngineInnerRef","FileRegionEngine","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","exists","from","from","from_subset","from_subset","get_metadata","get_region","handle_close","handle_create","handle_drop","handle_open","handle_query","handle_request","handle_request","init","init","inner","into","into","into_request","into_request","is_in_subset","is_in_subset","name","new","new","object_store","region_disk_usage","region_mutex","regions","role","set_writable","set_writable","state","stop","stop","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BuildBackend","BuildBackendSnafu","BuildCsvConfig","BuildCsvConfigSnafu","BuildStream","BuildStreamAdapter","BuildStreamAdapterSnafu","BuildStreamSnafu","CheckObject","CheckObjectSnafu","CreateDefault","CreateDefaultSnafu","DecodeJson","DecodeJsonSnafu","DeleteRegionManifest","DeleteRegionManifestSnafu","EncodeJson","EncodeJsonSnafu","Error","ExtractColumnFromFilter","ExtractColumnFromFilterSnafu","InvalidMetadata","InvalidMetadataSnafu","LoadRegionManifest","LoadRegionManifestSnafu","ManifestExists","ManifestExistsSnafu","MissingColumnNoDefault","MissingColumnNoDefaultSnafu","MissingRequiredField","MissingRequiredFieldSnafu","ParquetScanPlan","ParquetScanPlanSnafu","ParseFileFormat","ParseFileFormatSnafu","ProjectArrowSchema","ProjectArrowSchemaSnafu","ProjectSchema","ProjectSchemaSnafu","ProjectionOutOfBounds","ProjectionOutOfBoundsSnafu","RegionNotFound","RegionNotFoundSnafu","Result","StoreRegionManifest","StoreRegionManifestSnafu","UnexpectedEngine","UnexpectedEngineSnafu","Unsupported","UnsupportedSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","column_index","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","next","operation","path","path","provide","region_id","region_id","region_id","region_id","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","bounds","column","column","column_index","engine","error","error","error","error","error","error","error","error","error","error","error","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","name","operation","path","path","region_id","region_id","region_id","region_id","source","source","source","source","source","source","FileRegionManifest","borrow","borrow_mut","column_metadatas","compat","compat_mut","compat_ref","decode","delete","deref","deref_mut","deserialize","drop","encode","file_options","fmt","format","from","from_subset","get_option","init","into","into_request","is_in_subset","load","metadata","options","primary_key","region_id","region_manifest_path","serialize","store","to_subset","to_subset_unchecked","try_from","try_into","type_id","url","vzip","FileToScanRegionStream","backfill_column","borrow","borrow_mut","cast_column_type","compat","compat_mut","compat_ref","convert_record_batch","create_default_vector","deref","deref_mut","drop","file_stream","file_stream","from","from_subset","init","into","into_request","into_streaming_request","is_in_subset","new","poll_next","scan_schema","schema","schema_eq","to_subset","to_subset_unchecked","try_from","try_into","try_poll_next","type_id","vzip","CreateScanPlanContext","DEFAULT_BATCH_SIZE","ScanPlanConfig","borrow","borrow","borrow_mut","borrow_mut","build_csv_opener","build_json_opener","build_orc_opener","build_record_batch_stream","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_stream","default","deref","deref","deref_mut","deref_mut","drop","drop","file_schema","files","filters","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","limit","new_csv_stream","new_json_stream","new_orc_stream","new_parquet_stream_with_exec_plan","projection","store","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FileRegion","FileRegionRef","borrow","borrow_mut","compat","compat_mut","compat_ref","create","deref","deref_mut","drop","drop","file_options","filters_pushdown_to_file","fmt","format","from","from_subset","init","into","into_request","is_in_subset","metadata","metadata","open","options","projection_pushdown_to_file","query","region_dir","scan_schema","to_subset","to_subset_unchecked","try_from","try_into","type_id","url","vzip"],"q":[[0,"file_engine"],[36,"file_engine::config"],[71,"file_engine::engine"],[138,"file_engine::error"],[872,"file_engine::error::Error"],[926,"file_engine::manifest"],[965,"file_engine::query"],[999,"file_engine::query::file_stream"],[1068,"file_engine::region"]],"d":["","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Region mutex is used to protect the operations such as …","All regions opened by the engine.","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BuildBackend</code> variant","","SNAFU context selector for the <code>Error::BuildCsvConfig</code> …","","","SNAFU context selector for the <code>Error::BuildStreamAdapter</code> …","SNAFU context selector for the <code>Error::BuildStream</code> variant","","SNAFU context selector for the <code>Error::CheckObject</code> variant","","SNAFU context selector for the <code>Error::CreateDefault</code> variant","","SNAFU context selector for the <code>Error::DecodeJson</code> variant","","SNAFU context selector for the <code>Error::DeleteRegionManifest</code> …","","SNAFU context selector for the <code>Error::EncodeJson</code> variant","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidMetadata</code> …","","SNAFU context selector for the <code>Error::LoadRegionManifest</code> …","","SNAFU context selector for the <code>Error::ManifestExists</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MissingRequiredField</code> …","","SNAFU context selector for the <code>Error::ParquetScanPlan</code> …","","SNAFU context selector for the <code>Error::ParseFileFormat</code> …","","SNAFU context selector for the <code>Error::ProjectArrowSchema</code> …","","SNAFU context selector for the <code>Error::ProjectSchema</code> variant","","SNAFU context selector for the <code>Error::ProjectionOutOfBounds</code>…","","SNAFU context selector for the <code>Error::RegionNotFound</code> …","","","SNAFU context selector for the <code>Error::StoreRegionManifest</code> …","","SNAFU context selector for the <code>Error::UnexpectedEngine</code> …","","SNAFU context selector for the <code>Error::Unsupported</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a RecordBatch from file schema to scan schema.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"if":[0,[[]],[[]],[1,1],[[]],[[],2],[[],2],[[],2],0,[3],[3],[4,[[5,[1]]]],[3],0,0,0,0,[[1,6],7],[[]],[[]],[[]],[[],3],[[]],[[],8],[[],9],0,0,0,[[1,10],5],[[]],[[],11],[[]],[[],5],[[],5],[[],12],[[]],0,[[]],[[]],[13,13],[[]],[[],2],[[],2],[[],2],[[],13],[3],[3],[4,[[5,[13]]]],[3],[[13,13],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[13,6],7],[[]],[[]],[[]],[[],3],[[]],[[],8],[[],9],[[13,10],5],[[]],[[],11],[[]],[[],5],[[],5],[[],12],[[]],0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[[14,15],9],[[]],[[]],[[]],[[]],[[16,15],[[19,[[18,[17]]]]]],[[14,15],[[11,[[21,[20]]]]]],[[14,15,22],[[24,[23]]]],[[14,15,25],[[24,[23]]]],[[14,15,26],[[24,[23]]]],[[14,15,27],[[24,[23]]]],[[16,15,28],[[19,[[18,[17]]]]]],[[16,15,29],[[19,[[18,[17]]]]]],[[14,15,29],[[24,[23]]]],[[],3],[[],3],0,[[]],[[]],[[],8],[[],8],[[],9],[[],9],[16,30],[[13,31],16],[31,14],0,[[16,15],[[19,[[18,[17]]]]]],0,0,[[16,15],[[11,[32]]]],[[16,15,9],[[5,[33]]]],[[14,15,9],24],[[14,15],[[11,[32]]]],[16,[[19,[[18,[17]]]]]],[14,24],[[],11],[[],11],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],12],[[],12],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[34,35],[[],36],[34,[[11,[37]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[40,[[39,[38]]]]],34],[[[41,[[39,[38]]]]],34],[[[42,[[39,[15]]]]],34],[[[43,[[39,[38]]]]],34],[[[44,[[39,[38]]]]],34],[[[45,[[39,[3]],[39,[3]]]]],34],[[[46,[[39,[38]]]]],34],[34,[[11,[36]]]],[[[40,[47]]],[[40,[47]]]],[[[41,[47]]],[[41,[47]]]],[48,48],[[[42,[47]]],[[42,[47]]]],[[[49,[47]]],[[49,[47]]]],[50,50],[51,51],[[[52,[47]]],[[52,[47]]]],[[[53,[47]]],[[53,[47]]]],[[[54,[47]]],[[54,[47]]]],[[[43,[47]]],[[43,[47]]]],[[[44,[47]]],[[44,[47]]]],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[[[45,[47,47]]],[[45,[47,47]]]],[63,63],[[[64,[47]]],[[64,[47]]]],[[[46,[47]]],[[46,[47]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[34,3,[65,[38]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[34,30],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,[[[40,[[39,[38]]]]],[[5,[34]]]],[[[41,[[39,[38]]]]],[[5,[34]]]],[[[42,[[39,[15]]]]],[[5,[34]]]],[[[43,[[39,[38]]]]],[[5,[34]]]],[[[44,[[39,[38]]]]],[[5,[34]]]],[[[45,[[39,[3]],[39,[3]]]]],[[5,[34]]]],[[[46,[[39,[38]]]]],[[5,[34]]]],[[[40,[66]],6],7],[[[41,[66]],6],7],[[48,6],7],[[[42,[66]],6],7],[[[49,[66]],6],7],[[50,6],7],[[51,6],7],[[[52,[66]],6],7],[[[53,[66]],6],7],[[[54,[66]],6],7],[[[43,[66]],6],7],[[[44,[66]],6],7],[[55,6],7],[[56,6],7],[[57,6],7],[[58,6],7],[[59,6],7],[[60,6],7],[[61,6],7],[[62,6],7],[[[45,[66,66]],6],7],[[63,6],7],[[[64,[66]],6],7],[[[46,[66]],6],7],[[34,6],7],[[34,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[40,[[39,[38]]]]],34],[[[41,[[39,[38]]]]],34],[48,34],[[[42,[[39,[15]]]]],34],[[[49,[[39,[38]]]]],34],[50,34],[51,34],[[[52,[[39,[15]]]]],34],[[[53,[[39,[15]]]]],34],[[[54,[[39,[15]]]]],34],[[[43,[[39,[38]]]]],34],[[[44,[[39,[38]]]]],34],[55,34],[56,34],[57,34],[58,34],[59,34],[60,34],[61,34],[62,34],[[[45,[[39,[3]],[39,[3]]]]],34],[63,34],[[[64,[[39,[38]]]]],34],[[[46,[[39,[38]]]]],34],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[34,[[11,[67]]]],0,0,0,[68],0,0,0,0,[34,[[11,[36]]]],[34,69],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[],2],[[],2],[[],2],[[[71,[70]]],[[24,[72]]]],[[15,30,31],24],[3],[3],[4,[[5,[72]]]],[3],[72,[[24,[[65,[70]]]]]],[72,[[24,[1]]]],[[72,6],7],[72,[[24,[73]]]],[[]],[[]],[[72,30],[[24,[38]]]],[[],3],[[]],[[],8],[[],9],[[15,30,31],[[24,[72]]]],[72,[[24,[74]]]],0,0,0,[30,38],[[72,10],5],[[72,30,31],24],[[],11],[[]],[[],5],[[],5],[[],12],[72,[[24,[38]]]],[[]],0,[[75,3],[[77,[76]]]],[[]],[[]],[[76,78],[[77,[76]]]],[[],2],[[],2],[[],2],[[79,80],[[77,[80]]]],[[75,3],[[24,[76]]]],[3],[3],[3],0,0,[[]],[[]],[[],3],[[]],[[],8],[[],8],[[],9],[[81,82],79],[[[19,[79]],83],[[84,[11]]]],0,[79,81],[[79,80],9],[[],11],[[]],[[],5],[[],5],[[19,83],[[84,[[11,[5]]]]]],[[],12],[[]],0,0,0,[[]],[[]],[[]],[[]],[[[21,[85]],86,87],[[24,[88]]]],[[[21,[85]],86,89],[[24,[90]]]],[[[21,[85]],86],[[24,[91]]]],[[[0,[92,93]],[21,[85]],[71,[38]],[11,[[65,[3]]]],[11,[3]]],[[24,[82]]]],[94,94],[86,86],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[73,94,86],[[24,[82]]]],[[],94],[3],[3],[3],[3],[3],[3],0,0,0,[[94,6],7],[[86,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],8],[[],8],[[],9],[[],9],0,[[94,86,87],[[24,[82]]]],[[94,86,89],[[24,[82]]]],[[94,86,95],[[24,[82]]]],[[94,86,96],[[24,[82]]]],0,0,[[]],[[]],[[],11],[[],11],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],12],[[],12],[[]],[[]],0,0,[[]],[[]],[[],2],[[],2],[[],2],[[15,25,31],[[24,[[21,[20]]]]]],[3],[3],[3],[[20,31],24],0,[[20,[71,[97]]],[[24,[[65,[97]]]]]],[[20,6],7],0,[[]],[[]],[[],3],[[]],[[],8],[[],9],[20,74],0,[[15,27,31],[[24,[[21,[20]]]]]],0,[[20,[11,[[65,[3]]]]],[[24,[[11,[[65,[3]]]]]]]],[[20,28],[[24,[82]]]],0,[[20,[11,[[65,[3]]]]],[[24,[81]]]],[[],11],[[]],[[],5],[[],5],[[],12],0,[[]]],"c":[],"p":[[3,"FileOptions"],[3,"Compat"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"Request"],[15,"bool"],[8,"Serializer"],[4,"Option"],[3,"TypeId"],[3,"EngineConfig"],[3,"EngineInner"],[3,"RegionId"],[3,"FileRegionEngine"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"FileRegion"],[3,"Arc"],[3,"RegionCloseRequest"],[4,"Output"],[6,"Result"],[3,"RegionCreateRequest"],[3,"RegionDropRequest"],[3,"RegionOpenRequest"],[3,"ScanRequest"],[4,"RegionRequest"],[15,"str"],[3,"Operator"],[4,"RegionRole"],[3,"BoxedError"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[3,"String"],[8,"Into"],[3,"UnsupportedSnafu"],[3,"UnexpectedEngineSnafu"],[3,"RegionNotFoundSnafu"],[3,"ManifestExistsSnafu"],[3,"MissingRequiredFieldSnafu"],[3,"ProjectionOutOfBoundsSnafu"],[3,"MissingColumnNoDefaultSnafu"],[8,"Clone"],[3,"InvalidMetadataSnafu"],[3,"CheckObjectSnafu"],[3,"EncodeJsonSnafu"],[3,"DecodeJsonSnafu"],[3,"StoreRegionManifestSnafu"],[3,"LoadRegionManifestSnafu"],[3,"DeleteRegionManifestSnafu"],[3,"BuildBackendSnafu"],[3,"BuildCsvConfigSnafu"],[3,"BuildStreamSnafu"],[3,"ProjectArrowSchemaSnafu"],[3,"ProjectSchemaSnafu"],[3,"BuildStreamAdapterSnafu"],[3,"ParseFileFormatSnafu"],[3,"ParquetScanPlanSnafu"],[3,"ExtractColumnFromFilterSnafu"],[3,"CreateDefaultSnafu"],[3,"Vec"],[8,"Debug"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[15,"u8"],[15,"slice"],[3,"FileRegionManifest"],[4,"Format"],[6,"RegionMetadataRef"],[3,"ColumnSchema"],[6,"VectorRef"],[6,"Result"],[4,"ConcreteDataType"],[3,"FileToScanRegionStream"],[3,"RecordBatch"],[6,"SchemaRef"],[6,"SendableRecordBatchStream"],[3,"Context"],[4,"Poll"],[3,"Schema"],[3,"ScanPlanConfig"],[3,"CsvFormat"],[3,"CsvOpener"],[3,"JsonFormat"],[3,"JsonOpener"],[3,"OrcOpener"],[8,"FileOpener"],[8,"Send"],[3,"CreateScanPlanContext"],[3,"OrcFormat"],[3,"ParquetFormat"],[3,"Expr"],[13,"ProjectionOutOfBounds"],[13,"CreateDefault"],[13,"MissingColumnNoDefault"],[13,"UnexpectedEngine"],[13,"CheckObject"],[13,"EncodeJson"],[13,"DecodeJson"],[13,"StoreRegionManifest"],[13,"LoadRegionManifest"],[13,"DeleteRegionManifest"],[13,"BuildCsvConfig"],[13,"BuildStream"],[13,"ProjectArrowSchema"],[13,"ParquetScanPlan"],[13,"ExtractColumnFromFilter"],[13,"Unsupported"],[13,"InvalidMetadata"],[13,"RegionNotFound"],[13,"ManifestExists"],[13,"MissingRequiredField"],[13,"BuildBackend"],[13,"ProjectSchema"],[13,"BuildStreamAdapter"],[13,"ParseFileFormat"]]},\
"frontend":{"doc":"","t":"AAAAAAAANDNDNDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNNDNDNDDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMLLLLLMMMMMMLMMMLLLLLLLLLLLMLDLLLLLLLLLLLLLLLLALLLLLMLLMMMLLLLLLLLLLLLLLADLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIGDDGLLLLLLLMFLLLLLLMLLLLLLLLLLLLLLLALLLLLLMALLLMLLLLLLALAFLMAMLLAAMLMLAKLLMLLLLLLLLLLLLLFLLFRFFFDLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLDDDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLDDDDDDDDMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGADDLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLGGDLLLLLLLLLLLLLLLLLLFLFLLLLLLLLCCCCCCCCAAAAAAAADDLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLDLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLDLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLDLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLMLLLLLLLLDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["error","frontend","heartbeat","instance","metrics","script","server","service_config","Catalog","CatalogSnafu","ColumnNoneDefaultValue","ColumnNoneDefaultValueSnafu","ColumnNotFound","ColumnNotFoundSnafu","ContextValueNotFound","ContextValueNotFoundSnafu","CopyTable","CopyTableSnafu","CreateMetaHeartbeatStream","CreateMetaHeartbeatStreamSnafu","DescribeStatement","DescribeStatementSnafu","EmptyData","EmptyDataSnafu","Error","ExecLogicalPlan","ExecLogicalPlanSnafu","ExecutePromql","ExecutePromqlSnafu","External","ExternalSnafu","FindDatanode","FindDatanodeSnafu","FindTableRoute","FindTableRouteSnafu","HandleHeartbeatResponse","HandleHeartbeatResponseSnafu","IllegalAuthConfig","IllegalAuthConfigSnafu","IllegalPrimaryKeysDef","IllegalPrimaryKeysDefSnafu","IncompleteGrpcRequest","IncompleteGrpcRequestSnafu","Insert","InsertSnafu","InvalidDeleteRequest","InvalidDeleteRequestSnafu","InvalidInsertRequest","InvalidInsertRequestSnafu","InvalidRegionRequest","InvalidRegionRequestSnafu","InvalidSql","InvalidSqlSnafu","InvalidSystemTableDef","InvalidSystemTableDefSnafu","InvalidateTableCache","InvalidateTableCacheSnafu","InvokeRegionServer","InvokeRegionServerSnafu","LeaderNotFound","LeaderNotFoundSnafu","MissingMetasrvOpts","MissingMetasrvOptsSnafu","NotSupported","NotSupportedSnafu","OpenRaftEngineBackend","OpenRaftEngineBackendSnafu","ParseAddr","ParseAddrSnafu","ParseSql","ParseSqlSnafu","Permission","PermissionSnafu","PlanStatement","PlanStatementSnafu","PromStoreRemoteQueryPlan","PromStoreRemoteQueryPlanSnafu","ReadTable","ReadTableSnafu","RequestQuery","RequestQuerySnafu","Result","RuntimeResource","RuntimeResourceSnafu","SchemaExists","SchemaExistsSnafu","ShutdownServer","ShutdownServerSnafu","SqlExecIntercepted","SqlExecInterceptedSnafu","StartMetaClient","StartMetaClientSnafu","StartScriptManager","StartScriptManagerSnafu","StartServer","StartServerSnafu","Table","TableMetadataManager","TableMetadataManagerSnafu","TableNotFound","TableNotFoundSnafu","TableOperation","TableOperationSnafu","TableSnafu","UnsupportedFormat","UnsupportedFormatSnafu","VectorToGrpcColumn","VectorToGrpcColumnSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","addr","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","err_msg","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","feat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","msg","msg","name","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","provide","query","reason","reason","reason","reason","region","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","source","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","table","table_id","table_name","table_name","table_name","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","addr","column","err_msg","err_msg","err_msg","error","feat","format","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","msg","name","query","reason","reason","reason","reason","region","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","table","table_id","table_name","table_name","table_name","table_name","FrontendOptions","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","datanode","default","deref","deref_mut","deserialize","drop","env_list_keys","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","grpc","heartbeat","http","influxdb","init","into","into_request","is_in_subset","lift_into","logging","meta_client","mode","mysql","node_id","opentsdb","or","otlp","postgres","prom_store","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","to_toml_string","try_from","try_into","try_into","type_id","user_provider","vzip","HeartbeatTask","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","handle_response","handler","init","into","into_request","is_in_subset","lift_into","meta_client","new","or","report_interval","resp_handler_executor","retry_interval","sculpt","start","start_handle_resp_stream","start_heartbeat_report","start_with_retry","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","invalidate_table_cache","InvalidateTableCacheHandler","__clone_box","and","borrow","borrow_mut","cache_invalidator","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","handle","init","into","into_request","is_acceptable","is_in_subset","lift_into","new","or","sculpt","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","FrontendInstance","FrontendInstanceRef","Instance","StandaloneDatanodeManager","StatementExecutorRef","__clone_box","and","borrow","borrow_mut","build_servers","catalog_manager","catalog_manager","catalog_manager","check_permission","clone","clone_into","compat","compat_mut","compat_ref","create_meta_client","deleter","deref","deref_mut","do_describe","do_exec_plan","do_promql_query","do_query","do_query","do_query","drop","exec","exec","execute_script","from","from_ref","from_subset","grpc","handle_deletes","handle_inserts","handle_remote_queries","handle_remote_query","handle_row_deletes","handle_row_inserts","heartbeat_task","influxdb","ingest_metrics","init","insert_script","inserter","into","into_request","is_in_subset","is_valid_schema","lift_into","metrics","opentsdb","or","otlp","parse_stmt","plugins","plugins","prom_store","query_engine","query_statement","read","region_query","script","script_executor","sculpt","servers","shutdown","standalone","start","start","statement_executor","statement_executor","subset","to_owned","to_subset","to_subset_unchecked","traces","try_build_standalone_components","try_from","try_into","try_into","try_new_distributed","try_new_distributed_with","try_new_standalone","type_id","validate_param","vzip","write","fill_catalog_and_schema_from_context","SAMPLES_RESPONSE_TYPE","is_supported","negotiate_response_type","to_query_result","FrontendRegionQueryHandler","and","arc","borrow","borrow_mut","compat","compat_mut","compat_ref","datanode_manager","deref","deref_mut","do_get","do_get_inner","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","or","partition_manager","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionInvoker","StandaloneDatanodeManager","StandaloneTableMetadataCreator","TABLE_ID_SEQ","and","and","and","arc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create","datanode","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","handle","handle_inner","handle_query","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","new","or","or","or","region_server","sculpt","sculpt","sculpt","subset","subset","subset","table_id_sequence","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","METRIC_EXEC_PLAN_ELAPSED","METRIC_HANDLE_PROMQL_ELAPSED","METRIC_HANDLE_SCRIPTS_ELAPSED","METRIC_HANDLE_SQL_ELAPSED","METRIC_RUN_SCRIPT_ELAPSED","OTLP_METRICS_ROWS","OTLP_TRACES_ROWS","PROM_STORE_REMOTE_WRITE_SAMPLES","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","and","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","or","or","or","or","or","or","or","or","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FrontendGrpcQueryHandlerRef","python","DummyHandler","ScriptExecutor","and","and","arc","borrow","borrow","borrow_mut","borrow_mut","catalog_manager","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_scripts_table_if_need","create_table_expr","deref","deref","deref_mut","deref_mut","do_query","drop","drop","execute_script","from","from","from_subset","from_subset","grpc_handler","init","init","insert_script","into","into","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","new","or","or","script_manager","sculpt","sculpt","start","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","ServerHandler","ServerHandlers","Services","and","borrow","borrow_mut","build","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","or","parse_addr","sculpt","start_server","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DatanodeOptions","GrpcOptions","InfluxdbOptions","MysqlOptions","OpentsdbOptions","OtlpOptions","PostgresOptions","PromStoreOptions","datanode","grpc","influxdb","mysql","opentsdb","otlp","postgres","prom_store","DatanodeClientOptions","DatanodeOptions","__clone_box","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","connect_timeout","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","or","or","sculpt","sculpt","serialize","serialize","subset","subset","tcp_nodelay","timeout","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","GrpcOptions","__clone_box","addr","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","max_recv_message_size","max_send_message_size","or","runtime_size","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","InfluxdbOptions","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","or","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","MysqlOptions","__clone_box","addr","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","or","reject_no_database","runtime_size","sculpt","serialize","subset","tls","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","OpentsdbOptions","__clone_box","addr","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","or","runtime_size","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","OtlpOptions","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","or","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","PostgresOptions","__clone_box","addr","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","or","runtime_size","sculpt","serialize","subset","tls","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","PromStoreOptions","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","or","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip"],"q":[[0,"frontend"],[8,"frontend::error"],[1827,"frontend::error::Error"],[1925,"frontend::frontend"],[1984,"frontend::heartbeat"],[2027,"frontend::heartbeat::handler"],[2028,"frontend::heartbeat::handler::invalidate_table_cache"],[2064,"frontend::instance"],[2156,"frontend::instance::grpc"],[2157,"frontend::instance::prom_store"],[2161,"frontend::instance::region_query"],[2193,"frontend::instance::standalone"],[2284,"frontend::metrics"],[2516,"frontend::script"],[2518,"frontend::script::python"],[2583,"frontend::server"],[2615,"frontend::service_config"],[2631,"frontend::service_config::datanode"],[2719,"frontend::service_config::grpc"],[2765,"frontend::service_config::influxdb"],[2808,"frontend::service_config::mysql"],[2855,"frontend::service_config::opentsdb"],[2900,"frontend::service_config::otlp"],[2943,"frontend::service_config::postgres"],[2989,"frontend::service_config::prom_store"]],"d":["","","","","","","","","","SNAFU context selector for the <code>Error::Catalog</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ColumnNotFound</code> …","","SNAFU context selector for the <code>Error::ContextValueNotFound</code> …","","SNAFU context selector for the <code>Error::CopyTable</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::DescribeStatement</code> …","","SNAFU context selector for the <code>Error::EmptyData</code> variant","","","SNAFU context selector for the <code>Error::ExecLogicalPlan</code> …","","SNAFU context selector for the <code>Error::ExecutePromql</code> variant","","SNAFU context selector for the <code>Error::External</code> variant","","SNAFU context selector for the <code>Error::FindDatanode</code> variant","","SNAFU context selector for the <code>Error::FindTableRoute</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::IllegalAuthConfig</code> …","","SNAFU context selector for the <code>Error::IllegalPrimaryKeysDef</code>…","","SNAFU context selector for the <code>Error::IncompleteGrpcRequest</code>…","","SNAFU context selector for the <code>Error::Insert</code> variant","","SNAFU context selector for the <code>Error::InvalidDeleteRequest</code> …","","SNAFU context selector for the <code>Error::InvalidInsertRequest</code> …","","SNAFU context selector for the <code>Error::InvalidRegionRequest</code> …","","SNAFU context selector for the <code>Error::InvalidSql</code> variant","","SNAFU context selector for the <code>Error::InvalidSystemTableDef</code>…","","SNAFU context selector for the <code>Error::InvalidateTableCache</code> …","","SNAFU context selector for the <code>Error::InvokeRegionServer</code> …","","SNAFU context selector for the <code>Error::LeaderNotFound</code> …","","SNAFU context selector for the <code>Error::MissingMetasrvOpts</code> …","","SNAFU context selector for the <code>Error::NotSupported</code> variant","","SNAFU context selector for the <code>Error::OpenRaftEngineBackend</code>…","","SNAFU context selector for the <code>Error::ParseAddr</code> variant","","SNAFU context selector for the <code>Error::ParseSql</code> variant","","SNAFU context selector for the <code>Error::Permission</code> variant","","SNAFU context selector for the <code>Error::PlanStatement</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ReadTable</code> variant","","SNAFU context selector for the <code>Error::RequestQuery</code> variant","","","SNAFU context selector for the <code>Error::RuntimeResource</code> …","","SNAFU context selector for the <code>Error::SchemaExists</code> variant","","SNAFU context selector for the <code>Error::ShutdownServer</code> …","","SNAFU context selector for the <code>Error::SqlExecIntercepted</code> …","","SNAFU context selector for the <code>Error::StartMetaClient</code> …","","SNAFU context selector for the <code>Error::StartScriptManager</code> …","","SNAFU context selector for the <code>Error::StartServer</code> variant","","","SNAFU context selector for the <code>Error::TableMetadataManager</code> …","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::TableOperation</code> …","SNAFU context selector for the <code>Error::Table</code> variant","","SNAFU context selector for the <code>Error::UnsupportedFormat</code> …","","SNAFU context selector for the <code>Error::VectorToGrpcColumn</code> …onsume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Negotiating the content type of the remote read response.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Relative to client::region::RegionRequester","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The samples count of Prometheus remote write.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A placeholder for the real gRPC handler. It is temporary …","","","","","","","","","","","","","","","","Create scripts table for the specific catalog if it’s …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,0,4,0,4,0,4,0,4,0,4,0,4,0,4,0,4,4,0,4,0,4,0,0,4,0,4,0,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,41,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,4,4,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,30,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,12,13,18,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,25,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,4,28,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,24,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,21,26,29,20,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,4,53,11,16,17,31,15,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,4,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,23,46,19,49,57,58,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,41,41,42,42,11,11,12,12,13,13,15,15,16,16,17,17,18,18,19,19,43,43,44,44,45,45,46,46,20,20,47,47,21,21,48,48,49,49,50,50,51,51,22,22,23,23,24,24,25,25,52,52,53,53,54,54,55,55,26,26,56,56,57,57,58,58,28,28,59,59,60,60,29,29,30,30,31,31,61,61,62,62,4,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,32,33,34,35,36,37,38,39,41,42,11,12,13,15,16,17,18,19,43,44,45,46,20,47,21,48,49,50,51,22,23,24,25,52,53,54,55,26,56,57,58,28,59,60,29,30,31,61,62,4,179,180,181,182,183,179,184,185,186,187,188,189,190,191,192,193,194,195,196,181,182,197,198,199,183,200,201,202,203,204,205,206,207,208,209,210,211,212,186,213,214,215,216,217,218,219,220,185,221,222,223,180,224,206,217,223,204,214,196,198,199,225,197,187,188,189,190,191,192,193,194,195,200,201,202,203,205,207,208,209,210,213,214,215,216,218,219,220,221,222,224,226,212,203,227,208,219,220,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,0,0,0,0,103,103,103,103,103,103,103,103,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,103,103,103,103,103,103,103,0,103,103,103,103,103,103,103,103,103,103,0,103,0,0,103,103,0,103,103,103,0,0,103,103,103,103,0,168,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,103,103,0,0,0,0,0,0,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,0,0,0,0,149,144,145,144,149,144,145,149,144,145,149,144,145,149,144,145,149,144,145,145,149,149,144,145,149,144,145,149,144,145,149,144,145,149,144,145,144,144,144,149,144,145,149,144,145,149,144,145,149,144,145,149,144,145,145,149,144,145,144,149,144,145,149,144,145,145,149,144,145,149,144,145,149,144,145,149,149,144,144,145,145,149,144,145,149,144,145,0,0,0,0,0,0,0,0,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,153,155,155,156,156,157,157,158,158,159,159,161,161,162,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,153,153,155,155,156,156,157,157,158,158,159,159,161,161,162,162,153,155,156,157,158,159,161,162,153,155,156,157,158,159,161,162,0,0,0,0,163,164,163,163,164,163,164,164,163,164,163,164,163,164,164,164,163,164,163,164,163,163,164,164,163,164,163,164,164,163,164,164,163,164,163,164,163,164,163,164,164,163,164,164,163,164,164,163,164,163,164,163,164,163,164,163,163,164,164,163,164,163,164,0,0,0,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,0,228,0,228,228,228,228,228,228,228,228,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,171,170,171,170,171,170,171,170,170,171,170,171,170,171,170,171,170,171,171,170,171,170,171,170,171,170,171,170,171,170,171,170,170,170,170,170,171,171,171,171,171,170,171,170,171,170,171,170,171,170,171,170,171,170,171,170,171,170,171,170,171,170,171,170,171,170,171,171,171,170,171,170,171,170,171,170,171,170,170,171,171,170,171,170,171,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,0,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,0,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,0,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,0,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,0,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[4,5],[[],6],[4,[[8,[7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[[10,[9]]]]],4],[[[12,[[10,[9]]]]],4],[[[13,[[10,[9]]]]],4],[[[15,[[10,[14]]]]],4],[[[16,[[10,[9]]]]],4],[[[17,[[10,[9]]]]],4],[[[18,[[10,[9]]]]],4],[[[19,[[10,[9]]]]],4],[[[20,[[10,[9]]]]],4],[[[21,[[10,[9]]]]],4],[22,4],[[[23,[[10,[9]]]]],4],[[[24,[[10,[9]]]]],4],[[[25,[[10,[9]]]]],4],[[[26,[[10,[9]]]]],4],[[[28,[[10,[27]]]]],4],[[[29,[[10,[9]]]]],4],[[[30,[[10,[9]]]]],4],[[[31,[[10,[9]]]]],4],[4,[[8,[6]]]],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[[[41,[40]]],[[41,[40]]]],[42,42],[[[11,[40]]],[[11,[40]]]],[[[12,[40]]],[[12,[40]]]],[[[13,[40]]],[[13,[40]]]],[[[15,[40]]],[[15,[40]]]],[[[16,[40]]],[[16,[40]]]],[[[17,[40]]],[[17,[40]]]],[[[18,[40]]],[[18,[40]]]],[[[19,[40]]],[[19,[40]]]],[43,43],[44,44],[45,45],[[[46,[40]]],[[46,[40]]]],[[[20,[40]]],[[20,[40]]]],[47,47],[[[21,[40]]],[[21,[40]]]],[48,48],[[[49,[40]]],[[49,[40]]]],[50,50],[51,51],[22,22],[[[23,[40]]],[[23,[40]]]],[[[24,[40]]],[[24,[40]]]],[[[25,[40]]],[[25,[40]]]],[52,52],[[[53,[40]]],[[53,[40]]]],[54,54],[55,55],[[[26,[40]]],[[26,[40]]]],[56,56],[[[57,[40]]],[[57,[40]]]],[[[58,[40]]],[[58,[40]]]],[[[28,[40]]],[[28,[40]]]],[59,59],[60,60],[[[29,[40]]],[[29,[40]]]],[[[30,[40]]],[[30,[40]]]],[[[31,[40]]],[[31,[40]]]],[61,61],[62,62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[4,64,[65,[9]]]],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[4,66],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],0,0,0,[[[11,[[10,[9]]]]],[[67,[4]]]],[[[12,[[10,[9]]]]],[[67,[4]]]],[[[13,[[10,[9]]]]],[[67,[4]]]],[[[15,[[10,[14]]]]],[[67,[4]]]],[[[16,[[10,[9]]]]],[[67,[4]]]],[[[17,[[10,[9]]]]],[[67,[4]]]],[[[18,[[10,[9]]]]],[[67,[4]]]],[[[19,[[10,[9]]]]],[[67,[4]]]],[[[20,[[10,[9]]]]],[[67,[4]]]],[[[21,[[10,[9]]]]],[[67,[4]]]],[22,[[67,[4]]]],[[[23,[[10,[9]]]]],[[67,[4]]]],[[[24,[[10,[9]]]]],[[67,[4]]]],[[[25,[[10,[9]]]]],[[67,[4]]]],[[[26,[[10,[9]]]]],[[67,[4]]]],[[[28,[[10,[27]]]]],[[67,[4]]]],[[[29,[[10,[9]]]]],[[67,[4]]]],[[[30,[[10,[9]]]]],[[67,[4]]]],[[[31,[[10,[9]]]]],[[67,[4]]]],0,[[32,68],69],[[33,68],69],[[34,68],69],[[35,68],69],[[36,68],69],[[37,68],69],[[38,68],69],[[39,68],69],[[[41,[70]],68],69],[[42,68],69],[[[11,[70]],68],69],[[[12,[70]],68],69],[[[13,[70]],68],69],[[[15,[70]],68],69],[[[16,[70]],68],69],[[[17,[70]],68],69],[[[18,[70]],68],69],[[[19,[70]],68],69],[[43,68],69],[[44,68],69],[[45,68],69],[[[46,[70]],68],69],[[[20,[70]],68],69],[[47,68],69],[[[21,[70]],68],69],[[48,68],69],[[[49,[70]],68],69],[[50,68],69],[[51,68],69],[[22,68],69],[[[23,[70]],68],69],[[[24,[70]],68],69],[[[25,[70]],68],69],[[52,68],69],[[[53,[70]],68],69],[[54,68],69],[[55,68],69],[[[26,[70]],68],69],[[56,68],69],[[[57,[70]],68],69],[[[58,[70]],68],69],[[[28,[70]],68],69],[[59,68],69],[[60,68],69],[[[29,[70]],68],69],[[[30,[70]],68],69],[[[31,[70]],68],69],[[61,68],69],[[62,68],69],[[4,68],69],[[4,68],69],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,4],[33,4],[34,4],[35,4],[36,4],[37,4],[38,4],[39,4],[[[41,[[10,[9]]]]],4],[42,4],[[[11,[[10,[9]]]]],4],[[[12,[[10,[9]]]]],4],[[[13,[[10,[9]]]]],4],[[[15,[[10,[14]]]]],4],[[[16,[[10,[9]]]]],4],[[[17,[[10,[9]]]]],4],[[[18,[[10,[9]]]]],4],[[[19,[[10,[9]]]]],4],[43,4],[44,4],[45,4],[[[46,[[10,[72]]]]],4],[[[20,[[10,[9]]]]],4],[47,4],[[[21,[[10,[9]]]]],4],[48,4],[[[49,[[10,[9]]]]],4],[50,4],[51,4],[22,4],[[[23,[[10,[9]]]]],4],[[[24,[[10,[9]]]]],4],[[[25,[[10,[9]]]]],4],[52,4],[[[53,[[10,[9]]]]],4],[54,4],[55,4],[[[26,[[10,[9]]]]],4],[56,4],[[[57,[[10,[9]]]]],4],[[[58,[[10,[9]]]]],4],[[[28,[[10,[27]]]]],4],[59,4],[60,4],[[[29,[[10,[9]]]]],4],[[[30,[[10,[9]]]]],4],[[[31,[[10,[9]]]]],4],[61,4],[62,4],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[4,[[8,[75]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[77],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[8,[6]]]],[4,78],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[2,[[3,[2,2]]]],[[]],[[]],[81,81],[[]],[[],63],[[],63],[[],63],0,[[],81],[64],[64],[82,[[67,[81]]]],[64],[[],[[8,[[83,[66]]]]]],[[81,81],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[81,68],69],[[]],[[]],[[]],0,0,0,0,[[],64],[[]],[[],73],[[],74],[[]],0,0,0,0,0,0,[2,[[76,[2,2]]]],0,0,0,[[]],[[81,84],67],[[],[[67,[79]]]],[[]],[[],8],[[]],[81,9],[[],67],[[],67],[[],67],[[],80],0,[[]],0,[1],[2,[[3,[2,2]]]],[[]],[[]],[85,85],[[]],[[],63],[[],63],[[],63],[64],[64],[64],[[]],[[]],[[]],[[85,86],87],0,[[],64],[[]],[[],73],[[],74],[[]],0,[[[89,[88]],90,91],85],[2,[[76,[2,2]]]],0,0,0,[[]],[85,87],[[85,92,93]],[[85,94,[96,[95]]]],[[85,97]],[[],[[67,[79]]]],[[]],[[],8],[[]],[[],67],[[],67],[[],67],[[],80],[[]],0,0,[1],[2,[[3,[2,2]]]],[[]],[[]],0,[98,98],[[]],[[],63],[[],63],[[],63],[64],[64],[64],[[]],[[]],[[]],[[98,86],[[101,[[100,[99]]]]]],[[],64],[[]],[[],73],[[98,86],74],[[],74],[[]],[102,98],[2,[[76,[2,2]]]],[[]],[[],[[67,[79]]]],[[]],[[],8],[[]],[[],67],[[],67],[[],67],[[],80],[[]],0,0,0,0,0,[1],[2,[[3,[2,2]]]],[[]],[[]],[[103,81],87],[103,104],[103,104],0,[[105,106,107],87],[103,103],[[]],[[],63],[[],63],[[],63],[81,[[87,[[89,[88]]]]]],0,[64],[64],[[103,106,107],[[101,[[100,[99]]]]]],[[103,108,107],[[101,[[100,[99]]]]]],[[103,109,107],[[101,[[100,[99]]]]]],[[103,66,107],[[101,[[100,[99]]]]]],[[103,110,107],[[101,[[100,[99]]]]]],[[103,109,107],[[101,[[100,[99]]]]]],[64],[[103,111,107],[[101,[[100,[99]]]]]],[[103,[65,[112]],107],[[101,[[100,[99]]]]]],[[103,107,66,[113,[9,9]]],[[101,[[100,[99]]]]]],[[]],[[]],[[]],0,[[103,114,107],[[87,[115]]]],[[103,116,107],[[87,[115]]]],[[103,107,[83,[117]]],[[118,[65]]]],[[103,107,66,66,66,117],[[87,[115]]]],[[103,119,107],[[87,[115]]]],[[103,120,107],[[87,[115]]]],0,0,[[103,121],[[101,[[100,[99]]]]]],[[],64],[[103,107,66,66],[[101,[[100,[99]]]]]],0,[[]],[[],73],[[],74],[[103,66,66],[[101,[[100,[99]]]]]],[[]],[[103,122,107],[[101,[[100,[99]]]]]],0,[2,[[76,[2,2]]]],0,[[66,123],[[87,[[65,[106]]]]]],[103,105],0,0,0,[[103,106,107],[[87,[115]]]],[[103,124,107],[[101,[[100,[99]]]]]],0,0,0,[[]],0,[103,87],0,[[],[[101,[[100,[99]]]]]],[103,[[101,[[100,[99]]]]]],[103,[[89,[125]]]],0,[[],[[67,[79]]]],[[]],[[],8],[[]],[[103,126,107],[[101,[[100,[99]]]]]],[[9,127,128],87],[[],67],[[],67],[[],67],[[81,105],[[87,[103]]]],[[[89,[88]],[89,[129]],105,81],[[87,[103]]]],[[130,131,104,105,132],[[87,[103]]]],[[],80],[[133,107],87],[[]],[[103,134,107],[[101,[[100,[99]]]]]],[[135,107]],0,[136,74],[[[83,[136]]],[[118,[137]]]],[[66,115],[[118,[138]]]],0,[2,[[3,[2,2]]]],[[139,140],[[89,[141]]]],[[]],[[]],[[],63],[[],63],[[],63],0,[64],[64],[[141,142],[[101,[[100,[99]]]]]],[[141,142],[[87,[143]]]],[64],[[]],[[]],[[],64],[[]],[[],73],[[],74],[[]],[2,[[76,[2,2]]]],0,[[]],[[],[[67,[79]]]],[[],8],[[]],[[],67],[[],67],[[],67],[[],80],[[]],0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[132,[[89,[144]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[145,146,147,[83,[148]]],[[101,[[100,[99]]]]]],[[149,150],[[101,[[100,[99]]]]]],[64],[64],[64],[64],[64],[64],[64],[64],[64],[[]],[[]],[[]],[[]],[[]],[[]],[[144,151],[[101,[[100,[99]]]]]],[[144,151],[[87,[152]]]],[[144,142],[[101,[[100,[99]]]]]],[[],64],[[],64],[[],64],[[]],[[]],[[]],[[],73],[[],73],[[],73],[[],74],[[],74],[[],74],[[]],[[]],[[]],[130,145],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],0,[[]],[[]],[[]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],0,[[],8],[[],8],[[],8],[[]],[[]],[[]],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],80],[[],80],[[],80],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[64],[153,154],[155,154],[64],[156,154],[64],[64],[157,154],[64],[158,154],[159,160],[64],[161,160],[64],[162,160],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],73],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[],[[89,[163]]]],[[]],[[]],[[]],[[]],0,[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[164,66],87],[165,[[87,[166]]]],[64],[64],[64],[64],[[163,110,107],[[101,[[100,[99]]]]]],[64],[64],[[164,107,66,[113,[9,9]]],[[118,[115]]]],[[]],[[]],[[]],[[]],0,[[],64],[[],64],[[164,107,66,66],118],[[]],[[]],[[],73],[[],73],[[],74],[[],74],[[]],[[]],[[104,167],[[87,[164]]]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],0,[[]],[[]],[[164,103],87],[[],[[67,[79]]]],[[],[[67,[79]]]],[[],8],[[],8],[[]],[[]],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],80],[[],80],[[]],[[]],0,0,0,[2,[[3,[2,2]]]],[[]],[[]],[[81,[89,[168]],105],[[87,[[113,[9]]]]]],[[],63],[[],63],[[],63],[64],[64],[64],[[]],[[]],[[],64],[[]],[[],73],[[],74],[[]],[2,[[76,[2,2]]]],[66,[[87,[169]]]],[[]],[[],[[118,[[8,[169]]]]]],[[],[[67,[79]]]],[[],8],[[]],[[],67],[[],67],[[],67],[[],80],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],0,[170,170],[171,171],[[]],[[]],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],0,[[],170],[[],171],[64],[64],[64],[64],[82,[[67,[170]]]],[82,[[67,[171]]]],[64],[64],[[170,170],74],[[171,171],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[170,68],69],[[171,68],69],[[]],[[]],[[]],[[]],[[]],[[]],[[],64],[[],64],[[]],[[]],[[],73],[[],73],[[],74],[[],74],[[]],[[]],[2,[[76,[2,2]]]],[2,[[76,[2,2]]]],[[]],[[]],[[170,84],67],[[171,84],67],[[],[[67,[79]]]],[[],[[67,[79]]]],0,0,[[]],[[]],[[],8],[[],8],[[]],[[]],[[],67],[[],67],[[],67],[[],67],[[],67],[[],67],[[],80],[[],80],[[]],[[]],0,[1],0,[2,[[3,[2,2]]]],[[]],[[]],[172,172],[[]],[[],63],[[],63],[[],63],[[],172],[64],[64],[82,[[67,[172]]]],[64],[[172,172],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[172,68],69],[[]],[[]],[[]],[[],64],[[]],[[],73],[[],74],[[]],0,0,[2,[[76,[2,2]]]],0,[[]],[[172,84],67],[[],[[67,[79]]]],[[]],[[],8],[[]],[[],67],[[],67],[[],67],[[],80],[[]],0,[1],[2,[[3,[2,2]]]],[[]],[[]],[173,173],[[]],[[],63],[[],63],[[],63],[[],173],[64],[64],[82,[[67,[173]]]],[64],0,[[173,173],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[173,68],69],[[]],[[]],[[]],[[],64],[[]],[[],73],[[],74],[[]],[2,[[76,[2,2]]]],[[]],[[173,84],67],[[],[[67,[79]]]],[[]],[[],8],[[]],[[],67],[[],67],[[],67],[[],80],[[]],0,[1],0,[2,[[3,[2,2]]]],[[]],[[]],[174,174],[[]],[[],63],[[],63],[[],63],[[],174],[64],[64],[82,[[67,[174]]]],[64],0,[[174,174],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[174,68],69],[[]],[[]],[[]],[[],64],[[]],[[],73],[[],74],[[]],[2,[[76,[2,2]]]],0,0,[[]],[[174,84],67],[[],[[67,[79]]]],0,[[]],[[],8],[[]],[[],67],[[],67],[[],67],[[],80],[[]],0,[1],0,[2,[[3,[2,2]]]],[[]],[[]],[175,175],[[]],[[],63],[[],63],[[],63],[[],175],[64],[64],[82,[[67,[175]]]],[64],0,[[175,175],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[175,68],69],[[]],[[]],[[]],[[],64],[[]],[[],73],[[],74],[[]],[2,[[76,[2,2]]]],0,[[]],[[175,84],67],[[],[[67,[79]]]],[[]],[[],8],[[]],[[],67],[[],67],[[],67],[[],80],[[]],0,[1],[2,[[3,[2,2]]]],[[]],[[]],[176,176],[[]],[[],63],[[],63],[[],63],[[],176],[64],[64],[82,[[67,[176]]]],[64],0,[[176,176],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[176,68],69],[[]],[[]],[[]],[[],64],[[]],[[],73],[[],74],[[]],[2,[[76,[2,2]]]],[[]],[[176,84],67],[[],[[67,[79]]]],[[]],[[],8],[[]],[[],67],[[],67],[[],67],[[],80],[[]],0,[1],0,[2,[[3,[2,2]]]],[[]],[[]],[177,177],[[]],[[],63],[[],63],[[],63],[[],177],[64],[64],[82,[[67,[177]]]],[64],0,[[177,177],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[177,68],69],[[]],[[]],[[]],[[],64],[[]],[[],73],[[],74],[[]],[2,[[76,[2,2]]]],0,[[]],[[177,84],67],[[],[[67,[79]]]],0,[[]],[[],8],[[]],[[],67],[[],67],[[],67],[[],80],[[]],0,[1],[2,[[3,[2,2]]]],[[]],[[]],[178,178],[[]],[[],63],[[],63],[[],63],[[],178],[64],[64],[82,[[67,[178]]]],[64],0,[[178,178],74],[[],74],[[],74],[[],74],[[],74],[[],74],[[178,68],69],[[]],[[]],[[]],[[],64],[[]],[[],73],[[],74],[[]],[2,[[76,[2,2]]]],[[]],[[178,84],67],[[],[[67,[79]]]],[[]],[[],8],[[]],[[],67],[[],67],[[],67],[[],80],[[]]],"c":[],"p":[[3,"Private"],[8,"Policy"],[3,"And"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[4,"Option"],[3,"String"],[8,"Into"],[3,"VectorToGrpcColumnSnafu"],[3,"InvalidSqlSnafu"],[3,"IncompleteGrpcRequestSnafu"],[6,"RegionNumber"],[3,"FindDatanodeSnafu"],[3,"InvalidInsertRequestSnafu"],[3,"InvalidDeleteRequestSnafu"],[3,"InvalidSystemTableDefSnafu"],[3,"TableNotFoundSnafu"],[3,"SchemaExistsSnafu"],[3,"ColumnNotFoundSnafu"],[3,"MissingMetasrvOptsSnafu"],[3,"LeaderNotFoundSnafu"],[3,"ContextValueNotFoundSnafu"],[3,"NotSupportedSnafu"],[3,"IllegalPrimaryKeysDefSnafu"],[4,"Format"],[3,"UnsupportedFormatSnafu"],[3,"EmptyDataSnafu"],[3,"ColumnNoneDefaultValueSnafu"],[3,"InvalidRegionRequestSnafu"],[3,"InvalidateTableCacheSnafu"],[3,"OpenRaftEngineBackendSnafu"],[3,"HandleHeartbeatResponseSnafu"],[3,"ExternalSnafu"],[3,"RequestQuerySnafu"],[3,"RuntimeResourceSnafu"],[3,"StartServerSnafu"],[3,"ShutdownServerSnafu"],[8,"Clone"],[3,"ParseAddrSnafu"],[3,"ParseSqlSnafu"],[3,"CatalogSnafu"],[3,"StartMetaClientSnafu"],[3,"CreateMetaHeartbeatStreamSnafu"],[3,"FindTableRouteSnafu"],[3,"TableSnafu"],[3,"PlanStatementSnafu"],[3,"ReadTableSnafu"],[3,"ExecLogicalPlanSnafu"],[3,"InvokeRegionServerSnafu"],[3,"SqlExecInterceptedSnafu"],[3,"ExecutePromqlSnafu"],[3,"PromStoreRemoteQueryPlanSnafu"],[3,"DescribeStatementSnafu"],[3,"StartScriptManagerSnafu"],[3,"CopyTableSnafu"],[3,"InsertSnafu"],[3,"TableMetadataManagerSnafu"],[3,"PermissionSnafu"],[3,"TableOperationSnafu"],[3,"IllegalAuthConfigSnafu"],[3,"Compat"],[15,"usize"],[3,"Vec"],[15,"str"],[4,"Result"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"Error"],[15,"u32"],[3,"Request"],[15,"bool"],[8,"StackError"],[3,"Or"],[3,"Demand"],[4,"StatusCode"],[4,"CNil"],[3,"TypeId"],[3,"FrontendOptions"],[8,"Deserializer"],[15,"slice"],[8,"Serializer"],[3,"HeartbeatTask"],[3,"HeartbeatResponseHandlerContext"],[6,"Result"],[3,"MetaClient"],[3,"Arc"],[3,"HeartbeatOptions"],[6,"HeartbeatResponseHandlerExecutorRef"],[3,"HeartbeatStream"],[6,"MailboxRef"],[3,"HeartbeatSender"],[6,"OutgoingMessage"],[3,"Receiver"],[3,"Duration"],[3,"InvalidateTableCacheHandler"],[8,"Future"],[3,"Box"],[3,"Pin"],[6,"CacheInvalidatorRef"],[3,"Instance"],[6,"CatalogManagerRef"],[3,"Plugins"],[4,"Statement"],[6,"QueryContextRef"],[4,"LogicalPlan"],[3,"PromQuery"],[4,"Request"],[3,"InfluxdbRequest"],[3,"DataPoint"],[3,"HashMap"],[3,"DeleteRequests"],[4,"Output"],[3,"InsertRequests"],[3,"Query"],[6,"Result"],[3,"RowDeleteRequests"],[3,"RowInsertRequests"],[3,"Metrics"],[3,"ExportMetricsServiceRequest"],[8,"Dialect"],[3,"ReadRequest"],[3,"StatementExecutor"],[3,"ExportTraceServiceRequest"],[3,"KvBackendConfig"],[3,"ProcedureConfig"],[3,"DatanodeClients"],[6,"KvBackendRef"],[6,"ProcedureManagerRef"],[3,"RegionServer"],[3,"ObjectName"],[3,"WriteRequest"],[4,"Expr"],[15,"i32"],[4,"ResponseType"],[3,"QueryResult"],[6,"PartitionRuleManagerRef"],[6,"DatanodeManagerRef"],[3,"FrontendRegionQueryHandler"],[3,"QueryRequest"],[6,"SendableRecordBatchStream"],[3,"RegionInvoker"],[3,"StandaloneTableMetadataCreator"],[3,"TableMetadataAllocatorContext"],[3,"RawTableInfo"],[3,"Partition"],[3,"StandaloneDatanodeManager"],[3,"Peer"],[3,"RegionRequest"],[3,"RegionResponse"],[3,"METRIC_HANDLE_SQL_ELAPSED"],[3,"Histogram"],[3,"METRIC_HANDLE_PROMQL_ELAPSED"],[3,"METRIC_EXEC_PLAN_ELAPSED"],[3,"METRIC_HANDLE_SCRIPTS_ELAPSED"],[3,"METRIC_RUN_SCRIPT_ELAPSED"],[3,"PROM_STORE_REMOTE_WRITE_SAMPLES"],[6,"IntCounter"],[3,"OTLP_METRICS_ROWS"],[3,"OTLP_TRACES_ROWS"],[3,"DummyHandler"],[3,"ScriptExecutor"],[3,"CreateTableRequest"],[3,"CreateTableExpr"],[6,"QueryEngineRef"],[8,"FrontendInstance"],[4,"SocketAddr"],[3,"DatanodeOptions"],[3,"DatanodeClientOptions"],[3,"GrpcOptions"],[3,"InfluxdbOptions"],[3,"MysqlOptions"],[3,"OpentsdbOptions"],[3,"OtlpOptions"],[3,"PostgresOptions"],[3,"PromStoreOptions"],[13,"ParseAddr"],[13,"ColumnNoneDefaultValue"],[13,"InvalidSql"],[13,"IncompleteGrpcRequest"],[13,"InvalidSystemTableDef"],[13,"NotSupported"],[13,"UnsupportedFormat"],[13,"ContextValueNotFound"],[13,"InvalidateTableCache"],[13,"OpenRaftEngineBackend"],[13,"HandleHeartbeatResponse"],[13,"External"],[13,"RequestQuery"],[13,"RuntimeResource"],[13,"StartServer"],[13,"ShutdownServer"],[13,"ParseSql"],[13,"VectorToGrpcColumn"],[13,"FindDatanode"],[13,"InvalidInsertRequest"],[13,"InvalidDeleteRequest"],[13,"Catalog"],[13,"StartMetaClient"],[13,"CreateMetaHeartbeatStream"],[13,"FindTableRoute"],[13,"SchemaExists"],[13,"Table"],[13,"ColumnNotFound"],[13,"PlanStatement"],[13,"ReadTable"],[13,"ExecLogicalPlan"],[13,"InvokeRegionServer"],[13,"MissingMetasrvOpts"],[13,"LeaderNotFound"],[13,"SqlExecIntercepted"],[13,"ExecutePromql"],[13,"PromStoreRemoteQueryPlan"],[13,"DescribeStatement"],[13,"IllegalPrimaryKeysDef"],[13,"StartScriptManager"],[13,"CopyTable"],[13,"Insert"],[13,"TableMetadataManager"],[13,"Permission"],[13,"EmptyData"],[13,"TableOperation"],[13,"InvalidRegionRequest"],[13,"IllegalAuthConfig"],[13,"TableNotFound"],[3,"Services"]]},\
"greptime":{"doc":"Upcoming Event","t":"HDENNDNNNNNNNNEMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLMFMFLLLLFLLLLFLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ALLOC","APP_VERSION","Application","Cli","Cli","Command","Datanode","Datanode","Frontend","Frontend","Metasrv","Metasrv","Standalone","Standalone","SubCommand","__private_field","and","and","and","and","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_subset","from_subset","from_subset","from_subset","full_version","has_subcommand","init","init","init","init","into","into","into","into","into_app","into_app","into_app_for_update","into_app_for_update","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","load_options","load_options","log_dir","log_env_flags","log_level","main","or","or","or","or","print_version","sculpt","sculpt","sculpt","sculpt","short_version","start","stop","subcmd","subset","subset","subset","subset","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","top_level_options","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip"],"q":[[0,"greptime"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,6,8,0,6,8,6,8,6,8,6,8,0,11,6,11,4,8,4,4,8,8,6,11,4,8,6,11,4,8,4,8,6,11,4,8,6,11,4,8,6,11,4,8,6,11,11,4,8,6,11,4,8,6,11,4,8,8,6,11,4,8,4,8,4,8,6,11,4,8,0,8,6,11,4,8,6,11,4,8,4,8,4,8,6,11,4,8,6,11,4,8,6,11,4,8,4,8,4,0,4,0,6,11,4,8,0,6,11,4,8,0,6,6,4,6,11,4,8,8,6,11,4,8,6,11,4,8,4,6,11,4,8,6,6,11,11,4,4,8,8,6,11,4,8,4,8,4,8,6,11,4,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[3,3],[3,3],[3,3],[3,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,5],[[7,[6]]]],[[8,5],[[7,[6]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[10],[10],[11,12],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[[8,13],14],[[]],[[]],[[]],[[]],[15,[[17,[4,16]]]],[15,[[17,[8,16]]]],[15,[[17,[4,16]]]],[15,[[17,[8,16]]]],[[]],[[]],[[]],[[]],[[],18],[18,19],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],20],[[],20],[[],20],[[],20],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[4,[[7,[5]]]],[[8,21],[[7,[5]]]],0,[[]],0,[[],7],[1,[[22,[1,1]]]],[1,[[22,[1,1]]]],[1,[[22,[1,1]]]],[1,[[22,[1,1]]]],[[],18],[[]],[[]],[[]],[[]],[[],18],[6,7],[6,7],0,[[],[[17,[23]]]],[[],[[17,[23]]]],[[],[[17,[23]]]],[[],[[17,[23]]]],[[],24],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[4,21],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],26],[[],26],[[],26],[[],26],[[4,15],[[17,[16]]]],[[8,15],[[17,[16]]]],[[4,15],[[17,[16]]]],[[8,15],[[17,[16]]]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Policy"],[3,"And"],[6,"Command"],[3,"Command"],[4,"Options"],[4,"Application"],[6,"Result"],[4,"SubCommand"],[3,"Compat"],[15,"usize"],[3,"APP_VERSION"],[6,"IntGaugeVec"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Error"],[4,"Result"],[15,"str"],[15,"bool"],[3,"Request"],[3,"TopLevelOptions"],[3,"Or"],[4,"CNil"],[3,"String"],[4,"Option"],[3,"TypeId"]]},\
"log_store":{"doc":"","t":"DAAAANDENDNDNDNDNDGNDNDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDAMLLMLLLLLMLLLLMLMMLLMLLLLLLLAMMMAMMMMMMLLMMLLLLLLLDRLLLLLLLLLLLLLLLMFFFLLLLLLLLLLLLLLLLLLLDRDDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLADDDLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFHHLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLAF","n":["NoopLogStore","error","noop","raft_engine","test_util","AddEntryLogBatch","AddEntryLogBatchSnafu","Error","FetchEntry","FetchEntrySnafu","IllegalNamespace","IllegalNamespaceSnafu","IllegalState","IllegalStateSnafu","OverrideCompactedEntry","OverrideCompactedEntrySnafu","RaftEngine","RaftEngineSnafu","Result","StartGcTask","StartGcTaskSnafu","StopGcTask","StopGcTaskSnafu","as_any","as_error_source","attempt_index","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","fail","fail","fail","first_index","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","max_size","namespace","next","ns","ns","provide","source","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","attempt_index","end","error","error","error","first_index","location","location","location","location","location","location","location","location","max_size","namespace","ns","ns","source","source","start","EntryImpl","NamespaceImpl","NoopLogStore","append","append_batch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create_namespace","data","default","default","default","delete_namespace","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","get_hash","hash","id","id","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","list_namespaces","namespace","namespace","obsolete","read","stop","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Config","RaftEngineBackend","backend","batch_compression_threshold","borrow","borrow_mut","bytes_per_sync","clone","clone_into","compat","compat_mut","compat_ref","compression_level","default","deref","deref_mut","deserialize","dir","drop","enable_log_recycle","engine","eq","fmt","format_version","from","from_ref","from_subset","init","into","into_request","is_in_subset","log_store","memory_limit","prefill_for_recycle","prefill_limit","protos","purge_rewrite_garbage_ratio","purge_rewrite_threshold","purge_threshold","recovery_mode","recovery_read_block_size","recovery_threads","sanitize","serialize","spill_dir","target_file_size","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","RaftEngineBackend","SYSTEM_NAMESPACE","as_any","batch_delete","batch_get","batch_put","borrow","borrow_mut","compare_and_put","compat","compat_mut","compat_ref","delete","delete_range","deref","deref_mut","drop","engine","engine_delete","engine_get","engine_put","exists","from","from_subset","get","init","into","into_request","is_in_subset","name","put","range","to_subset","to_subset_unchecked","try_from","try_into","try_open_with_cfg","txn","type_id","vzip","MessageType","NAMESPACE_PREFIX","PurgeExpiredFilesFunction","RaftEngineLogStore","append","append_batch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","check_entry","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","config","create_namespace","delete_namespace","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","engine","engine","entry","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","gc_task","index","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","list_namespaces","name","namespace","obsolete","read","span","start","started","stop","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_new","type_id","type_id","type_id","vzip","vzip","vzip","logstore","EntryImpl","LogStoreState","NamespaceImpl","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cached_size","cached_size","cached_size","clear","clear","clear","clear_data","clear_id","clear_id","clear_last_index","clear_namespace_id","clone","clone","clone","clone_into","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compute_size","compute_size","compute_size","create","data","data","default","default","default","default","default","default","default_instance","default_instance","default_instance","deref","deref","deref","deref_mut","deref_mut","deref_mut","descriptor","descriptor","descriptor","descriptor_static","descriptor_static","descriptor_static","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","file_descriptor_proto","file_descriptor_proto_data","file_descriptor_proto_lazy","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","get_cached_size","get_cached_size","get_cached_size","get_data","get_hash","get_id","get_id","get_last_index","get_namespace_id","get_unknown_fields","get_unknown_fields","get_unknown_fields","hash","id","id","id","id","init","init","init","into","into","into","into_any","into_any","into_any","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_initialized","is_initialized","is_initialized","last_index","merge_from","merge_from","merge_from","mut_data","mut_unknown_fields","mut_unknown_fields","mut_unknown_fields","namespace","namespace_id","new","new","new","new","new","new","parse_descriptor_proto","set_data","set_id","set_id","set_last_index","set_namespace_id","take_data","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unknown_fields","unknown_fields","unknown_fields","vzip","vzip","vzip","with_id","write_to_with_cached_sizes","write_to_with_cached_sizes","write_to_with_cached_sizes","log_store_util","create_tmp_local_file_log_store"],"q":[[0,"log_store"],[5,"log_store::error"],[277,"log_store::error::Error"],[298,"log_store::noop"],[398,"log_store::raft_engine"],[451,"log_store::raft_engine::backend"],[491,"log_store::raft_engine::log_store"],[583,"log_store::raft_engine::protos"],[584,"log_store::raft_engine::protos::logstore"],[767,"log_store::test_util"],[768,"log_store::test_util::log_store_util"]],"d":["A noop log store which only for test","","","","","","SNAFU context selector for the <code>Error::AddEntryLogBatch</code> …","","","SNAFU context selector for the <code>Error::FetchEntry</code> variant","","SNAFU context selector for the <code>Error::IllegalNamespace</code> …","","SNAFU context selector for the <code>Error::IllegalState</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::RaftEngine</code> variant","","","SNAFU context selector for the <code>Error::StartGcTask</code> variant","","SNAFU context selector for the <code>Error::StopGcTask</code> variant","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A noop log store which only for test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","RaftEngine based KvBackend implementation.","KvBackend implementation based on raft_engine::Engine.","Compress a log batch if its size exceeds this value. …","","","Deprecated. Incrementally sync log files after specified …","","","","","","Acceleration factor for LZ4 compression. It can be fine …","","","","","Main directory to store log files. Will create on startup …","","Whether to recycle stale log files. If <code>true</code>, logically …","","","","Version of the log file.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Maximum memory bytes allowed for the in-memory index. …","Whether to prepare log files for recycling when start. If …","Maximum capacity for preparing log files for recycling …","","Purge rewrite log queue if its garbage ratio exceeds this …","Purge rewrite log queue if its size exceeds this value.","Purge append log queue if its size exceeds this value.","How to deal with file corruption during recovery.","Minimum I/O size for reading log files during recovery.","The number of threads used to scan and recovery log files.","","","Auxiliary directory to store log files. Will create on …","Target file size for rotating log files.","","","","","","","","RaftEngine based KvBackend implementation.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Append an entry to logstore. Currently of existence of …","Append a batch of entries to logstore. <code>RaftEngineLogStore</code> …","","","","","","","","Checks if entry does not override the min index of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Create a stream of entries from logstore in the given …","","","","","","","","","","","","","","","","","","","","","","","","","Generated file from <code>logstore.proto</code>","Generated files are compatible only with the same version …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a write log for the provided path, used for test."],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[],3],0,[1,[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,1],[[[9,[[8,[7]]]]],1],[[[10,[[8,[7]],[8,[7]],[8,[7]]]]],1],[1,[[5,[3]]]],[11,11],[12,12],[13,13],[14,14],[6,6],[[[9,[15]]],[[9,[15]]]],[[[16,[15,15,15,15]]],[[16,[15,15,15,15]]]],[[[10,[15,15,15]]],[[10,[15,15,15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[1,18,[20,[19]]]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[1,21],[18],[18],[18],[18],[18],[18],[18],[18],[18],0,[6,[[22,[1]]]],[[[9,[[8,[7]]]]],[[22,[1]]]],[[[10,[[8,[7]],[8,[7]],[8,[7]]]]],[[22,[1]]]],0,[[11,23],24],[[12,23],24],[[13,23],24],[[14,23],24],[[6,23],24],[[[9,[25]],23],24],[[[16,[25,25,25,25]],23],24],[[[10,[25,25,25]],23],24],[[1,23],24],[[1,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,1],[12,1],[13,1],[14,1],[6,1],[[[9,[[8,[7]]]]],1],[[[16,[[8,[7]],[8,[7]],[8,[7]],[8,[18]]]]],1],[[[10,[[8,[7]],[8,[7]],[8,[7]]]]],1],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,0,[1,[[5,[28]]]],0,0,[29],[1,[[5,[3]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,[[34,[[33,[32]]]]]],[[31,20],[[34,[[33,[32]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[36,36],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[31,[[34,[[33,[32]]]]]],[35,[[38,[37]]]],[[],31],[[],35],[[],36],[31,[[34,[[33,[32]]]]]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[31,[39,[[38,[37]]]],40]],[[35,35],27],[[36,36],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[31,23],24],[[35,23],24],[[36,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[41,42]],43],7],[[36,44]],[35,40],[36,45],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[31,[[34,[[33,[32]]]]]],[[31,45]],[35],[[31,40],[[34,[[33,[32]]]]]],[[31,40],[[34,[[33,[32]]]]]],[31,[[34,[[33,[32]]]]]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],30],[[],30],[[],30],[[]],[[]],[[]],0,0,0,0,[[]],[[]],0,[46,46],[[]],[[],17],[[],17],[[],17],0,[[],46],[18],[18],[47,[[22,[46]]]],0,[18],0,0,[[46,46],27],[[46,23],[[22,[48]]]],0,[[]],[[]],[[]],[[],18],[[]],[[],26],[[],27],0,0,0,0,0,0,0,0,0,0,0,[46,[[22,[49]]]],[[46,50],22],0,0,[[]],[[],5],[[]],[[],22],[[],22],[[],30],[[]],0,0,[51,2],[[51,52],[[34,[[33,[32]]]]]],[[51,53],[[34,[[33,[32]]]]]],[[51,54],[[34,[[33,[32]]]]]],[[]],[[]],[[51,55],[[34,[[33,[32]]]]]],[[],17],[[],17],[[],17],[[51,[38,[37]],27],[[34,[[33,[32]]]]]],[[51,56],[[34,[[33,[32]]]]]],[18],[18],[18],0,[[57,[38,[37]]],58],[[57,[38,[37]]],[[58,[[5,[59]]]]]],[[57,[20,[37]],[20,[37]]],58],[[51,[38,[37]]],[[34,[[33,[32]]]]]],[[]],[[]],[[51,[38,[37]]],[[34,[[33,[32]]]]]],[[],18],[[]],[[],26],[[],27],[51,21],[[51,60],[[34,[[33,[32]]]]]],[[51,61],[[34,[[33,[32]]]]]],[[],5],[[]],[[],22],[[],22],[46,[[62,[51]]]],[[51,63],[[34,[[33,[32]]]]]],[[],30],[[]],0,0,0,0,[64,[[34,[[33,[32]]]]]],[[64,20],[[34,[[33,[32]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[65,[[34,[[33,[32]]]]]],[[64,66],62],[67,67],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[64,[[34,[[33,[32]]]]]],[64,[[34,[[33,[32]]]]]],[18],[18],[18],[18],[18],[18],[18],[18],[18],0,0,[[64,[39,[[38,[37]]]],40]],[[64,23],24],[[67,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],7],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[64,[[34,[[33,[32]]]]]],[65,21],[[64,45]],[[64,40],[[34,[[33,[32]]]]]],[[64,40],[[34,[[33,[32]]]]]],[64],[64,62],[64,27],[64,[[34,[[33,[32]]]]]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[19,68],[[62,[64]]]],[[],30],[[],30],[[],30],[[]],[[]],[[]],0,0,0,0,[66,2],[69,2],[70,2],[66,2],[69,2],[70,2],[66,71],[69,71],[70,71],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[66],[69],[70],[66],[66],[70],[69],[66],[66,66],[69,69],[70,70],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[66,72],[69,72],[70,72],[[7,7,[20,[37]]],66],[66,[[38,[37]]]],0,[[],66],[[],66],[[],69],[[],69],[[],70],[[],70],[[],66],[[],69],[[],70],[18],[18],[18],[18],[18],[18],[66,73],[69,73],[70,73],[[],73],[[],73],[[],73],[18],[18],[18],[[66,66],27],[[69,69],27],[[70,70],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],74],0,0,[[66,23],24],[[69,23],24],[[70,23],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,72],[69,72],[70,72],[66,[[38,[37]]]],[[[0,[41,42]],43],7],[66,7],[70,7],[69,7],[66,7],[66,75],[69,75],[70,75],[[70,44]],[66,40],[70,45],0,0,[[],18],[[],18],[[],18],[[]],[[]],[[]],[[[33,[66]]],[[33,[2]]]],[[[33,[69]]],[[33,[2]]]],[[[33,[70]]],[[33,[2]]]],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[66,27],[69,27],[70,27],0,[[66,76],77],[[69,76],77],[[70,76],77],[66,[[20,[37]]]],[66,75],[69,75],[70,75],[66],0,[[],66],[[],66],[[],69],[[],69],[[],70],[[],70],[[],74],[[66,[20,[37]]]],[[66,7]],[[70,7]],[[69,7]],[[66,7]],[66,[[20,[37]]]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],30],[[],30],[[],30],0,0,0,[[]],[[]],[[]],[40,70],[[66,78],77],[[69,78],77],[[70,78],77],0,[[[39,[79]]],64]],"c":[],"p":[[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[4,"Option"],[3,"IllegalStateSnafu"],[15,"u64"],[8,"Into"],[3,"IllegalNamespaceSnafu"],[3,"OverrideCompactedEntrySnafu"],[3,"StartGcTaskSnafu"],[3,"StopGcTaskSnafu"],[3,"AddEntryLogBatchSnafu"],[3,"RaftEngineSnafu"],[8,"Clone"],[3,"FetchEntrySnafu"],[3,"Compat"],[15,"usize"],[3,"String"],[3,"Vec"],[15,"str"],[4,"Result"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Request"],[15,"bool"],[8,"StackError"],[3,"Demand"],[3,"TypeId"],[3,"NoopLogStore"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"EntryImpl"],[3,"NamespaceImpl"],[15,"u8"],[15,"slice"],[8,"AsRef"],[6,"Id"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[6,"Id"],[3,"Config"],[8,"Deserializer"],[3,"Error"],[4,"Error"],[8,"Serializer"],[3,"RaftEngineBackend"],[3,"BatchDeleteRequest"],[3,"BatchGetRequest"],[3,"BatchPutRequest"],[3,"CompareAndPutRequest"],[3,"DeleteRangeRequest"],[3,"Engine"],[6,"Result"],[3,"KeyValue"],[3,"PutRequest"],[3,"RangeRequest"],[6,"Result"],[3,"Txn"],[3,"RaftEngineLogStore"],[3,"PurgeExpiredFilesFunction"],[3,"EntryImpl"],[3,"MessageType"],[3,"WalConfig"],[3,"LogStoreState"],[3,"NamespaceImpl"],[4,"ReflectValueRef"],[15,"u32"],[3,"MessageDescriptor"],[3,"FileDescriptorProto"],[3,"UnknownFields"],[3,"CodedInputStream"],[6,"ProtobufResult"],[3,"CodedOutputStream"],[3,"Path"],[13,"OverrideCompactedEntry"],[13,"FetchEntry"],[13,"AddEntryLogBatch"],[13,"RaftEngine"],[13,"StartGcTask"],[13,"StopGcTask"],[13,"IllegalState"],[13,"IllegalNamespace"]]},\
"meta_client":{"doc":"","t":"DLLALLLLLMMLFFFFLLLLLLLLLLALLLLMLLLLMLMMLLLLLLLRRDDGDDALLLLLLLLLLLMMLLLLLLLLLLLAMLMLLLLLLLLLLLMLMLMLMLMLLLLLLLLALMLMLLMMMMLLLLLLLLAALMLLLLLMMMLAMLMLLLLLLLLLLLLLLLLLLDDLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMLMMLLLLLLLLLLLLLDDMLLLLMLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLFLLFLMLMLLLLLLLLLLLLLLLLLDDDDLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMLLLLLLLLLLLLLLLMLLLLLMMLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLFDDLLLLMLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLDDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLNDNDNDNDNDNDENDNDNDNDNDGNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMM","n":["MetaClientOptions","borrow","borrow_mut","client","clone","clone_into","compat","compat_mut","compat_ref","connect_timeout","ddl_timeout","default","default_connect_timeout","default_ddl_timeout","default_heartbeat_timeout","default_timeout","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","from","from_ref","from_subset","heartbeat_timeout","init","into","into_request","is_in_subset","metasrv_addrs","serialize","tcp_nodelay","timeout","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","DEFAULT_ASK_LEADER_MAX_RETRY","DEFAULT_SUBMIT_DDL_MAX_RETRY","HeartbeatSender","HeartbeatStream","Id","MetaClient","MetaClientBuilder","ask_leader","ask_leader","batch_delete","batch_get","batch_put","borrow","borrow","borrow_mut","borrow_mut","build","channel_config","channel_manager","channel_manager","channel_manager","clone","clone","clone_into","clone_into","compare_and_put","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","ddl","ddl","ddl_channel_manager","ddl_channel_manager","ddl_client","default","default","delete_range","deref","deref","deref_mut","deref_mut","drop","drop","enable_ddl","enable_ddl","enable_heartbeat","enable_heartbeat","enable_lock","enable_lock","enable_router","enable_router","enable_store","enable_store","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","heartbeat","heartbeat","heartbeat","heartbeat_channel_manager","heartbeat_channel_manager","heartbeat_client","id","id","id","id","id","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","load_balance","lock","lock","lock","lock_client","new","new","put","range","role","role","sender","start","store","store","store_client","stream","submit_ddl_task","submit_ddl_task","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unlock","vzip","vzip","with_channel_manager","AskLeader","LeadershipGroup","ask_leader","ask_leader_inner","borrow","borrow","borrow_mut","borrow_mut","channel_manager","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_asker","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_subset","from_subset","get_leader","id","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","leader","leadership_group","max_retry","new","peers","role","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Client","Inner","ask_leader","borrow","borrow","borrow_mut","borrow_mut","channel_manager","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_subset","from_subset","id","init","init","inner","into","into","into_request","into_request","is_in_subset","is_in_subset","is_not_leader","is_started","is_started","is_unreachable","make_client","max_retry","new","role","start","start","submit_ddl_task","submit_ddl_task","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Client","HeartbeatSender","HeartbeatStream","Inner","ask_leader","ask_leader","ask_leader","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_manager","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","heartbeat","heartbeat","id","id","id","id","id","init","init","init","init","inner","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_started","is_started","make_client","max_retry","message","new","new","new","new","role","role","send","sender","start","start","stream","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","random_get","Client","Inner","borrow","borrow","borrow_mut","borrow_mut","channel_manager","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_subset","from_subset","id","init","init","inner","into","into","into_request","into_request","is_in_subset","is_in_subset","is_started","is_started","lock","lock","make_client","new","peers","random_client","role","start","start","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unlock","unlock","vzip","vzip","Client","Inner","batch_delete","batch_delete","batch_get","batch_get","batch_put","batch_put","borrow","borrow","borrow_mut","borrow_mut","channel_manager","clone","clone_into","compare_and_put","compare_and_put","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","delete_range","delete_range","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_subset","from_subset","id","init","init","inner","into","into","into_request","into_request","is_in_subset","is_in_subset","is_started","is_started","make_client","new","peers","put","put","random_client","range","range","role","start","start","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AskLeader","AskLeaderSnafu","AskLeaderTimeout","AskLeaderTimeoutSnafu","ConvertMetaRequest","ConvertMetaRequestSnafu","ConvertMetaResponse","ConvertMetaResponseSnafu","CreateChannel","CreateChannelSnafu","CreateHeartbeatStream","CreateHeartbeatStreamSnafu","Error","IllegalGrpcClientState","IllegalGrpcClientStateSnafu","InvalidResponseHeader","InvalidResponseHeaderSnafu","MetaServer","MetaServerSnafu","NoLeader","NoLeaderSnafu","NotStarted","NotStartedSnafu","Result","RetryTimesExceeded","RetryTimesExceededSnafu","SendHeartbeat","SendHeartbeatSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","msg","msg","name","next","provide","source","status_code","times","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","code","err_msg","err_msg","error","location","location","location","location","location","location","location","location","location","location","location","msg","msg","name","source","source","source","source","times"],"q":[[0,"meta_client"],[47,"meta_client::client"],[165,"meta_client::client::ask_leader"],[225,"meta_client::client::ddl"],[289,"meta_client::client::heartbeat"],[408,"meta_client::client::load_balance"],[409,"meta_client::client::lock"],[473,"meta_client::client::store"],[547,"meta_client::error"],[970,"meta_client::error::Error"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Ask the leader address of <code>metasrv</code>, and the heartbeat …","BatchDelete atomically deletes the given keys from the …","BatchGet atomically get values by the given keys from the …","BatchPut atomically puts the given keys into the key-value …","","","","","","","","","","","","","","CompareAndPut atomically puts the value to the given …","","","","","","","","","","","","","","DeleteRange deletes the given range from the key-value …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns a heartbeat bidirectional streaming: (sender, …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Put puts the given key into the key-value store.","Range gets the keys in the range from the key-value store.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Fetch the next message from this stream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::AskLeader</code> variant","","SNAFU context selector for the <code>Error::AskLeaderTimeout</code> …","","SNAFU context selector for the <code>Error::ConvertMetaRequest</code> …","","SNAFU context selector for the <code>Error::ConvertMetaResponse</code> …","","SNAFU context selector for the <code>Error::CreateChannel</code> variant","","SNAFU context selector for the <code>Error::CreateHeartbeatStream</code>…","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidResponseHeader</code>…","","SNAFU context selector for the <code>Error::MetaServer</code> variant","","SNAFU context selector for the <code>Error::NoLeader</code> variant","","SNAFU context selector for the <code>Error::NotStarted</code> variant","","","SNAFU context selector for the <code>Error::RetryTimesExceeded</code> …","","SNAFU context selector for the <code>Error::SendHeartbeat</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,14,14,14,14,23,14,23,14,23,14,23,23,14,23,14,23,14,14,23,14,23,14,23,14,0,14,23,23,14,23,14,14,23,14,23,14,23,14,23,23,23,23,23,23,23,23,23,23,23,14,23,14,23,14,23,14,0,14,14,23,23,14,14,68,67,23,14,23,14,23,14,23,14,23,14,0,0,14,14,14,23,14,14,14,68,23,68,14,0,14,14,67,14,14,23,14,23,14,23,14,23,14,23,14,23,14,14,23,14,14,0,0,54,54,57,54,57,54,54,54,54,57,54,57,54,57,54,54,57,54,57,54,57,54,57,54,57,54,54,57,54,54,54,57,54,57,54,57,54,57,54,57,54,54,54,57,54,54,57,54,57,54,57,54,57,54,57,54,57,54,0,0,60,28,60,28,60,60,28,28,28,60,28,60,28,60,28,60,28,60,28,60,28,60,28,60,28,28,60,60,28,60,28,28,60,28,60,28,60,0,28,60,0,60,60,28,60,28,60,28,60,28,28,60,28,60,28,60,28,60,28,60,28,60,0,0,0,0,31,66,66,68,67,31,66,68,67,31,66,66,31,31,68,67,31,66,68,67,31,66,68,67,31,66,68,67,31,66,68,67,31,66,68,67,31,66,67,31,66,68,67,31,66,31,68,67,31,66,31,66,68,67,68,67,66,68,67,31,66,31,68,67,31,66,68,67,31,66,68,67,31,66,31,66,66,66,67,68,67,31,66,68,66,68,68,31,66,67,31,68,67,31,66,68,67,31,66,68,67,31,66,68,67,31,66,68,67,31,66,68,67,31,66,0,0,0,35,74,35,74,74,35,35,35,74,35,74,35,74,35,74,35,74,35,74,35,74,35,74,35,35,74,74,35,74,35,35,74,35,74,35,74,35,74,35,74,74,35,74,74,74,35,74,35,35,74,35,74,35,74,35,74,35,74,35,74,35,74,0,0,46,82,46,82,46,82,46,82,46,82,82,46,46,46,82,46,82,46,82,46,82,46,82,46,82,46,82,46,82,46,82,46,82,46,46,82,82,46,82,46,46,82,46,82,46,82,46,82,82,46,82,46,82,82,46,82,82,46,82,46,46,82,46,82,46,82,46,82,46,82,46,82,96,0,96,0,96,0,96,0,96,0,96,0,0,96,0,96,0,96,0,96,0,96,0,0,96,0,96,0,96,96,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,105,106,107,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,100,102,103,104,109,110,105,106,107,111,112,113,108,102,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,106,100,102,103,104,105,106,107,108,100,102,103,104,109,110,105,106,107,111,112,113,108,96,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,96,100,102,103,104,109,110,105,106,107,111,112,113,108,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,102,108,105,96,96,96,96,108,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,100,102,103,104,109,110,105,106,107,111,112,113,108,96,117,118,119,120,118,121,122,120,123,124,119,125,126,127,128,117,129,124,123,126,127,128,129],"f":[0,[[]],[[]],0,[1,1],[[]],[[],2],[[],2],[[],2],0,0,[[],1],[[],3],[[],3],[[],3],[[],3],[4],[4],[5,[[6,[1]]]],[4],[[1,1],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[1,8],9],[[]],[[]],[[]],0,[[],4],[[]],[[],10],[[],7],0,[[1,11],6],0,0,[[]],[[],12],[[]],[[],6],[[],6],[[],13],[[]],0,0,0,0,0,0,0,0,[14,[[16,[15]]]],[[14,17],[[16,[18]]]],[[14,19],[[16,[20]]]],[[14,21],[[16,[22]]]],[[]],[[]],[[]],[[]],[23,14],[14,24],[[23,25],23],0,0,[23,23],[14,14],[[]],[[]],[[14,26],[[16,[27]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[23,25],23],0,[14,[[16,[28]]]],[[],23],[[],14],[[14,29],[[16,[30]]]],[4],[4],[4],[4],[4],[4],[23,23],0,[23,23],0,[23,23],0,[23,23],0,[23,23],0,[[23,8],9],[[14,8],9],[[]],[[]],[[]],[[]],[[]],[[]],0,[14,16],0,[[23,25],23],0,[14,[[16,[31]]]],[14,32],0,0,0,0,[[],4],[[],4],[[]],[[]],[[],10],[[],10],[[],7],[[],7],0,0,[[14,33],[[16,[34]]]],0,[14,[[16,[35]]]],[[36,36,37],23],[32,14],[[14,38],[[16,[39]]]],[[14,40],[[16,[41]]]],0,0,0,[[14,[0,[[43,[[44,[[43,[42]]]]]],45]]],16],0,0,[14,[[16,[46]]]],0,[[14,47,48],[[51,[[50,[49]]]]]],[[14,48],[[16,[52]]]],[[]],[[]],[[],12],[[],12],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],13],[[],13],[[14,53],16],[[]],[[]],[[32,25],14],0,0,[54,[[16,[15]]]],[54,[[16,[15]]]],[[]],[[]],[[]],[[]],0,[54,54],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[54,[43,[42]]],[[16,[[56,[55]]]]]],[4],[4],[4],[4],[4],[4],[[57,8],9],[[54,8],9],[[]],[[]],[[]],[[]],[[]],[54,[[12,[15]]]],0,[[],4],[[],4],[[]],[[]],[[],10],[[],10],[[],7],[[],7],0,0,0,[[32,37,[59,[[58,[15]]]],25,4],54],0,0,[[]],[[],12],[[],12],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],13],[[],13],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,[28,28],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[4],[4],[4],[4],[4],[4],[[28,8],9],[[60,8],9],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],0,[[]],[[]],[[],10],[[],10],[[],7],[[],7],[[[12,[61]]],7],[28,7],[60,7],[62,7],[[60,[43,[42]]],[[16,[[63,[55]]]]]],0,[[32,37,25,4],28],0,[[28,[43,[[44,[[43,[42]]]]]]],16],[[60,[43,[[44,[[43,[42]]]]]]],16],[[28,64],[[16,[65]]]],[[60,64],[[16,[65]]]],[[]],[[],12],[[],12],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],13],[[],13],[[]],[[]],0,0,0,0,[31,[[16,[15]]]],[66,[[16,[15]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[31,31],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[67,8],9],[[31,8],9],[[66,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,16],[66,16],[68,32],[67,32],0,0,0,[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],7],[[],7],[[],7],[[],7],[31,7],[66,7],[[66,[43,[42]]],[[16,[[56,[55]]]]]],0,[67,[[16,[[12,[69]]]]]],[[32,37,[71,[70]]],68],[[32,[72,[69]]],67],[[32,37,25,4],31],[[32,37,25,4],66],0,0,[[68,70],16],0,[[31,[43,[[44,[[43,[42]]]]]]],16],[[66,[43,[[44,[[43,[42]]]]]]],16],0,[[]],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[4,73],12],0,0,[[]],[[]],[[]],[[]],0,[35,35],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[4],[4],[4],[4],[4],[4],[[35,8],9],[[74,8],9],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],0,[[]],[[]],[[],10],[[],10],[[],7],[[],7],[35,7],[74,7],[[35,75],[[16,[76]]]],[[74,75],[[16,[76]]]],[[74,[43,[42]]],[[16,[[77,[55]]]]]],[[32,37,25],35],0,[74,[[16,[[77,[55]]]]]],0,[[35,[43,[[44,[[43,[42]]]]]]],16],[[74,[43,[[44,[[43,[42]]]]]]],16],[[]],[[],12],[[],12],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],13],[[],13],[[35,78],[[16,[79]]]],[[74,78],[[16,[79]]]],[[]],[[]],0,0,[[46,80],[[16,[81]]]],[[82,80],[[16,[81]]]],[[46,83],[[16,[84]]]],[[82,83],[[16,[84]]]],[[46,85],[[16,[86]]]],[[82,85],[[16,[86]]]],[[]],[[]],[[]],[[]],0,[46,46],[[]],[[46,87],[[16,[88]]]],[[82,87],[[16,[88]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[46,89],[[16,[90]]]],[[82,89],[[16,[90]]]],[4],[4],[4],[4],[4],[4],[[46,8],9],[[82,8],9],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],0,[[]],[[]],[[],10],[[],10],[[],7],[[],7],[46,7],[82,7],[[82,[43,[42]]],[[16,[[91,[55]]]]]],[[32,37,25],46],0,[[46,92],[[16,[93]]]],[[82,92],[[16,[93]]]],[82,[[16,[[91,[55]]]]]],[[46,94],[[16,[95]]]],[[82,94],[[16,[95]]]],0,[[46,[43,[[44,[[43,[42]]]]]]],16],[[82,[43,[[44,[[43,[42]]]]]]],16],[[]],[[],12],[[],12],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],13],[[],13],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[96,97],[[],98],[96,[[12,[99]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[100,[[59,[15]]]]],96],[[[102,[[59,[101]],[59,[15]]]]],96],[103,96],[104,96],[[[105,[[59,[15]]]]],96],[[[106,[[59,[15]]]]],96],[107,96],[[[108,[[59,[4]],[59,[15]]]]],96],[96,[[12,[98]]]],[[[100,[45]]],[[100,[45]]]],[[[102,[45,45]]],[[102,[45,45]]]],[103,103],[104,104],[109,109],[110,110],[[[105,[45]]],[[105,[45]]]],[[[106,[45]]],[[106,[45]]]],[107,107],[111,111],[112,112],[113,113],[[[108,[45,45]]],[[108,[45,45]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[96,4,[58,[15]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[96,42],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,0,[[[100,[[59,[15]]]]],[[6,[96]]]],[[[102,[[59,[101]],[59,[15]]]]],[[6,[96]]]],[103,[[6,[96]]]],[104,[[6,[96]]]],[[[105,[[59,[15]]]]],[[6,[96]]]],[[[106,[[59,[15]]]]],[[6,[96]]]],[107,[[6,[96]]]],[[[108,[[59,[4]],[59,[15]]]]],[[6,[96]]]],[[[100,[114]],8],9],[[[102,[114,114]],8],9],[[103,8],9],[[104,8],9],[[109,8],9],[[110,8],9],[[[105,[114]],8],9],[[[106,[114]],8],9],[[107,8],9],[[111,8],9],[[112,8],9],[[113,8],9],[[[108,[114,114]],8],9],[[96,8],9],[[96,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[100,[[59,[15]]]]],96],[[[102,[[59,[101]],[59,[15]]]]],96],[103,96],[104,96],[109,96],[110,96],[[[105,[[59,[15]]]]],96],[[[106,[[59,[15]]]]],96],[107,96],[111,96],[112,96],[113,96],[[[108,[[59,[4]],[59,[15]]]]],96],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,[96,[[12,[115]]]],[116],[96,[[12,[98]]]],[96,101],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"MetaClientOptions"],[3,"Compat"],[3,"Duration"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Request"],[8,"Serializer"],[4,"Option"],[3,"TypeId"],[3,"MetaClient"],[3,"String"],[6,"Result"],[3,"BatchDeleteRequest"],[3,"BatchDeleteResponse"],[3,"BatchGetRequest"],[3,"BatchGetResponse"],[3,"BatchPutRequest"],[3,"BatchPutResponse"],[3,"MetaClientBuilder"],[3,"ChannelConfig"],[3,"ChannelManager"],[3,"CompareAndPutRequest"],[3,"CompareAndPutResponse"],[3,"Client"],[3,"DeleteRangeRequest"],[3,"DeleteRangeResponse"],[3,"Client"],[6,"Id"],[3,"LockRequest"],[3,"LockResponse"],[3,"Client"],[15,"u64"],[4,"Role"],[3,"PutRequest"],[3,"PutResponse"],[3,"RangeRequest"],[3,"RangeResponse"],[15,"str"],[8,"AsRef"],[15,"slice"],[8,"Clone"],[3,"Client"],[3,"ExecutorContext"],[3,"SubmitDdlTaskRequest"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"SubmitDdlTaskResponse"],[3,"UnlockRequest"],[3,"AskLeader"],[3,"Channel"],[3,"HeartbeatClient"],[3,"LeadershipGroup"],[3,"Vec"],[8,"Into"],[3,"Inner"],[3,"ResponseHeader"],[3,"Status"],[3,"DdlTaskClient"],[3,"SubmitDdlTaskRequest"],[3,"SubmitDdlTaskResponse"],[3,"Inner"],[3,"HeartbeatStream"],[3,"HeartbeatSender"],[3,"HeartbeatResponse"],[3,"HeartbeatRequest"],[3,"Sender"],[3,"Streaming"],[8,"FnOnce"],[3,"Inner"],[3,"LockRequest"],[3,"LockResponse"],[3,"LockClient"],[3,"UnlockRequest"],[3,"UnlockResponse"],[3,"BatchDeleteRequest"],[3,"BatchDeleteResponse"],[3,"Inner"],[3,"BatchGetRequest"],[3,"BatchGetResponse"],[3,"BatchPutRequest"],[3,"BatchPutResponse"],[3,"CompareAndPutRequest"],[3,"CompareAndPutResponse"],[3,"DeleteRangeRequest"],[3,"DeleteRangeResponse"],[3,"StoreClient"],[3,"PutRequest"],[3,"PutResponse"],[3,"RangeRequest"],[3,"RangeResponse"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[3,"IllegalGrpcClientStateSnafu"],[4,"StatusCode"],[3,"MetaServerSnafu"],[3,"AskLeaderSnafu"],[3,"NoLeaderSnafu"],[3,"NotStartedSnafu"],[3,"SendHeartbeatSnafu"],[3,"CreateHeartbeatStreamSnafu"],[3,"RetryTimesExceededSnafu"],[3,"AskLeaderTimeoutSnafu"],[3,"CreateChannelSnafu"],[3,"InvalidResponseHeaderSnafu"],[3,"ConvertMetaRequestSnafu"],[3,"ConvertMetaResponseSnafu"],[8,"Debug"],[8,"StackError"],[3,"Demand"],[13,"MetaServer"],[13,"IllegalGrpcClientState"],[13,"SendHeartbeat"],[13,"AskLeaderTimeout"],[13,"AskLeader"],[13,"NoLeader"],[13,"CreateChannel"],[13,"NotStarted"],[13,"CreateHeartbeatStream"],[13,"InvalidResponseHeader"],[13,"ConvertMetaRequest"],[13,"ConvertMetaResponse"],[13,"RetryTimesExceeded"]]},\
"meta_srv":{"doc":"","t":"CAAAAAAAAAAAAAAAAAAAAAADLLFLLFLLLLLLLLLLLMLLLLLMLMLLMFLLMLLLLLLLLLLRDLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLDDDEGNNLMLLLLLLLLLLLLLLLLMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMMFLLLLLLLLLMMLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRNIQENLLLLKLLLLLLLLALLLLLKLLLLKKLLKLKLLLLLLLLLLDLLLLMLLLLLLLLLMLLLLLMLMMLLLLLLLLLLLLLLLNDNDNDNDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNNDDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNNDDNDNNDDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLMMLLLLLLLMLLMLMLLLFLLLMLLLMLLLLLLLLLLLLLLLLDLLLLLLLLLLLFLLLLLLLLLLMLMLLLLLLLLLMLDIDDDDDLLLLLLLLLLLLLLLLLLLLLLLALLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLKLMMLMMLLLLLLLMLLLLLLLLLLLLLKLLLLLLLALLLLLLALMLLLLLAALLLLLLLAALLLMMMALLMALLLLLLLMMMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLMALLLLLLLLLLLLLLLLLLLEDDDNLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDMLLMMLLLLMLLLLLLLLLLLLLLLMLLLLLLLLMMLLLLLLLLLLLMLLMMLMMLMLLLLLLLMLLLLLLLLLLLLLLLLMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDRDLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLDDRRDRDDDDDLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFRIDGGDLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLMALLKLMAMLLLLLLLLLLLLLLLLLLLKLLDLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFDLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLDDDGDRDDDDDGRLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMMMMLLLLLLLLLLLMMLMMLMMMLLLLMLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLMMLLLMMMMLLMMMMMLLMLLLLLLLLLMLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDDLLLLLLLFFFFLLLLLLLLMLLLLLLLLMLLLLMLLMLLLLLLLLLMLLLMLMLLMLLLMLLLMLLLLLLLLLLLLLLLLDDDDDMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLMLLLLLLLLLLLLLLLLMFFFFLLMLLLLLLLLLAADDRDDDDISRLLALLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLALLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMLAALLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLALLLLLLMLLLLLLLMMLLKMLLLLLLMMMMLMMLLLLLLMMMMLLLLLMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLDLLLMLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLLLLLLLFMMLLLLLLLLLLLLDDDNNEIGIGIDGEIDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLALLKKAMAMMKLLLLLLLLLMMKMLLLLLLLLKKLLDIGMLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLDDIGIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMMKLLLLLLLLLLLMMLLLLLLLLLLLLKLKLLLLDGILLLLLLLLLLLLLMLLLLLLMLLLLLLKLMLLLLLCADLLLLLLLLLLLLLLLLLALLLLMLLLLLLALFFQNNGQIELLLLLLLLLLLLLLLLLLLLLLLLLLLLLALALLKLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLDRLLLLLLLLLLLFLLLLLLLLLLLLLLLLGGAAAAAAADIDLLLLLLLFLLLFLLLLLLLLLLLLLLLLLLLLKMAAALLLLLLLLLLALLFALLLALLLLALMLLLLLLLLLLLLLLLLLALLRDLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLMLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFFFFFEENNNNIDGGLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLKLLLLLLMLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLADIGDLLLLLLLLLLMKLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLMLLLNDNDEGLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLMLLLLLFLLLLLLLLMLMLLLLLLL","n":["Result","bootstrap","cache_invalidator","cluster","election","error","failure_detector","greptimedb_telemetry","handler","inactive_region_manager","keys","lease","lock","metasrv","metrics","mocks","procedure","pubsub","region","selector","service","state","table_meta_alloc","MetaSrvInstance","__clone_box","and","bootstrap_meta_srv_with_router","borrow","borrow_mut","build_meta_srv","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","http_srv","init","into","into_request","is_in_subset","lift_into","meta_srv","new","opts","or","plugins","plugins","router","sculpt","shutdown","signal_sender","start","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DEFAULT_SUBJECT","MetasrvCacheInvalidator","and","borrow","borrow_mut","broadcast","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","info","init","into","into_request","invalidate_table_id","invalidate_table_name","is_in_subset","lift_into","mailbox","new","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Context","MetaPeerClient","MetaPeerClientBuilder","MetaPeerClientBuilderError","MetaPeerClientRef","UninitializedField","ValidationError","__clone_box","addr","and","and","and","and","as_error_source","batch_get","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","channel_manager","channel_manager","channel_manager","check_resp_header","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","create_empty","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","election","election","election","fmt","fmt","from","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","get_all_dn_stat_kvs","get_dn_key_value","get_dn_stat_kvs","get_node_cnt","in_memory","in_memory","in_memory","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_leader","lift_into","lift_into","lift_into","lift_into","max_retry_count","max_retry_count","max_retry_count","need_retry","or","or","or","or","provide","range","remote_batch_get","remote_range","retry_interval_ms","retry_interval_ms","retry_interval_ms","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","to_owned","to_stat_kv_map","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ELECTION_KEY","Elected","Election","Leader","LeaderChangeMessage","StepDown","__clone_box","and","borrow","borrow_mut","campaign","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","etcd","fmt","fmt","from","from_ref","from_subset","in_infancy","init","into","into_request","is_in_subset","is_leader","leader","lift_into","or","resign","sculpt","subscribe_leader_change","subset","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","EtcdElection","and","borrow","borrow_mut","campaign","client","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","in_infancy","infancy","init","into","into_request","is_in_subset","is_leader","is_leader","leader","leader_value","leader_watcher","lift_into","or","resign","sculpt","subscribe_leader_change","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","with_endpoints","with_etcd_client","BatchGet","BatchGetSnafu","ConnectEtcd","ConnectEtcdSnafu","ConvertProtoData","ConvertProtoDataSnafu","CorruptedTableRoute","CorruptedTableRouteSnafu","CreateChannel","CreateChannelSnafu","DecodeTableRoute","DecodeTableRouteSnafu","DeserializeFromJson","DeserializeFromJsonSnafu","EmptyKey","EmptyKeySnafu","EmptyTableName","EmptyTableNameSnafu","Error","EtcdFailed","EtcdFailedSnafu","ExceededRetryLimit","ExceededRetryLimitSnafu","GetFullTableInfo","GetFullTableInfoSnafu","InitMetadata","InitMetadataSnafu","InvalidArguments","InvalidArgumentsSnafu","InvalidCatalogValue","InvalidCatalogValueSnafu","InvalidFullTableName","InvalidFullTableNameSnafu","InvalidHeartbeatRequest","InvalidHeartbeatRequestSnafu","InvalidHttpBody","InvalidHttpBodySnafu","InvalidInactiveRegionKey","InvalidInactiveRegionKeySnafu","InvalidLeaseKey","InvalidLeaseKeySnafu","InvalidRegionKeyFromUtf8","InvalidRegionKeyFromUtf8Snafu","InvalidStatKey","InvalidStatKeySnafu","InvalidUtf8Value","InvalidUtf8ValueSnafu","InvalidateTableCache","InvalidateTableCacheSnafu","IsNotLeader","IsNotLeaderSnafu","Join","JoinSnafu","KvBackend","KvBackendSnafu","LeaseGrant","LeaseGrantSnafu","LeaseKeyFromUtf8","LeaseKeyFromUtf8Snafu","LeaseValueFromUtf8","LeaseValueFromUtf8Snafu","ListCatalogs","ListCatalogsSnafu","ListSchemas","ListSchemasSnafu","Lock","LockNotConfig","LockNotConfigSnafu","LockSnafu","MailboxClosed","MailboxClosedSnafu","MailboxReceiver","MailboxReceiverSnafu","MailboxTimeout","MailboxTimeoutSnafu","MissingRequestHeader","MissingRequestHeaderSnafu","MissingRequiredParameter","MissingRequiredParameterSnafu","MoveValue","MoveValueSnafu","NextSequence","NextSequenceSnafu","NoEnoughAvailableDatanode","NoEnoughAvailableDatanodeSnafu","NoLeader","NoLeaderSnafu","OperateRegion","OperateRegionSnafu","Other","OtherSnafu","ParseAddr","ParseAddrSnafu","ParseNum","ParseNumSnafu","PublishMessage","PublishMessageSnafu","PushMessage","PushMessageSnafu","PusherNotFound","PusherNotFoundSnafu","Range","RangeSnafu","RegionFailoverCandidatesNotFound","RegionFailoverCandidatesNotFoundSnafu","RegisterProcedureLoader","RegisterProcedureLoaderSnafu","RequestDatanode","RequestDatanodeSnafu","ResponseHeaderNotFound","ResponseHeaderNotFoundSnafu","Result","RetryLater","RetryLaterSnafu","SchemaAlreadyExists","SchemaAlreadyExistsSnafu","SendShutdownSignal","SendShutdownSignalSnafu","SerializeToJson","SerializeToJsonSnafu","ShutdownServer","ShutdownServerSnafu","StartGrpc","StartGrpcSnafu","StartHttp","StartHttpSnafu","StartProcedureManager","StartProcedureManagerSnafu","StartTelemetryTask","StartTelemetryTaskSnafu","StatKeyFromUtf8","StatKeyFromUtf8Snafu","StatValueFromUtf8","StatValueFromUtf8Snafu","StopProcedureManager","StopProcedureManagerSnafu","SubmitDdlTask","SubmitDdlTaskSnafu","SubmitProcedure","SubmitProcedureSnafu","TableAlreadyExists","TableAlreadyExistsSnafu","TableIdChanged","TableIdChangedSnafu","TableInfoNotFound","TableInfoNotFoundSnafu","TableMetadataManager","TableMetadataManagerSnafu","TableNotFound","TableNotFoundSnafu","TableRouteConversion","TableRouteConversionSnafu","TableRouteNotFound","TableRouteNotFoundSnafu","TcpBind","TcpBindSnafu","TcpIncoming","TcpIncomingSnafu","TooManyPartitions","TooManyPartitionsSnafu","Txn","TxnSnafu","Unexpected","UnexpectedInstructionReply","UnexpectedInstructionReplySnafu","UnexpectedSnafu","Unlock","UnlockSnafu","Unsupported","UnsupportedSelectorType","UnsupportedSelectorTypeSnafu","UnsupportedSnafu","UpdateTableMetadata","UpdateTableMetadataSnafu","UpdateTableRoute","UpdateTableRouteSnafu","WaitProcedure","WaitProcedureSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","addr","addr","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","available","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","expected","expected","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","failed_region","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","found","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","func_name","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","key","key","key","key","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","mailbox_message","match_for_io_error","msg","name","next","node_addr","operation","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","param","peer","peer","provide","pusher_id","reason","reason","reason","retry_num","schema_name","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","selector_type","server","source","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","table_id","table_id","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","violated","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","addr","addr","available","catalog","err_msg","err_msg","err_msg","err_msg","err_msg","err_msg","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","expected","expected","failed_region","found","func_name","id","id","id","input","input","key","key","key","key","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","mailbox_message","msg","name","node_addr","operation","param","peer","peer","pusher_id","reason","reason","reason","retry_num","schema_name","selector_type","server","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","table_id","table_id","table_name","type_name","violated","HeartbeatHistory","PhiAccrualFailureDetector","__clone_box","acceptable_heartbeat_pause_millis","add","and","and","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","drop_oldest","first_heartbeat_estimate_millis","from","from","from_ref","from_subset","from_subset","heartbeat","heartbeat_history","init","init","interval_sum","intervals","into","into","into_request","into_request","is_available","is_in_subset","is_in_subset","last_heartbeat_millis","lift_into","lift_into","max_sample_size","mean","min_std_deviation_millis","new","or","or","phi","phi","sculpt","sculpt","squared_interval_sum","std_deviation","subset","subset","threshold","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","variance","vzip","vzip","DistributedGreptimeDBTelemetryCollector","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","get_greptimedb_telemetry_task","get_mode","get_nodes","get_retry","get_uuid_cache","inc_retry","init","into","into_request","is_in_subset","lift_into","meta_peer_client","or","retry","sculpt","set_uuid_cache","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","uuid","vzip","HeartbeatAccumulator","HeartbeatHandler","HeartbeatHandlerGroup","HeartbeatMailbox","NameCachedHandler","Pusher","Pushers","__clone_box","__clone_box","add_handler","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","broadcast","check_leader_handler","check_timeout_bg","clone","clone","clone_into","clone_into","collect_stats_handler","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","failure_handler","filter_inactive_region_stats","fmt","from","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","handle","handle","handler","handlers","header","header","inactive_region_ids","init","init","init","init","init","init","insert","instructions","into","into","into","into","into","into","into_mailbox_message","into_request","into_request","into_request","into_request","into_request","into_request","is_acceptable","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","json_reply","keep_lease_handler","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","mailbox_handler","name","name","new","new","new","new","next_message_id","node_stat","on_leader_start_handler","on_recv","or","or","or","or","or","or","persist_stats_handler","publish_heartbeat_handler","push","push","pushers","pushers","pushers","region_lease","region_lease_handler","register","remove","res_header","response_header_handler","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","send","sender","senders","sequence","stat","subset","subset","subset","subset","subset","subset","timeout_notify","timeouts","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unregister","vzip","vzip","vzip","vzip","vzip","vzip","CheckLeaderHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","CollectStatsHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DatanodeHeartbeat","RegionFailureHandler","and","and","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","failure_detect_runner","from","from","from_subset","from_subset","handle","heartbeat_time","init","init","into","into","into_request","into_request","is_acceptable","is_in_subset","is_in_subset","lift_into","lift_into","or","or","region_idents","runner","sculpt","sculpt","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","try_new","type_id","type_id","vzip","vzip","FailureDetectControl","FailureDetectRunner","FailureDetectorContainer","FailureDetectorEntry","Purge","and","and","and","and","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","control_rx","control_tx","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","e","election","failure_detector","from","from","from","from","from_subset","from_subset","from_subset","from_subset","get_failure_detector","heartbeat_rx","heartbeat_tx","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","lift_into","lift_into","lift_into","lift_into","new","or","or","or","or","receiver_handle","region_failover_manager","region_ident","remove","runner_handle","sculpt","sculpt","sculpt","sculpt","send_control","send_heartbeat","start","start_with","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","FilterInactiveRegionStatsHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","KeepLeaseHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","MailboxHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionStat","Stat","addr","and","and","approximate_bytes","approximate_rows","borrow","borrow","borrow_mut","borrow_mut","cluster_id","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","engine","erased_serialize","erased_serialize","fmt","fmt","from","from","from_subset","from_subset","id","id","init","init","into","into","into_request","into_request","is_empty","is_in_subset","is_in_subset","lift_into","lift_into","node_epoch","or","or","rcus","rcus","region_ids","region_num","region_stats","retain_active_region_stats","role","sculpt","sculpt","serialize","serialize","stat_key","subset","subset","timestamp_millis","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","wcus","wcus","OnLeaderStartHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","EpochStats","MAX_CACHED_STATS_PER_KEY","PersistStatsHandler","and","and","borrow","borrow","borrow_mut","borrow_mut","clear","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","default","deref","deref","deref_mut","deref_mut","drain_all","drop","drop","epoch","epoch","from","from","from_subset","from_subset","handle","init","init","into","into","into_request","into_request","is_acceptable","is_in_subset","is_in_subset","len","lift_into","lift_into","or","or","push","sculpt","sculpt","set_epoch","stats","stats_cache","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","PublishHeartbeatHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","is_acceptable","is_in_subset","lift_into","new","or","publish","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionLeaseHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","is_acceptable","is_in_subset","lift_into","new","or","region_lease_seconds","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","ResponseHeaderHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","is_acceptable","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","InactiveRegionManager","and","borrow","borrow_mut","clear_all_inactive_regions","compat","compat_mut","compat_ref","deref","deref_mut","deregister_inactive_region","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","new","or","register_inactive_region","retain_active_regions","scan_all_inactive_regions","sculpt","store","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DATANODE_LEASE_KEY_PATTERN","DATANODE_STAT_KEY_PATTERN","DN_LEASE_PREFIX","DN_STAT_PREFIX","INACTIVE_REGION_KEY_PATTERN","INACTIVE_REGION_PREFIX","InactiveRegionKey","LeaseKey","LeaseValue","StatKey","StatValue","__clone_box","__clone_box","__clone_box","__clone_box","__private_field","__private_field","__private_field","and","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cluster_id","cluster_id","cluster_id","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_str","from_str","from_str","from_str","from_str","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","get_hash","get_hash","get_prefix_by_cluster","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","node_addr","node_id","node_id","node_id","or","or","or","or","or","or","or","or","region_id","region_num","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","stats","subset","subset","subset","subset","subset","subset","subset","subset","timestamp_millis","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","alive_datanodes","filter_datanodes","get_lease_prefix","DEFAULT_EXPIRE_TIME_SECS","DistLock","DistLockGuard","DistLockRef","Key","Opts","and","and","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","drop","etcd","expire_secs","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","key","keys","lift_into","lift_into","lock","lock","lock","memory","name","new","or","or","sculpt","sculpt","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","unlock","vzip","vzip","EtcdLock","__clone_box","and","borrow","borrow_mut","client","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","lock","or","sculpt","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","unlock","vzip","with_endpoints","with_etcd_client","table_metadata_lock_key","MemLock","and","borrow","borrow_mut","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","from","from_subset","guards","init","into","into_request","is_in_subset","lift_into","lock","mutexes","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","unlock","vzip","Context","DatanodeClientOptions","DatanodeOptions","ElectionRef","LeaderValue","METASRV_HOME","MetaSrv","MetaSrvOptions","MetaStateHandler","MetasrvInfo","SelectorContext","SelectorRef","TABLE_ID_SEQ","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","and","and","and","and","and","ask_leader","batch_delete","batch_get","batch_get","batch_put","bind_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","client_options","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare_and_put","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","connect_timeout_millis","create_default_schema_if_not_exist","data_home","datanode","datanode_lease_secs","ddl_executor","ddl_executor","default","default","default","delete_range","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","election","election","election","enable_region_failover","enable_telemetry","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","greptimedb_telemetry_task","greptimedb_telemetry_task","handler_group","handler_group","heartbeat","http","in_memory","in_memory","in_memory","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_infancy","is_leader","is_skip_all","kv_backend","kv_backend","kv_backend","kv_backend","leader_cached_kv_backend","leader_cached_kv_backend","leader_cached_kv_backend","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lock","lock","lock","logging","mailbox","mailbox","mailbox","meta_peer_client","meta_peer_client","meta_peer_client","meta_peer_client","new_ctx","on_become_follower","on_become_leader","options","options","or","or","or","or","or","or","or","or","or","plugins","plugins","procedure","procedure_manager","procedure_manager","procedure_manager","publish","put","range","range","reset_in_memory","reset_leader_cached_kv_backend","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","selector","selector","selector","serialize","serialize","serialize","server_addr","server_addr","server_addr","server_addr","set_skip_all","shutdown","skip_all","started","state","state","store_addr","submit_ddl_task","subscribe_manager","subscribe_manager","subset","subset","subset","subset","subset","subset","subset","subset","subset","table_id","table_id_sequence","table_id_sequence","table_metadata_manager","table_metadata_manager","table_metadata_manager","tcp_nodelay","timeout_millis","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_toml_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_start","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","use_memory_store","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CheckLeaderByElection","MetaSrvBuilder","and","and","borrow","borrow","borrow_mut","borrow_mut","build","build_ddl_manager","build_default_meta_peer_client","build_mailbox","build_procedure_manager","check","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","datanode_clients","datanode_clients","default","deref","deref","deref_mut","deref_mut","drop","drop","election","election","from","from","from_subset","from_subset","handler_group","heartbeat_handler","in_memory","in_memory","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","kv_backend","kv_backend","lift_into","lift_into","lock","lock","meta_peer_client","meta_peer_client","new","options","options","or","or","plugins","plugins","sculpt","sculpt","selector","selector","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","METRIC_META_HANDLER_EXECUTE","METRIC_META_HEARTBEAT_CONNECTION_NUM","METRIC_META_INACTIVE_REGIONS","METRIC_META_KV_REQUEST","METRIC_META_LEADER_CACHED_KV_LOAD","__private_field","__private_field","__private_field","__private_field","__private_field","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","or","or","or","or","or","sculpt","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","MockInfo","__clone_box","and","borrow","borrow_mut","channel_manager","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","meta_srv","mock","mock_with_etcdstore","mock_with_memstore","mock_with_memstore_and_selector","or","sculpt","server_addr","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","region_failover","utils","FailoverProcedureGuard","Node","OPEN_REGION_MESSAGE_TIMEOUT","RegionFailoverContext","RegionFailoverKey","RegionFailoverManager","RegionFailoverProcedure","State","TYPE_NAME","_State_registry","__clone_box","__clone_box","activate_region","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cluster_id","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","context","create_context","deactivate_region","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","dist_lock","dist_lock","do_region_failover","drop","drop","drop","drop","drop","drop","drop","dump","eq","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","execute","failed_region","failed_region_exists","failover_end","failover_start","fmt","from","from","from","from","from","from","from","from_json","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","hash","in_memory","in_memory","init","init","init","init","init","init","insert_running_procedures","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","invalidate_cache","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lock_key","mailbox","mailbox","new","new","next","node","or","or","or","or","or","or","procedure_manager","region_lease_secs","region_lease_secs","region_number","remark_inactive_region_if_needed","running_procedures","running_procedures","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","selector","selector","selector_ctx","selector_ctx","serialize","serialize","serialize","serialize","serialize","state","status","subset","subset","subset","subset","subset","subset","table_exists","table_id","table_metadata_manager","table_metadata_manager","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_start","type_id","type_id","type_id","type_id","type_id","type_id","type_name","update_metadata","vzip","vzip","vzip","vzip","vzip","vzip","ActivateRegion","and","borrow","borrow_mut","candidate","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","handle_response","init","into","into_request","is_in_subset","lift_into","new","next","or","region_options","region_storage_path","remark_inactive_region","remark_inactive_region_if_needed","sculpt","send_open_region_message","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DeactivateRegion","and","borrow","borrow_mut","candidate","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","handle_response","init","into","into_request","is_in_subset","lift_into","new","next","or","sculpt","send_close_region_message","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","wait_for_region_lease_expiry","RegionFailoverEnd","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","is_in_subset","lift_into","next","or","sculpt","serialize","status","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionFailoverStart","and","borrow","borrow_mut","choose_candidate","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","failover_candidate","fmt","from","from_subset","init","into","into_request","is_in_subset","lift_into","new","next","or","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","InvalidateCache","and","borrow","borrow_mut","broadcast_invalidate_table_cache_messages","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","is_in_subset","lift_into","next","or","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","UpdateRegionMetadata","and","borrow","borrow_mut","candidate","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","erased_serialize","fmt","from","from_subset","init","into","into_request","is_in_subset","lift_into","new","next","or","pretty_log_table_route_change","region_options","region_storage_path","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","update_metadata","update_table_route","vzip","AddSubRequest","DefaultPublish","DefaultSubscribeManager","Heartbeat","Heartbeat","Message","Publish","PublishRef","SubscribeManager","SubscribeManagerRef","SubscribeQuery","Subscriber","SubscriberRef","Topic","Transport","UnSubRequest","__clone_box","__clone_box","_transport","and","and","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","get_hash","hash","id","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","name","or","or","publish","sculpt","sculpt","send_msg","subscribe","subscribe_manager","subscribe_manager","subscriber","subscriber","subscriber_id","subscribers_by_topic","subset","subset","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","topic","topic2sub","topic_list","transport_msg","transporter","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","un_subscribe","un_subscribe_all","vzip","vzip","DefaultPublish","Publish","PublishRef","_transport","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","new","or","sculpt","send_msg","send_msg","subscribe_manager","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","AddSubRequest","DefaultSubscribeManager","SubscribeManager","SubscribeManagerRef","SubscribeQuery","UnSubRequest","__clone_box","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","or","or","or","sculpt","sculpt","sculpt","subscribe","subscribe","subscriber","subscriber_id","subscribers_by_topic","subscribers_by_topic","subset","subset","subset","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","topic2sub","topic_list","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","un_subscribe","un_subscribe","un_subscribe_all","un_subscribe_all","vzip","vzip","vzip","Subscriber","SubscriberRef","Transport","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","id","id","init","into","into_request","is_in_subset","lift_into","name","name","new","or","sculpt","subset","to_subset","to_subset_unchecked","transport_msg","transport_msg","transporter","try_from","try_into","try_into","type_id","vzip","RegionLeaseKeeper","lease_keeper","RegionLeaseKeeper","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","find_staled_leader_regions","from","from_subset","init","into","into_request","is_in_subset","lift_into","mito","new","or","sculpt","subset","table_metadata_manager","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","utils","vzip","find_staled_leader_regions","staled_leader_regions","Context","LeaseBased","LoadBased","Namespace","Output","Selector","SelectorType","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","lease_based","lift_into","load_based","or","sculpt","select","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","vzip","LeaseBasedSelector","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","or","sculpt","select","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","LoadBasedSelector","MAX_REGION_NUMBER","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","get_leader_peer_ids","init","into","into_request","is_in_subset","lift_into","or","sculpt","select","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","GrpcResult","GrpcStream","admin","cluster","ddl","heartbeat","lock","mailbox","store","Admin","HttpHandler","Router","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","boxed","call","call","call","check_path","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","from_subset","from_subset","handle","handlers","health","heartbeat","inactive_regions","init","init","into","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","is_in_subset","is_in_subset","leader","lift_into","lift_into","make_admin_service","meta","nest","new","new","node_lease","or","or","poll_ready","poll_ready","route","route","router","sculpt","sculpt","subset","subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","util","vzip","vzip","HTTP_OK","HealthHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","init","into","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","HeartBeatHandler","StatValues","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","erased_serialize","filter_by_addr","fmt","from","from","from_ref","from_subset","from_subset","handle","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","meta_peer_client","or","or","sculpt","sculpt","serialize","stat_vals","subset","subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","ClearInactiveRegionsHandler","InactiveRegions","ViewInactiveRegionsHandler","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","erased_serialize","fmt","from","from","from","from_subset","from_subset","from_subset","handle","handle","inactive_regions","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","or","or","or","sculpt","sculpt","sculpt","serialize","store","store","subset","subset","subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","LeaderHandler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","election","from","from_subset","handle","init","into","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","CatalogsHandler","SchemasHandler","TableHandler","TablesHandler","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","extract_table_ids","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","handle","handle","handle","handle","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","or","or","or","or","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","table_metadata_manager","table_metadata_manager","table_metadata_manager","table_metadata_manager","to_http_response","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","HumanLease","LeaseValues","NodeLeaseHandler","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","erased_serialize","erased_serialize","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","handle","human_time","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lease","leases","lift_into","lift_into","lift_into","meta_peer_client","name","or","or","or","sculpt","sculpt","sculpt","serialize","serialize","subset","subset","subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","RouteHandler","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","extract_table_id","from","from_ref","from_subset","handle","init","into","into_request","is_in_subset","lift_into","or","sculpt","subset","table_metadata_manager","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","extract_cluster_id","get_value","to_text_response","get_node_id","handle_ask_leader","BroadcastChannel","Channel","Datanode","Datanode","Frontend","Frontend","Mailbox","MailboxReceiver","MailboxRef","MessageId","__clone_box","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcast","ch","channel","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_future","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","message_id","message_id","new","on_recv","or","or","or","poll","pusher_id","pusher_range","rx","sculpt","sculpt","sculpt","send","subset","subset","subset","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","vzip","vzip","vzip","cached_kv","AlwaysLeader","CheckLeader","CheckLeaderRef","LeaderCachedKvBackend","and","and","as_any","batch_delete","batch_get","batch_put","borrow","borrow","borrow_mut","borrow_mut","cache","check","check","check_leader","compare_and_put","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_new_version","delete_range","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","get_version","init","init","into","into","into_request","into_request","invalid_key","invalid_keys","is_in_subset","is_in_subset","is_leader","lift_into","lift_into","load","name","name","new","or","or","put","range","reset","sculpt","sculpt","store","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","txn","type_id","type_id","validate_version","version","vzip","vzip","with_always_leader","Follower","FollowerState","Leader","LeaderState","State","StateRef","__clone_box","__clone_box","__clone_box","and","and","and","become_follower","become_leader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","enable_leader_cache","enable_leader_cache","fmt","fmt","fmt","follower","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","leader","lift_into","lift_into","lift_into","next_state","or","or","or","sculpt","sculpt","sculpt","server_addr","server_addr","subset","subset","subset","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MetaSrvTableMetadataAllocator","and","borrow","borrow_mut","compat","compat_mut","compat_ref","create","ctx","deref","deref_mut","drop","from","from_subset","handle_create_region_routes","init","into","into_request","is_in_subset","lift_into","new","or","sculpt","selector","subset","table_id_sequence","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip"],"q":[[0,"meta_srv"],[23,"meta_srv::bootstrap"],[67,"meta_srv::cache_invalidator"],[101,"meta_srv::cluster"],[255,"meta_srv::election"],[302,"meta_srv::election::etcd"],[342,"meta_srv::error"],[3584,"meta_srv::error::Error"],[3765,"meta_srv::failure_detector"],[3845,"meta_srv::greptimedb_telemetry"],[3882,"meta_srv::handler"],[4113,"meta_srv::handler::check_leader_handler"],[4142,"meta_srv::handler::collect_stats_handler"],[4171,"meta_srv::handler::failure_handler"],[4232,"meta_srv::handler::failure_handler::runner"],[4362,"meta_srv::handler::filter_inactive_region_stats"],[4391,"meta_srv::handler::keep_lease_handler"],[4420,"meta_srv::handler::mailbox_handler"],[4449,"meta_srv::handler::node_stat"],[4534,"meta_srv::handler::on_leader_start_handler"],[4563,"meta_srv::handler::persist_stats_handler"],[4631,"meta_srv::handler::publish_heartbeat_handler"],[4662,"meta_srv::handler::region_lease_handler"],[4693,"meta_srv::handler::response_header_handler"],[4722,"meta_srv::inactive_region_manager"],[4756,"meta_srv::keys"],[5076,"meta_srv::lease"],[5079,"meta_srv::lock"],[5150,"meta_srv::lock::etcd"],[5187,"meta_srv::lock::keys"],[5188,"meta_srv::lock::memory"],[5220,"meta_srv::metasrv"],[5628,"meta_srv::metasrv::builder"],[5710,"meta_srv::metrics"],[5855,"meta_srv::mocks"],[5894,"meta_srv::procedure"],[5896,"meta_srv::procedure::region_failover"],[6137,"meta_srv::procedure::region_failover::activate_region"],[6177,"meta_srv::procedure::region_failover::deactivate_region"],[6214,"meta_srv::procedure::region_failover::failover_end"],[6247,"meta_srv::procedure::region_failover::failover_start"],[6282,"meta_srv::procedure::region_failover::invalidate_cache"],[6316,"meta_srv::procedure::region_failover::update_metadata"],[6355,"meta_srv::pubsub"],[6462,"meta_srv::pubsub::publish"],[6496,"meta_srv::pubsub::subscribe_manager"],[6599,"meta_srv::pubsub::subscriber"],[6637,"meta_srv::region"],[6639,"meta_srv::region::lease_keeper"],[6671,"meta_srv::region::lease_keeper::mito"],[6672,"meta_srv::region::lease_keeper::utils"],[6673,"meta_srv::selector"],[6726,"meta_srv::selector::lease_based"],[6754,"meta_srv::selector::load_based"],[6784,"meta_srv::service"],[6793,"meta_srv::service::admin"],[6879,"meta_srv::service::admin::health"],[6908,"meta_srv::service::admin::heartbeat"],[6975,"meta_srv::service::admin::inactive_regions"],[7065,"meta_srv::service::admin::leader"],[7094,"meta_srv::service::admin::meta"],[7232,"meta_srv::service::admin::node_lease"],[7327,"meta_srv::service::admin::route"],[7362,"meta_srv::service::admin::util"],[7365,"meta_srv::service::heartbeat"],[7367,"meta_srv::service::mailbox"],[7478,"meta_srv::service::store"],[7479,"meta_srv::service::store::cached_kv"],[7562,"meta_srv::state"],[7673,"meta_srv::table_meta_alloc"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Builder for <code>MetaPeerClient</code>.","Error type for MetaPeerClientBuilder","","Uninitialized field","Custom validation error","","","","","","","","","","","","","","","","","Builds a new <code>MetaPeerClient</code>.","","","","","","","","","","","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Campaign waits to acquire leadership in an election.","","","","","","","","","","","","Returns the argument unchanged.","","","When a new leader is born, it may need some initialization …","","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if current node is the leader.","Returns the leader value for the current election.","","","Releases election leadership so other campaigners may …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BatchGet</code> variant","","SNAFU context selector for the <code>Error::ConnectEtcd</code> variant","","SNAFU context selector for the <code>Error::ConvertProtoData</code> …","","SNAFU context selector for the <code>Error::CorruptedTableRoute</code> …","","SNAFU context selector for the <code>Error::CreateChannel</code> variant","","SNAFU context selector for the <code>Error::DecodeTableRoute</code> …","","SNAFU context selector for the <code>Error::DeserializeFromJson</code> …","","SNAFU context selector for the <code>Error::EmptyKey</code> variant","","SNAFU context selector for the <code>Error::EmptyTableName</code> …","","","SNAFU context selector for the <code>Error::EtcdFailed</code> variant","","SNAFU context selector for the <code>Error::ExceededRetryLimit</code> …","","SNAFU context selector for the <code>Error::GetFullTableInfo</code> …","","SNAFU context selector for the <code>Error::InitMetadata</code> variant","","SNAFU context selector for the <code>Error::InvalidArguments</code> …","","SNAFU context selector for the <code>Error::InvalidCatalogValue</code> …","","SNAFU context selector for the <code>Error::InvalidFullTableName</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidHttpBody</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidLeaseKey</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidStatKey</code> …","","SNAFU context selector for the <code>Error::InvalidUtf8Value</code> …","","SNAFU context selector for the <code>Error::InvalidateTableCache</code> …","","SNAFU context selector for the <code>Error::IsNotLeader</code> variant","","SNAFU context selector for the <code>Error::Join</code> variant","","SNAFU context selector for the <code>Error::KvBackend</code> variant","","SNAFU context selector for the <code>Error::LeaseGrant</code> variant","","SNAFU context selector for the <code>Error::LeaseKeyFromUtf8</code> …","","SNAFU context selector for the <code>Error::LeaseValueFromUtf8</code> …","","SNAFU context selector for the <code>Error::ListCatalogs</code> variant","","SNAFU context selector for the <code>Error::ListSchemas</code> variant","","","SNAFU context selector for the <code>Error::LockNotConfig</code> variant","SNAFU context selector for the <code>Error::Lock</code> variant","","SNAFU context selector for the <code>Error::MailboxClosed</code> variant","","SNAFU context selector for the <code>Error::MailboxReceiver</code> …","","SNAFU context selector for the <code>Error::MailboxTimeout</code> …","","SNAFU context selector for the <code>Error::MissingRequestHeader</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MoveValue</code> variant","","SNAFU context selector for the <code>Error::NextSequence</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::NoLeader</code> variant","","SNAFU context selector for the <code>Error::OperateRegion</code> variant","","SNAFU context selector for the <code>Error::Other</code> variant","","SNAFU context selector for the <code>Error::ParseAddr</code> variant","","SNAFU context selector for the <code>Error::ParseNum</code> variant","","SNAFU context selector for the <code>Error::PublishMessage</code> …","","SNAFU context selector for the <code>Error::PushMessage</code> variant","","SNAFU context selector for the <code>Error::PusherNotFound</code> …","","SNAFU context selector for the <code>Error::Range</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::RequestDatanode</code> …","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::RetryLater</code> variant","","SNAFU context selector for the <code>Error::SchemaAlreadyExists</code> …","","SNAFU context selector for the <code>Error::SendShutdownSignal</code> …","","SNAFU context selector for the <code>Error::SerializeToJson</code> …","","SNAFU context selector for the <code>Error::ShutdownServer</code> …","","SNAFU context selector for the <code>Error::StartGrpc</code> variant","","SNAFU context selector for the <code>Error::StartHttp</code> variant","","SNAFU context selector for the <code>Error::StartProcedureManager</code>…","","SNAFU context selector for the <code>Error::StartTelemetryTask</code> …","","SNAFU context selector for the <code>Error::StatKeyFromUtf8</code> …","","SNAFU context selector for the <code>Error::StatValueFromUtf8</code> …","","SNAFU context selector for the <code>Error::StopProcedureManager</code> …","","SNAFU context selector for the <code>Error::SubmitDdlTask</code> variant","","SNAFU context selector for the <code>Error::SubmitProcedure</code> …","","SNAFU context selector for the <code>Error::TableAlreadyExists</code> …","","SNAFU context selector for the <code>Error::TableIdChanged</code> …","","SNAFU context selector for the <code>Error::TableInfoNotFound</code> …","","SNAFU context selector for the <code>Error::TableMetadataManager</code> …","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::TableRouteConversion</code> …","","SNAFU context selector for the <code>Error::TableRouteNotFound</code> …","","SNAFU context selector for the <code>Error::TcpBind</code> variant","","SNAFU context selector for the <code>Error::TcpIncoming</code> variant","","SNAFU context selector for the <code>Error::TooManyPartitions</code> …","","SNAFU context selector for the <code>Error::Txn</code> variant","","","SNAFU context selector for the …","SNAFU context selector for the <code>Error::Unexpected</code> variant","","SNAFU context selector for the <code>Error::Unlock</code> variant","","","SNAFU context selector for the …","SNAFU context selector for the <code>Error::Unsupported</code> variant","","SNAFU context selector for the <code>Error::UpdateTableMetadata</code> …","","SNAFU context selector for the <code>Error::UpdateTableRoute</code> …","","SNAFU context selector for the <code>Error::WaitProcedure</code> variantonsume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeolds the heartbeat statistics. It is capped by the number …","This is our port of Akka’s “PhiAccrualFailureDetector…","","Duration corresponding to number of potentially …","","","","","","","","","","","","","","","","","","","","","","","","Bootstrap the stats with heartbeats that corresponds to …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Number of samples to use for calculation of mean and …","","Minimum standard deviation to use for the normal …","","","","Calculation of phi, derived from the Cumulative …","The suspicion level of the accrual failure detector.","","","","","","","A low threshold is prone to generate many wrong suspicions …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Approximate bytes of this region","Approximate number of rows in this region","","","","","","","","","","","","","","","","","","","","","The engine name.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","The region_id.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The read capacity units during this period","The read capacity units during this period","","How many regions on this node","","","The region role.","","","","","","","","","","","","","","","","","","","","","","","","","The write capacity units during this period","The write capacity units during this period","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","The input is a list of regions on a specific node. If one …","Scan all inactive regions in the cluster.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the latest number of regions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","All keys used for distributed locking in the Metasrv. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A implementation of distributed lock based on etcd. The …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","A “Node” in the state machine of region failover …","","The “Context” of region failover procedure state …","A key for the preventing running multiple failover …","","The states transition of region failover procedure:","The state machine of region failover procedure. Driven by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Sleep for <code>region_lease_expiry_seconds</code>, to make sure the …","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Updates the metadata of the table.","","","","The default implementation of Publish","","","","","This trait provides a <code>send_msg</code> method that can be used by …","","","","","","","Subscribed topic type, determined by the ability of meta.","This trait defines how messages are delivered from meta to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Subscriber’s id, globally unique, assigned by leader …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Subscriber’s name, passed in by subscriber.","","","","","","","","","","","","","","","","","","","","","","","","","","Transport channel from meta to subscriber.","","","","","","","","","","","","","The default implementation of Publish","This trait provides a <code>send_msg</code> method that can be used by …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This trait defines how messages are delivered from meta to …","","","","","","","","","","","Returns the argument unchanged.","","","Subscriber’s id, globally unique, assigned by leader …","","Calls <code>U::from(self)</code>.","","","","","Subscriber’s name, passed in by subscriber.","","","","","","","","","Transport channel from meta to subscriber.","","","","","","","","","","","","","","","","","","Returns staled RegionRole::Leader regions.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns staled regions.","Returns Some(region_id) if it’s a inactive leader region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A cache dedicated to a Leader node, in order to cache some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The caller MUST ensure during the loading, there are no …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","With a leader checker which always returns true when …","","","","","State transition.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","pre-allocates create table’s table id and region routes.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,0,0,38,38,37,41,41,33,37,38,38,33,41,33,37,38,41,33,37,38,37,37,33,37,0,37,37,41,33,37,38,41,33,37,38,41,33,37,38,37,37,41,33,37,38,41,33,37,38,41,33,37,38,37,33,37,38,38,41,33,37,38,38,38,37,41,33,37,38,33,33,33,33,37,33,37,41,33,37,38,41,33,37,38,41,33,37,38,41,33,37,38,33,41,33,37,38,37,33,37,0,41,33,37,38,38,33,33,33,37,33,37,41,33,37,38,41,33,37,38,37,0,38,41,33,37,38,41,33,37,38,41,33,37,38,41,41,33,33,37,37,38,38,41,33,37,38,41,33,37,38,0,55,0,359,0,55,55,55,55,55,359,55,55,55,55,55,55,55,55,0,55,55,55,55,55,359,55,55,55,55,359,359,55,55,359,55,359,55,55,55,55,55,55,55,55,55,55,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,52,0,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,0,52,52,0,0,52,0,52,52,0,0,52,0,52,0,52,0,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,116,120,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,52,52,66,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,109,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,128,72,89,92,97,98,65,66,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,94,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,52,65,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,83,90,91,92,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,126,127,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,69,70,71,75,78,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,95,0,64,77,52,82,100,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,85,107,111,52,88,75,95,96,83,86,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,79,113,52,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,73,74,87,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,101,101,102,102,103,103,104,104,105,105,107,107,108,108,109,109,110,110,64,64,65,65,66,66,111,111,112,112,113,113,67,67,114,114,115,115,116,116,117,117,118,118,119,119,120,120,68,68,69,69,70,70,71,71,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,72,72,129,129,130,130,131,131,73,73,74,74,75,75,76,76,77,77,78,78,79,79,80,80,132,132,133,133,134,134,81,81,82,82,135,135,83,83,136,136,137,137,138,138,84,84,139,139,85,85,140,140,141,141,142,142,143,143,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,144,144,94,94,95,95,96,96,97,97,145,145,146,146,147,147,148,148,149,149,150,150,151,151,98,98,152,152,99,99,100,100,52,52,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,144,80,101,102,103,104,105,107,108,109,110,64,65,66,111,112,113,67,114,115,116,117,118,119,120,68,69,70,71,121,122,123,124,125,126,127,128,72,129,130,131,73,74,75,76,77,78,79,80,132,133,134,81,82,135,83,136,137,138,84,139,85,140,141,142,143,86,87,88,89,90,91,92,93,144,94,95,96,97,145,146,147,148,149,150,151,98,152,99,100,52,360,361,362,363,364,365,366,367,368,369,370,371,372,373,360,374,375,361,376,377,378,379,380,381,382,364,383,384,385,386,387,388,389,390,391,392,362,393,392,394,395,396,367,381,382,397,398,399,400,401,402,403,404,405,406,407,408,363,370,409,392,362,410,411,412,372,373,360,375,413,414,397,398,399,376,377,378,379,380,381,382,364,365,415,416,383,417,418,400,419,420,401,421,422,423,384,385,424,425,386,394,387,388,389,426,390,427,428,429,430,431,432,433,366,395,396,367,434,435,393,436,437,368,438,439,440,441,442,443,444,369,391,445,446,436,409,420,425,446,447,407,410,433,400,436,437,394,431,421,411,402,403,404,405,406,407,408,363,410,411,413,415,416,423,427,428,429,430,435,438,439,440,441,442,443,444,417,418,432,435,422,0,0,159,161,159,161,159,161,159,161,159,159,159,161,159,161,159,161,159,161,161,159,161,159,161,159,159,161,161,159,159,161,159,161,161,161,159,159,159,161,159,161,159,161,161,159,161,161,159,159,159,161,159,161,159,0,161,161,159,159,159,161,159,161,159,161,159,161,159,161,159,161,161,159,159,161,159,159,161,159,0,167,167,167,167,167,167,167,167,167,167,167,0,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,0,0,0,0,0,0,0,174,169,169,181,186,171,177,174,169,181,186,171,177,174,169,181,186,171,177,174,169,171,174,0,171,174,169,174,169,0,181,186,171,177,174,169,181,186,171,177,174,169,181,186,171,177,174,169,171,177,174,169,181,186,171,177,174,169,181,186,171,177,174,169,181,186,171,177,174,169,0,0,177,181,186,171,177,174,169,174,169,181,186,171,177,174,169,170,169,186,169,181,177,177,181,186,171,177,174,169,174,177,181,186,171,177,174,169,177,181,186,171,177,174,169,170,181,186,171,177,174,169,171,0,181,186,171,177,174,169,0,170,186,181,186,171,169,171,0,0,171,181,186,171,177,174,169,0,0,181,174,169,171,169,177,0,169,174,181,0,181,186,171,177,174,169,171,181,171,171,177,181,186,171,177,174,169,171,171,174,169,181,186,171,177,174,169,181,186,171,177,174,169,181,186,171,177,174,169,181,181,186,186,171,171,177,177,174,174,169,169,181,186,171,177,174,169,169,181,186,171,177,174,169,0,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,0,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,0,0,201,192,201,192,201,192,201,192,201,192,201,192,201,192,201,192,201,192,192,201,192,201,192,192,201,201,192,201,192,201,192,192,201,192,201,192,201,192,201,0,201,192,201,192,201,192,201,192,201,192,201,201,192,192,192,201,192,201,192,0,0,0,0,200,200,195,196,194,200,195,196,194,200,195,196,194,194,200,195,196,194,200,195,196,194,200,195,196,194,195,195,200,195,196,194,200,195,196,194,200,195,195,196,194,196,195,196,200,195,196,194,200,195,196,194,194,195,195,200,195,196,194,200,195,196,194,200,195,196,194,200,195,196,194,194,200,195,196,194,195,200,195,196,194,195,195,196,194,195,200,195,196,194,195,195,195,195,200,195,196,194,200,195,196,194,200,195,196,194,200,195,196,194,200,200,195,195,196,196,194,194,200,195,196,194,200,195,196,194,0,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,0,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,0,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,0,0,205,205,207,207,207,205,207,205,207,205,205,207,205,207,205,207,205,205,207,205,207,205,207,205,207,207,205,207,205,207,205,207,205,207,205,207,205,207,205,207,205,207,205,205,207,205,207,205,205,207,205,207,205,205,205,205,207,205,207,205,207,205,205,207,205,205,207,205,207,205,205,207,207,205,205,207,207,205,207,205,207,205,207,0,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,0,0,0,215,216,215,216,215,216,215,215,216,215,216,215,216,215,216,215,216,215,216,215,215,216,215,215,215,216,215,216,216,215,216,215,216,215,216,216,215,216,215,215,216,215,216,215,215,216,215,215,216,215,216,215,216,215,216,215,216,215,215,216,216,215,216,215,216,0,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,0,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,0,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,0,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,0,0,0,0,0,0,0,0,0,0,0,223,224,47,222,225,227,228,225,227,228,223,224,47,48,222,225,227,228,223,224,47,48,222,225,227,228,223,224,47,48,222,223,224,47,222,223,224,47,222,223,47,222,225,227,228,223,224,47,48,222,225,227,228,223,224,47,48,222,225,227,228,223,224,47,48,222,225,225,227,227,228,228,223,224,47,48,222,225,227,228,223,224,47,48,222,223,224,48,222,225,227,228,223,224,47,48,222,223,224,47,222,223,223,223,223,223,224,224,224,224,224,47,47,47,47,47,222,222,222,222,222,223,224,48,222,223,224,47,48,222,225,227,228,223,224,47,47,48,222,223,224,47,222,223,224,47,48,222,225,227,228,223,224,47,48,222,223,47,222,222,223,47,222,225,227,228,223,224,47,48,222,225,227,228,223,224,47,48,222,225,227,228,223,224,47,48,222,225,227,228,223,224,47,48,222,225,227,228,223,224,47,48,222,224,223,47,222,225,227,228,223,224,47,48,222,222,48,225,227,228,223,224,47,48,222,223,224,48,222,48,225,227,228,223,224,47,48,222,224,223,224,47,222,225,227,228,223,224,47,48,222,225,227,228,223,224,47,48,222,225,227,228,223,223,223,224,224,224,47,47,47,48,48,48,222,222,222,225,225,227,227,228,228,223,223,224,224,47,47,48,48,222,222,225,227,228,223,224,47,48,222,225,227,228,223,224,47,48,222,0,0,0,0,0,0,0,0,0,234,235,234,235,234,235,234,235,234,235,234,235,234,234,235,234,235,234,235,235,0,234,234,235,234,235,234,235,234,235,234,235,234,235,235,0,234,235,448,235,235,0,235,235,234,235,234,235,234,235,234,235,234,235,234,235,234,234,235,235,234,235,448,234,235,0,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,0,0,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,0,0,0,0,0,0,0,0,0,0,0,0,0,8,244,245,179,246,10,31,449,253,8,244,245,179,246,10,10,10,10,10,10,8,31,449,253,8,244,245,179,246,10,31,449,253,8,244,245,179,246,10,0,244,8,244,245,179,246,10,8,244,245,179,246,10,10,31,449,253,8,244,245,179,246,10,31,449,253,8,244,245,179,246,10,31,449,253,8,244,245,179,246,10,245,10,8,8,246,10,10,8,244,245,10,31,449,253,8,244,245,179,246,10,31,449,253,8,244,245,179,246,10,8,244,245,31,449,253,8,244,245,179,246,10,10,179,10,8,8,8,244,245,8,8,8,8,8,244,244,244,244,244,245,245,245,245,245,8,244,245,8,244,245,31,449,253,8,244,245,179,246,10,8,244,245,179,246,10,31,449,253,8,244,245,179,246,10,253,10,10,10,10,8,10,179,10,31,449,253,8,244,245,179,246,10,31,449,253,8,244,245,179,246,10,31,449,253,8,244,245,179,246,10,31,449,253,8,244,245,179,246,10,179,10,179,10,179,246,10,253,179,10,31,449,253,8,244,245,179,246,10,10,10,10,8,10,179,10,10,179,246,10,10,253,253,10,10,31,449,253,8,244,245,179,246,10,10,10,8,10,253,10,10,10,10,10,179,179,31,449,253,8,244,245,179,246,10,10,8,10,8,244,245,31,8,179,246,179,10,179,10,253,10,8,10,10,253,31,449,253,8,244,245,179,246,10,246,10,10,10,179,10,245,245,8,244,245,179,246,10,31,449,253,8,244,245,179,246,10,31,449,253,8,244,245,179,246,10,8,31,449,253,8,244,245,179,246,10,31,31,449,449,253,253,8,8,244,244,245,245,179,179,246,246,10,10,10,31,449,253,8,244,245,179,246,10,10,8,31,449,253,8,244,245,179,246,10,0,0,263,266,263,266,263,266,263,0,0,0,0,266,263,266,263,266,263,266,263,263,263,263,266,263,266,263,266,263,263,263,266,263,266,263,263,263,263,263,266,263,266,263,266,263,266,263,263,263,266,263,263,263,263,263,263,263,263,266,263,263,263,266,263,263,263,266,263,266,263,266,263,266,263,263,266,266,263,266,263,266,0,0,0,0,0,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,267,269,269,271,271,272,272,273,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,269,271,272,273,267,267,269,269,271,271,272,272,273,273,267,269,271,272,273,267,269,271,272,273,0,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,0,0,0,0,274,274,274,274,274,274,274,274,274,274,274,274,0,0,0,0,0,0,0,0,0,0,279,0,275,276,0,193,278,279,275,277,276,193,278,279,275,277,276,193,278,279,275,277,276,275,276,275,276,275,193,278,279,275,277,276,193,278,279,275,277,276,193,278,279,275,277,276,279,193,0,193,278,279,275,277,276,193,278,279,275,277,276,277,193,276,193,193,278,278,279,275,277,276,279,275,275,275,275,275,275,277,279,277,193,0,0,277,193,278,279,275,275,277,276,279,275,276,193,278,279,275,277,276,275,275,193,276,193,278,279,275,277,276,193,193,278,279,275,277,276,193,278,279,275,277,276,0,193,278,279,275,277,276,278,193,278,279,275,277,276,279,193,276,193,279,283,279,193,278,279,275,277,276,193,193,276,275,283,193,278,193,278,279,275,277,276,193,276,193,276,277,283,283,283,283,277,283,193,278,279,275,277,276,193,275,193,276,275,276,193,278,279,275,277,276,193,278,279,275,277,276,193,278,279,275,277,276,193,193,278,278,279,279,275,275,277,277,276,276,193,193,278,279,275,277,276,279,0,193,278,279,275,277,276,0,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,0,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,0,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,0,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,0,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,0,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,0,291,291,291,291,291,291,291,291,291,291,291,291,291,291,0,0,0,293,294,0,0,0,0,0,0,0,0,0,0,0,293,294,298,293,294,293,294,293,294,293,294,293,294,293,294,293,294,293,294,293,294,293,294,293,294,293,293,293,293,293,293,293,294,293,294,293,294,293,294,293,293,302,293,294,293,294,293,294,293,294,293,294,302,293,294,0,293,294,450,300,0,298,0,295,297,451,293,294,293,294,293,294,293,294,294,301,295,299,302,293,294,293,293,294,294,293,294,300,300,293,294,0,0,0,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,450,298,298,298,298,298,298,298,298,298,298,0,0,0,0,0,0,297,295,301,297,295,301,297,295,301,297,297,297,295,301,297,295,301,297,295,301,297,301,295,301,297,295,301,297,295,301,297,297,295,301,297,297,295,301,297,295,301,297,295,301,297,295,301,297,295,301,297,295,301,297,295,301,297,295,301,297,300,301,295,297,451,301,295,301,297,297,295,301,297,295,301,297,301,295,295,301,297,295,295,301,301,297,297,295,301,297,300,301,300,301,295,301,297,0,0,0,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,299,302,302,302,302,302,302,302,0,0,0,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,0,303,303,303,303,303,303,303,303,303,303,303,0,303,0,0,452,305,305,0,452,0,0,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,0,305,0,305,305,452,305,305,305,305,305,305,305,305,305,305,305,0,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,0,0,309,309,309,309,309,309,309,309,309,309,309,0,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,0,0,0,0,0,0,0,0,0,0,0,0,312,312,314,312,314,312,314,0,312,312,314,0,312,312,312,314,312,314,312,314,314,312,314,312,314,312,314,312,314,312,312,314,321,314,0,0,0,312,314,312,314,312,312,312,314,312,314,0,312,314,0,0,314,312,314,0,312,314,312,312,0,314,312,312,314,312,314,312,312,314,312,314,312,314,312,312,314,314,312,314,0,312,314,0,0,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,0,0,323,323,324,323,324,323,324,323,323,323,324,323,324,323,324,323,324,323,324,324,323,324,324,0,324,323,324,323,323,324,323,323,324,323,324,323,324,323,324,323,324,323,323,324,323,324,324,324,323,324,323,323,324,323,324,323,324,323,323,324,324,323,324,323,324,0,0,0,326,327,325,326,327,325,326,327,325,326,327,325,326,327,325,326,327,325,326,327,325,326,327,325,325,326,327,325,325,325,326,327,325,326,327,325,326,327,325,326,327,325,326,327,325,326,327,325,326,327,325,326,327,325,326,327,325,326,327,325,325,326,327,326,327,325,326,327,325,326,327,325,326,327,325,326,326,327,327,325,325,326,327,325,326,327,325,0,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,0,0,0,0,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,0,329,330,331,332,329,330,331,332,329,330,331,332,329,330,331,332,329,329,330,330,331,331,332,332,329,330,331,332,329,330,331,332,0,0,0,336,334,335,336,334,335,336,334,335,336,334,335,336,334,335,336,334,335,336,334,335,336,334,335,334,335,336,334,335,334,335,334,335,336,334,335,336,334,335,336,334,336,334,335,336,334,335,336,334,335,336,334,335,334,335,336,334,335,336,334,336,334,335,336,334,335,334,335,336,334,335,336,334,335,336,334,335,336,334,335,336,336,334,334,335,335,336,334,335,336,334,335,0,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,0,0,0,0,0,0,0,172,188,172,188,0,0,0,0,188,172,286,188,172,286,188,172,286,188,453,286,286,188,188,172,286,188,172,286,188,172,286,188,172,286,188,172,286,188,172,286,188,188,188,188,172,286,188,188,172,286,188,172,286,188,172,286,188,286,172,286,188,172,286,188,172,286,188,286,286,286,453,172,286,188,286,188,172,286,172,286,188,453,172,286,188,188,188,172,286,188,172,286,188,172,286,188,172,172,286,286,188,188,286,172,286,188,172,286,188,0,0,0,0,0,344,340,340,340,340,340,344,340,344,340,340,454,344,340,340,344,340,344,340,344,340,340,340,344,340,344,340,344,340,344,340,344,340,340,344,340,344,340,344,340,340,340,344,340,340,344,340,340,340,340,340,344,340,340,340,340,344,340,340,344,340,344,340,344,340,344,340,344,344,340,340,340,344,340,340,340,344,340,340,352,0,352,0,0,0,352,353,354,352,353,354,0,0,352,353,354,352,353,354,352,353,354,352,353,354,352,353,354,352,353,354,352,353,354,352,353,354,352,353,354,352,353,354,352,353,352,353,354,352,352,353,354,352,353,354,352,353,354,352,353,354,352,353,354,352,353,354,352,353,354,352,352,353,354,352,352,353,354,352,353,354,353,354,352,353,354,352,353,354,352,353,354,352,353,354,352,353,354,352,352,353,353,354,354,352,353,354,352,353,354,0,355,355,355,355,355,355,355,355,355,355,355,355,355,0,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[2,[[3,[2,2]]]],[[4,5,6],7],[[]],[[]],[[8,9],[[7,[10]]]],[11,11],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[]],0,[[],13],[[]],[[],14],[[],15],[[]],0,[[8,9],[[7,[11]]]],0,[2,[[16,[2,2]]]],[11,9],0,[10,5],[[]],[11,7],0,[11,7],[[],[[18,[17]]]],[[]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,[2,[[3,[2,2]]]],[[]],[[]],[[21,22,23],24],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],0,[[],13],[[]],[[],14],[[21,22,25],[[28,[[27,[26]]]]]],[[21,22,29],[[28,[[27,[26]]]]]],[[],15],[[]],0,[[30,31],21],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,0,0,0,0,0,[1],0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[],32],[[33,[35,[[35,[34]]]]],[[7,[[35,[36]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[18,[33,38]]]],[[37,39],37],0,0,[[[19,[40]],41],7],[37,37],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],37],[[],37],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[37,[19,[42]]],37],0,0,[[38,43],44],[[38,43],44],[[]],[[]],[[]],[45,38],[[]],[46,38],[[]],[[]],[[]],[[]],[[]],[33,[[7,[[49,[47,48]]]]]],[[33,15],[[7,[[35,[36]]]]]],[[33,[35,[47]]],[[7,[[49,[47,48]]]]]],[33,[[7,[50]]]],[[37,51],37],0,0,[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[33,15],[[]],[[]],[[]],[[]],[[37,13],37],0,0,[52,15],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[53],[[33,[35,[34]],[35,[34]],15],[[7,[[35,[36]]]]]],[[33,[35,[[35,[34]]]]],[[7,[[35,[36]]]]]],[[33,[35,[34]],[35,[34]],15],[[7,[[35,[36]]]]]],[[37,54],37],0,0,[[]],[[]],[[]],[[]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[]],[[[35,[36]]],[[7,[[49,[47,48]]]]]],[[],45],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[1],[2,[[3,[2,2]]]],[[]],[[]],[[],[[28,[[27,[26]]]]]],[55,55],[[]],[[],12],[[],12],[[],12],[13],[13],[13],0,[[55,43],44],[[55,43],44],[[]],[[]],[[]],[[],15],[[],13],[[]],[[],14],[[],15],[[],15],[[],[[28,[[27,[26]]]]]],[[]],[2,[[16,[2,2]]]],[[],[[28,[[27,[26]]]]]],[[]],[[],[[56,[55]]]],[[],[[18,[17]]]],[[]],[[],45],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[57,[[28,[[27,[26]]]]]],0,[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[57,15],0,[[],13],[[]],[[],14],[[],15],[57,15],0,[57,[[28,[[27,[26]]]]]],0,0,[[]],[2,[[16,[2,2]]]],[57,[[28,[[27,[26]]]]]],[[]],[57,[[56,[55]]]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],[[[58,[4]],[58,[[59,[[58,[4]]]]]]],[[7,[42]]]],[[[58,[4]],60],[[7,[42]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[52,61],[[],32],0,[52,[[19,[62]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[64,[[63,[45]]]]],52],[[[65,[[63,[54]],[63,[54]]]]],52],[[[66,[[63,[13]],[63,[13]]]]],52],[67,52],[68,52],[[[69,[[63,[45]]]]],52],[[[70,[[63,[45]]]]],52],[[[71,[[63,[45]]]]],52],[[[72,[[63,[45]]]]],52],[[[73,[[63,[25]]]]],52],[[[74,[[63,[25]]]]],52],[[[75,[[63,[45]],[63,[45]]]]],52],[76,52],[[[77,[[63,[45]]]]],52],[[[78,[[63,[45]]]]],52],[[[79,[[63,[45]]]]],52],[[[80,[[63,[45]]]]],52],[81,52],[[[82,[[63,[45]]]]],52],[[[83,[[63,[45]],[63,[13]]]]],52],[84,52],[[[85,[[63,[45]]]]],52],[[[86,[[63,[45]]]]],52],[[[87,[[63,[45]]]]],52],[[[88,[[63,[45]]]]],52],[[[89,[[63,[45]]]]],52],[[[90,[[63,[54]]]]],52],[[[91,[[63,[54]]]]],52],[[[92,[[63,[54]],[63,[45]]]]],52],[93,52],[[[94,[[63,[45]]]]],52],[[[95,[[63,[45]],[63,[45]]]]],52],[[[96,[[63,[45]]]]],52],[[[97,[[63,[45]]]]],52],[[[98,[[63,[45]]]]],52],[99,52],[[[100,[[63,[45]]]]],52],0,[52,[[19,[32]]]],[101,101],[102,102],[103,103],[104,104],[105,105],[[[107,[106]]],[[107,[106]]]],[108,108],[[[109,[106]]],[[109,[106]]]],[110,110],[[[64,[106]]],[[64,[106]]]],[[[65,[106,106]]],[[65,[106,106]]]],[[[66,[106,106]]],[[66,[106,106]]]],[[[111,[106]]],[[111,[106]]]],[112,112],[[[113,[106]]],[[113,[106]]]],[67,67],[114,114],[115,115],[[[116,[106]]],[[116,[106]]]],[117,117],[118,118],[119,119],[[[120,[106]]],[[120,[106]]]],[68,68],[[[69,[106]]],[[69,[106]]]],[[[70,[106]]],[[70,[106]]]],[[[71,[106]]],[[71,[106]]]],[121,121],[122,122],[123,123],[124,124],[125,125],[[[126,[106]]],[[126,[106]]]],[[[127,[106]]],[[127,[106]]]],[[[128,[106]]],[[128,[106]]]],[[[72,[106]]],[[72,[106]]]],[129,129],[130,130],[131,131],[[[73,[106]]],[[73,[106]]]],[[[74,[106]]],[[74,[106]]]],[[[75,[106,106]]],[[75,[106,106]]]],[76,76],[[[77,[106]]],[[77,[106]]]],[[[78,[106]]],[[78,[106]]]],[[[79,[106]]],[[79,[106]]]],[[[80,[106]]],[[80,[106]]]],[132,132],[133,133],[134,134],[81,81],[[[82,[106]]],[[82,[106]]]],[135,135],[[[83,[106,106]]],[[83,[106,106]]]],[136,136],[137,137],[138,138],[84,84],[139,139],[[[85,[106]]],[[85,[106]]]],[140,140],[141,141],[142,142],[143,143],[[[86,[106]]],[[86,[106]]]],[[[87,[106]]],[[87,[106]]]],[[[88,[106]]],[[88,[106]]]],[[[89,[106]]],[[89,[106]]]],[[[90,[106]]],[[90,[106]]]],[[[91,[106]]],[[91,[106]]]],[[[92,[106,106]]],[[92,[106,106]]]],[93,93],[[[144,[106]]],[[144,[106]]]],[[[94,[106]]],[[94,[106]]]],[[[95,[106,106]]],[[95,[106,106]]]],[[[96,[106]]],[[96,[106]]]],[[[97,[106]]],[[97,[106]]]],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[[[98,[106]]],[[98,[106]]]],[152,152],[99,99],[[[100,[106]]],[[100,[106]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[52,13,[35,[45]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[52,4],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,0,0,0,0,0,0,0,[[[64,[[63,[45]]]]],[[18,[52]]]],[[[65,[[63,[54]],[63,[54]]]]],[[18,[52]]]],[[[66,[[63,[13]],[63,[13]]]]],[[18,[52]]]],[67,[[18,[52]]]],[68,[[18,[52]]]],[[[69,[[63,[45]]]]],[[18,[52]]]],[[[70,[[63,[45]]]]],[[18,[52]]]],[[[71,[[63,[45]]]]],[[18,[52]]]],[[[72,[[63,[45]]]]],[[18,[52]]]],[[[73,[[63,[25]]]]],[[18,[52]]]],[[[74,[[63,[25]]]]],[[18,[52]]]],[[[75,[[63,[45]],[63,[45]]]]],[[18,[52]]]],[76,[[18,[52]]]],[[[77,[[63,[45]]]]],[[18,[52]]]],[[[78,[[63,[45]]]]],[[18,[52]]]],[[[79,[[63,[45]]]]],[[18,[52]]]],[[[80,[[63,[45]]]]],[[18,[52]]]],[81,[[18,[52]]]],[[[82,[[63,[45]]]]],[[18,[52]]]],[[[83,[[63,[45]],[63,[13]]]]],[[18,[52]]]],[84,[[18,[52]]]],[[[85,[[63,[45]]]]],[[18,[52]]]],[[[86,[[63,[45]]]]],[[18,[52]]]],[[[87,[[63,[45]]]]],[[18,[52]]]],[[[88,[[63,[45]]]]],[[18,[52]]]],[[[89,[[63,[45]]]]],[[18,[52]]]],[[[90,[[63,[54]]]]],[[18,[52]]]],[[[91,[[63,[54]]]]],[[18,[52]]]],[[[92,[[63,[54]],[63,[45]]]]],[[18,[52]]]],[93,[[18,[52]]]],[[[94,[[63,[45]]]]],[[18,[52]]]],[[[95,[[63,[45]],[63,[45]]]]],[[18,[52]]]],[[[96,[[63,[45]]]]],[[18,[52]]]],[[[97,[[63,[45]]]]],[[18,[52]]]],[[[98,[[63,[45]]]]],[[18,[52]]]],[99,[[18,[52]]]],[[[100,[[63,[45]]]]],[[18,[52]]]],0,[[101,43],44],[[102,43],44],[[103,43],44],[[104,43],44],[[105,43],44],[[[107,[153]],43],44],[[108,43],44],[[[109,[153]],43],44],[[110,43],44],[[[64,[153]],43],44],[[[65,[153,153]],43],44],[[[66,[153,153]],43],44],[[[111,[153]],43],44],[[112,43],44],[[[113,[153]],43],44],[[67,43],44],[[114,43],44],[[115,43],44],[[[116,[153]],43],44],[[117,43],44],[[118,43],44],[[119,43],44],[[[120,[153]],43],44],[[68,43],44],[[[69,[153]],43],44],[[[70,[153]],43],44],[[[71,[153]],43],44],[[121,43],44],[[122,43],44],[[123,43],44],[[124,43],44],[[125,43],44],[[[126,[153]],43],44],[[[127,[153]],43],44],[[[128,[153]],43],44],[[[72,[153]],43],44],[[129,43],44],[[130,43],44],[[131,43],44],[[[73,[153]],43],44],[[[74,[153]],43],44],[[[75,[153,153]],43],44],[[76,43],44],[[[77,[153]],43],44],[[[78,[153]],43],44],[[[79,[153]],43],44],[[[80,[153]],43],44],[[132,43],44],[[133,43],44],[[134,43],44],[[81,43],44],[[[82,[153]],43],44],[[135,43],44],[[[83,[153,153]],43],44],[[136,43],44],[[137,43],44],[[138,43],44],[[84,43],44],[[139,43],44],[[[85,[153]],43],44],[[140,43],44],[[141,43],44],[[142,43],44],[[143,43],44],[[[86,[153]],43],44],[[[87,[153]],43],44],[[[88,[153]],43],44],[[[89,[153]],43],44],[[[90,[153]],43],44],[[[91,[153]],43],44],[[[92,[153,153]],43],44],[[93,43],44],[[[144,[153]],43],44],[[[94,[153]],43],44],[[[95,[153,153]],43],44],[[[96,[153]],43],44],[[[97,[153]],43],44],[[145,43],44],[[146,43],44],[[147,43],44],[[148,43],44],[[149,43],44],[[150,43],44],[[151,43],44],[[[98,[153]],43],44],[[152,43],44],[[99,43],44],[[[100,[153]],43],44],[[52,43],44],[[52,43],44],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,52],[102,52],[103,52],[104,52],[105,52],[[[107,[[63,[154]]]]],52],[108,52],[[[109,[[63,[45]]]]],52],[110,52],[[[64,[[63,[45]]]]],52],[[[65,[[63,[54]],[63,[54]]]]],52],[[[66,[[63,[13]],[63,[13]]]]],52],[[[111,[[63,[154]]]]],52],[112,52],[[[113,[[63,[45]]]]],52],[67,52],[114,52],[115,52],[[[116,[[63,[45]]]]],52],[117,52],[118,52],[119,52],[[[120,[[63,[45]]]]],52],[68,52],[[[69,[[63,[45]]]]],52],[[[70,[[63,[45]]]]],52],[[[71,[[63,[45]]]]],52],[121,52],[122,52],[123,52],[124,52],[125,52],[[[126,[[63,[45]]]]],52],[[[127,[[63,[45]]]]],52],[[[128,[[63,[45]]]]],52],[[[72,[[63,[45]]]]],52],[129,52],[130,52],[131,52],[[[73,[[63,[25]]]]],52],[[[74,[[63,[25]]]]],52],[[[75,[[63,[45]],[63,[45]]]]],52],[76,52],[[[77,[[63,[45]]]]],52],[[[78,[[63,[45]]]]],52],[[[79,[[63,[45]]]]],52],[[[80,[[63,[45]]]]],52],[132,52],[133,52],[134,52],[81,52],[[[82,[[63,[45]]]]],52],[135,52],[[[83,[[63,[45]],[63,[13]]]]],52],[136,52],[137,52],[138,52],[84,52],[139,52],[[[85,[[63,[45]]]]],52],[140,52],[141,52],[142,52],[143,52],[[[86,[[63,[45]]]]],52],[[[87,[[63,[45]]]]],52],[[[88,[[63,[45]]]]],52],[[[89,[[63,[45]]]]],52],[[[90,[[63,[54]]]]],52],[[[91,[[63,[54]]]]],52],[[[92,[[63,[54]],[63,[45]]]]],52],[93,52],[[[144,[[63,[45]]]]],52],[[[94,[[63,[45]]]]],52],[[[95,[[63,[45]],[63,[45]]]]],52],[[[96,[[63,[45]]]]],52],[[[97,[[63,[45]]]]],52],[145,52],[146,52],[147,52],[148,52],[149,52],[150,52],[151,52],[[[98,[[63,[45]]]]],52],[152,52],[99,52],[[[100,[[63,[45]]]]],52],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[155,[[19,[156]]]],0,0,[52,[[19,[157]]]],0,0,[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],0,0,0,[53],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[52,[[19,[32]]]],[52,158],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[[159,160]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[159,159],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],161],[13],[13],[13],[13],[13],[13],[159],0,[[]],[[]],[[]],[[]],[[]],[[161,160]],0,[[],13],[[],13],0,0,[[]],[[]],[[],14],[[],14],[[161,160],15],[[],15],[[],15],0,[[]],[[]],0,[159,162],0,[163,159],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[160,162,162],162],[[161,160],162],[[]],[[]],0,[159,162],[[],[[18,[17]]]],[[],[[18,[17]]]],0,[[]],[[],19],[[],19],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[159,162],[[]],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[[19,[45]],164,15],[[166,[165]]]],[167,168],[167,[[28,[[27,[26]]]]]],[167,50],[167,[[19,[45]]]],[167],[[],13],[[]],[[],14],[[],15],[[]],0,[2,[[16,[2,2]]]],0,[[]],[[167,45]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],0,[[]],0,0,0,0,0,0,0,[1],[1],[[169,170]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[171,172,173],[[28,[[27,[26]]]]]],[[174,[175,[45]],173],7],0,[[171,54]],[174,174],[169,169],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[174,176],30],[[],177],[[],174],[[],169],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,0,[[177,43],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[178,179,177],[[28,[[27,[26]]]]]],[[169,178,179],[[7,[180]]]],0,0,[181,40],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[174,45,181],[[19,[181]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[177,[[19,[173]]]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[182,15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[173,[[7,[183]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],4],0,[[[184,[[18,[180,155]]]],185],181],[170,186],[[174,176],171],[174,169],[171,[[7,[54]]]],0,0,[[171,187,[7,[173]]],[[28,[[27,[26]]]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],0,0,[[181,180],7],[[174,4,173],7],[169,174],0,0,0,0,[[169,[58,[4]],181]],[[174,4],[[19,[181]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[171,188,173,189],[[28,[[27,[26]]]]]],0,0,0,0,[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],0,0,[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[169,[58,[4]]],[[19,[181]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[190,178,179,177],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[190,182],15],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[191,178,179,177],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[191,182],15],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[13],[13],[13],[13],[13],[13],0,[[]],[[]],[[]],[[]],[[192,178,179,177],[[28,[[27,[26]]]]]],0,[[],13],[[],13],[[]],[[]],[[],14],[[],14],[[192,182],15],[[],15],[[],15],[[]],[[]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],0,0,[[]],[[]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],19],[[],19],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[[19,[42]],[166,[193]]],[[7,[192]]]],[[],20],[[],20],[[]],[[]],0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[194],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[195],[13],[13],0,0,[196,161],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[194,197],198],0,0,[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[194,[[27,[199]]]],[[]],[[]],[[]],[[]],[[[19,[42]],[166,[193]]],195],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],0,0,[196,197],[[194,197]],0,[[]],[[]],[[]],[[]],[[195,200]],[[195,201]],[195],[[195,[166,[194]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[202,178,179,177],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[202,182],15],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[203,178,179,177],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[203,182],15],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[204,178,179,177],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[204,182],15],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],0,0,[[]],[[]],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],205],[13],[13],[13],[13],[206,[[18,[205]]]],[206,[[18,[207]]]],[13],[13],0,[208,[[18,[209,210]]]],[208,[[18,[209,210]]]],[[205,43],44],[[207,43],44],[[]],[[]],[[]],[[]],0,0,[[],13],[[],13],[[]],[[]],[[],14],[[],14],[205,15],[[],15],[[],15],[[]],[[]],0,[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],0,0,[205,[[35,[54]]]],0,0,[[205,[211,[54]]]],0,[[]],[[]],[[205,212],18],[[207,212],18],[205,47],[[],[[18,[17]]]],[[],[[18,[17]]]],0,[[],19],[[],19],[[]],[[]],[178,[[18,[205]]]],[[],18],[213,[[18,[207]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[]],[[]],0,0,0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[214,178,179,177],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[214,182],15],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[215],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],215],[[],216],[13],[13],[13],[13],[215,[[35,[205]]]],[13],[13],[215,[[19,[54]]]],0,[[]],[[]],[[]],[[]],[[216,178,179,177],[[28,[[27,[26]]]]]],[[],13],[[],13],[[]],[[]],[[],14],[[],14],[[216,182],15],[[],15],[[],15],[215,13],[[]],[[]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[215,205]],[[]],[[]],[[215,54]],0,0,[[],[[18,[17]]]],[[],[[18,[17]]]],[[],19],[[],19],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[]],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[217,178,179,177],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[217,182],15],[[],15],[[]],[218,217],[2,[[16,[2,2]]]],0,[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[219,178,179,177],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[219,182],15],[[],15],[[]],[54,219],[2,[[16,[2,2]]]],0,[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[220,178,179,177],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[220,182],15],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[221,54],7],[[],12],[[],12],[[],12],[13],[13],[[221,197],7],[13],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[]],[51,221],[2,[[16,[2,2]]]],[[221,197],7],[[221,54,54,[35,[54]]],[[7,[[211,[54]]]]]],[[221,54],[[7,[[35,[222]]]]]],[[]],0,[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[223,223],[224,224],[47,47],[222,222],[[]],[[]],[[]],[[]],0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[225,226],[13],[13],[227,226],[228,226],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[206,[[18,[223]]]],[206,[[18,[224]]]],[206,[[18,[48]]]],[206,[[18,[222]]]],[13],[13],[13],[13],[13],[13],[13],[13],[[223,223],15],[[224,224],15],[[47,47],15],[[222,222],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[208,[[18,[209,210]]]],[208,[[18,[209,210]]]],[208,[[18,[209,210]]]],[208,[[18,[209,210]]]],[[223,43],44],[[224,43],44],[[47,43],44],[[48,43],44],[[222,43],44],[[]],[[]],[[]],[[]],[[]],[[]],[223,47],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[7,[223]]]],[4,[[7,[224]]]],[4,[[7,[47]]]],[4,[[7,[48]]]],[4,[[7,[222]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[229,230]],231],54],[[[0,[229,230]],231],54],[[[0,[229,230]],231],54],[54,[[35,[34]]]],[[223,232]],[[47,232]],[[222,232]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],0,[48,[[19,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[223,212],18],[[224,212],18],[[48,212],18],[[222,212],18],0,[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],0,[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[4,18],[[],18],[[[35,[34]]],[[7,[223]]]],[4,18],[[[35,[34]]],[[7,[224]]]],[[],18],[4,18],[[[35,[34]]],[[7,[47]]]],[[],18],[[[35,[34]]],[[7,[48]]]],[[],18],[4,18],[4,18],[[[35,[34]]],[[7,[222]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[54,164,54],[[7,[[49,[223,224]]]]]],[[54,164,233],[[7,[[49,[223,224]]]]]],[54,[[35,[34]]]],0,0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],234],[13],[13],[13],[13],[13],[235],[13],0,0,[[]],[[]],[[]],[[]],[[],13],[[],13],[[]],[[]],[[],14],[[],14],[[],15],[[],15],0,0,[[]],[[]],[[[35,[34]],234],[[28,[[27,[26]]]]]],[235,7],0,0,0,[[236,[35,[34]]],235],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[]],[[]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],19],[[],19],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[[35,[34]]],[[28,[[27,[26]]]]]],[[]],[[]],0,[1],[2,[[3,[2,2]]]],[[]],[[]],0,[237,237],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[]],[[237,[35,[34]],234],[[28,[[27,[26]]]]]],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[237,[35,[34]]],[[28,[[27,[26]]]]]],[[]],[[[58,[[59,[[58,[4]]]]]]],[[7,[236]]]],[60,[[7,[236]]]],[197,238],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[[],239],[13],[13],[13],[[]],[[]],0,[[],13],[[]],[[],14],[[],15],[[]],[[239,[35,[34]],234],[[28,[[27,[26]]]]]],0,[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[239,[35,[34]]],[[28,[[27,[26]]]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[10,[14,[240]]],[[28,[[27,[26]]]]]],[[10,[14,[241]]],[[28,[[27,[26]]]]]],[[10,[14,[242]]],[[28,[[27,[26]]]]]],[[10,[14,[242]]],[[28,[[27,[26]]]]]],[[10,[14,[243]]],[[28,[[27,[26]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[8,8],[244,244],[245,245],[179,179],[246,246],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[10,[14,[247]]],[[28,[[27,[26]]]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[10,7],0,0,0,[10,248],0,[[],8],[[],244],[[],245],[[10,[14,[249]]],[[28,[[27,[26]]]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[206,[[18,[8]]]],[206,[[18,[244]]]],[206,[[18,[245]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[10,[[19,[42]]]],0,0,0,0,[[8,8],15],[[244,244],15],[[245,245],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[208,[[18,[209,210]]]],[208,[[18,[209,210]]]],[208,[[18,[209,210]]]],[[8,43],44],[[244,43],44],[[245,43],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[10,169],0,[[10,[14,[[250,[178]]]]],[[28,[[27,[26]]]]]],0,[10,51],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[10,15],[179,15],[10,251],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,[14,[252]]],[[28,[[27,[26]]]]]],[10,236],0,0,[10,30],0,0,[10,164],0,0,0,[10,179],[253],[253],[10,8],0,[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[10,9],0,0,[10,254],0,0,[10,[[19,[218]]]],[[10,[14,[255]]],[[28,[[27,[26]]]]]],[[10,[14,[256]]],[[28,[[27,[26]]]]]],[[10,[14,[256]]],[[28,[[27,[26]]]]]],[179],[179],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,257],0,0,[[8,212],18],[[244,212],18],[[245,212],18],0,0,0,0,[179],[10,7],0,0,0,0,0,[[10,[14,[258]]],[[28,[[27,[26]]]]]],[10,[[19,[259]]]],0,[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],0,[10,260],0,[10,261],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,45],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[10,7],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[10,[14,[262]]],[[28,[[27,[26]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[263,[[7,[10]]]],[[8,[19,[[166,[264]]]],254,30,261,260],265],[[[19,[42]],51],164],[[251,174],30],[[8,251],254],[266,15],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[263,[166,[264]]],263],0,[[],263],[13],[13],[13],[13],[13],[13],[[263,[19,[42]]],263],0,[[]],[[]],[[]],[[]],0,[[263,169],263],[[263,51],263],0,[[],13],[[],13],[[]],[[]],[[],14],[[],14],[[],15],[[],15],[[263,251],263],0,[[]],[[]],[[263,[19,[236]]],263],0,[[263,164],263],0,[[],263],[[263,8],263],0,[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[263,9],263],0,[[]],[[]],[[263,257],263],0,[[],[[18,[17]]]],[[],[[18,[17]]]],[[],19],[[],19],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[13],[267,268],[269,270],[13],[13],[271,268],[13],[272,270],[13],[273,268],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],0,[1],[2,[[3,[2,2]]]],[[]],[[]],0,[274,274],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[]],0,[[8,251,[19,[257]],[19,[[166,[264]]]]],274],[4,274],[[],274],[257,274],[2,[[16,[2,2]]]],[[]],0,[[],[[18,[17]]]],[[]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[275,275],[276,276],[[]],[[]],0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[193,276],0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[206,[[18,[277]]]],0,0,[[193,197],7],[13],[13],[278],[13],[13],[13],[13],[279,[[280,[45]]]],[[275,275],15],[[],15],[[],15],[[],15],[[],15],[[],15],[208,[[18,[209,210]]]],[[279,281],[[28,[[27,[26]]]]]],0,[[193,197],[[7,[15]]]],0,0,[[277,43],44],[[]],[[]],[[]],[[]],[197,275],[[]],[[]],[[4,276],[[280,[279]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[229,230]],231],54],[[275,232]],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[193,197],[[19,[278]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[]],[[]],[[]],[[]],[[]],[[]],[279,282],0,0,[[54,51,30,254,236,261],193],[[197,276],279],[[276,197],[[28,[[27,[26]]]]]],0,[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],0,0,0,0,[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[277,212],18],[[283,212],18],[[283,212],18],[[283,212],18],[[283,212],18],0,[[],284],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[193,197],[[7,[15]]]],0,0,0,[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[193,7],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[279,4],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],0,[[],12],[[],12],[[],12],[13],[13],[206,[[18,[285]]]],[13],[208,[[18,[209,210]]]],[[285,43],44],[[]],[[]],[[285,286,197],[[7,[[27,[283]]]]]],[[],13],[[]],[[],14],[[],15],[[]],[154,285],[[285,276,197],[[28,[[27,[26]]]]]],[2,[[16,[2,2]]]],0,0,0,[285],[[]],[[285,276,197,189],[[7,[286]]]],[[285,212],18],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],0,[[],12],[[],12],[[],12],[13],[13],[206,[[18,[287]]]],[13],[208,[[18,[209,210]]]],[[287,43],44],[[]],[[]],[[287,276,286,197],[[7,[[27,[283]]]]]],[[],13],[[]],[[],14],[[],15],[[]],[154,287],[[287,276,197],[[28,[[27,[26]]]]]],[2,[[16,[2,2]]]],[[]],[[287,276,197],[[7,[286]]]],[[287,212],18],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],[[287,276]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[206,[[18,[288]]]],[13],[208,[[18,[209,210]]]],[[288,43],44],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[]],[[288,276,197],[[28,[[27,[26]]]]]],[2,[[16,[2,2]]]],[[]],[[288,212],18],[288,284],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[289,276,197],[[7,[154]]]],[[],12],[[],12],[[],12],[13],[13],[206,[[18,[289]]]],[13],[208,[[18,[209,210]]]],0,[[289,43],44],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[]],[[],289],[[289,276,197],[[28,[[27,[26]]]]]],[2,[[16,[2,2]]]],[[]],[[289,212],18],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[290,276,25],7],[[],12],[[],12],[[],12],[[],290],[13],[13],[206,[[18,[290]]]],[13],[208,[[18,[209,210]]]],[[290,43],44],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[]],[[290,276,197],[[28,[[27,[26]]]]]],[2,[[16,[2,2]]]],[[]],[[290,212],18],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],0,[[],12],[[],12],[[],12],[13],[13],[206,[[18,[291]]]],[13],[208,[[18,[209,210]]]],[[291,43],44],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[]],[[154,45,[49,[45,45]]],291],[[291,276,197],[[28,[[27,[26]]]]]],[2,[[16,[2,2]]]],[[45,[59,[292]],197]],0,0,[[]],[[291,212],18],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[291,276,197],7],[[291,276,197],7],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[293,293],[294,294],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[13],[13],[13],[13],[13],[13],[[293,293],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[293,43],44],[[294,43],44],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[229,230]],231],54],[[293,232]],0,[[],13],[[],13],[[]],[[]],[[],14],[[],14],[[],15],[[],15],[[]],[[]],0,[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],0,[[]],[[]],[294,[[28,[[27,[26]]]]]],[295,7],0,0,0,0,0,[293,[[35,[296]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[]],[[]],[[],19],[[],19],[[]],[[]],[294,293],0,0,[294,[[28,[[27,[26]]]]]],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[297,7],[[],7],[[]],[[]],0,0,0,0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[]],[166,298],[2,[[16,[2,2]]]],[[]],[294,[[28,[[27,[26]]]]]],[[[298,[[300,[[0,[299,153]]]],[0,[299,153]]]],294],[[28,[[27,[26]]]]]],0,[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,0,0,0,0,[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[297,297],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],301],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[297,43],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[]],[[]],[[]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[]],[[]],[[]],[295,7],[[[301,[299]],[295,[299]]],7],0,0,[293,[[35,[296]]]],[[[301,[299]],293],[[35,[[296,[299]]]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[]],[[],19],[[],19],[[],19],[[]],[[]],[[]],0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[],20],[297,7],[[[301,[299]],297],7],[[],7],[[[301,[299]]],7],[[]],[[]],[[]],0,0,0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[[302,[153]],43],44],[[]],[[]],[302,163],0,[[],13],[[]],[[],14],[[],15],[[]],[302,4],0,[[163,[63,[45]]],302],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[294,[[28,[[27,[26]]]]]],[[[302,[299]],294],7],0,[[],18],[[],18],[[],18],[[],20],[[]],0,0,0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[303,54,54,[59,[304]]],[[7,[[211,[304]]]]]],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[]],0,[261,303],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],0,[[],19],[[]],[[],18],[[],18],[[],18],[[],20],0,[[]],[[54,[59,[304]],[59,[292]]],[[211,[304]]]],[[54,304,[49,[163,154]]],[[19,[304]]]],0,0,0,0,0,0,0,[1],[2,[[3,[2,2]]]],[[]],[[]],[305,305],[[]],[[],12],[[],12],[[],12],[[],305],[13],[13],[206,[[18,[305]]]],[13],[[305,305],15],[[],15],[[],15],[[],15],[[],15],[[],15],[208,[[18,[209,210]]]],[[305,43],44],[[]],[[]],[[]],[[],13],[[]],[[],14],[[],15],0,[[]],0,[2,[[16,[2,2]]]],[[]],[306,[[28,[[27,[26]]]]]],[[305,212],18],[[],[[18,[17]]]],[[]],[[],19],[[]],[4,[[7,[305]]]],[[],18],[[],18],[[],18],[[],20],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[307,306],[[28,[[27,[26]]]]]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[308,25],[[7,[[35,[54]]]]]],[[],13],[[]],[[],14],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[309,306],[[28,[[27,[26]]]]]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[45,310],[311],[[312,[311,[313]]]],[[314,4,[49,[45,45]]],[[18,[[315,[310]],316]]]],[4],[312,312],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],314],[13],[13],[13],[13],[13],[13],[[]],[[]],[[]],[[]],[[]],[[4,[49,[45,45]]],[[28,[[27,[26]]]]]],0,0,0,0,[[],13],[[],13],[[]],[[]],[[],317],[[],318],[[],14],[[],14],[[],15],[[],15],0,[[]],[[]],[10,312],0,[[4,314],314],[314,312],[[],314],0,[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[312,319],[[320,[18]]]],[319,[[320,[18]]]],0,[[314,4,321],314],0,[[]],[[]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[]],[[],19],[[],19],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],0,[[]],[[]],0,0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[]],[[]],[[322,4,[49,[45,45]]],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[323,323],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[13],[13],[13],[13],[206,[[18,[324]]]],[13],[13],[208,[[18,[209,210]]]],[[[35,[48]],4],[[35,[48]]]],[[324,43],44],[[]],[[]],[[]],[[]],[[]],[[323,4,[49,[45,45]]],[[28,[[27,[26]]]]]],[[],13],[[],13],[[]],[[]],[[],14],[[],14],[[],15],[[],15],[[]],[[]],0,[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[]],[[]],[[324,212],18],0,[[],[[18,[17]]]],[[],[[18,[17]]]],[[]],[[],19],[[],19],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[]],[[]],0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[13],[13],[13],[13],[13],[13],[206,[[18,[325]]]],[13],[13],[13],[208,[[18,[209,210]]]],[[325,43],44],[[]],[[]],[[]],[[]],[[]],[[]],[[326,4,[49,[45,45]]],[[28,[[27,[26]]]]]],[[327,4,[49,[45,45]]],[[28,[[27,[26]]]]]],0,[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[]],[[]],[[]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[]],[[]],[[]],[[325,212],18],0,0,[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[],20],[[]],[[]],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[13],[13],[13],0,[[]],[[]],[[328,4,[49,[45,45]]],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],0,0,0,0,[1],[1],[1],[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[329,329],[330,330],[331,331],[332,332],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[332,[49,[45,45]]],[[7,[[35,[333]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[329,4,[49,[45,45]]],[[28,[[27,[26]]]]]],[[330,4,[49,[45,45]]],[[28,[[27,[26]]]]]],[[331,4,[49,[45,45]]],[[28,[[27,[26]]]]]],[[332,4,[49,[45,45]]],[[28,[[27,[26]]]]]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[]],[[]],[[]],[[]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],0,0,0,0,[[[35,[45]]],[[7,[[315,[45]]]]]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[13],[13],[13],[13],[13],[13],[206,[[18,[334]]]],[206,[[18,[335]]]],[13],[13],[13],[208,[[18,[209,210]]]],[208,[[18,[209,210]]]],[[334,43],44],[[335,43],44],[[]],[[]],[[]],[[]],[[]],[[]],[[336,4,[49,[45,45]]],[[28,[[27,[26]]]]]],0,[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],0,0,[[]],[[]],[[]],0,0,[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[]],[[]],[[]],[[334,212],18],[[335,212],18],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[],20],[[]],[[]],[[]],0,[1],[2,[[3,[2,2]]]],[[]],[[]],[337,337],[[]],[[],12],[[],12],[[],12],[13],[13],[13],[[337,[49,[45,45]]],[[7,[333]]]],[[]],[[]],[[]],[[337,4,[49,[45,45]]],[[28,[[27,[26]]]]]],[[],13],[[]],[[],14],[[],15],[[]],[2,[[16,[2,2]]]],[[]],[[],[[18,[17]]]],0,[[]],[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]],[[[49,[45,45]]],[[7,[54]]]],[[[49,[45,45]],4],[[7,[45]]]],[4,[[7,[[315,[45]]]]]],[185,54],[[240,179],[[7,[338]]]],0,0,0,0,0,0,0,0,0,0,[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[172,173],[[28,[[27,[26]]]]]],0,[286,188],[188,188],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[188,188],15],[[188,43],44],[[188,43],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[]],[[]],[[]],[286,187],0,[[187,[339,[[7,[173]]]],188],286],[[187,[7,[173]]],[[28,[[27,[26]]]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[[28,[286]],319],320],[188,45],[172,[[175,[45]]]],0,[[]],[[]],[[]],[[188,173,189],[[28,[[27,[26]]]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[]],[[],45],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[28,319],320],[[],20],[[],20],[[],20],[[]],[[]],[[]],0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[340,61],[[340,341],[[28,[[27,[26]]]]]],[[340,342],[[28,[[27,[26]]]]]],[[340,343],[[28,[[27,[26]]]]]],[[]],[[]],[[]],[[]],0,[[],15],[344,15],0,[[340,345],[[28,[[27,[26]]]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[340,13],[[340,346],[[28,[[27,[26]]]]]],[13],[13],[13],[13],[13],[13],[[]],[[]],[[]],[[]],[340,13],[[],13],[[],13],[[]],[[]],[[],14],[[],14],[[340,[35,[34]]],24],[[340,[35,[[35,[34]]]]],24],[[],15],[[],15],[340,15],[[]],[[]],[340,24],[340,4],0,[[347,251],340],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[340,348],[[28,[[27,[26]]]]]],[[340,349],[[28,[[27,[26]]]]]],[340],[[]],[[]],0,[[],[[18,[17]]]],[[],[[18,[17]]]],[[],19],[[],19],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[340,350],[[28,[[27,[26]]]]]],[[],20],[[],20],[[340,13],15],0,[[]],[[]],[251,340],0,0,0,0,0,0,[1],[1],[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[],351],[15,351],[[]],[[]],[[]],[[]],[[]],[[]],[352,352],[353,353],[354,354],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[13],[13],[13],[13],[13],[13],[13],[13],[13],[352,15],0,[[352,43],44],[[353,43],44],[[354,43],44],[45,352],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[45,15],352],[[]],[[]],[[]],[[352,351]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[2,[[16,[2,2]]]],[[]],[[]],[[]],0,0,[[],[[18,[17]]]],[[],[[18,[17]]]],[[],[[18,[17]]]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],20],[[],20],[[],20],[[]],[[]],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],12],[[],12],[[],12],[[355,356,357,[59,[358]]],[[28,[[27,[26]]]]]],0,[13],[13],[13],[[]],[[]],[[54,357,[59,[358]],246,257,260],7],[[],13],[[]],[[],14],[[],15],[[]],[[246,257,260],355],[2,[[16,[2,2]]]],[[]],0,[[],[[18,[17]]]],0,[[],19],[[]],[[],18],[[],18],[[],18],[[],20],[[]]],"c":[],"p":[[3,"Private"],[8,"Policy"],[3,"And"],[15,"str"],[3,"Router"],[3,"Receiver"],[6,"Result"],[3,"MetaSrvOptions"],[3,"Plugins"],[3,"MetaSrv"],[3,"MetaSrvInstance"],[3,"Compat"],[15,"usize"],[3,"Request"],[15,"bool"],[3,"Or"],[4,"CNil"],[4,"Result"],[4,"Option"],[3,"TypeId"],[3,"MetasrvCacheInvalidator"],[3,"Context"],[4,"Instruction"],[6,"Result"],[6,"TableId"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"TableName"],[6,"MailboxRef"],[3,"MetasrvInfo"],[8,"Error"],[3,"MetaPeerClient"],[15,"u8"],[3,"Vec"],[3,"KeyValue"],[3,"MetaPeerClientBuilder"],[4,"MetaPeerClientBuilderError"],[3,"ChannelManager"],[3,"ResponseHeader"],[3,"Context"],[6,"ElectionRef"],[3,"Formatter"],[6,"Result"],[3,"String"],[3,"UninitializedFieldError"],[3,"StatKey"],[3,"StatValue"],[3,"HashMap"],[15,"i32"],[6,"ResettableKvBackendRef"],[4,"Error"],[3,"Demand"],[15,"u64"],[4,"LeaderChangeMessage"],[3,"Receiver"],[3,"EtcdElection"],[8,"AsRef"],[15,"slice"],[3,"Client"],[8,"Any"],[3,"Backtrace"],[8,"Into"],[3,"TxnSnafu"],[3,"TableIdChangedSnafu"],[3,"NoEnoughAvailableDatanodeSnafu"],[3,"EmptyKeySnafu"],[3,"EmptyTableNameSnafu"],[3,"InvalidLeaseKeySnafu"],[3,"InvalidStatKeySnafu"],[3,"InvalidInactiveRegionKeySnafu"],[3,"InvalidArgumentsSnafu"],[3,"TableRouteNotFoundSnafu"],[3,"TableInfoNotFoundSnafu"],[3,"CorruptedTableRouteSnafu"],[3,"NoLeaderSnafu"],[3,"TableNotFoundSnafu"],[3,"MoveValueSnafu"],[3,"UnsupportedSelectorTypeSnafu"],[3,"UnexpectedSnafu"],[3,"ResponseHeaderNotFoundSnafu"],[3,"IsNotLeaderSnafu"],[3,"ExceededRetryLimitSnafu"],[3,"LockNotConfigSnafu"],[3,"MissingRequiredParameterSnafu"],[3,"SchemaAlreadyExistsSnafu"],[3,"TableAlreadyExistsSnafu"],[3,"PusherNotFoundSnafu"],[3,"PushMessageSnafu"],[3,"MailboxClosedSnafu"],[3,"MailboxTimeoutSnafu"],[3,"MailboxReceiverSnafu"],[3,"MissingRequestHeaderSnafu"],[3,"RegionFailoverCandidatesNotFoundSnafu"],[3,"UnexpectedInstructionReplySnafu"],[3,"RetryLaterSnafu"],[3,"UpdateTableMetadataSnafu"],[3,"InvalidHeartbeatRequestSnafu"],[3,"TooManyPartitionsSnafu"],[3,"UnsupportedSnafu"],[3,"InitMetadataSnafu"],[3,"NextSequenceSnafu"],[3,"StartTelemetryTaskSnafu"],[3,"SubmitDdlTaskSnafu"],[3,"InvalidateTableCacheSnafu"],[8,"Clone"],[3,"OperateRegionSnafu"],[3,"ListCatalogsSnafu"],[3,"ListSchemasSnafu"],[3,"JoinSnafu"],[3,"RequestDatanodeSnafu"],[3,"SendShutdownSignalSnafu"],[3,"ShutdownServerSnafu"],[3,"EtcdFailedSnafu"],[3,"ConnectEtcdSnafu"],[3,"TcpBindSnafu"],[3,"TcpIncomingSnafu"],[3,"StartGrpcSnafu"],[3,"StartHttpSnafu"],[3,"ParseAddrSnafu"],[3,"LeaseKeyFromUtf8Snafu"],[3,"LeaseValueFromUtf8Snafu"],[3,"StatKeyFromUtf8Snafu"],[3,"StatValueFromUtf8Snafu"],[3,"InvalidRegionKeyFromUtf8Snafu"],[3,"SerializeToJsonSnafu"],[3,"DeserializeFromJsonSnafu"],[3,"ParseNumSnafu"],[3,"InvalidCatalogValueSnafu"],[3,"InvalidFullTableNameSnafu"],[3,"DecodeTableRouteSnafu"],[3,"CreateChannelSnafu"],[3,"BatchGetSnafu"],[3,"RangeSnafu"],[3,"InvalidHttpBodySnafu"],[3,"LockSnafu"],[3,"UnlockSnafu"],[3,"LeaseGrantSnafu"],[3,"InvalidUtf8ValueSnafu"],[3,"StartProcedureManagerSnafu"],[3,"StopProcedureManagerSnafu"],[3,"WaitProcedureSnafu"],[3,"SubmitProcedureSnafu"],[3,"RegisterProcedureLoaderSnafu"],[3,"TableRouteConversionSnafu"],[3,"ConvertProtoDataSnafu"],[3,"OtherSnafu"],[3,"TableMetadataManagerSnafu"],[3,"KvBackendSnafu"],[3,"UpdateTableRouteSnafu"],[3,"GetFullTableInfoSnafu"],[3,"PublishMessageSnafu"],[8,"Debug"],[3,"Peer"],[3,"Status"],[3,"Error"],[8,"StackError"],[4,"StatusCode"],[3,"HeartbeatHistory"],[15,"i64"],[3,"PhiAccrualFailureDetector"],[15,"f64"],[15,"u32"],[6,"MetaPeerClientRef"],[4,"GreptimeDBTelemetryTask"],[3,"Arc"],[3,"DistributedGreptimeDBTelemetryCollector"],[4,"Mode"],[3,"HeartbeatHandlerGroup"],[8,"HeartbeatHandler"],[3,"HeartbeatMailbox"],[4,"BroadcastChannel"],[3,"MailboxMessage"],[3,"Pushers"],[3,"Range"],[3,"Sequence"],[3,"HeartbeatAccumulator"],[3,"HeartbeatRequest"],[3,"Context"],[3,"HeartbeatResponse"],[3,"Pusher"],[4,"Role"],[4,"InstructionReply"],[3,"Sender"],[3,"RequestHeader"],[3,"NameCachedHandler"],[6,"MessageId"],[4,"Channel"],[3,"Duration"],[3,"CheckLeaderHandler"],[3,"CollectStatsHandler"],[3,"RegionFailureHandler"],[3,"RegionFailoverManager"],[3,"FailureDetectorContainer"],[3,"FailureDetectRunner"],[3,"FailureDetectorEntry"],[3,"RegionIdent"],[8,"DerefMut"],[8,"Iterator"],[4,"FailureDetectControl"],[3,"DatanodeHeartbeat"],[3,"FilterInactiveRegionStatsHandler"],[3,"KeepLeaseHandler"],[3,"MailboxHandler"],[3,"Stat"],[8,"Deserializer"],[3,"RegionStat"],[8,"Serializer"],[3,"Ok"],[3,"Error"],[3,"HashSet"],[8,"Serializer"],[3,"RegionStat"],[3,"OnLeaderStartHandler"],[3,"EpochStats"],[3,"PersistStatsHandler"],[3,"PublishHeartbeatHandler"],[6,"PublishRef"],[3,"RegionLeaseHandler"],[3,"ResponseHeaderHandler"],[3,"InactiveRegionManager"],[3,"InactiveRegionKey"],[3,"LeaseKey"],[3,"LeaseValue"],[3,"DATANODE_LEASE_KEY_PATTERN"],[3,"Regex"],[3,"DATANODE_STAT_KEY_PATTERN"],[3,"INACTIVE_REGION_KEY_PATTERN"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[8,"Fn"],[3,"Opts"],[3,"DistLockGuard"],[6,"DistLockRef"],[3,"EtcdLock"],[6,"Key"],[3,"MemLock"],[3,"AskLeaderRequest"],[3,"BatchDeleteRequest"],[3,"BatchGetRequest"],[3,"BatchPutRequest"],[3,"DatanodeOptions"],[3,"DatanodeClientOptions"],[3,"SelectorContext"],[3,"CompareAndPutRequest"],[6,"DdlTaskExecutorRef"],[3,"DeleteRangeRequest"],[3,"Streaming"],[6,"KvBackendRef"],[3,"LockRequest"],[3,"MetaStateHandler"],[6,"ProcedureManagerRef"],[3,"PutRequest"],[3,"RangeRequest"],[6,"SelectorRef"],[3,"SubmitDdlTaskRequest"],[6,"SubscribeManagerRef"],[6,"SequenceRef"],[6,"TableMetadataManagerRef"],[3,"UnlockRequest"],[3,"MetaSrvBuilder"],[3,"DatanodeClients"],[6,"DdlManagerRef"],[3,"CheckLeaderByElection"],[3,"METRIC_META_KV_REQUEST"],[6,"HistogramVec"],[3,"METRIC_META_HEARTBEAT_CONNECTION_NUM"],[6,"IntGauge"],[3,"METRIC_META_HANDLER_EXECUTE"],[3,"METRIC_META_INACTIVE_REGIONS"],[3,"METRIC_META_LEADER_CACHED_KV_LOAD"],[3,"MockInfo"],[3,"RegionFailoverKey"],[3,"RegionFailoverContext"],[3,"Node"],[3,"FailoverProcedureGuard"],[3,"RegionFailoverProcedure"],[6,"Result"],[3,"Context"],[3,"LockKey"],[8,"State"],[4,"Status"],[3,"ActivateRegion"],[3,"MailboxReceiver"],[3,"DeactivateRegion"],[3,"RegionFailoverEnd"],[3,"RegionFailoverStart"],[3,"InvalidateCache"],[3,"UpdateRegionMetadata"],[3,"RegionRoute"],[4,"Topic"],[4,"Message"],[3,"AddSubRequest"],[6,"SubscriberRef"],[3,"UnSubRequest"],[3,"DefaultPublish"],[8,"Transport"],[8,"SubscribeManager"],[3,"DefaultSubscribeManager"],[3,"Subscriber"],[3,"RegionLeaseKeeper"],[3,"RegionId"],[4,"SelectorType"],[6,"Namespace"],[3,"LeaseBasedSelector"],[3,"TableMetadataManager"],[3,"LoadBasedSelector"],[6,"BoxBody"],[3,"Request"],[3,"Admin"],[8,"Send"],[3,"Router"],[3,"Response"],[4,"Infallible"],[3,"IntoMakeService"],[3,"IntoMakeServiceWithConnectInfo"],[3,"Context"],[4,"Poll"],[8,"HttpHandler"],[3,"HealthHandler"],[3,"HeartBeatHandler"],[3,"StatValues"],[3,"InactiveRegions"],[3,"ViewInactiveRegionsHandler"],[3,"ClearInactiveRegionsHandler"],[3,"LeaderHandler"],[3,"CatalogsHandler"],[3,"SchemasHandler"],[3,"TablesHandler"],[3,"TableHandler"],[6,"TableId"],[3,"HumanLease"],[3,"LeaseValues"],[3,"NodeLeaseHandler"],[3,"RouteHandler"],[3,"AskLeaderResponse"],[3,"Receiver"],[3,"LeaderCachedKvBackend"],[3,"BatchDeleteRequest"],[3,"BatchGetRequest"],[3,"BatchPutRequest"],[3,"AlwaysLeader"],[3,"CompareAndPutRequest"],[3,"DeleteRangeRequest"],[6,"CheckLeaderRef"],[3,"PutRequest"],[3,"RangeRequest"],[3,"Txn"],[8,"FnOnce"],[4,"State"],[3,"LeaderState"],[3,"FollowerState"],[3,"MetaSrvTableMetadataAllocator"],[3,"TableMetadataAllocatorContext"],[3,"RawTableInfo"],[3,"Partition"],[8,"Election"],[13,"TcpBind"],[13,"ParseAddr"],[13,"NoEnoughAvailableDatanode"],[13,"ListSchemas"],[13,"ParseNum"],[13,"InvalidArguments"],[13,"PushMessage"],[13,"MailboxReceiver"],[13,"UpdateTableMetadata"],[13,"InvalidHeartbeatRequest"],[13,"Join"],[13,"SendShutdownSignal"],[13,"EtcdFailed"],[13,"ConnectEtcd"],[13,"TcpIncoming"],[13,"StartGrpc"],[13,"LeaseKeyFromUtf8"],[13,"LeaseValueFromUtf8"],[13,"StatKeyFromUtf8"],[13,"StatValueFromUtf8"],[13,"InvalidRegionKeyFromUtf8"],[13,"SerializeToJson"],[13,"DeserializeFromJson"],[13,"DecodeTableRoute"],[13,"BatchGet"],[13,"Range"],[13,"InvalidHttpBody"],[13,"Lock"],[13,"Unlock"],[13,"LeaseGrant"],[13,"InvalidUtf8Value"],[13,"PublishMessage"],[13,"TableIdChanged"],[13,"RegionFailoverCandidatesNotFound"],[13,"ExceededRetryLimit"],[13,"MailboxClosed"],[13,"MailboxTimeout"],[13,"InvalidLeaseKey"],[13,"InvalidStatKey"],[13,"InvalidInactiveRegionKey"],[13,"CorruptedTableRoute"],[13,"MoveValue"],[13,"InitMetadata"],[13,"NextSequence"],[13,"StartTelemetryTask"],[13,"SubmitDdlTask"],[13,"InvalidateTableCache"],[13,"OperateRegion"],[13,"ListCatalogs"],[13,"Txn"],[13,"RequestDatanode"],[13,"ShutdownServer"],[13,"EmptyKey"],[13,"StartHttp"],[13,"EmptyTableName"],[13,"InvalidCatalogValue"],[13,"InvalidFullTableName"],[13,"TableRouteNotFound"],[13,"TableInfoNotFound"],[13,"NoLeader"],[13,"TableNotFound"],[13,"UnsupportedSelectorType"],[13,"Unexpected"],[13,"CreateChannel"],[13,"ResponseHeaderNotFound"],[13,"IsNotLeader"],[13,"LockNotConfig"],[13,"StartProcedureManager"],[13,"StopProcedureManager"],[13,"WaitProcedure"],[13,"SubmitProcedure"],[13,"SchemaAlreadyExists"],[13,"TableAlreadyExists"],[13,"PusherNotFound"],[13,"MissingRequestHeader"],[13,"RegisterProcedureLoader"],[13,"UnexpectedInstructionReply"],[13,"RetryLater"],[13,"TableRouteConversion"],[13,"ConvertProtoData"],[13,"Other"],[13,"TableMetadataManager"],[13,"KvBackend"],[13,"UpdateTableRoute"],[13,"GetFullTableInfo"],[13,"TooManyPartitions"],[13,"Unsupported"],[13,"MissingRequiredParameter"],[8,"DistLock"],[3,"LeaderValue"],[8,"Publish"],[8,"SubscribeQuery"],[8,"Selector"],[8,"Mailbox"],[8,"CheckLeader"]]},\
"metric_engine":{"doc":"","t":"AAAARRRRRRRRRRRRRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLNDNDNDNDENDNDNDNDGNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLFF","n":["engine","error","metadata_region","utils","DATA_REGION_SUBDIR","DATA_SCHEMA_METRIC_NAME_COLUMN_NAME","DATA_SCHEMA_TSID_COLUMN_NAME","METADATA_REGION_SUBDIR","METADATA_SCHEMA_KEY_COLUMN_INDEX","METADATA_SCHEMA_KEY_COLUMN_NAME","METADATA_SCHEMA_TIMESTAMP_COLUMN_INDEX","METADATA_SCHEMA_TIMESTAMP_COLUMN_NAME","METADATA_SCHEMA_VALUE_COLUMN_INDEX","METADATA_SCHEMA_VALUE_COLUMN_NAME","METRIC_DATA_REGION_GROUP","METRIC_ENGINE_NAME","METRIC_METADATA_REGION_GROUP","MetricEngine","MetricEngineInner","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_region","create_request_for_data_region","create_request_for_metadata_region","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","get_metadata","handle_query","handle_request","init","init","inner","into","into","into_request","into_request","is_in_subset","is_in_subset","mito","name","new","region_disk_usage","role","set_writable","stop","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","transform_region_id","try_from","try_from","try_into","try_into","type_id","type_id","verify_region_create_request","vzip","vzip","CollectRecordBatchStream","CollectRecordBatchStreamSnafu","CreateMitoRegion","CreateMitoRegionSnafu","DecodeColumnValue","DecodeColumnValueSnafu","DeserializeSemanticType","DeserializeSemanticTypeSnafu","Error","InternalColumnOccupied","InternalColumnOccupiedSnafu","MissingInternalColumn","MissingInternalColumnSnafu","MitoReadOperation","MitoReadOperationSnafu","MitoWriteOperation","MitoWriteOperationSnafu","Result","TableAlreadyExists","TableAlreadyExistsSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","next","provide","raw","region_type","source","status_code","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column","column","error","error","location","location","location","location","location","location","location","location","location","raw","region_type","source","source","source","source","table_name","MetadataRegion","add_column","add_table","borrow","borrow_mut","build_put_request","build_read_request","column_semantic_type","compat","compat_mut","compat_ref","concat_column_key","concat_table_key","deref","deref_mut","deserialize_semantic_type","drop","exist","from","from_subset","get","init","into","into_request","is_in_subset","is_table_exist","mito","new","parse_column_key","parse_table_key","put_conditionally","serialize_semantic_type","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","to_data_region_id","to_metadata_region_id"],"q":[[0,"metric_engine"],[4,"metric_engine::engine"],[75,"metric_engine::error"],[373,"metric_engine::error::Error"],[393,"metric_engine::metadata_region"],[431,"metric_engine::utils"]],"d":["","","","","","Column name of internal column <code>__metric</code> that stores the …","","","","","","","","","region group value for data region inside a metric region","","region group value for metadata region inside a metric …","","","","","","","","","","","","","Initialize a metric region at given region id.","Convert RegionCreateRequest for data region.","Build RegionCreateRequest for metadata region","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Retrieves region’s metadata.","Handles substrait query and return a stream of record …","Handles request to the region.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Name of this engine","","Retrieves region’s disk usage.","","","Stops the engine","","","","","Build data region id and metadata region id from the given …","","","","","","","Check if","","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::CreateMitoRegion</code> …","","SNAFU context selector for the <code>Error::DecodeColumnValue</code> …","","SNAFU context selector for the …","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MissingInternalColumn</code>…","","SNAFU context selector for the <code>Error::MitoReadOperation</code> …","","SNAFU context selector for the <code>Error::MitoWriteOperation</code> …","","","SNAFU context selector for the <code>Error::TableAlreadyExists</code> …","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The other two fields key and value will be used as a k-v …","Add a new column key to metadata.","Add a new table key to metadata.","","","","Builds a ScanRequest to read metadata for a given key. The …","Check if the given column exists. Return the semantic type …","","","","","","","","","","Check if the given key exists.","Returns the argument unchanged.","","Retrieves the value associated with the given key in the …","","Calls <code>U::from(self)</code>.","","","Check if the given table exists.","","","Parse column key to (table_name, column_name)","","Put if not exist, return if this put operation is …","","","","","","","","Change the given RegionId’s region group to …","Change the given RegionId’s region group to …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,2,8,2,8,2,8,2,8,2,2,2,2,8,2,8,2,8,2,8,2,8,2,8,8,8,8,2,8,8,2,8,2,8,2,2,8,8,8,8,8,8,8,2,8,2,2,8,2,8,2,8,2,2,8,2,22,0,22,0,22,0,22,0,0,22,0,22,0,22,0,22,0,0,22,0,22,22,22,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,28,29,30,22,28,32,29,33,34,35,36,37,30,28,32,29,33,34,35,36,37,30,28,30,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,22,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,22,28,32,29,33,34,35,36,37,30,22,28,29,30,28,32,29,33,34,35,36,37,30,22,22,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,22,22,33,32,22,22,29,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,28,32,29,33,34,35,36,37,30,22,48,49,50,51,48,52,53,50,51,54,55,56,49,50,52,52,54,55,56,53,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[2,3,4],5],[[2,4],4],[[2,6],4],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[8,3],[[11,[[10,[9]]]]]],[[8,3,12],[[11,[[10,[9]]]]]],[[8,3,13],[[11,[[10,[9]]]]]],[[],7],[[],7],0,[[]],[[]],[[],14],[[],14],[[],15],[[],15],0,[8,6],[16,8],[[8,3],[[11,[[10,[9]]]]]],[[8,3],[[18,[17]]]],[[8,3,15],[[20,[19]]]],[8,[[11,[[10,[9]]]]]],[[],18],[[],18],[[]],[[]],[3],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[4,5],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[22,23],[[],24],[22,[[18,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[28,[[27,[26]]]]],22],[[[29,[[27,[26]]]]],22],[[[30,[[27,[26]]]]],22],[22,[[18,[24]]]],[[[28,[31]]],[[28,[31]]]],[[[32,[31]]],[[32,[31]]]],[[[29,[31]]],[[29,[31]]]],[[[33,[31]]],[[33,[31]]]],[34,34],[35,35],[36,36],[37,37],[[[30,[31]]],[[30,[31]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[22,7,[38,[26]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[22,6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[[28,[[27,[26]]]]],[[20,[22]]]],[[[29,[[27,[26]]]]],[[20,[22]]]],[[[30,[[27,[26]]]]],[[20,[22]]]],[[[28,[39]],40],41],[[[32,[39]],40],41],[[[29,[39]],40],41],[[[33,[39]],40],41],[[34,40],41],[[35,40],41],[[36,40],41],[[37,40],41],[[[30,[39]],40],41],[[22,40],41],[[22,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[28,[[27,[26]]]]],22],[[[32,[[27,[26]]]]],22],[[[29,[[27,[26]]]]],22],[[[33,[[27,[26]]]]],22],[34,22],[35,22],[36,22],[37,22],[[[30,[[27,[26]]]]],22],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[22,[[18,[42]]]],[43],0,0,[22,[[18,[24]]]],[22,44],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,3,6,6,46],[[5,[15]]]],[[45,3,6],5],[[]],[[]],[[6,6],47],[6,12],[[45,3,6,6],[[5,[[18,[46]]]]]],[[],1],[[],1],[[],1],[[6,6],26],[6,26],[7],[7],[6,[[5,[46]]]],[7],[[45,3,6],[[5,[15]]]],[[]],[[]],[[45,3,6],[[5,[[18,[26]]]]]],[[],7],[[]],[[],14],[[],15],[[45,3,6],[[5,[15]]]],0,[16,45],[6,[[5,[18]]]],[6,[[18,[6]]]],[[45,3,26,26],[[5,[15]]]],[46,26],[[],18],[[]],[[],20],[[],20],[[],21],[[]],[3,3],[3,3]],"c":[],"p":[[3,"Compat"],[3,"MetricEngineInner"],[3,"RegionId"],[3,"RegionCreateRequest"],[6,"Result"],[15,"str"],[15,"usize"],[3,"MetricEngine"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"ScanRequest"],[4,"RegionRequest"],[3,"Request"],[15,"bool"],[3,"MitoEngine"],[4,"RegionRole"],[4,"Option"],[3,"BoxedError"],[4,"Result"],[3,"TypeId"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[3,"String"],[8,"Into"],[3,"MissingInternalColumnSnafu"],[3,"TableAlreadyExistsSnafu"],[3,"InternalColumnOccupiedSnafu"],[8,"Clone"],[3,"CreateMitoRegionSnafu"],[3,"DeserializeSemanticTypeSnafu"],[3,"DecodeColumnValueSnafu"],[3,"MitoReadOperationSnafu"],[3,"MitoWriteOperationSnafu"],[3,"CollectRecordBatchStreamSnafu"],[3,"Vec"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"MetadataRegion"],[4,"SemanticType"],[3,"RegionPutRequest"],[13,"MissingInternalColumn"],[13,"InternalColumnOccupied"],[13,"DeserializeSemanticType"],[13,"DecodeColumnValue"],[13,"CreateMitoRegion"],[13,"TableAlreadyExists"],[13,"MitoReadOperation"],[13,"MitoWriteOperation"],[13,"CollectRecordBatchStream"]]},\
"mito2":{"doc":"Mito","t":"AAAAAAAAAAAAAAAAAAAADGLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLDGGDGLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLFFFFFFFCDDDDMMLLLLLLLLFLLLLLLLLLLLLMLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMALLLMMLMMLLMMLLLLLLLLLLLLLLLLALLLLMLLLLMMDLLLFLLLLLLLLLLMLLLMMLLLLLLGIIKKRRDDDFLLLLLLLMLLLLLLLLLLLLLLLLLLLMMFLLLLLLLLLFLFLLLLLLLLLLLLLLMMLLLMLMMLMLMMMMLLLLLLLLLLLLLLLLLLMRRDMLLLLLLLLLLLLLLLLLLLLLLMMLLLLMMMMLLMLLLLLLMLMMDRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNEDDNNDIDGMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLKLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMKLMMLLMLLLLLLLLLLLLMMMLMMMMLMKLMLKLLMLMKLKLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLAAANNDDDDDEDDDNNMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLMMLLLLMLLMLLMLLLLLLLLLLLLLLLLLLLLLLDNDRDNRERDDMMLLLLLLLLLLLLFLMLLLLLLLLLLLLLLLLLLLLLLMLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLFFLLLLLLMLLLFMLLMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDGCIIGGGDLLLLKLLMLLLLLLLLLLLLLLLLMLLLLLLKLLLLLLMKLLKAKLLKLMALLLLLLLLLLALLKMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMLLLMLLLMLMLMLLLLLLLLLLLLLLLLLLLRDDGDDDDDMMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMLLLLLLMMMMFMFMMFFLLMMMMMMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDGLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLDDDDDDDRDDDRRDDDDDMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDIGNNERLLLLLLLLLLLLLMALLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLKLLLMMLLMMLALLAALMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDNNEMLLLLLLLLLLLLLLMLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLFFLLMLLLLLLLLLLLLLLLLLLLLMLLLLMMDDRDDDMLMMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENRDNNLLMMLLLLLLMLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLFLMFLLLLLLLLLLLLLDENMLLLLLMLLLLLLLLLLLLFLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLDMLLLLMLLLLLLMLLLLLLMMLMMLLLLLLLLLLLRDGDGDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLAAMMLMLLMLLLLLLLLLLLLLLLLLALMLLLMMLLDLLLMFLLLLLLLLLLLLLLLMLMLFLMLLMMMFMLLLLLLEDDNDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFAMMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLFFDDDDGGLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLMMLMMLLLMMLLMMLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLDDLLLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLMMMLMLMMMLLLLLLLLLLLLLMMLLMLNNENNDNDNNNENNDNDNINDDDDNNENDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLKLLLLLMMMMMMMMMLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLMMDIDLLLLLLLLLLMKLLLLLLLLKLKLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAGDRRRIGLLMLLLLLLLLLMLLLLLLKLMMKLLLLLLLAAAAADDDDGGRDDLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLMLLLLLLMLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIGDDLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMKLMLLLLLLLLLLLLRRRRDDLLLLLLLLLLLLLLLLLMLALLLLLLLLLLLLMAAMAMLLLLLLLLLLLLMARDDLLMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLFLLLLLLLLMMLLLFLFLLLLFLLLLLLLLLLLLDDDMMLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLMMMLMMLLLLLLLLLLLLLLLLLLLLLLMMLMLMMMLMMLMLLLLLLLLLLLLLLLLLLEDNDNLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLMMMMDLLLMLLLLLLLLLLLLLLLLLMMLLLLLLDDLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLMMMMLLLLLLLLLLLLLLDGLLLLLLLLLLLLMLLLLLLLLLLLDGDGLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLMLLLFLLLLLLLLLLLLLLLLGDGDLLLLLLLLLLLLLFLLLLLLMMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLRDDGDDGDDLLLLLLLLLLLLLLMMMLLLMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLMALLALALLLALLALALLLALLALALMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLMMLLLLLLMMMMLMMMMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLMLMMMFFRRFFFF","n":["access_layer","cache","compaction","config","docs","engine","error","flush","manifest","memtable","metrics","read","region","region_write_ctx","request","row_converter","schedule","sst","wal","worker","AccessLayer","AccessLayerRef","borrow","borrow_mut","compat","compat_mut","compat_ref","delete_sst","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","is_in_subset","new","object_store","object_store","read_sst","region_dir","region_dir","sst_file_path","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","write_sst","CacheManager","CacheManagerRef","SstMetaCache","SstMetaKey","VectorCache","borrow","borrow","borrow_mut","borrow_mut","cache_size","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","estimated_size","fmt","from","from","from_ref","from_subset","from_subset","get_hash","get_parquet_meta_data","get_repeated_vector","hash","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","put_parquet_meta_data","put_repeated_vector","remove_parquet_meta_data","sst_meta_cache","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vector_cache","vzip","vzip","column_descr_heap_size","file_meta_heap_size","parquet_column_index_heap_size","parquet_meta_size","parquet_offset_index_heap_size","row_group_meta_heap_size","schema_descr_heap_size","CompactionPickerRef","CompactionRequest","CompactionScheduler","CompactionStatus","PendingCompaction","access_layer","access_layer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compaction_options_to_picker","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","current_version","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","file_purger","file_purger","from","from","from","from","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","merge_waiter","new","new","new_compaction_request","on_compaction_failed","on_compaction_finished","on_failure","on_failure","on_region_closed","on_region_dropped","on_region_truncated","output","pending_compaction","picker","push_waiter","push_waiter","region_id","region_id","region_status","remove_region_on_failure","request_sender","request_sender","schedule_compaction","schedule_compaction_request","scheduler","start_time","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twcs","type_id","type_id","type_id","type_id","version_control","vzip","vzip","vzip","vzip","waiters","waiters","CompactionOutput","borrow","borrow_mut","build","build_sst_reader","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","inputs","into","into_request","is_in_subset","output_file_id","output_level","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CompactionPickerRef","CompactionTask","Picker","pick","run","MAX_PARALLEL_COMPACTION","TIME_BUCKETS","TimeBuckets","TwcsCompactionTask","TwcsPicker","assign_to_windows","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_output","compaction_time_window","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","expired_ssts","file_purger","find_latest_window_in_seconds","fit_time_bucket","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","get_expired_ssts","handle_compaction","infer_time_bucket","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","mark_files_compacting","max","max_active_window_files","max_inactive_window_files","merge_ssts","new","on_failure","outputs","pick","region_id","request_sender","run","schema","send_to_worker","sst_layer","sst_write_buffer_size","start_time","time_window_seconds","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","waiters","DEFAULT_MAX_BG_JOB","DEFAULT_NUM_WORKERS","MitoConfig","auto_flush_interval","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","global_write_buffer_reject_size","global_write_buffer_size","init","into","into_request","is_in_subset","manifest_checkpoint_distance","manifest_compress_type","max_background_jobs","num_workers","sanitize","serialize","sst_meta_cache_size","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vector_cache_size","vzip","worker_channel_size","worker_request_batch_size","EngineInner","MITO_ENGINE_NAME","MitoEngine","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","from_subset","from_subset","get_metadata","get_metadata","get_region_usage","handle_query","handle_query","handle_request","handle_request","init","init","inner","into","into","into_request","into_request","is_in_subset","is_in_subset","is_region_exists","name","new","new","region_disk_usage","role","role","scanner","set_writable","set_writable","stop","stop","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","workers","ArrowReader","ArrowReaderSnafu","BuildPredicate","BuildPredicateSnafu","CompactRegion","CompactRegionSnafu","CompatReader","CompatReaderSnafu","CompressObject","CompressObjectSnafu","ComputeArrow","ComputeArrowSnafu","ComputeVector","ComputeVectorSnafu","ConvertVector","ConvertVectorSnafu","CreateDefault","CreateDefaultSnafu","DecodeWal","DecodeWalSnafu","DecompressObject","DecompressObjectSnafu","DeleteSst","DeleteSstSnafu","DeleteWal","DeleteWalSnafu","DeserializeField","DeserializeFieldSnafu","EmptyRegionDir","EmptyRegionDirSnafu","EncodeWal","EncodeWalSnafu","Error","FieldTypeMismatch","FieldTypeMismatchSnafu","FillDefault","FillDefaultSnafu","FlushRegion","FlushRegionSnafu","InvalidBatch","InvalidBatchSnafu","InvalidMeta","InvalidMetaSnafu","InvalidMetadata","InvalidMetadataSnafu","InvalidParquet","InvalidParquetSnafu","InvalidRecordBatch","InvalidRecordBatchSnafu","InvalidRegionRequest","InvalidRegionRequestSnafu","InvalidRequest","InvalidRequestSnafu","InvalidScanIndex","InvalidScanIndexSnafu","InvalidSchedulerState","InvalidSchedulerStateSnafu","InvalidSender","InvalidSenderSnafu","Join","JoinSnafu","JsonOptions","JsonOptionsSnafu","NewRecordBatch","NewRecordBatchSnafu","NotSupportedField","NotSupportedFieldSnafu","ObjectStoreNotFound","ObjectStoreNotFoundSnafu","OpenDal","OpenDalSnafu","PrimaryKeyLengthMismatch","PrimaryKeyLengthMismatchSnafu","ReadParquet","ReadParquetSnafu","ReadWal","ReadWalSnafu","Recv","RecvSnafu","RegionClosed","RegionClosedSnafu","RegionCorrupted","RegionCorruptedSnafu","RegionDropped","RegionDroppedSnafu","RegionMetadataNotFound","RegionMetadataNotFoundSnafu","RegionNotFound","RegionNotFoundSnafu","RegionReadonly","RegionReadonlySnafu","RegionTruncated","RegionTruncatedSnafu","RejectWrite","RejectWriteSnafu","Result","SerdeJson","SerdeJsonSnafu","SerializeField","SerializeFieldSnafu","StopScheduler","StopSchedulerSnafu","Utf8","Utf8Snafu","WorkerStopped","WorkerStoppedSnafu","WriteBuffer","WriteBufferSnafu","WriteGroup","WriteGroupSnafu","WriteParquet","WriteParquetSnafu","WriteWal","WriteWalSnafu","actual","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compress_type","compress_type","data_type","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","expect","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","file","file_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_fill_default","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","next","object_store","path","path","path","path","path","provide","reason","reason","reason","reason","reason","reason","reason","region_dir","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","source","start","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","column","compress_type","compress_type","data_type","end","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","expect","file","file_id","id","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","object_store","path","path","path","path","path","reason","reason","reason","reason","reason","reason","reason","region_dir","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","source","source","source","source","source","source","source","source","source","source","source","source","source","source","start","Alter","EngineFull","FlushReason","FlushScheduler","FlushStatus","Manual","Others","RegionFlushTask","WriteBufferManager","WriteBufferManagerImpl","WriteBufferManagerRef","access_layer","add_ddl_request_to_pending","add_write_request_to_pending","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","do_flush","drop","drop","drop","drop","drop","drop","file_purger","flush_memtables","flushing","fmt","fmt","free_mem","free_mem","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","get_mutable_limit","global_write_buffer_size","has_pending_ddls","init","init","init","init","init","into","into","into","into","into","into_flush_job","into_request","into_request","into_request","into_request","into_request","is_flush_requested","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","listener","memory_active","memory_usage","memory_usage","memory_used","memtable_builder","merge","merge_task","mutable_limit","mutable_usage","new","new","new","on_failure","on_failure","on_flush_failed","on_flush_success","on_region_closed","on_region_dropped","on_region_truncated","on_success","pending_ddls","pending_task","pending_writes","push_sender","reason","region_id","region_id","region_status","remove_region_on_failure","request_sender","reserve_mem","reserve_mem","row_group_size","schedule_flush","schedule_free_mem","schedule_free_mem","schedule_next_flush","scheduler","send_worker_request","senders","should_flush_engine","should_flush_engine","should_stall","should_stall","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version_control","vzip","vzip","vzip","vzip","vzip","action","manager","storage","Change","Edit","RegionChange","RegionCheckpoint","RegionEdit","RegionManifest","RegionManifestBuilder","RegionMetaAction","RegionMetaActionList","RegionRemove","RegionTruncate","Remove","Truncate","actions","apply_change","apply_edit","apply_truncate","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checkpoint","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compacted_actions","compaction_time_window","compaction_time_window","compaction_time_window","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","contains_metadata","decode","decode","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","files","files","files_to_add","files_to_remove","flushed_entry_id","flushed_entry_id","flushed_entry_id","flushed_sequence","flushed_sequence","flushed_sequence","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","last_version","last_version","manifest_version","manifest_version","metadata","metadata","metadata","new","region_id","region_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncated_entry_id","truncated_entry_id","truncated_entry_id","truncated_sequence","try_build","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_action","with_checkpoint","RegionManifestManager","RegionManifestManagerInner","RegionManifestOptions","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","checkpoint_distance","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compress_type","deref","deref","deref","deref_mut","deref_mut","deref_mut","do_checkpoint","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","increase_version","init","init","init","inner","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","last_checkpoint","last_checkpoint_version","last_version","manifest","manifest","manifest_dir","manifest_usage","may_do_checkpoint","new","new","object_store","open","open","options","stop","stop","store","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","total_manifest_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","update","vzip","vzip","vzip","CHECKPOINT_RE","Checkpoint","CheckpointMetadata","DEFAULT_MANIFEST_COMPRESSION_TYPE","DELTA_RE","Delta","FALL_BACK_COMPRESS_TYPE","FileKey","LAST_CHECKPOINT_FILE","ManifestObjectStore","ObjectStoreLogIterator","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checkpoint_file","checkpoint_file_path","checksum","clone","clone","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compress_type","decode","delete_until","delta_file","delta_file_path","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","encode","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extend_metadata","file_compress_type","file_version","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","gen_path","get_hash","get_paths","hash","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_checkpoint_file","is_delta_file","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","last_checkpoint_path","load_checkpoint","load_last_checkpoint","manifest_compress_type","manifest_size_map","new","next_log","object_store","object_store","path","save","save_checkpoint","scan","serialize","set_checkpoint_file_size","set_delta_file_size","size","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","total_manifest_size","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","AllocTracker","BoxedBatchIterator","KeyValues","Memtable","MemtableBuilder","MemtableBuilderRef","MemtableId","MemtableRef","MemtableStats","borrow","borrow","borrow_mut","borrow_mut","build","bytes_allocated","bytes_allocated","bytes_allocated","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","default","deref","deref","deref_mut","deref_mut","done_allocating","drop","drop","drop","estimated_bytes","fmt","fmt","from","from","from_subset","from_subset","id","init","init","into","into","into_request","into_request","is_done_allocating","is_empty","is_in_subset","is_in_subset","iter","key_values","mark_immutable","new","on_allocation","stats","time_range","time_range","time_series","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","write","write_buffer_manager","KeyValue","KeyValues","ReadRowHelper","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fields","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","helper","helper","indices","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","iter","mutation","new","new","num_fields","num_primary_key_column","num_primary_keys","num_rows","op_type","op_type","primary_keys","row","sequence","sequence","timestamp","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","INITIAL_BUILDER_CAPACITY","Iter","Series","SeriesRwLockMap","SeriesSet","TimeSeriesMemtable","TimeSeriesMemtableBuilder","ValueBuilder","Values","active","alloc_tracker","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","codec","codec","columns","compact","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fields","fields","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from_columns","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","frozen","get_or_add_series","id","id","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","iter_series","last_key","len","mark_immutable","max_timestamp","metadata","min_timestamp","new","new","new","new","new","next","op_type","op_type","pk_cache","pk_schema","pk_to_record_batch","predicate","primary_key_builders","primary_key_builders","projection","prune_inner","prune_primary_key","push","push","region_metadata","region_metadata","row_codec","sequence","sequence","series","series","series_set","stats","timestamp","timestamp","to_batch","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_pk_cache","update_stats","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write_buffer_manager","MemtableVersion","MemtableVersionRef","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","freeze_mutable","from","from_ref","from_subset","immutables","immutables","immutables_usage","init","into","into_request","is_empty","is_in_subset","list_memtables","mutable","mutable_usage","new","remove_memtables","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","COMPACTION_ELAPSED_TOTAL","COMPACTION_FAILURE_COUNT","COMPACTION_REQUEST_COUNT","COMPACTION_STAGE_ELAPSED","FLUSH_BYTES_TOTAL","FLUSH_ELAPSED","FLUSH_ERRORS_TOTAL","FLUSH_REASON","FLUSH_REQUESTS_TOTAL","HANDLE_REQUEST_ELAPSED","REGION_COUNT","STAGE_LABEL","TYPE_LABEL","WRITE_BUFFER_BYTES","WRITE_REJECT_TOTAL","WRITE_ROWS_TOTAL","WRITE_STAGE_ELAPSED","WRITE_STALL_TOTAL","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Batch","BatchBuilder","BatchColumn","BatchReader","BoxedBatchReader","Iter","Reader","Source","TIMESTAMP_KEY_LEN","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","column_id","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","concat","concat_arrays","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fields","fields","fields","filter","filter_deleted","first_sequence","first_timestamp","fmt","fmt","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","get_sequence","get_timestamp","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","last_sequence","last_timestamp","merge","new","new","next_batch","next_batch","num_rows","op_types","op_types","op_types","op_types_array","primary_key","primary_key","primary_key","projected_fields","projection","push_field","push_field_array","scan_region","seq_scan","sequences","sequences","sequences","sequences_array","set_primary_key","slice","sort_and_dedup","take_in_place","timestamps","timestamps","timestamps","timestamps_array","timestamps_native","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_fields","with_fields","with_required_columns","CompatFields","CompatPrimaryKey","CompatReader","DefaultValue","Index","IndexOrDefault","actual_fields","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat_fields","compat_mut","compat_mut","compat_mut","compat_mut","compat_pk","compat_ref","compat_ref","compat_ref","compat_ref","converter","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","has_same_columns","index_or_defaults","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","may_compat_fields","may_compat_primary_key","new","next_batch","reader","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","values","vzip","vzip","vzip","vzip","column_id","default_vector","BatchMerger","CompareFirst","MIN_BATCH_SIZE","MergeReader","MergeReaderBuilder","Node","batch_merger","batch_size","batch_size","batch_size","batches","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cmp","cmp","cold","compare","compare","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","current_batch","current_batch","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fetch_batch","fetch_batch_from_hottest","fetch_rows_from_hottest","filter_first_duplicate_timestamp_in_hot","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","hot","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_behind","is_empty","is_eof","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","merge_batches","new","new","new","new","next_batch","num_rows","num_rows","partial_cmp","partial_cmp","primary_key","primary_key","push","push_batch_iter","push_batch_reader","refill_hot","reheap","skip_rows","source","sources","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","BatchIndex","Field","MAX_VECTOR_LENGTH_TO_CACHE","ProjectionMapper","Tag","Timestamp","all","batch_fields","batch_fields","batch_indices","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","codec","column_ids","column_ids","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","convert","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_ref","from_subset","from_subset","has_tags","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","metadata","metadata","new","new_repeated_vector","output_schema","output_schema","repeated_vector_with_cache","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ScanRegion","Scanner","Seq","access_layer","borrow","borrow","borrow_mut","borrow_mut","build_time_range_predicate","cache_manager","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","file_in_range","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","request","scan","scanner","seq_scan","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","SeqScan","access_layer","borrow","borrow_mut","build_reader","build_stream","cache_manager","compat","compat_mut","compat_ref","deref","deref_mut","drop","files","from","from_subset","init","into","into_request","is_in_subset","mapper","memtables","new","predicate","time_range","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_cache","with_files","with_memtables","with_predicate","with_time_range","ESTIMATED_WAL_FACTOR","MitoRegion","MitoRegionRef","RegionMap","RegionMapRef","RegionUsage","access_layer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","disk_usage","drop","drop","drop","estimated_wal_usage","file_purger","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","get_region","init","init","init","insert_region","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_region_exists","is_writable","last_flush_millis","last_flush_millis","list_regions","manifest_manager","manifest_usage","metadata","opener","options","region_id","region_id","region_usage","regions","remove_region","set_writable","sst_usage","stop","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_flush_millis","version","version","version_control","vzip","vzip","vzip","wal_usage","writable","writable_region","writable_region_or","RegionOpener","borrow","borrow_mut","cache","cache_manager","check_recovered_region","compat","compat_mut","compat_ref","create_or_open","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","manifest_options","maybe_open","memtable_builder","metadata","metadata","new","new_manifest_dir","object_store","object_store_manager","open","options","options","region_dir","region_id","replay_memtable","scheduler","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CompactionOptions","RegionOptions","RegionOptionsWithoutEnum","Twcs","TwcsOptions","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compaction","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","default","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","max_active_window_files","max_inactive_window_files","options_map_to_value","prefix_twcs","storage","storage","time_window","time_window_seconds","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ttl","ttl","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","deserialize","serialize","Version","VersionBuilder","VersionControl","VersionControlData","VersionControlRef","VersionRef","add_files","alter_schema","apply_edit","apply_edit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","committed_sequence","compaction_time_window","compaction_time_window","compaction_time_window","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","current","data","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","flushed_entry_id","flushed_entry_id","flushed_entry_id","flushed_sequence","flushed_sequence","flushed_sequence","fmt","fmt","fmt","freeze_mutable","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_version","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_dropped","is_in_subset","is_in_subset","is_in_subset","is_in_subset","last_entry_id","mark_dropped","memtables","memtables","memtables","metadata","metadata","metadata","new","new","options","options","options","remove_memtables","set_sequence_and_entry_id","ssts","ssts","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate","truncated_entry_id","truncated_entry_id","truncated_entry_id","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","RegionWriteCtx","WriteNotify","add_wal_entry","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","delete_num","deref","deref","deref_mut","deref_mut","drop","drop","drop","err","failed","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","new","next_entry_id","next_sequence","notifiers","notify_result","num_rows","push_mutation","put_num","region_id","sender","set_error","set_next_entry_id","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","version","version","version_control","vzip","vzip","wal_entry","write_memtable","Alter","Background","BackgroundNotify","Close","Compact","CompactionFailed","CompactionFailed","CompactionFinished","CompactionFinished","Create","Ddl","DdlRequest","Drop","Flush","FlushFailed","FlushFailed","FlushFinished","FlushFinished","OnFailure","Open","OptionOutputTx","OutputTx","SenderDdlRequest","SenderWriteRequest","Stop","Truncate","WorkerRequest","Write","WriteRequest","_timer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_missing_column","check_schema","column_default_value","column_index_by_name","compacted_files","compaction_outputs","compaction_time_window","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err","err","estimated_size","file_metas","file_purger","file_purger","fill_column","fill_missing_columns","flushed_entry_id","flushed_sequence","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","has_null","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","memtables_to_remove","name_to_index","new","new","new","none","on_failure","on_failure","on_failure","on_failure","on_success","on_success","op_type","region_id","region_id","region_id","region_id","region_id","request","request","rows","send","send","send_mut","sender","sender","senders","senders","start_time","take_inner","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_region_request","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_proto_value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","notify","region_id","McmpRowCodec","RowCodec","SortField","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","data_type","decode","decode","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","encode","encode","encode_to_vec","encode_to_vec","estimated_size","estimated_size","fields","fmt","fmt","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","new","num_fields","serialize","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","scheduler","Job","LocalScheduler","STATE_AWAIT_TERMINATION","STATE_RUNNING","STATE_STOP","Scheduler","SchedulerRef","borrow","borrow_mut","cancel_token","compat","compat_mut","compat_ref","deref","deref_mut","drop","drop","from","from_subset","handles","init","into","into_request","is_in_subset","is_running","new","schedule","schedule","sender","state","stop","stop","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","file","file_purger","parquet","stream_writer","version","FileHandle","FileHandleInner","FileId","FileMeta","FileTimeRange","Level","MAX_LEVEL","ParseIdError","ParseIdSnafu","as_error_source","as_parquet","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compacting","compacting","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","default","deleted","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_id","file_id","file_path","file_purger","file_size","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_str","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","get_hash","hash","hash","init","init","init","init","init","init","inner","into","into","into","into","into","into","into_error","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","level","mark_deleted","meta","meta","new","new","parse_str","provide","random","region_id","region_id","serialize","serialize","set_compacting","source","source","time_range","time_range","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","FilePurger","FilePurgerRef","LocalFilePurger","PurgeRequest","borrow","borrow","borrow_mut","borrow_mut","cache_manager","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","file_id","fmt","fmt","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","region_id","scheduler","send_request","send_request","sst_layer","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DEFAULT_READ_BATCH_SIZE","DEFAULT_ROW_GROUP_SIZE","DEFAULT_WRITE_BUFFER_SIZE","PARQUET_METADATA_KEY","SstInfo","WriteOptions","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","file_size","fmt","format","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","num_rows","reader","row_group","row_group_size","stats","time_range","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_buffer_size","writer","FIXED_POS_COLUMN_NUM","ReadFormat","WriteFormat","arrow_schema","arrow_schema","arrow_schema","arrow_schema","borrow","borrow","borrow_mut","borrow_mut","column_null_counts","column_values","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","convert_batch","convert_record_batch","deref","deref","deref_mut","deref_mut","drop","drop","field_id_to_index","from","from","from_subset","from_subset","get_field_batch_columns","init","init","internal_fields","into","into","into_request","into_request","is_in_subset","is_in_subset","max_values","metadata","metadata","metadata","min_values","new","new","new_primary_key_array","null_counts","primary_key_offsets","primary_key_position","projection_indices","tag_values","time_index_position","to_sst_arrow_schema","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ParquetReader","ParquetReaderBuilder","RowGroupReaderBuilder","_file_handle","batches","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","cache","cache_manager","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","current_reader","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fetch_next_record_batch","field_levels","file_dir","file_handle","file_path","file_path","file_reader","from","from","from","from_subset","from_subset","from_subset","get_region_metadata","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","metadata","new","next_batch","object_store","parquet_meta","predicate","predicate","projection","projection","projection","read_format","read_parquet_metadata","reader_builder","row_groups","time_range","time_range","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ColumnChunkData","ColumnChunkIterator","Dense","InMemoryRowGroup","Sparse","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","column_chunks","column_chunks","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fetch","from","from","from","from_ref","from_subset","from_subset","from_subset","get","get_bytes","get_read","init","init","init","into","into","into","into_iter","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","len","metadata","next","num_rows","page_locations","reader","row_count","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","data","data","length","offset","RowGroupPruningStats","borrow","borrow_mut","column_id_to_prune","column_ids","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","max_values","min_values","new","null_counts","num_containers","read_format","row_groups","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ParquetWriter","SourceStats","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","file_path","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","metadata","new","num_rows","object_store","source","time_range","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","write_all","BufferedWriter","InnerBufferedWriter","borrow","borrow_mut","close","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","inner","into","into_request","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","try_new","type_id","vzip","write","LevelMeta","LevelMetaArray","SstVersion","SstVersionRef","add_files","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","files","files","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","get_expired_files","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","level","levels","levels","mark_all_deleted","new","new","new_level_meta_vec","remove_files","sst_usage","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EntryId","Wal","WalEntryStream","WalWriter","add_entry","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","decode_entry","deref","deref","deref_mut","deref_mut","drop","drop","entries","entry_encode_buf","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","obsolete","scan","store","store","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_to_wal","writer","DROPPING_MARKER_FILE","RegionWorker","RegionWorkerLoop","RequestBuffer","StalledRequests","WorkerGroup","WorkerId","WorkerListener","WorkerStarter","append","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache_manager","cache_manager","cache_manager","cache_manager","clean","clone","clone_into","compaction_scheduler","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","config","config","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","dropping_regions","estimated_size","flush_regions_on_engine_full","flush_scheduler","from","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_region","get_region","handle","handle_alter","handle_alter_request","handle_background_notify","handle_close","handle_close_request","handle_compaction","handle_compaction_failure","handle_compaction_finished","handle_compaction_request","handle_create","handle_create_request","handle_ddl_requests","handle_drop","handle_drop_request","handle_flush","handle_flush_failed","handle_flush_finished","handle_flush_request","handle_open","handle_open_request","handle_requests","handle_truncate","handle_truncate_request","handle_write","handle_write_requests","id","id","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_region_exists","is_region_exists","is_running","listener","listener","log_store","maybe_flush_worker","memtable_builder","new_flush_task","object_store_manager","object_store_manager","on_flush_begin","on_flush_success","on_later_drop_begin","on_later_drop_end","on_write_stall","prepare_region_write_ctx","receiver","regions","regions","requests","run","running","running","scheduler","scheduler","scheduler","sender","sender","set_running","should_reject_write","stalled_requests","start","start","stop","stop","submit_request","submit_to_worker","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value_to_index","vzip","vzip","vzip","vzip","vzip","vzip","wal","worker","workers","write_buffer_manager","write_buffer_manager","alter_region_schema","metadata_after_alteration","GC_TASK_INTERVAL_SEC","MAX_RETRY_TIMES","later_drop_task","remove_region_dir_once","maybe_fill_missing_columns","reject_write_requests"],"q":[[0,"mito2"],[20,"mito2::access_layer"],[52,"mito2::cache"],[120,"mito2::cache::cache_size"],[127,"mito2::compaction"],[249,"mito2::compaction::output"],[276,"mito2::compaction::picker"],[281,"mito2::compaction::twcs"],[378,"mito2::config"],[427,"mito2::engine"],[495,"mito2::error"],[2188,"mito2::error::Error"],[2314,"mito2::flush"],[2489,"mito2::manifest"],[2492,"mito2::manifest::action"],[2832,"mito2::manifest::manager"],[2927,"mito2::manifest::storage"],[3118,"mito2::memtable"],[3193,"mito2::memtable::key_values"],[3278,"mito2::memtable::time_series"],[3496,"mito2::memtable::version"],[3533,"mito2::metrics"],[3881,"mito2::read"],[4040,"mito2::read::compat"],[4143,"mito2::read::compat::IndexOrDefault"],[4145,"mito2::read::merge"],[4305,"mito2::read::projection"],[4372,"mito2::read::scan_region"],[4425,"mito2::read::seq_scan"],[4461,"mito2::region"],[4564,"mito2::region::opener"],[4605,"mito2::region::options"],[4744,"mito2::region::options::prefix_twcs"],[4746,"mito2::region::version"],[4885,"mito2::region_write_ctx"],[4950,"mito2::request"],[5283,"mito2::request::WorkerRequest"],[5285,"mito2::row_converter"],[5345,"mito2::schedule"],[5346,"mito2::schedule::scheduler"],[5384,"mito2::sst"],[5389,"mito2::sst::file"],[5599,"mito2::sst::file_purger"],[5653,"mito2::sst::parquet"],[5711,"mito2::sst::parquet::format"],[5780,"mito2::sst::parquet::reader"],[5874,"mito2::sst::parquet::row_group"],[5958,"mito2::sst::parquet::row_group::ColumnChunkData"],[5962,"mito2::sst::parquet::stats"],[5992,"mito2::sst::parquet::writer"],[6044,"mito2::sst::stream_writer"],[6070,"mito2::sst::version"],[6137,"mito2::wal"],[6197,"mito2::worker"],[6421,"mito2::worker::handle_alter"],[6423,"mito2::worker::handle_drop"],[6427,"mito2::worker::handle_write"]],"d":["","Cache for the engine.","","Configurations.","Mito developer document","Mito region engine.","","Flush related utilities and structs.","manifest storage","Memtables are write buffers for regions.","","Common structs and utilities for reading data.","Mito region.","","Worker requests.","","","Sorted strings tables.","Write ahead log of the engine.","Structs and utilities for writing regions.","A layer to access SST files under the same directory.","","","","","","","Deletes a SST file with given file id.","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Returns a new AccessLayer for specific <code>region_dir</code>.","Returns the object store of the layer.","","Returns a reader builder for specific <code>file</code>.","Returns the directory of the region.","","Returns the <code>file_path</code> for the <code>file_name</code> in the object …","","","","","","","Returns a new parquet writer to write the SST for specific …","Manages cached data for the engine.","","Maps (region id, file id) to ParquetMetaData.","Cache key (region id, file id) for SST meta.","Maps Value to a vector that holds this value repeatedly.","","","","","Cache size of different cache value.","","","","","","","","","","","","","","","","","","","","","Returns memory used by the key (estimated).","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Gets cached ParquetMetaData.","Gets a vector with repeated value for specific <code>key</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Creates a new manager with specific cache size in bytes.","Puts ParquetMetaData into the cache.","Puts a vector with repeated value into the cache.","Removes ParquetMetaData from the cache.","Cache for SST metadata.","","","","","","","","","","","","Cache for vectors.","","","Returns estimated size of ColumnDescriptor allocated from …","Returns estimated size of FileMetaData allocated from heap.","Returns estimated size of ParquetColumnIndex allocated …","Returns estimated size of ParquetMetaData.","Returns estimated size of ParquetOffsetIndex allocated …","Returns estimated size of ColumnDescriptor allocated from …","Returns estimated size of SchemaDescriptor allocated from …","","Region compaction request.","Compaction scheduler tracks and manages compaction tasks.","Status of running and pending region compaction tasks.","Pending compaction tasks.","","Access layer of the region.","","","","","","","","","Builds compaction picker according to CompactionOptions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","File purger of the region.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Merge the watier to the pending compaction.","","Creates a new CompactionStatus","Creates a new compaction request for compaction picker.","Notifies the scheduler that the compaction job is failed.","Notifies the scheduler that the compaction job is finished …","Send flush error to waiter.","","Notifies the scheduler that the region is closed.","Notifies the scheduler that the region is dropped.","Notifies the scheduler that the region is truncated.","","Compaction pending to schedule.","","Push waiter to the request.","Push waiter to the request.","","Id of the region.","Compacting regions.","","Sender to send notification to the region worker.","Request sender of the worker that this scheduler belongs …","Schedules a compaction for the region.","Schedules a compaction request.","","Start time of compaction task.","","","","","","","","","","","","","","","","","","","","","","Version control of the region.","","","","","Waiters of the compaction request.","","","","","","Builds BoxedBatchReader that reads all SST files and …","","","","","","","","Returns the argument unchanged.","","","Compaction input files.","Calls <code>U::from(self)</code>.","","","","Compaction output file level.","","","","","","","","","Picker picks input SST files and builds the compaction …","","","","A set of predefined time buckets.","","","<code>TwcsPicker</code> picks files of which the max timestamp are in …","Assigns files to windows with predefined window size (in …","","","","","","","Builds compaction output from files. For active writing …","","","","","","","","","","","","","","","","","","","","","","","Finds the latest active writing window among all files. …","Fits a given time span into time bucket by find the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Finds all expired SSTs across levels.","","Infers the suitable time bucket duration. Now it simply …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Merges all SST files. Returns <code>(output files, input files)</code>.","","Handles compaction failure, notifies all waiters.","","","","Request sender to notify the worker.","","","Notifies region worker to handle post-compaction tasks.","","","Start time of compaction task","","","","","","","","","","","","","","","","","","","","Senders that are used to notify waiters waiting for …","Default max running background job.","Default region worker num.","Configuration for MitoEngine.","Interval to auto flush a region if it has not flushed yet …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Global write buffer size threshold to reject write …","Global write buffer size threshold to trigger flush …","","Calls <code>U::from(self)</code>.","","","Number of meta action updated to trigger a new checkpoint …","Manifest compression type (default uncompressed).","Max number of running background jobs (default 4).","Number of region workers (default 1).","Sanitize incorrect configurations.","","Cache size for SST metadata (default 128MB). Setting it to …","","","","","","","Cache size for vectors and arrow arrays (default 512MB). …","","Request channel size of each worker (default 128).","Max batch size for a worker to handle requests (default …","Inner struct of MitoEngine.","","Region engine implementation for timeseries data.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get metadata of a region.","Retrieve region’s metadata.","Returns the region disk/memory usage information.","Handles the scan <code>request</code> and returns a Scanner for the …","Handle substrait query and return a stream of record …","Handles RegionRequest and return its executed result.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns true if the specific region exists.","","Returns a new EngineInner with specific <code>config</code>, <code>log_store</code> …","Returns a new MitoEngine with specific <code>config</code>, <code>log_store</code> …","","","","Returns a scanner to scan for <code>request</code>.","Set writable mode for a region.","","Stop the inner engine.","Stop the engine.","","","","","","","","","","","","","","Region workers group.","","SNAFU context selector for the <code>Error::ArrowReader</code> variant","","SNAFU context selector for the <code>Error::BuildPredicate</code> …","","SNAFU context selector for the <code>Error::CompactRegion</code> variant","","SNAFU context selector for the <code>Error::CompatReader</code> variant","","SNAFU context selector for the <code>Error::CompressObject</code> …","","SNAFU context selector for the <code>Error::ComputeArrow</code> variant","","SNAFU context selector for the <code>Error::ComputeVector</code> variant","","SNAFU context selector for the <code>Error::ConvertVector</code> variant","","SNAFU context selector for the <code>Error::CreateDefault</code> variant","","SNAFU context selector for the <code>Error::DecodeWal</code> variant","","SNAFU context selector for the <code>Error::DecompressObject</code> …","","SNAFU context selector for the <code>Error::DeleteSst</code> variant","","SNAFU context selector for the <code>Error::DeleteWal</code> variant","","SNAFU context selector for the <code>Error::DeserializeField</code> …","","SNAFU context selector for the <code>Error::EmptyRegionDir</code> …","","SNAFU context selector for the <code>Error::EncodeWal</code> variant","","","SNAFU context selector for the <code>Error::FieldTypeMismatch</code> …","An error type to indicate that schema is changed and we …","SNAFU context selector for the <code>Error::FillDefault</code> variant","","SNAFU context selector for the <code>Error::FlushRegion</code> variant","","SNAFU context selector for the <code>Error::InvalidBatch</code> variant","","SNAFU context selector for the <code>Error::InvalidMeta</code> variant","","SNAFU context selector for the <code>Error::InvalidMetadata</code> …","","SNAFU context selector for the <code>Error::InvalidParquet</code> …","","SNAFU context selector for the <code>Error::InvalidRecordBatch</code> …","","SNAFU context selector for the <code>Error::InvalidRegionRequest</code> …","","SNAFU context selector for the <code>Error::InvalidRequest</code> …","","SNAFU context selector for the <code>Error::InvalidScanIndex</code> …","","SNAFU context selector for the <code>Error::InvalidSchedulerState</code>…","","SNAFU context selector for the <code>Error::InvalidSender</code> variant","","SNAFU context selector for the <code>Error::Join</code> variant","","SNAFU context selector for the <code>Error::JsonOptions</code> variant","","SNAFU context selector for the <code>Error::NewRecordBatch</code> …","","SNAFU context selector for the <code>Error::NotSupportedField</code> …","","SNAFU context selector for the <code>Error::ObjectStoreNotFound</code> …","","SNAFU context selector for the <code>Error::OpenDal</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ReadParquet</code> variant","","SNAFU context selector for the <code>Error::ReadWal</code> variant","","SNAFU context selector for the <code>Error::Recv</code> variant","","SNAFU context selector for the <code>Error::RegionClosed</code> variant","","SNAFU context selector for the <code>Error::RegionCorrupted</code> …","","SNAFU context selector for the <code>Error::RegionDropped</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::RegionNotFound</code> …","","SNAFU context selector for the <code>Error::RegionReadonly</code> …","","SNAFU context selector for the <code>Error::RegionTruncated</code> …","","SNAFU context selector for the <code>Error::RejectWrite</code> variant","","","SNAFU context selector for the <code>Error::SerdeJson</code> variant","","SNAFU context selector for the <code>Error::SerializeField</code> …","","SNAFU context selector for the <code>Error::StopScheduler</code> variant","","SNAFU context selector for the <code>Error::Utf8</code> variant","","SNAFU context selector for the <code>Error::WorkerStopped</code> variant","","SNAFU context selector for the <code>Error::WriteBuffer</code> variant","","SNAFU context selector for the <code>Error::WriteGroup</code> variant","","SNAFU context selector for the <code>Error::WriteParquet</code> variant","","SNAFU context selector for the <code>Error::WriteWal</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if we need to fill default value for a regionlush to alter table.","Engine reaches flush threshold.","Reason of a flush task.","Manages background flushes of a worker.","Flush status of a region scheduled by the FlushScheduler.","Manual flush.","Other reasons.","Task to flush a region.","Global write buffer (memtable) manager.","Default WriteBufferManager implementation.","","","Add ddl request to pending queue.","Add write request to pending queue.","Get flush reason as static str.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs the flush task.","","","","","","","","Flushes memtables to level 0 SSTs.","There is a flush task running.","","","We have freed <code>mem</code> bytes.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the size limit for mutable memtables.","Write buffer size for the engine.","Returns true if the region has pending DDLs.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the flush task into a background job.","","","","","","Returns true if the region already requested flush.","","","","","","","Memory that hasn’t been scheduled to free (e.g. used by …","Returns the total memory used by memtables.","","Memory in used (e.g. used by mutable and immutable …","","Merge two flush tasks.","Merges the task to pending task.","Mutable memtable memory size limit.","Returns memory usage of mutable memtables.","Creates a new flush scheduler.","","Returns a new manager with specific …","Send flush error to waiter.","","Notifies the scheduler that the flush job is failed.","Notifies the scheduler that the flush job is finished.","Notifies the scheduler that the region is closed.","Notifies the scheduler that the region is dropped.","Notifies the scheduler that the region is truncated.","Consumes the task and notify the sender the job is success.","Pending ddl requests.","Task waiting for next flush.","Requests waiting to write after altering the region.","Push the sender if it is not none.","Reason to flush.","Region to flush.","Current region.","Tracks regions need to flush.","","Request sender to notify the worker.","Reserves <code>mem</code> bytes.","","","Schedules a flush <code>task</code> for specific <code>region</code>.","Tells the manager we are freeing <code>mem</code> bytes.","","Schedules a new flush task when the scheduler can submit …","Background job scheduler.","Notify flush job status.","Flush result senders.","Returns whether to trigger the engine.","","Returns whether to stall write requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","Version control of the region.","","","","","","Defines RegionMetaAction related structs and …","","","Change region’s metadata for request like ALTER","Edit region’s state for changing options or file list.","","","","The region manifest data.","","Actions that can be applied to region manifest.","","","Last data truncated in the region.","Remove the region.","Truncate the region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inferred compaction time window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if the builder keeps a RegionMetadata.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encode self into json in the form of string lines.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SST files.","","","","","Last WAL entry id of flushed data.","","","Last sequence of flushed data.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","The last manifest version that this checkpoint …","Current manifest version.","","The metadata after changed.","Metadata of the region.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Last WAL entry id of truncated data.","Last WAL entry id of truncated data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start with a checkpoint.","Manage region’s manifest. Provide APIs to access …","","Options for RegionManifestManager.","","","","","","","Interval of version (ManifestVersion) between two …","","","","","","","","","","","","","","","","","","","Make a new checkpoint. Return the fresh one if there are …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Increases last version and returns the increased version.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Fetch the last RegionCheckpoint from storage.","The last version included in checkpoint file.","","Retrieve the current RegionManifest.","","Directory to store manifest.","Returns total manifest size.","","Construct a region’s manifest and persist it.","Creates a new manifest.","","Open an existing manifest.","Open an existing manifest.","","Stop background tasks gracefully.","","","","","","","","","","Returns total manifest size.","","","","","","","","","","Update the manifest. Return the current manifest version …","Update the manifest. Return the current manifest version …","","","","","A checkpoint file (<code>.checkpoint</code>).","","","","A delta file (<code>.json</code>).","Due to backward compatibility, it is possible that the user…","Key to identify a manifest file.","","","","","","","","","","","","","","","","","","","Returns the checkpoint file path under the <strong>current</strong> …","","","","","","","","","","","","","","","","","","","","","","","","","","Delete manifest files that version &lt; end. If …","","Returns the delta file path under the <strong>current</strong> compression …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return’s the file compress algorithm by file extension.","Return’s the file manifest version from path","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Return all <code>R</code>s in the root directory that meet the <code>filter</code> …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the last checkpoint path, because the last …","","Load the latest checkpoint. Return manifest version and …","","Stores the size of each manifest file.","","","","","","Save the delta manifest file.","Save the checkpoint manifest file.","Scan the manifest files in the range of [start, end) and …","","Set the size of the checkpoint file by checkpoint version.","Set the size of the delta file by delta version.","","","","","","","","","","","","","","","","Compute the size(Byte) in manifest size map.","","","","","","","","","","","","","","","","","","","The latest version this checkpoint contains.","","","","","","","Memtable memory allocation tracker.","","","In memory write buffer.","Builder to build a new Memtable.","","Id for memtables.","","","","","","","Builds a new memtable instance.","Returns the estimated bytes allocated by this memtable.","Returns bytes allocated.","Bytes allocated by the tracker.","","","","","","","","","","","","","Marks we have finished allocating memory so we can free it …","","","","The estimated bytes allocated by this memtable from heap.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the id of this memtable.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether allocating is done.","Returns true if the memtable is empty.","","","Scans the memtable. <code>projection</code> selects columns to read, …","","Mark the memtable as immutable.","Returns a new AllocTracker.","Tracks <code>bytes</code> memory is allocated.","Returns the MemtableStats info of Memtable.","Returns the time range of the memtable.","The time range that this memtable contains.","","","","","","","","","","","","Memtable version.","","","Write key values into the memtable.","","Key value view of a row.","Key value view of a mutation.","Helper to read rows in key, value order.","","","","","","","","","","","","","","","","","","","","","","","","","Get field columns.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Key value read helper.","","Key and value column indices.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns a key value iterator.","Mutation to read.","Creates KeyValues from specific <code>mutation</code>.","Creates a ReadRowHelper for specific <code>rows</code>.","Get number of field columns.","Number of primary key columns.","Get number of primary key columns.","Returns number of rows.","Get op type.","","Get primary key columns.","","Get sequence.","","Get timestamp.","","","","","","","","","","","","","","","","","","","Initial vector builder capacity.","","A <code>Series</code> holds a list of field values of some given …","","","Memtable implementation that groups rows by their primary …","Builder to build TimeSeriesMemtable.","<code>ValueBuilder</code> holds all the vector builders for field …","Values holds an immutable vectors of field columns, …","","","","","","","","","","","","","","","","","","","","","","Returns a vector of all columns converted to arrow Array …","Freezes active part to frozen part and compact frozen part …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Freezes the active part and push it to <code>frozen</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Builds a new Values instance from columns.","","","","","","","","","","Returns the series for given primary key, or create a new …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Iterates all series in SeriesSet.","","Returns the length of ValueBuilder","","","","","","","","","Creates a new builder with specific <code>write_buffer_manager</code>.","","","","","","","","Creates primary key array builders and arrow’s schema …","","","","","Pushes a row of values into Series.","Pushes a new row to <code>ValueBuilder</code>. We don’t need primary …","","","","","","","","","","","","Converts Values to <code>Batch</code>, sorts the batch according to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates memtable stats.","","","","","","","","","","A version of current memtables in a region.","","","","","","","","","","","","","Returns a new MemtableVersion which switches the old …","Returns the argument unchanged.","","","Immutable memtables.","Immutable memtables.","Returns the memory usage of the immutable memtables.","","Calls <code>U::from(self)</code>.","","Returns true if the memtable version is empty.","","Lists mutable and immutable memtables.","Mutable memtable.","Returns the memory usage of the mutable memtable.","Returns a new MemtableVersion with specific mutable …","Removes memtables by ids from immutable memtables.","","","","","","","","Timer of whole compaction task.","Counter of failed compaction task.","Counter of all requested compaction task.","Timer of different stages in compaction.","Histogram of flushed bytes.","Elapsed time of a flush job.","Counter of scheduled failed flush jobs.","Reason to flush.","Counter of scheduled flush requests. Note that the flush …","Elapsed time to handle requests.","Gauge for open regions","Stage label.","Type label.","Global write buffer size in bytes.","Counter of rejected write requests.","Counter of rows to write.","Elapsed time of each write stage.","Counter of stalled write requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Storage internal representation of a batch of rows for a …","Builder to build Batch.","A column in a Batch.","Async batch reader.","Pointer to BatchReader.","Source from a BoxedBatchIterator.","Source from a BoxedBatchReader.","Async Batch reader and iterator wrapper.","Len of timestamp in arrow row format.","","","","","","","","","Builds the Batch.","","","","","Id of the column.","Utilities to adapt readers with different schema.","","","","","","","","","","","","","Takes <code>batches</code> and concat them into one batch.","Helper function to concat arrays from <code>iter</code>.","Data of the column.","","","","","","","","","","","","","","","","","","","","Returns fields in the batch.","","Fields organized in columnar format.","","Removes rows whose op type is delete.","Returns the first sequence in the batch or <code>None</code> if the …","Returns the first timestamp in the batch or <code>None</code> if the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Gets a sequence at given <code>index</code>.","Gets a timestamp at given <code>index</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns true if the number of rows in the batch is 0.","","","","","Returns the last sequence in the batch or <code>None</code> if the …","Returns the last timestamp in the batch or <code>None</code> if the …","Merge reader implementation.","Creates a new BatchBuilder with primary key.","Creates a new batch.","Fetch next Batch.","Returns next Batch from this data source.","Returns the number of rows in the batch.","Returns op types of the batch.","","Op types of rows","Try to set an array as op types.","Returns primary key of the batch.","","Primary key encoded in a comparable form.","Returns ids of fields in the Batch after applying the …","Utilities for projection.","Push a field column.","Push an array as a field.","Scans a region according to the scan request.","Sequential scan.","Returns sequences of the batch.","","Sequences of rows","Try to set an array as sequences.","Replaces the primary key of the batch.","Slice the batch, returning a new batch.","Sorts and dedup rows in the batch.","Takes the batch in place.","Returns timestamps of the batch.","","Timestamps of rows, should be sorted and not null.","Try to set an array as timestamps.","Returns timestamps in a native slice or <code>None</code> if the batch …","","","","","","","","","","","","","","","","","","","","","","","","","","","Set all field columns.","Tries to set fields for the batch.","Creates a new BatchBuilder with all required columns.","Helper to make fields compatible.","Helper to make primary key compatible.","Reader to adapt schema of underlying reader to expected …","Default value for the column.","Index of the column in source batch.","Index in source batch or a default value to fill a column.","Column Ids the reader actually returns.","","","","","","","","","","Make primary key of the <code>batch</code> compatible.","","","Make fields of the <code>batch</code> compatible.","","Optional fields adapter.","","","","","Optional primary key adapter.","","","","","Row converter to append values to primary keys.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns true if <code>left</code> and <code>right</code> have same columns to read.","Indices to convert actual fields to expect fields.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a CompatFields if needed.","Creates a CompatPrimaryKey if needed.","Creates a new compat reader.","","Underlying reader.","","","","","","","","","","","","","","","","","","","","","Default values to append.","","","","","Id of the column.","Default value. The vector has only 1 element.","Helper to collect and merge small batches for same primary …","Type to compare Batch by first row.","Minimum batch size to output.","Reader to merge sorted batches.","Builder to build and initialize a MergeReader.","A <code>Node</code> represent an individual input data source to be …","Batches to output.","Sets the batch size of the reader.","Suggested size of each batch. The batch returned by the …","Batch size of the reader.","Buffered non-empty batches to merge.","","","","","","","","","","","Builds and initializes the reader, then resets the builder.","","Compares by primary key, time index, sequence desc.","Holds <code>Node</code> whose key range of current batch <strong>isn’t</strong> …","","","","","","","","","","","","","","","","","","Returns current batch.","Current batch to be read. The node ensures the batch is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns current batch and fetches next batch from the …","Fetches one batch from the hottest node.","Fetches non-duplicated rows from the hottest node and …","Filters the first duplicate <code>timestamp</code> in <code>top_node</code> and <code>hot</code> …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Holds Nodes whose key range of current batch <strong>is</strong> overlapped …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns true if the key range of current batch in <code>self</code> is …","Returns true if the merger is empty.","Returns whether the node still has batch to read.","","","","","","Merge all buffered batches and returns the merged batch. …","Creates and initializes a new MergeReader.","Returns an empty builder.","Returns a empty merger.","Initialize a node.","","Returns the number of rows.","Number of rows in the batch.","","","Returns the primary key of current merger and <code>None</code> if the …","Returns the primary key of current batch.","Removeds deleted entries and pushes a <code>batch</code> into the …","Pushes a batch iterator to sources.","Pushes a batch reader to sources.","Moves nodes in <code>cold</code> heap, whose key range is overlapped …","Push the node popped from <code>hot</code> back to a proper heap.","Skips first <code>num_to_skip</code> rows from node’s current batch. …","Data source of this <code>Node</code>.","Input sources.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index of a vector in a Batch.","Index in fields.","Only cache vector when its length <code>&lt;=</code> this value.","Handles projection and converts a projected Batch to a …","Index in primary keys.","The time index column.","Returns a new mapper without projection.","Returns ids of fields in Batches the mapper expects to …","Ids of field columns in the Batch.","Maps column in RecordBatch to index in Batch.","","","","","","","Decoder for primary key.","Returns ids of projected columns.","Ids of columns to project. It keeps ids in the same order …","","","","","","","Converts a Batch to a RecordBatch.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Output record batch contains tags.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns the metadata that created the mapper.","Metadata of the region.","Returns a new mapper with projection.","Returns a vector with repeated values.","Returns the schema of converted RecordBatch.","Schema for converted RecordBatch.","Gets a vector with repeated values from specific cache or …","","","","","","","","","","","","","","Helper to scans a region by ScanRequest.","A scanner scans a region and returns a …","Sequential scan.","Access layer of the region.","","","","","Build time range predicate from filters.","Cache.","","","","","","","","","","","","","Returns true if the time range of a SST <code>file</code> matches the …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Creates a ScanRegion.","Scan request.","Returns a SendableRecordBatchStream to retrieve scan …","Returns a Scanner to scan the region.","Scan sequentially.","","","","","","","","","","","Version of the region at scan.","","","Scans a region and returns rows in a sorted sequence.","Region SST access layer.","","","Builds a BoxedBatchReader from sequential scan.","Builds a stream for the query.","Cache.","","","","","","","Handles to SST files to scan.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Maps projected Batches to RecordBatches.","Memtables to scan.","Creates a new SeqScan.","Predicate to push down.","Time range filter for time index.","","","","","","","Sets cache for this query.","Sets files to read.","Sets memtables to read.","Sets predicate to push down.","Sets time range filter for time index.","This is the approximate factor to estimate the size of wal.","Metadata and runtime status of a region.","","Regions indexed by ids.","","Region status include region id, memtable usage, sst …","SSTs accessor for this region.","","","","","","","Clear the map.","","","","","","","","","","","","","","","","","","","","","Estimated WAL size in bytes. Use the memtables size to …","SST file purger.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Gets region by region id.","","","","Inserts a new region into the map.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns true if the region exists.","Returns whether the region is writable.","Returns last flush timestamp in millis.","Last flush time in millis.","List all regions.","Manager to maintain manifest for this region.","","Returns current metadata of the region.","Region opener.","Options for a region.","","Id of this region.","Returns the region usage in bytes.","","Remove region by id.","Sets the writable flag.","","Stop background managers for this region.","","","","","","","","","","","","","","","","Update flush time to current time.","Version control of mito engine.","Returns current version of the region.","Version controller for this region.","","","","","Whether the region is writable.","Gets writable region by region id.","Gets writable region by region id.","Builder to create a new MitoRegion or open an existing one.","","","Sets the cache manager for the region.","","Checks whether the recovered region has the same schema as …","","","","Writes region manifest and creates a new region if it does …","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Returns a new manifest options.","Tries to open the region and returns <code>None</code> if the region …","","Sets metadata of the region to create.","","Returns a new opener.","Returns the directory to the manifest files.","Returns an object store corresponding to <code>name</code>. If <code>name</code> is …","","Opens an existing region in read only mode.","Sets options for the region.","","","","Replays the mutations from WAL and inserts mutations to …","","","","","","","","Options for compactions","Options that affect the entire region.","We need to define a new struct without enum fields as …","Time window compaction strategy.","Time window compaction options.","","","","","","","","","","","","","","","Compaction options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Max num of files that can be kept in active writing time …","Max num of files that can be kept in inactive time window.","Converts the <code>options</code> map to a json object.","","Custom storage.","","Compaction time window defined when creating tables.","Returns time window in second resolution.","","","","","","","","","","","","","","","","","","","","","Region SST files TTL.","Region SST files TTL.","","","","","","","","","","","Static metadata of a region.","Version builder.","Controls metadata and sequence numbers for a region.","Data of VersionControl.","","","Add files to the builder.","Alter schema of the region.","Apply edit to the builder.","Apply edit to current version.","","","","","","","","","Builds a new Version from the builder.","","","","","Sequence number of last committed data.","Sets compaction time window.","","Inferred compaction time window.","","","","","","","","","","","","","Returns current copy of data.","","","","","","","","","","","","","","Sets flushed entry id.","","Inclusive max WAL entry id of flushed data.","Sets flushed sequence.","","Inclusive max sequence of flushed data.","","","","Freezes the mutable memtable if it is not empty.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns a new builder from an existing version.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Marker of whether this region is dropped/dropping","","","","","Last WAL entry Id.","Mark all opened files as deleted and set the delete marker …","Sets memtables.","","Mutable and immutable memtables.","Sets metadata.","","Metadata of the region.","Returns a new builder.","Returns a new VersionControl with specific <code>version</code>.","Sets options.","","Options of the region.","Remove memtables from the builder.","Updates committed sequence and entry id.","","SSTs of the region.","","","","","","","","","","","Truncate current version.","Sets truncated entty id.","","Latest entry id during the truncating table.","","","","","","","","","","","","","Latest version.","","","","","Context to keep region metadata and buffer write requests.","Context to keep region metadata and buffer write requests. …","Encode and add WAL entry to the writer.","","","","","","","","","","","Rows to delete.","","","","","","","","Error to send to the waiter.","The write operation is failed and we should not write to …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Creates a new notify from the <code>sender</code>.","Returns an empty context.","Next entry id of WAL to write.","Next sequence number to write.","Notifiers to send write results to waiters.","Send result to the waiter.","Number of rows to be written.","Push mutation to the context.","Rows to put.","Id of region to write.","Sender to send write result to the waiter for this …","Sets error and marks all write operations are failed.","Updates next entry id.","","","","","","","","","","","","Version of the region while creating the context.","VersionControl of the region.","","","Valid WAL entry to write.","Consumes mutations and writes them into mutable memtable.","","Notifications from internal background jobs.","Notification from a background job.","","","A failing compaction result.","Compaction has failed.","Notifies a compaction job has finished.","Compaction has finished.","","Ddl request to a region.","DDL request to a region.","","","Notifies a flush job is failed.","Flush has failed.","Notifies a flush job is finished.","Flush has finished.","Callback on failure.","","Optional output result sender.","Oneshot output result sender.","Sender and Ddl request.","Sender and write request.","Notify a worker to stop.","","Request sent to a worker","Write to a region.","Request to write a region.","Flush timer.","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether we should allow a row doesn’t provide …","Checks schema of rows is compatible with schema of the …","Returns the default value for specific column.","Gets column index by name.","Compacted files that are to be removed from region version.","Compaction output files that are to be added to region …","Inferred Compaction time window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The error source of the failure.","The error source of the failure.","Returns estimated size of the request.","Meta of the flushed SSTs.","File purger for cleaning files on failure.","File purger for cleaning files on failure.","Fills default value for specific <code>column</code>.","Tries to fill missing columns.","Entry id of flushed data.","Sequence of flushed data.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Whether each column has null.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Id of memtables to remove.","Map column name to column index in <code>rows</code>.","Creates a new request.","Creates a new output sender.","Creates a sender.","Creates an empty sender.","Handles <code>err</code> on failure.","","","Compaction succeeded but failed to update manifest or …","Marks the flush job as successful and observes the timer.","","Type of the write request.","Region to write.","Region id of the request.","Region id.","Region id.","","","Ddl request.","Rows to write.","Sends the <code>result</code>.","Sends the <code>result</code> and consumes the sender.","Sends the <code>result</code> and consumes the inner sender.","Result sender.","Result sender.","Flush result senders.","Compaction result senders.","Start time of compaction task.","Takes the inner sender.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts request from a RegionRequest.","","","","","","","","","","","","","","","","","","","","","","","","","Validate proto value schema.","","","","","","","","","","","","","Internal notification.","Id of the region to send.","A memory-comparable row Value encoder/decoder.","Row value encoder/decoder.","","","","","","","","","","","","","Decode row values from bytes.","","","","","","","","","Encodes rows to bytes.","","Encodes rows to specific vec.","","","Estimated length for encoded bytes.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Request scheduler based on local state.","","The state of scheduler","","Scheduler defines a set of API to schedule Jobs","","","","Token used to halt the scheduler","","","","","","","","Returns the argument unchanged.","","Task handles","","Calls <code>U::from(self)</code>.","","","","Starts a new scheduler.","Schedules a Job","","Sends jobs to flume bounded channel","State of scheduler","Stops scheduler. If <code>await_termination</code> is set to true, the …","if await_termination is true, scheduler will wait all …","","","","","","","Structures to describe metadata of files.","","SST in parquet format.","","SST version.","Handle to a SST file.","Inner data of FileHandle.","Unique id for [SST File].","Metadata of a SST file.","Time range of a SST file.","Type to store SST level.","Maximum level of SSTs.","","SNAFU context selector for the <code>ParseIdError</code> error","","Append <code>.parquet</code> to file id to make a complete file name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the file id.","Compared to normal file names, FileId ignore the extension","Returns the complete file path of the file.","","Size of the file.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","SST level of the file.","Mark the file as deleted and will delete it on drop …","","","","","Parses id from string.","","Returns a new unique FileId randomly.","Returns the region id of the file.","Region of file.","","","","","","Returns the time range of the file.","Timestamp range of file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A worker to delete files in background.","","Purger that purges file for current region.","Request to remove a file.","","","","","","","","","","","","","","","","","","Id of the file.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Creates a new purger.","Region id of the file.","","Send a purge request to the background worker.","","","","","","","","","","","","","","","Default batch size to read parquet files.","Default row group size for parquet files.","","Key of metadata in parquet SST.","Parquet SST info returned by the writer.","Parquet write options.","","","","","","","","","","","","","","","","","","File size in bytes.","","Format to store in parquet.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Number of rows.","Parquet reader.","Ports private structs from parquet crate.","Row group size.","Statistics of parquet SSTs.","Time range of the SST.","","","","","","","","","","","","","Buffer size for async writer.","Parquet writer.","Number of columns that have fixed positions.","Helper for reading the SST format.","Helper for writing the SST format.","Gets the arrow schema to store in parquet.","Gets the arrow schema of the SST file.","SST file schema.","SST file schema.","","","","","Returns null counts of specific non-tag columns.","Returns min/max values of specific non-tag columns.","","","","","","","Convert <code>batch</code> to a arrow record batch to store in parquet.","Convert a arrow record batch into <code>batches</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get fields from <code>record_batch</code>.","","","Fields for internal columns.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns max values of specific column in row groups.","Gets the metadata of the SST.","","","Returns min values of specific column in row groups.","Creates a new helper.","Creates a helper with existing <code>metadata</code>.","Creates a new array for specific <code>primary_key</code>.","Returns null counts of specific column in row groups.","Compute offsets of different primary keys in the array.","Field index of the primary key.","Gets sorted projection indices to read <code>columns</code> from …","Returns min/max values of specific tag.","Field index of the time index.","Gets the arrow schema to store in parquet.","","","","","","","","","","","","","Parquet batch reader to read our SST format.","Parquet SST reader builder.","Builder to build a ParquetRecordBatchReader for a row …","SST file to read.","Buffered batches to return.","","","","","","","Builds and initializes a ParquetReader.","Builds a ParquetRecordBatchReader to read the row group at …","Attaches the cache to the builder.","Manager that caches SST data.","","","","","","","","","","Reader of current row group.","","","","","","","","","","Tries to fetch next RecordBatch from the reader.","Field levels to read.","SST directory.","","Path of the file to read.","Path of the file.","Reader to get data.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Decodes region metadata from key value.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the metadata of the SST.","Returns a new ParquetReaderBuilder to read specific SST.","","","Metadata of the parquet file.","Attaches the predicate to the builder.","Predicate to push down.","Attaches the projection to the builder.","Metadata of columns to read.","Projection mask.","Helper to read record batches.","Reads parquet metadata of specific file.","Builder to build row group readers.","Indices of row groups to read.","Attaches the time range to the builder.","Time range to filter.","","","","","","","","","","","","","","","","","","","An in-memory column chunk","Implements <code>PageIterator</code> for a single column chunk, …","Full column chunk and its offset","An in-memory collection of column chunks","Column chunk data representing only a subset of data pages","","","","","","","","","","","","","","","","","","","","Creates a new InMemoryRowGroup by <code>row_group_idx</code>.","","","","","","","","","","Fetches the necessary column data into memory","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set of data pages included in this sparse chunk. Each …","","Length of the full column chunk","","Statistics for pruning row groups.","","","Returns the column id of specific column name if we need …","Projected column ids to read.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Creates a new statistics to prune specific <code>row_groups</code>.","","","Helper to read the SST.","Metadata of SST row groups.","","","","","","","Parquet SST writer.","","","","","","","","","","","","","","","","","","","SST output file path.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Region metadata of the source and the target SST.","Creates a new parquet SST writer.","Number of rows fetched.","","Input data source.","Time range of fetched batches.","","","","","","","","","","","","","","Iterates source and writes all rows to Parquet file.","Parquet writer that buffers row groups in memory and …","","","","Close parquet writer.","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Write a record batch to stream writer.","Metadata of files in the same SST level.","","A version of all SSTs in a region.","","Add files to the version.","","","","","","","","","","","","","","","","","","","","","","Handles of SSTs in this level.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns expired SSTs from current level.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Level number.","Returns a slice to metadatas of all levels.","SST metadata organized by levels.","Marks all SSTs in this version as deleted.","Returns a new SstVersion.","Returns an empty meta of specific <code>level</code>.","","Remove files from the version.","Returns SST files’space occupied in current version.","","","","","","","","","","","","","","","WAL entry id.","Write ahead log.","A stream that yields tuple of WAL entry id and …","WAL batch writer.","Add an wal entry for specific region to the writer’s …","","","","","","","","","","","","","Decode Wal entry from log store.","","","","","","","Entries to write.","Buffer to encode WAL entry.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Creates a new Wal from the log store.","Mark entries whose ids <code>&lt;= last_id</code> as deleted.","Scan entries of specific region starting from <code>start_id</code> …","Log store of the WAL.","The underlying log store.","","","","","","","","","","","","","","Write all buffered entries to the WAL.","Returns a writer to write to the WAL.","","Worker to write and alter regions bound to it.","Background worker loop to handle requests.","","Buffer for stalled write requests.","A fixed size group of RegionWorkers.","Identifier for a worker.","Wrapper that only calls event listener in tests.","Worker start config.","Appends stalled requests.","","","","","","","","","","","","","Returns cache of the group.","","Cache.","Cache.","","","","Scheduler for compaction tasks.","","","","","","","","","","","","","","","","","","","","Engine config.","","","","","","","","","","","","","","","","","","","","","","Regions that are not yet fully dropped.","Estimated size of all stalled requests.","Find some regions to flush to reduce write buffer usage.","Schedules background flush requests.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns region of specific <code>region_id</code>.","Returns region of specific <code>region_id</code>.","Handle to the worker thread.","Handling alter related requests.","","Handles region background request","Handling close request.","","","When compaction fails, we simply log the error.","Handles compaction finished, update region version and …","Handles compaction request submitted to region worker.","Handling create request.","","Takes and handles all ddl requests.","Handling drop request.","","Handling flush related requests.","On region flush job failed.","On region flush job finished.","Handles manual flush request.","Handling open request.","","Dispatches and processes requests.","Handling truncate related requests.","","Handling write requests.","Takes and handles all write requests.","","Id of the worker.","Id of the worker.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns true if the worker contains specific region.","Returns true if the specific region exists.","Returns true if the worker is still running.","","Event listener for tests.","","Checks whether the engine reaches flush threshold. If so, …","Memtable builder for each region.","Create a flush task with specific <code>reason</code> for the <code>region</code>.","","Manages object stores for manifest and SSTs.","","Flush is finished successfully.","","On later drop task is finished.","Engine is stalled.","Validates and groups requests by region.","Request receiver.","Regions bound to the worker.","Regions bound to the worker.","Stalled requests.","Starts the worker loop.","Whether to run the worker thread.","Whether the worker thread is still running.","","Background job scheduler.","Global background job scheduelr.","Request sender.","Request sender.","Sets whether the worker is still running.","Returns true if the engine needs to reject some write …","Stalled write requests.","Starts a region worker and its background thread.","Starts a worker group.","Stop the worker.","Stops the worker group.","Submits request to background worker thread.","Submits a request to a worker in the group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","WAL of the engine.","Get worker for specific <code>region_id</code>.","Workers of the group.","","Engine write buffer manager.","Alter the schema of the region.","Creates a metadata after applying the alter <code>request</code> to the …","","","Background GC task to remove the entire region path once …","Removes region dir if there is no parquet files, returns …","Checks the schema and fill missing columns.","Send rejected error to all <code>write_requests</code>."],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],1],[[],1],[[],1],[[2,3],4],[5],[5],[5],[[2,6],7],[[]],[[]],[[],5],[[]],[[],8],[[],9],[[[11,[10]],12],2],[2,12],0,[[2,13],14],[2,15],0,[[2,15],10],[[],16],[[]],[[],17],[[],17],[[],18],[[]],[[2,3,19,20],21],0,0,0,0,0,[[]],[[]],[[]],[[]],0,[22,22],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[5],[5],[5],[5],[5],[5],[[22,22],9],[[],9],[[],9],[[],9],[[],9],[[],9],[22,5],[[22,6],7],[[]],[[]],[[]],[[]],[[]],[[[0,[23,24]],25],26],[[27,28,3],[[16,[[30,[29]]]]]],[[27,31],[[16,[32]]]],[[22,33]],[[],5],[[],5],[[]],[[]],[[],8],[[],8],[[],9],[[],9],[[26,26],27],[[27,28,3,[30,[29]]]],[[27,31,32]],[[27,28,3]],0,[[]],[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],0,[[]],[[]],[34,5],[35,5],[36,5],[29,5],[37,5],[38,5],[39,5],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[30,[41]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[42],[5],[5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[43,44]],[[[30,[45]],[47,[46]]],42],[[28,[30,[48]],[30,[2]],49],43],[[43,[47,[46]],44],50],[[42,28,[30,[51]]]],[[42,28]],[[52,28,[30,[51]]]],[[43,[30,[51]]]],[[42,28]],[[42,28]],[[42,28]],0,0,0,[[50,44]],[[52,44]],[50,28],0,0,[[42,28,[30,[51]]]],0,0,[[42,28,[30,[48]],[30,[2]],49,44],4],[[42,50],4],0,0,[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[53,28,19,[30,[2]],54],[[4,[[16,[55]]]]]],[[19,[30,[2]],[56,[13]]],[[4,[57]]]],[[],1],[[],1],[[],1],[5],[5],[5],[[53,6],7],[[]],[[]],[[],5],0,[[]],[[],8],[[],9],0,0,[[],16],[[]],[[],17],[[],17],[[],18],[[]],0,0,0,[50,[[16,[[59,[58]]]]]],[[],[[61,[[59,[60]]]]]],0,0,0,0,0,[[62,63],[[65,[63,[64,[13]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[66,[65,[63,[64,[13]]]],[16,[63]]],[[64,[53]]]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[5],[5],[5],[5],[5],[5],[5],[5],[67],[5],0,0,[[62,63],[[16,[63]]]],[[68,63],63],[[66,6],7],[[67,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[[56,[69]],[16,[70]],71],[[64,[13]]]],[67,4],[62,63],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[67,9]],[68,63],0,0,[67,4],[[5,5,[16,[63]]],66],[[67,[30,[51]]]],0,[[66,50],[[16,[[59,[58]]]]]],0,0,[67,[[61,[[59,[60]]]]]],0,[[67,46]],0,0,0,0,[[],16],[[],16],[[],16],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[72,72],[[]],[[],1],[[],1],[[],1],[[],72],[5],[5],[73,[[17,[72]]]],[5],[[72,72],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[72,6],7],[[]],[[]],[[]],0,0,[[],5],[[]],[[],8],[[],9],0,0,0,0,[72],[[72,74],17],0,[[]],[[],16],[[]],[[],17],[[],17],[[],18],0,[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[75,75],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[5],[5],[5],[5],[5],[5],[[]],[[]],[[]],[[]],[[]],[[76,28],[[4,[19]]]],[[75,28],[[61,[[59,[60]]]]]],[[75,28],[[4,[77]]]],[[76,28,78],[[4,[79]]]],[[75,28,78],[[61,[[59,[60]]]]]],[[76,28,80],[[4,[81]]]],[[75,28,80],[[61,[[59,[60]]]]]],[[],5],[[],5],0,[[]],[[]],[[],8],[[],8],[[],9],[[],9],[[75,28],9],[75,15],[[72,[30,[82]],83],76],[[72,[30,[82]],83],75],[[75,28],[[61,[[59,[60]]]]]],[[76,28],[[16,[84]]]],[[75,28],[[16,[84]]]],[[75,28,78],[[4,[79]]]],[[76,28,9],4],[[75,28,9],[[4,[85]]]],[76,4],[75,[[61,[[59,[60]]]]]],[[]],[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[51,86],[[],87],[51,[[16,[88]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[90,[[11,[89]],[11,[89]]]]],51],[91,51],[[[93,[[11,[92]]]]],51],[[[94,[[11,[10]]]]],51],[[[95,[[11,[28]]]]],51],[[[96,[[11,[10]]]]],51],[[[97,[[11,[28]],[11,[10]]]]],51],[[[98,[[11,[28]],[11,[10]]]]],51],[[[99,[[11,[28]]]]],51],[[[101,[[11,[100]]]]],51],[[[102,[[11,[10]],[11,[10]]]]],51],[[[103,[[11,[10]]]]],51],[[[104,[[11,[10]]]]],51],[[[105,[[11,[5]],[11,[5]]]]],51],[106,51],[107,51],[[[108,[[11,[28]]]]],51],[[[109,[[11,[28]]]]],51],[[[110,[[11,[28]]]]],51],[[[111,[[11,[28]]]]],51],[[[112,[[11,[28]],[11,[10]]]]],51],[[[113,[[11,[28]]]]],51],[[[114,[[11,[28]],[11,[10]]]]],51],[51,[[16,[87]]]],[115,115],[[[117,[116,116]]],[[117,[116,116]]]],[[[118,[116,116]]],[[118,[116,116]]]],[119,119],[[[90,[116,116]]],[[90,[116,116]]]],[120,120],[91,91],[121,121],[[[93,[116]]],[[93,[116]]]],[122,122],[[[94,[116]]],[[94,[116]]]],[123,123],[124,124],[125,125],[[[126,[116]]],[[126,[116]]]],[[[127,[116]]],[[127,[116]]]],[[[95,[116]]],[[95,[116]]]],[[[96,[116]]],[[96,[116]]]],[[[97,[116,116]]],[[97,[116,116]]]],[[[98,[116,116]]],[[98,[116,116]]]],[[[99,[116]]],[[99,[116]]]],[[[128,[116,116]]],[[128,[116,116]]]],[[[129,[116]]],[[129,[116]]]],[130,130],[[[131,[116]]],[[131,[116]]]],[[[132,[116]]],[[132,[116]]]],[[[133,[116]]],[[133,[116]]]],[134,134],[135,135],[136,136],[[[101,[116]]],[[101,[116]]]],[137,137],[[[102,[116,116]]],[[102,[116,116]]]],[[[103,[116]]],[[103,[116]]]],[[[104,[116]]],[[104,[116]]]],[138,138],[139,139],[140,140],[[[105,[116,116]]],[[105,[116,116]]]],[106,106],[107,107],[141,141],[142,142],[[[143,[116]]],[[143,[116]]]],[[[144,[116]]],[[144,[116]]]],[[[108,[116]]],[[108,[116]]]],[[[109,[116]]],[[109,[116]]]],[[[110,[116]]],[[110,[116]]]],[[[111,[116]]],[[111,[116]]]],[[[145,[116]]],[[145,[116]]]],[[[112,[116,116]]],[[112,[116,116]]]],[146,146],[[[113,[116]]],[[113,[116]]]],[147,147],[[[114,[116,116]]],[[114,[116,116]]]],[[[148,[116]]],[[148,[116]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,[[51,5,[64,[10]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[51,15],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,[[[90,[[11,[89]],[11,[89]]]]],[[17,[51]]]],[91,[[17,[51]]]],[[[93,[[11,[92]]]]],[[17,[51]]]],[[[94,[[11,[10]]]]],[[17,[51]]]],[[[95,[[11,[28]]]]],[[17,[51]]]],[[[96,[[11,[10]]]]],[[17,[51]]]],[[[97,[[11,[28]],[11,[10]]]]],[[17,[51]]]],[[[98,[[11,[28]],[11,[10]]]]],[[17,[51]]]],[[[99,[[11,[28]]]]],[[17,[51]]]],[[[101,[[11,[100]]]]],[[17,[51]]]],[[[102,[[11,[10]],[11,[10]]]]],[[17,[51]]]],[[[103,[[11,[10]]]]],[[17,[51]]]],[[[104,[[11,[10]]]]],[[17,[51]]]],[[[105,[[11,[5]],[11,[5]]]]],[[17,[51]]]],[106,[[17,[51]]]],[107,[[17,[51]]]],[[[108,[[11,[28]]]]],[[17,[51]]]],[[[109,[[11,[28]]]]],[[17,[51]]]],[[[110,[[11,[28]]]]],[[17,[51]]]],[[[111,[[11,[28]]]]],[[17,[51]]]],[[[112,[[11,[28]],[11,[10]]]]],[[17,[51]]]],[[[113,[[11,[28]]]]],[[17,[51]]]],[[[114,[[11,[28]],[11,[10]]]]],[[17,[51]]]],0,0,[[115,6],7],[[[117,[149,149]],6],7],[[[118,[149,149]],6],7],[[119,6],7],[[[90,[149,149]],6],7],[[120,6],7],[[91,6],7],[[121,6],7],[[[93,[149]],6],7],[[122,6],7],[[[94,[149]],6],7],[[123,6],7],[[124,6],7],[[125,6],7],[[[126,[149]],6],7],[[[127,[149]],6],7],[[[95,[149]],6],7],[[[96,[149]],6],7],[[[97,[149,149]],6],7],[[[98,[149,149]],6],7],[[[99,[149]],6],7],[[[128,[149,149]],6],7],[[[129,[149]],6],7],[[130,6],7],[[[131,[149]],6],7],[[[132,[149]],6],7],[[[133,[149]],6],7],[[134,6],7],[[135,6],7],[[136,6],7],[[[101,[149]],6],7],[[137,6],7],[[[102,[149,149]],6],7],[[[103,[149]],6],7],[[[104,[149]],6],7],[[138,6],7],[[139,6],7],[[140,6],7],[[[105,[149,149]],6],7],[[106,6],7],[[107,6],7],[[141,6],7],[[142,6],7],[[[143,[149]],6],7],[[[144,[149]],6],7],[[[108,[149]],6],7],[[[109,[149]],6],7],[[[110,[149]],6],7],[[[111,[149]],6],7],[[[145,[149]],6],7],[[[112,[149,149]],6],7],[[146,6],7],[[[113,[149]],6],7],[[147,6],7],[[[114,[149,149]],6],7],[[[148,[149]],6],7],[[51,6],7],[[51,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[115,51],[[[117,[[11,[150]],[11,[10]]]]],51],[[[118,[[11,[150]],[11,[10]]]]],51],[119,51],[[[90,[[11,[89]],[11,[89]]]]],51],[120,51],[91,51],[121,51],[[[93,[[11,[92]]]]],51],[122,51],[[[94,[[11,[10]]]]],51],[123,51],[124,51],[125,51],[[[126,[[11,[10]]]]],51],[[[127,[[11,[10]]]]],51],[[[95,[[11,[28]]]]],51],[[[96,[[11,[10]]]]],51],[[[97,[[11,[28]],[11,[10]]]]],51],[[[98,[[11,[28]],[11,[10]]]]],51],[[[99,[[11,[28]]]]],51],[[[128,[[11,[28]],[11,[10]]]]],51],[[[129,[[11,[28]]]]],51],[130,51],[[[131,[[11,[28]]]]],51],[[[132,[[11,[28]]]]],51],[[[133,[[11,[28]]]]],51],[134,51],[135,51],[136,51],[[[101,[[11,[100]]]]],51],[137,51],[[[102,[[11,[10]],[11,[10]]]]],51],[[[103,[[11,[10]]]]],51],[[[104,[[11,[10]]]]],51],[138,51],[139,51],[140,51],[[[105,[[11,[5]],[11,[5]]]]],51],[106,51],[107,51],[141,51],[142,51],[[[143,[[11,[3]]]]],51],[[[144,[[11,[28]]]]],51],[[[108,[[11,[28]]]]],51],[[[109,[[11,[28]]]]],51],[[[110,[[11,[28]]]]],51],[[[111,[[11,[28]]]]],51],[[[145,[[11,[28]]]]],51],[[[112,[[11,[28]],[11,[10]]]]],51],[146,51],[[[113,[[11,[28]]]]],51],[147,51],[[[114,[[11,[28]],[11,[10]]]]],51],[[[148,[[11,[10]]]]],51],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[51,9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[51,[[16,[151]]]],0,0,0,0,0,0,[152],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[51,[[16,[87]]]],0,[51,153],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[154,155]],[[154,156]],[157,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[158,159]],[5],[5],[154],[5],[5],[5],0,[[158,[30,[160]]],[[4,[[64,[55]]]]]],0,[[161,6],7],[[157,6],7],[5],[[161,5]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],0,[[154,28],9],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[158,[30,[48]]],[[61,[[59,[60]]]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[154,28],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[],5],[161,5],0,0,[[158,158]],[[162,158]],0,[161,5],[[[30,[45]]],154],[[28,[30,[48]]],162],[5,161],[[158,[30,[51]]]],[[162,[30,[51]]]],[[154,28,[30,[51]]]],[[154,28],16],[[154,28]],[[154,28]],[[154,28]],[158],0,0,0,[[158,44]],0,0,0,0,[[154,28,[30,[51]]]],0,[5],[[161,5]],0,[[154,28,[30,[48]],158],4],[5],[[161,5]],[154,4],0,[[158,46]],0,[[],9],[161,9],[[],9],[161,9],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[163,89,164]],[[163,89,165]],[[163,89,166]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[167,167],[164,164],[165,165],[168,168],[166,166],[169,169],[170,170],[171,171],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[163,9],[[[56,[172]]],[[4,[170]]]],[[[56,[172]]],[[4,[171]]]],[[],163],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[73,[[17,[167]]]],[73,[[17,[164]]]],[73,[[17,[165]]]],[73,[[17,[168]]]],[73,[[17,[166]]]],[73,[[17,[169]]]],[73,[[17,[170]]]],[73,[[17,[171]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[170,[[4,[[64,[172]]]]]],[171,[[4,[[64,[172]]]]]],[[167,167],9],[[164,164],9],[[165,165],9],[[168,168],9],[[166,166],9],[[169,169],9],[[170,170],9],[[171,171],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,[[167,6],7],[[164,6],7],[[165,6],7],[[168,6],7],[[166,6],7],[[169,6],7],[[163,6],7],[[170,6],7],[[171,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[170,89],0,0,0,0,0,0,[[[64,[167]]],171],0,0,[[167,74],17],[[164,74],17],[[165,74],17],[[168,74],17],[[166,74],17],[[169,74],17],[[170,74],17],[[171,74],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[163,[[4,[169]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[167,171],[[[16,[169]]],163],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[173,173],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[5],[5],[5],[5],[5],[5],[174,[[4,[[16,[170]]]]]],[5],[5],[5],[[173,6],7],[[175,6],7],[[174,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[174,89],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[176,[[4,[[16,[170]]]]]],0,0,[175,[[30,[169]]]],0,0,[175,26],[[174,89],4],[[19,173],[[4,[175]]]],[[19,173],[[4,[174]]]],0,[173,[[4,[[16,[175]]]]]],[173,[[4,[[16,[174]]]]]],0,[175,4],[174,4],0,[[]],[[],16],[[],16],[[],16],[[]],[[]],[[]],[174,26],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[175,171],[[4,[89]]]],[[174,171],[[4,[89]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,10],[[176,89],10],0,[177,177],[176,176],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[[56,[172]]],[[4,[178]]]],[[176,89,9],[[4,[5]]]],[89,10],[[176,89],10],[5],[179,180],[5],[181,180],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[73,[[17,[178]]]],[5],[5],[5],[5],[5],[5],[178,[[4,[[64,[172]]]]]],[[177,177],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[15,150],[15,89],[[177,6],7],[[176,6],7],[[178,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[15,15,150],10],[[[0,[23,24]],25],26],[[176,182],[[4,[64]]]],[[177,33]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[15,9],[15,9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[176,10],[[176,89],[[4,[16]]]],[176,[[4,[16]]]],[9,150],0,[[15,12,150],176],[183,[[4,[16]]]],0,0,0,[[176,89,[56,[172]]],4],[[176,89,[56,[172]]],4],[[176,89,89],[[4,[183]]]],[[178,74],17],[[176,89,26]],[[176,89,26]],0,[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[176,26],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[19,184],[185,5],[186,5],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],185],[[],186],[5],[5],[5],[5],[186],[5],[5],[186],0,[[185,6],7],[[186,6],7],[[]],[[]],[[]],[[]],[[],187],[[],5],[[],5],[[]],[[]],[[],8],[[],8],0,[[],9],[[],9],[[],9],[[[16,[[56,[188]]]],[16,[189]]],190],0,[[]],[[[16,[191]]],186],[[186,5]],[[],185],[185,16],0,0,[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],0,[[]],[[]],[192,4],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[193,62],[[192,6],7],[[193,6],7],[[194,6],7],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[192,62],0,[[195,196],[[16,[192]]]],[[195,197],194],[193,5],0,[193,5],[192,5],[193,198],0,[193,62],0,[193,199],0,[193,200],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[201,19],184],[202,202],[[]],0,0,[202,[[64,[203]]]],[[204,19],[[4,[202]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],201],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,[[205,6],7],[[201,6],7],[[204,19]],[[]],[[]],[[]],[[]],[[]],[[]],[206,202],[[]],[[[56,[203]]],[[4,[202]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[207,[64,[172]]]],[205,187],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[205,9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[205,[16,[[56,[188]]]],[16,[189]]],190],[[207,[208,[188]],[16,[189]]],209],0,[206,5],[205],0,0,0,[[19,187,[16,[191]]],205],[[19,[30,[210]]],207],[19,204],[[19,5],206],[[[16,[191]]],201],[209,16],0,0,0,0,[[[30,[210]],[56,[172]],[64,[[59,[211]]]],212],[[4,[213]]]],0,[[19,5]],0,0,[[[56,[[30,[214]]]],213],[[4,[9]]]],[[[30,[210]],[56,[172]],204,[64,[[59,[211]]]],212,[56,[[30,[214]]]]],9],[[204,200,26,198,[64,[200]]]],[[206,200,26,172,[64,[200]]]],0,0,0,0,0,0,0,0,[205,185],0,0,[[202,[56,[172]],19,[208,[188]]],[[4,[215]]]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[204,213]],[[205,5,63,63]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[205,192],4],0,0,0,[[]],[[]],[216,216],[[]],[[],1],[[],1],[[],1],[5],[5],[5],[[216,6],7],[[216,184],[[16,[216]]]],[[]],[[]],[[]],[216,[[56,[184]]]],0,[216,5],[[],5],[[]],[[],8],[216,9],[[],9],[216,[[64,[184]]]],0,[216,5],[184,216],[[216,[56,[187]]]],[[]],[[],16],[[]],[[],17],[[],17],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[5],[217,218],[219,218],[5],[220,221],[5],[222,223],[5],[224,225],[5],[226,221],[5],[227,225],[5],[5],[228,225],[229,225],[5],[5],[230,221],[5],[231,223],[5],[232,221],[5],[233,234],[5],[235,225],[5],[236,225],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[237,[[4,[215]]]],[215,215],[238,238],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[64,[215]]],[[4,[215]]]],[62,[[4,[203]]]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[215,215],9],[[238,238],9],[[],9],[[],9],[[],9],[[],9],[[],9],[215,[[56,[238]]]],0,0,[[215,239],4],[215,4],[215,[[16,[199]]]],[215,[[16,[71]]]],[[215,6],7],[[238,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[215,5],199],[[215,5],71],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[215,9],[[],9],[[],9],[[],9],[[],9],[215,[[16,[199]]]],[215,[[16,[71]]]],0,[[[64,[172]]],237],[[[64,[172]],32,[30,[240]],[30,[241]],[64,[238]]],[[4,[215]]]],[[],[[61,[[59,[60]]]]]],[20,[[4,[[16,[215]]]]]],[215,5],[215,[[30,[241]]]],0,0,[[237,203],[[4,[237]]]],[215,[[56,[172]]]],0,0,[[195,[56,[188]]],[[64,[188]]]],0,[[237,238],237],[[237,188,203],[[4,[237]]]],0,0,[215,[[30,[240]]]],0,0,[[237,203],[[4,[237]]]],[[215,[64,[172]]]],[[215,5,5],215],[215,4],[[215,242],4],[215,32],0,0,[[237,203],[[4,[237]]]],[215,[[16,[[56,[63]]]]]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[237,[64,[238]]],237],[[215,[64,[238]]],[[4,[215]]]],[[[64,[172]],32,[30,[240]],[30,[241]]],237],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[243,215],[[4,[215]]]],[[],1],[[],1],[[244,215],215],[[],1],0,[[],1],[[],1],[[],1],[[],1],0,[[],1],[[],1],[[],1],[[],1],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[243,6],7],[[244,6],7],[[245,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[195,195],9],0,[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[246,195],[[4,[[16,[244]]]]]],[[195,195],[[4,[[16,[243]]]]]],[[246,19],[[4,[247]]]],[[[247,[248]]],[[61,[[59,[60]]]]]],0,[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[249,5],249],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[249,[[4,[250]]]],[[251,251],252],[[253,253],252],0,[[],252],[[],252],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[251,215],0,[[],249],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[251,251],9],[[253,253],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[251,[[4,[215]]]],[250,4],[250,4],[[250,251,71],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[251,251],9],[254,9],[251,9],[[],9],[[],9],[[],9],[[],9],[[],9],[254,[[4,[[16,[215]]]]]],[[[64,[20]],5],[[4,[250]]]],[[],249],[[],254],[20,[[4,[251]]]],[250,[[61,[[59,[60]]]]]],[254,5],0,[[251,251],[[16,[252]]]],[[253,253],[[16,[252]]]],[254,[[16,[[56,[172]]]]]],[251,[[56,[172]]]],[[254,215],4],[[249,190],249],[[249,57],249],[250],[[250,251],4],[[251,5],4],0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[19,[[4,[246]]]],[246,[[56,[188]]]],0,0,[[]],[[]],[[]],[[]],[255,255],[[]],0,[246,[[56,[188]]]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[246,215,[16,[27]]],[[257,[256]]]],[5],[5],[5],[5],[5],[5],[[255,6],7],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[]],[[]],[[],8],[[],8],[[],9],[[],9],[246,19],0,[[19,62],[[4,[246]]]],[[100,31,5],[[257,[32]]]],[246,258],0,[[100,31,5,27],[[257,[32]]]],[[]],[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[259,260],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[5],[5],[5],[5],[5],[5],[[13,260],9],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],8],[[],8],[[],9],[[],9],[[[30,[160]],[30,[2]],78,[16,[[30,[27]]]]],259],0,[79,[[4,[261]]]],[259,[[4,[79]]]],[259,[[4,[262]]]],[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],0,[[]],[[]],0,0,[[]],[[]],[262,[[4,[57]]]],[262,[[4,[261]]]],0,[[],1],[[],1],[[],1],[5],[5],[5],0,[[]],[[]],[[],5],[[]],[[],8],[[],9],0,0,[[[30,[2]],246],262],0,0,[[],16],[[]],[[],17],[[],17],[[],18],[[]],[[262,[16,[[30,[27]]]]],262],[[262,[64,[13]]],262],[[262,[64,[184]]],262],[[262,[16,[189]]],262],[[262,[16,[260]]],262],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[263],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],263],[5],[5],[5],[5],[5],[5],[77,26],[5],[5],[5],[[264,26],26],0,[[77,6],7],[[264,6],7],[[263,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[263,28],[[16,[[30,[264]]]]]],[[],5],[[],5],[[],5],[[263,[30,[264]]]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[263,28],9],[264,9],[264,63],0,[263,[[64,[[30,[264]]]]]],0,0,[264,19],0,0,0,0,[264,77],0,[[263,28]],[[264,9]],0,[264,4],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[264],0,[264,[[30,[160]]]],0,[[]],[[]],[[]],0,0,[[263,28],[[4,[[30,[264]]]]]],[[263,28,265],[[16,[[30,[264]]]]]],0,[[]],[[]],[[266,[16,[[30,[27]]]]],266],0,[[195,28,[56,[267]],[56,[188]]],4],[[],1],[[],1],[[],1],[[266,72,[268,[82]]],[[4,[264]]]],[5],[5],[5],[[]],[[]],[[],5],[[]],[[],8],[[],9],[[266,72,269],[[4,[173]]]],[[266,72,[268,[82]]],[[4,[[16,[264]]]]]],0,[[266,195],266],0,[[28,15,270,83,[30,[45]]],266],[15,10],[[266,[16,[10]]],[[4,[12]]]],0,[[266,72,[268,[82]]],[[4,[264]]]],[[266,[271,[10,10]]],266],0,0,0,[[[268,[82]],28,272,[30,[48]]],4],0,[[],16],[[]],[[],17],[[],17],[[],18],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[269,269],[40,40],[273,273],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],269],[[],40],[[],273],[[],274],[5],[5],[5],[5],[5],[5],[5],[5],[73,[[17,[269]]]],[73,[[17,[40]]]],[73,[[17,[273]]]],[73,[[17,[274]]]],[5],[5],[5],[5],[[269,269],9],[[40,40],9],[[273,273],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[269,6],7],[[40,6],7],[[273,6],7],[[274,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],0,0,[[[271,[10,10]]],275],0,0,0,0,[273,[[16,[63]]]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[],17],[[[271,[10,10]]],[[4,[269]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[73,[[17,[276]]]],[[277,74],17],0,0,0,0,0,0,[[278,49,62],278],[[48,19,270]],[[278,165,49],278],[[48,165,[56,[187]],49]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[278,160],[159,159],[160,160],[[]],[[]],0,[[278,[16,[70]]],278],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[48,159],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[278,272],278],0,0,[[278,199],278],0,0,[[48,6],7],[[159,6],7],[[160,6],7],[[48,270]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[160]]],278],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],0,[[],9],[[],9],[[],9],[[],9],0,[[48,270]],[[278,216],278],0,0,[[278,19],278],0,0,[[19,184],278],[160,48],[[278,269],278],0,0,[[278,[56,[187]]],278],[[48,199,272]],0,0,[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[48,272,199,270]],[[278,[16,[272]]],278],0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],0,0,[[279,[280,[82]]],4],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[5],[5],[5],[5],[5],[281],[5],0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],8],[[],8],[[],9],[[],9],[[44,5],281],[[28,[30,[48]]],279],0,0,0,[281],0,[[279,282,[16,[197]],44]],0,0,0,[[279,[30,[51]]]],[[279,272]],[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[279,[[30,[160]]]],0,0,[[]],[[]],0,[279],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[283,267],4],[[283,195],4],[[283,267],[[4,[284]]]],[[283,15],[[16,[5]]]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,[283,5],0,0,0,[[283,267],4],[[283,195],4],0,0,[[283,6],7],[[285,6],7],[[44,6],7],[[156,6],7],[[46,6],7],[[286,6],7],[[155,6],7],[[287,6],7],[[288,6],7],[[289,6],7],[[290,6],7],[[291,6],7],[[]],[[]],[[[292,[[4,[81]]]]],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[28,198,197],[[4,[283]]]],[[[292,[[4,[81]]]]],285],[[[16,[285]]],44],[[],44],[51],[[44,51]],[[288,51]],[[290,51]],[288],[290],0,0,0,0,0,0,0,0,0,[[285,[4,[81]]]],[[44,[4,[81]]]],[[44,[4,[81]]]],0,0,0,0,0,[44,[[16,[285]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[28,80],4],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[28,284,293],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[[56,[172]]],[[4,[[64,[31]]]]]],[[210,[56,[172]]],[[4,[[64,[31]]]]]],[5],[5],[5],[5],[[294,[296,[295]]],[[4,[31]]]],[5],[5],[62,[[4,[[64,[172]]]]]],[[210,62],[[4,[[64,[172]]]]]],[[62,[64,[172]]],4],[[210,62,[64,[172]]],4],[294,5],[210,5],0,[[294,6],7],[[210,6],7],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],8],[[],8],[[],9],[[],9],[100,294],[[[64,[294]]],210],[210,5],[[294,[297,[[64,[172]]]],200],4],[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],0,[[],1],[[],1],[[],1],[5],[5],[298],[5],[[]],[[]],0,[[],5],[[]],[[],8],[[],9],[298,9],[5,298],[[[61,[[59,[60]]]]],4],[[298,[61,[[59,[60]]]]],4],0,0,[9,[[61,[[59,[60]]]]]],[[298,9],[[61,[[59,[60]]]]]],[[],16],[[]],[[],17],[[],17],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],87],[3,10],[299,[[16,[88]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[299,[[16,[87]]]],[300,300],[3,3],[55,55],[13,13],[[]],[[]],[[]],[[]],[13,9],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],3],[[],55],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[299,15],[73,[[17,[3]]]],[73,[[17,[55]]]],[301],[5],[5],[5],[5],[5],[5],[[299,299],9],[[3,3],9],[[55,55],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[13,3],0,[[13,15],10],0,0,[[299,6],7],[[299,6],7],[[300,6],7],[[3,6],7],[[3,6],7],[[55,6],7],[[13,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[17,[3,299]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[23,24]],25],26],[[[0,[23,24]],25],26],[[3,33]],[[55,33]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[300,299],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[13],[13,55],0,[[55,49],301],[[55,49],13],[15,[[17,[3,299]]]],[152],[[],3],[13,28],0,[[3,74],17],[[55,74],17],[[13,9]],[299,[[16,[87]]]],0,[13,302],0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[5],[5],[5],[5],[5],[5],0,[[303,6],7],[[304,6],7],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],8],[[],8],[[],9],[[],9],[[[30,[45]],[30,[2]],[16,[[30,[27]]]]],303],0,0,[304],[[303,304]],0,[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],305],[5],[5],[5],[5],[5],[5],0,[[305,6],7],0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],8],[[],8],[[],9],[[],9],0,0,0,0,0,0,[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,0,0,0,0,[306,212],[307,212],0,0,[[]],[[]],[[]],[[]],[[[56,[38]],5],[[16,[203]]]],[[[56,[38]],267,5,9],[[16,[203]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[306,215],[[4,[213]]]],[[307,213,[308,[215]]],4],[5],[5],[5],[5],[5],[5],0,[[]],[[]],[[]],[[]],[[307,213],[[4,[[64,[238]]]]]],[[],5],[[],5],[[],[[310,[309]]]],[[]],[[]],[[],8],[[],8],[[],9],[[],9],[[307,[56,[38]],188],[[16,[203]]]],[307,19],0,0,[[307,[56,[38]],188],[[16,[203]]]],[19,306],[19,307],[[[56,[172]],5],203],[[307,[56,[38]],188],[[16,[203]]]],[[[312,[311]]],[[4,[[64,[5]]]]]],[307,5],[[307,313],[[64,[5]]]],[[307,[56,[38]],267,9],[[16,[203]]]],[307,5],[195,212],[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[14,[[4,[314]]]],[[315,5],[[4,[316]]]],[[14,[16,[[30,[27]]]]],14],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[314,[[4,[[16,[213]]]]]],0,0,0,[315,15],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[15,[16,[[64,[317]]]]],[[4,[195]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[314,19],[[10,13,12],14],[314,[[61,[[59,[60]]]]]],0,0,[[14,[16,[189]]],14],0,[[14,[16,[[64,[188]]]]],14],0,0,0,[[14,318,15],[[4,[[30,[29]]]]]],0,0,[[14,[16,[260]]],14],0,[[],16],[[],16],[[],16],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[319,319],[[]],[[320,5],[[322,[[59,[321]]]]]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[29,5],320],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[320,[0,[318,323]],324,[16,[325]]],322],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[319,26],[[322,[326]]]],[[319,26,5],[[322,[326]]]],[[319,26],322],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[319,26],0,[327,16],[320,5],0,0,0,[[]],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[328,15],[[16,[188]]]],0,[[],1],[[],1],[[],1],[5],[5],[5],[[]],[[]],[[],5],[[]],[[],8],[[],9],[[328,329],[[16,[203]]]],[[328,329],[[16,[203]]]],[[[56,[38]],307,[208,[188]]],328],[[328,329],[[16,[203]]]],[328,5],0,0,[[],16],[[]],[[],17],[[],17],[[],18],[[]],0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],330],[5],[5],[5],[5],[5],[5],0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],8],[[],8],[[],9],[[],9],0,[[10,19,20,12],21],0,0,0,0,[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[330,215]],[[]],[[]],[[21,305],[[4,[[16,[331]]]]]],0,0,[[]],[[]],[332,4],[[],1],[[],1],[[],1],[5],[5],[5],[[]],[[]],[[],5],0,[[]],[[],8],[[],9],[[],16],[[]],[[],17],[[],17],[[10,12,212,[16,[333]],5],[[4,[332]]]],[[],18],[[]],[[332,213],4],0,0,0,0,[[334,49,62]],[[]],[[]],[[]],[[]],[334,334],[69,69],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[5],[5],[5],[5],[5],[5],[69,62],0,[[334,6],7],[[69,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[69,71],[[64,[13]]]],[[],5],[[],5],[[]],[[]],[[],8],[[],8],[[],9],[[],9],0,[334,[[56,[69]]]],0,[334],[[],334],[335,69],[[],[[310,[69]]]],[[334,62]],[334,26],[[]],[[]],[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],0,0,0,0,[[[280,[82]],28,272,336],4],[[]],[[]],[[]],[[]],[[[268,[116]]],[[268,[116]]]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[28,337],4],[5],[5],[5],[5],[5],[5],0,0,[[[268,[149]],6],7],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],8],[[],8],[[],9],[[],9],[30,268],[[[268,[82]],28,272],4],[[[268,[82]],28,272],[[4,[338]]]],0,0,[[]],[[],16],[[],16],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[]],[[]],[[[280,[82]]],4],[[[268,[82]]],[[280,[82]]]],0,0,0,0,0,0,0,0,0,[[339,[64,[156]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[340,[[30,[27]]]],0,0,0,[341],[342,342],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[[],339],[[],342],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[343],[5],[5],[5],[5],0,0,[341,4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[343,28],[[16,[[30,[264]]]]]],[[340,28],[[16,[[30,[264]]]]]],0,0,[[341,28,344,44]],[[[341,[82]],28,287]],0,[[341,28],[[4,[81]]]],0,[[[341,[82]],291]],[[[341,[82]],28,290]],[[[341,[82]],28,44]],0,[[[341,[82]],28,345],[[4,[81]]]],[[[341,[82]],[64,[155]]]],0,[[341,28],[[4,[81]]]],0,[[341,28,289]],[[[341,[82]],28,288]],[[341,28,346,44]],0,[[[341,[82]],28,347],[[4,[81]]]],[[[341,[82]],[64,[46]]]],0,[[[341,[82]],28],[[4,[81]]]],0,[[[341,[82]],[64,[156]],9]],0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[343,28],9],[[340,28],9],[343,9],0,0,0,[341],0,[[341,[30,[264]],157,[16,[5]]],158],0,0,[[342,28]],[[342,28]],[[342,28],[[16,[70]]]],[[342,28,9]],[342],[[341,[64,[156]]],[[271,[28,279]]]],0,0,0,0,[[[341,[82]]]],0,0,0,0,0,0,0,[[343,9]],[341,9],0,[[[348,[82]]],343],[[72,[30,[82]],83],340],[343,4],[340,4],[[343,46],4],[[340,28,46],4],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[5,5],5],[[]],[[]],[[]],[[]],[[]],[[]],0,[[340,28],343],0,0,0,[[[30,[264]],160,344,270],4],[[195,344],[[4,[19]]]],0,0,[[28,10,12,[30,[263]],70],9],[[15,12],[[4,[9]]]],[[283,195],4],[[[64,[156]]]]],"c":[],"p":[[3,"Compat"],[3,"AccessLayer"],[3,"FileId"],[6,"Result"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Request"],[15,"bool"],[3,"String"],[8,"Into"],[3,"Operator"],[3,"FileHandle"],[3,"ParquetReaderBuilder"],[15,"str"],[4,"Option"],[4,"Result"],[3,"TypeId"],[6,"RegionMetadataRef"],[4,"Source"],[3,"ParquetWriter"],[3,"SstMetaKey"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[3,"CacheManager"],[3,"RegionId"],[3,"ParquetMetaData"],[3,"Arc"],[4,"Value"],[6,"VectorRef"],[8,"Hasher"],[3,"ColumnDescriptor"],[3,"FileMetaData"],[6,"ParquetColumnIndex"],[6,"ParquetOffsetIndex"],[3,"RowGroupMetaData"],[3,"SchemaDescriptor"],[4,"CompactionOptions"],[8,"Picker"],[3,"CompactionScheduler"],[3,"CompactionStatus"],[3,"OptionOutputTx"],[8,"Scheduler"],[4,"WorkerRequest"],[3,"Sender"],[3,"VersionControl"],[6,"FilePurgerRef"],[3,"CompactionRequest"],[4,"Error"],[3,"PendingCompaction"],[3,"CompactionOutput"],[3,"ReadableSize"],[3,"FileMeta"],[15,"slice"],[6,"BoxedBatchReader"],[8,"CompactionTask"],[3,"Box"],[8,"Future"],[3,"Pin"],[8,"Iterator"],[15,"i64"],[3,"Vec"],[3,"BTreeMap"],[3,"TwcsPicker"],[3,"TwcsCompactionTask"],[3,"TimeBuckets"],[3,"LevelMeta"],[3,"Duration"],[3,"Timestamp"],[3,"MitoConfig"],[8,"Deserializer"],[8,"Serializer"],[3,"MitoEngine"],[3,"EngineInner"],[3,"RegionUsage"],[3,"ScanRequest"],[4,"Scanner"],[4,"RegionRequest"],[4,"Output"],[8,"LogStore"],[6,"ObjectStoreManagerRef"],[4,"RegionRole"],[3,"BoxedError"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[6,"ManifestVersion"],[3,"InvalidScanIndexSnafu"],[3,"RegionMetadataNotFoundSnafu"],[15,"u32"],[3,"WorkerStoppedSnafu"],[3,"InvalidMetaSnafu"],[3,"RegionNotFoundSnafu"],[3,"ObjectStoreNotFoundSnafu"],[3,"RegionCorruptedSnafu"],[3,"InvalidRequestSnafu"],[3,"FillDefaultSnafu"],[4,"ConcreteDataType"],[3,"NotSupportedFieldSnafu"],[3,"InvalidParquetSnafu"],[3,"InvalidBatchSnafu"],[3,"InvalidRecordBatchSnafu"],[3,"PrimaryKeyLengthMismatchSnafu"],[3,"InvalidSenderSnafu"],[3,"InvalidSchedulerStateSnafu"],[3,"RegionDroppedSnafu"],[3,"RegionClosedSnafu"],[3,"RegionTruncatedSnafu"],[3,"RejectWriteSnafu"],[3,"CompatReaderSnafu"],[3,"RegionReadonlySnafu"],[3,"EmptyRegionDirSnafu"],[3,"OpenDalSnafu"],[8,"Clone"],[3,"CompressObjectSnafu"],[3,"DecompressObjectSnafu"],[3,"SerdeJsonSnafu"],[3,"Utf8Snafu"],[3,"JoinSnafu"],[3,"RecvSnafu"],[3,"InvalidMetadataSnafu"],[3,"NewRecordBatchSnafu"],[3,"WriteBufferSnafu"],[3,"WriteParquetSnafu"],[3,"ReadParquetSnafu"],[3,"CreateDefaultSnafu"],[3,"EncodeWalSnafu"],[3,"WriteWalSnafu"],[3,"ReadWalSnafu"],[3,"DecodeWalSnafu"],[3,"DeleteWalSnafu"],[3,"WriteGroupSnafu"],[3,"FieldTypeMismatchSnafu"],[3,"SerializeFieldSnafu"],[3,"DeserializeFieldSnafu"],[3,"ConvertVectorSnafu"],[3,"ComputeArrowSnafu"],[3,"ComputeVectorSnafu"],[3,"StopSchedulerSnafu"],[3,"BuildPredicateSnafu"],[3,"DeleteSstSnafu"],[3,"FlushRegionSnafu"],[3,"CompactRegionSnafu"],[3,"InvalidRegionRequestSnafu"],[3,"JsonOptionsSnafu"],[3,"ArrowReaderSnafu"],[8,"Debug"],[4,"CompressionType"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"FlushScheduler"],[3,"SenderDdlRequest"],[3,"SenderWriteRequest"],[4,"FlushReason"],[3,"RegionFlushTask"],[3,"VersionControlData"],[3,"Version"],[3,"WriteBufferManagerImpl"],[3,"FlushStatus"],[3,"RegionManifestBuilder"],[3,"RegionChange"],[3,"RegionEdit"],[3,"RegionTruncate"],[4,"RegionMetaAction"],[3,"RegionRemove"],[3,"RegionManifest"],[3,"RegionCheckpoint"],[3,"RegionMetaActionList"],[15,"u8"],[3,"RegionManifestOptions"],[3,"RegionManifestManagerInner"],[3,"RegionManifestManager"],[3,"ManifestObjectStore"],[4,"FileKey"],[3,"CheckpointMetadata"],[3,"DELTA_RE"],[3,"Regex"],[3,"CHECKPOINT_RE"],[8,"Fn"],[3,"ObjectStoreLogIterator"],[6,"MemtableRef"],[3,"MemtableStats"],[3,"AllocTracker"],[6,"MemtableId"],[6,"ColumnId"],[3,"Predicate"],[6,"BoxedBatchIterator"],[6,"WriteBufferManagerRef"],[3,"KeyValues"],[3,"KeyValue"],[3,"ReadRowHelper"],[3,"RegionMetadata"],[3,"Mutation"],[3,"Rows"],[4,"OpType"],[6,"SequenceNumber"],[4,"ValueRef"],[3,"TimeSeriesMemtableBuilder"],[3,"Values"],[6,"ArrayRef"],[3,"Series"],[3,"TimeSeriesMemtable"],[3,"ValueBuilder"],[3,"SeriesSet"],[3,"HashSet"],[3,"Iter"],[3,"McmpRowCodec"],[8,"MutableVector"],[6,"SchemaRef"],[3,"RecordBatch"],[8,"PhysicalExpr"],[3,"Batch"],[3,"MemtableVersion"],[3,"WRITE_BUFFER_BYTES"],[6,"IntGauge"],[3,"REGION_COUNT"],[3,"HANDLE_REQUEST_ELAPSED"],[6,"HistogramVec"],[3,"FLUSH_REQUESTS_TOTAL"],[6,"IntCounterVec"],[3,"FLUSH_ERRORS_TOTAL"],[6,"IntCounter"],[3,"FLUSH_ELAPSED"],[3,"FLUSH_BYTES_TOTAL"],[3,"WRITE_STALL_TOTAL"],[3,"WRITE_REJECT_TOTAL"],[3,"WRITE_STAGE_ELAPSED"],[3,"WRITE_ROWS_TOTAL"],[3,"COMPACTION_STAGE_ELAPSED"],[3,"COMPACTION_ELAPSED_TOTAL"],[3,"Histogram"],[3,"COMPACTION_REQUEST_COUNT"],[3,"COMPACTION_FAILURE_COUNT"],[3,"BatchBuilder"],[3,"BatchColumn"],[3,"BooleanVector"],[6,"UInt64Vector"],[6,"UInt8Vector"],[6,"UInt32Vector"],[3,"CompatPrimaryKey"],[3,"CompatFields"],[4,"IndexOrDefault"],[3,"ProjectionMapper"],[3,"CompatReader"],[8,"BatchReader"],[3,"MergeReaderBuilder"],[3,"MergeReader"],[3,"Node"],[4,"Ordering"],[3,"CompareFirst"],[3,"BatchMerger"],[4,"BatchIndex"],[3,"RecordBatch"],[6,"Result"],[6,"SchemaRef"],[3,"ScanRegion"],[6,"TimestampRange"],[6,"SendableRecordBatchStream"],[3,"SeqScan"],[3,"RegionMap"],[3,"MitoRegion"],[8,"OnFailure"],[3,"RegionOpener"],[3,"ColumnMetadata"],[3,"Wal"],[3,"RegionOptions"],[6,"MemtableBuilderRef"],[3,"HashMap"],[6,"EntryId"],[3,"TwcsOptions"],[3,"RegionOptionsWithoutEnum"],[4,"Value"],[8,"Deserialize"],[8,"Serialize"],[3,"VersionBuilder"],[3,"RegionWriteCtx"],[3,"WalWriter"],[3,"WriteNotify"],[15,"i32"],[3,"WriteRequest"],[3,"Value"],[3,"OutputTx"],[4,"DdlRequest"],[4,"BackgroundNotify"],[3,"FlushFinished"],[3,"FlushFailed"],[3,"CompactionFinished"],[3,"CompactionFailed"],[3,"Sender"],[3,"ColumnSchema"],[3,"SortField"],[8,"Buf"],[3,"Deserializer"],[3,"Serializer"],[3,"LocalScheduler"],[3,"ParseIdError"],[3,"ParseIdSnafu"],[3,"FileHandleInner"],[6,"FileTimeRange"],[3,"LocalFilePurger"],[3,"PurgeRequest"],[3,"WriteOptions"],[3,"WriteFormat"],[3,"ReadFormat"],[3,"VecDeque"],[6,"FieldRef"],[15,"array"],[3,"UInt16Type"],[3,"DictionaryArray"],[8,"IntoIterator"],[3,"ParquetReader"],[3,"RowGroupReaderBuilder"],[3,"ParquetRecordBatchReader"],[3,"KeyValue"],[8,"AsyncFileReader"],[4,"ColumnChunkData"],[3,"InMemoryRowGroup"],[8,"PageIterator"],[6,"Result"],[8,"Send"],[3,"ProjectionMask"],[3,"RowSelection"],[3,"Bytes"],[3,"ColumnChunkIterator"],[3,"RowGroupPruningStats"],[3,"Column"],[3,"SourceStats"],[3,"SstInfo"],[3,"BufferedWriter"],[3,"WriterProperties"],[3,"SstVersion"],[6,"Level"],[3,"WalEntry"],[8,"Entry"],[6,"WalEntryStream"],[3,"StalledRequests"],[3,"WorkerGroup"],[3,"RegionWorkerLoop"],[3,"WorkerListener"],[3,"RegionWorker"],[3,"RegionAlterRequest"],[3,"RegionCreateRequest"],[3,"RegionFlushRequest"],[3,"RegionOpenRequest"],[3,"WorkerStarter"],[13,"PrimaryKeyLengthMismatch"],[13,"CreateDefault"],[13,"CompressObject"],[13,"DecompressObject"],[13,"NotSupportedField"],[13,"InvalidScanIndex"],[13,"OpenDal"],[13,"SerdeJson"],[13,"Utf8"],[13,"Join"],[13,"Recv"],[13,"NewRecordBatch"],[13,"WriteParquet"],[13,"ReadParquet"],[13,"EncodeWal"],[13,"DecodeWal"],[13,"SerializeField"],[13,"DeserializeField"],[13,"ComputeArrow"],[13,"StopScheduler"],[13,"DeleteSst"],[13,"JsonOptions"],[13,"ArrowReader"],[13,"InvalidParquet"],[13,"WorkerStopped"],[13,"RegionMetadataNotFound"],[13,"InvalidMeta"],[13,"InvalidMetadata"],[13,"WriteBuffer"],[13,"RegionNotFound"],[13,"ObjectStoreNotFound"],[13,"RegionCorrupted"],[13,"InvalidRequest"],[13,"WriteWal"],[13,"ReadWal"],[13,"DeleteWal"],[13,"InvalidBatch"],[13,"InvalidRecordBatch"],[13,"ConvertVector"],[13,"ComputeVector"],[13,"InvalidSender"],[13,"InvalidSchedulerState"],[13,"BuildPredicate"],[13,"FlushRegion"],[13,"RegionDropped"],[13,"RegionClosed"],[13,"RegionTruncated"],[13,"RejectWrite"],[13,"CompactRegion"],[13,"CompatReader"],[13,"InvalidRegionRequest"],[13,"RegionReadonly"],[13,"EmptyRegionDir"],[13,"FillDefault"],[13,"WriteGroup"],[13,"FieldTypeMismatch"],[8,"WriteBufferManager"],[8,"MemtableBuilder"],[8,"Memtable"],[13,"DefaultValue"],[13,"Background"],[8,"RowCodec"],[8,"FilePurger"],[13,"Sparse"],[13,"Dense"]]},\
"nyc_taxi":{"doc":"Use the taxi trip records from New York City dataset to …","t":"DRRLLMLLFLLLLLFFLLFFLMLLLLFLLLLLFMFFMFMMMLLLLLLLLF","n":["Args","CATALOG_NAME","SCHEMA_NAME","augment_args","augment_args_for_update","batch_size","borrow","borrow_mut","build_values","command","command_for_update","compat","compat_mut","compat_ref","convert_record_batch","create_table_expr","deref","deref_mut","do_query","do_write","drop","endpoint","from","from_arg_matches","from_arg_matches_mut","from_subset","get_file_list","group_id","init","into","into_request","is_in_subset","is_record_batch_full","iter_num","main","new_table_name","path","query_set","skip_read","skip_write","thread_num","to_subset","to_subset_unchecked","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","write_data"],"q":[[0,"nyc_taxi"]],"d":["","","","","","Batch size of insert request.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","Number of query iteration","","","Path to the dataset","","","","Number of client threads on write (parallel on file level)","","","","","","","","",""],"i":[0,0,0,9,9,9,9,9,0,9,9,9,9,9,0,0,9,9,0,0,9,9,9,9,9,9,0,9,9,9,9,9,0,9,0,0,9,0,9,9,9,9,9,9,9,9,9,9,9,0],"f":[0,0,0,[1,1],[1,1],0,[[]],[[]],[2],[[],1],[[],1],[[],3],[[],3],[[],3],[4],[5,6],[7],[7],[[7,8,5]],[[9,8,5]],[7],0,[[]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[[]],[[[14,[13]]],[[16,[15]]]],[[],[[18,[17]]]],[[],7],[[]],[[],19],[[],20],[4,20],0,[[]],[[],21],0,[5,[[22,[21,21]]]],0,0,0,[[],18],[[]],[[],12],[[],12],[[],23],[[9,10],[[12,[11]]]],[[9,10],[[12,[11]]]],[[]],[[5,7,8,15,24,25],26]],"c":[],"p":[[3,"Command"],[6,"ArrayRef"],[3,"Compat"],[3,"RecordBatch"],[15,"str"],[3,"CreateTableExpr"],[15,"usize"],[3,"Database"],[3,"Args"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Path"],[8,"AsRef"],[3,"PathBuf"],[3,"Vec"],[3,"Id"],[4,"Option"],[3,"Request"],[15,"bool"],[3,"String"],[3,"HashMap"],[3,"TypeId"],[3,"MultiProgress"],[3,"ProgressStyle"],[15,"u128"]]},\
"object_store":{"doc":"","t":"QNNNNNNNNNNNNNDEDENNDNNNNENNNDIGNNDGSNNNNDLMLMLLLLLLLLLLLLLLLLLLLLLLKLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLALMLLLLALMLMALLLLLMLMLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLMLALLLLLLMLLLMLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLDDDDDDDIDDDMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLMLLLLLLLLMLKLLLLLLLLLLLLLLLLALLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLAMMLLLLLLLLLLLLLLNDENLLLLLFLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLFLLLLFLLLLLLLLLLDGLLLLLLLMLLLLLLLLLMLLLLDDDDDMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDLLLMMMLMLLMMLLMMLMLMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLMLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLLLLLLLLLLLLLLLMLMLMLMLMLMLMLLLLLLLLLLLMMMMMMMMMMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLMLMLLLLLLLLLLLLLLMMMMMMMMMMMMMMLMLMLLMMLMLMLMLLMMLMLMLMLMLMLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLMDDMLLLLMLLLLLLLLLLLLLLLLLLLLMMLMFMMLLLLLLLLFFFF","n":["Accessor","AlreadyExists","CacheControl","Complete","ConditionNotMatch","ConfigInvalid","ContentDisposition","ContentIncomplete","ContentLength","ContentMd5","ContentRange","ContentTruncated","ContentType","DIR","Entry","EntryMode","Error","ErrorKind","Etag","FILE","HttpClient","InvalidInput","IsADirectory","IsSameFile","LastModified","Metakey","Mode","NotADirectory","NotFound","ObjectStore","ObjectStoreBuilder","Pager","PermissionDenied","RateLimited","Reader","Result","SCHEME","Unexpected","Unknown","Unsupported","Version","Writer","abort","accessor","as_error_source","backtrace","bitand","bitor","bitxor","blocking","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","check","client","client","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","context","copy","copy","create_dir","default","delete","delete_with","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_map","from_map","info","init","init","init","init","init","init","init","init","init","inner","inner","into","into","into","into","into","into","into","into","into","into_parts","into_static","is_dir","is_exist","is_file","is_temporary","kind","kind","layer","layers","limit","limit","list","list_with","lister","lister_with","manager","map","message","metadata","metadata","metrics","name","new","new","new","not","operation","path","path","poll_close","poll_complete","poll_flush","poll_flush","poll_next","poll_next","poll_read","poll_read","poll_read","poll_seek","poll_seek","poll_shutdown","poll_write","poll_write","presign_read","presign_read_with","presign_stat","presign_write","presign_write_with","provide","raw_normalize_path","read","read_with","reader","reader_with","rem","remove","remove_all","remove_via","rename","seek_state","send","services","set_permanent","set_persistent","set_source","set_temporary","sink","source","source","start_seek","stat","stat_with","status","sub","test_util","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","util","via_map","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_context","with_limit","with_operation","write","write","write_with","writer","writer_with","BlockingLayer","ConcurrentLimitLayer","ImmutableIndexLayer","LoggingLayer","LruCacheAccessor","LruCacheLayer","PrometheusLayer","RetryInterceptor","RetryLayer","TimeoutLayer","TracingLayer","backtrace_output","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","error_level","extend_iter","failure_level","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","handle","init","init","init","init","init","init","init","init","inner","insert","intercept","into","into","into","into","into","into","into","into","layer","layer","layer","layer","layer","layer","layer","layer","lru_cache","new","new","new","notify","permits","read_cache","read_cache","registry","speed","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vec","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_backtrace_output","with_error_level","with_factor","with_failure_level","with_jitter","with_max_delay","with_max_times","with_min_delay","with_notify","with_registry","with_speed","with_timeout","LruCacheAccessor","LruCacheLayer","batch","blocking_copy","blocking_create_dir","blocking_delete","blocking_list","blocking_list","blocking_read","blocking_read","blocking_rename","blocking_stat","blocking_write","blocking_write","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","contains_file","copy","create_dir","delete","delete","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","info","init","init","inner","inner","into","into","layer","list","list","new","presign","read","read","read_cache","read_cache","read_cache","read_cache_stat","rename","stat","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write","write","NotFound","ReadCache","ReadResult","Success","blocking_invalidate_entries_with_prefix","borrow","borrow","borrow_mut","borrow_mut","can_cache","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","contains_file","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache","fmt","fmt","from","from","init","init","into","into","invalidate_entries_with_prefix","mem_cache","new","read","read_cache_key","read_remote","recover_cache","size_bytes","stat","to_output_reader","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ObjectStoreManager","ObjectStoreManagerRef","add","borrow","borrow_mut","compat","compat_mut","compat_ref","default_object_store","default_object_store","deref","deref_mut","drop","find","fmt","from","init","into","new","stores","try_from","try_into","type_id","vzip","OBJECT_STORE_LRU_CACHE_BYTES","OBJECT_STORE_LRU_CACHE_ENTRIES","OBJECT_STORE_LRU_CACHE_HIT","OBJECT_STORE_LRU_CACHE_MISS","OBJECT_STORE_READ_ERROR","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Azblob","Azdls","Cos","Fs","Gcs","Ghac","Http","Ipmfs","Memory","Obs","Oss","S3","Webdav","Webhdfs","access_key_id","access_key_id","access_key_id","access_key_id","access_key_id","access_key_id","access_key_secret","access_key_secret","account_key","account_key","account_key","account_key","account_name","account_name","account_name","account_name","allow_anonymous","allow_anonymous","atomic_write_dir","atomic_write_dir","batch_max_operations","batch_max_operations","batch_max_operations","batch_max_operations","batch_max_operations","batch_max_operations","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket","bucket","bucket","bucket","bucket","bucket","bucket","bucket","bucket","build","build","build","build","build","build","build","build","build","build","build","build","build","build","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","container","container","credential","credential","credential_path","credential_path","customed_credential_load","customed_credential_load","customed_token_loader","customed_token_loader","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_storage_class","default_storage_class","default_storage_class","default_storage_class","delegation","delegation","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detect_region","disable_config_load","disable_config_load","disable_config_load","disable_config_load","disable_ec2_metadata","disable_ec2_metadata","disable_list_batch","disable_list_batch","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_create_simulation","enable_create_simulation","enable_exact_buf_write","enable_exact_buf_write","enable_path_check","enable_path_check","enable_virtual_host_style","enable_virtual_host_style","encryption_algorithm","encryption_algorithm","encryption_key","encryption_key","encryption_key_sha256","encryption_key_sha256","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","endpoint","external_id","external_id","filesystem","filesystem","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_connection_string","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","from_map","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","http_client","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","password","password","password","password","predefined_acl","predefined_acl","presign_endpoint","presign_endpoint","region","region","role_arn","role_arn","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","root","sas_token","sas_token","scope","scope","secret_access_key","secret_access_key","secret_access_key","secret_access_key","secret_id","secret_id","secret_key","secret_key","security_token","security_token","server_side_encryption","server_side_encryption","server_side_encryption","server_side_encryption","server_side_encryption_aws_kms_key_id","server_side_encryption_aws_kms_key_id","server_side_encryption_customer_algorithm","server_side_encryption_customer_algorithm","server_side_encryption_customer_key","server_side_encryption_customer_key","server_side_encryption_customer_key_md5","server_side_encryption_customer_key_md5","server_side_encryption_key_id","server_side_encryption_key_id","server_side_encryption_with_aws_managed_kms_key","server_side_encryption_with_customer_key","server_side_encryption_with_customer_key","server_side_encryption_with_customer_managed_kms_key","server_side_encryption_with_s3_key","service_account","service_account","to_owned","to_owned","to_owned","to_owned","to_owned","token","token","token","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","username","username","username","username","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_min_size","write_min_size","TempFolder","TestS3Config","access_key_id","borrow","borrow","borrow_mut","borrow_mut","bucket","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","init","init","into","into","new","path","region","remove_all","root","s3_test_config","secret_access_key","store","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","collect","join_dir","join_path","normalize_dir"],"q":[[0,"object_store"],[339,"object_store::layers"],[542,"object_store::layers::lru_cache"],[613,"object_store::layers::lru_cache::read_cache"],[675,"object_store::manager"],[699,"object_store::metrics"],[789,"object_store::services"],[1294,"object_store::test_util"],[1337,"object_store::util"]],"d":["The accessor that built by this builder.","The given path already exists thus we failed to the …","Key for cache control.","The special metadata key that used to mark this entry …","The condition of this operation is not match.","The config for backend is invalid.","Key for content disposition.","The content is incomplete.","Key for content length.","Key for content md5.","Key for content range.","The content is truncated.","Key for content type.","DIR means the path can be listed.","Entry returned by <code>Lister</code> or <code>BlockingLister</code> to represent a …","EntryMode represents the mode.","Error is the error struct returned by all opendal …","ErrorKind is all kinds of Error of opendal.","Key for etag.","FILE means the path has data to read.","HttpClient that used across opendal.","The input is invalid.","The given path is a directory.","The given file paths are same.","Key for last last modified.","Metakey describes the metadata keys that can be stored or …","Key for mode.","The given path is not a directory.","The given path is not found.","Operator is the entry for all public async APIs.","Builder is used to set up a real underlying service, i.e. …","The boxed version of <code>Page</code>","The given path doesn’t have enough permission for this …","Requests that sent to this path is over the limit, please …","Reader is designed to read data from given path in an …","Result that is a wrapper of <code>Result&lt;T, opendal::Error&gt;</code>","Associated scheme for this builder. It indicates what …","OpenDAL don’t know what happened here, and no actions …","Unknown means we don’t know what we can do on this path.","Underlying service doesn’t support this operation.","Key for version.","Writer is designed to write data into given path in an …","Abort the writer and clean up all written data.","","","","","","","Create a new blocking operator.","","","","","","","","","","","","","","","","","","","Consume the accessor builder to build a service.","Build a new http client in async context.","Check if this operator can work correctly.","Get the async client from http client.","","","","","","","","","","","","","","Close the writer and make sure all data have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Copy into writer.","Copy a file from <code>from</code> to <code>to</code>.","Create a dir at given path.","","Delete the given path.","Delete the given path with extra options.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a builder from given map which contains several …","Create a new operator from given map.","Get information of underlying accessor.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consume this entry to get it’s path and metadata.","Convert self into static str.","Check if this mode is DIR.","Check if this path exists or not.","Check if this mode is FILE.","Check if this error is temporary.","Return error’s kind.","","Create a new layer with dynamic dispatch.","","Get current operator’s limit. Limit is usually the …","","List entries within a given directory.","List entries within a given directory with options.","List entries within a given directory as a stream.","List entries within a given directory as a stream with …","","Operate on error with map.","","Fetch metadata of this entry.","","object-store metrics","Name of entry. Name is the last segment of path.","Create a new Error with error kind and message.","Create a new operator with input builder.","Create a new http client in async context.","","","Path of entry. Path is relative to operator’s root.","","","","","Writer makes sure that every write is flushed.","","","","","","","","","","","Presign an operation for read.","Presign an operation for read option described in OpenDAL […","Presign an operation for stat(head).","Presign an operation for write.","Presign an operation for write with option described in …","","Make sure all operation are constructed by normalized path:","Read the whole path into a bytes.","Read the whole path into a bytes with extra options.","Create a new reader which can read the whole path.","Create a new reader with extra options","","Notes","Remove the path and all nested dirs and files recursively.","remove will remove files via the given paths.","Rename a file from <code>from</code> to <code>to</code>.","","Send a request in async way.","Services will provide builders to build underlying …","Set permanent status for error.","Set persistent status for error.","Set source for error.","Set temporary status for error.","Sink into writer.","","","","Get current path’s metadata.","Get current path’s metadata <strong>without cache</strong> directly with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new operator from given scheme and map.","","","","","","","","","","Add more context in error.","Specify the batch limit.","Update error’s operation.","Write into inner writer.","Write bytes into path.","Write data with extra options.","Write multiple bytes into path.","Write multiple bytes into path with extra options.","Add blocking API support for non-blocking services.","Add concurrent request limit.","Add an immutable in-memory index for underlying storage …","Add log for every operations.","","An opendal layer with local LRU file cache supporting.","Add prometheus for every operations.","RetryInterceptor is used to intercept while retry happened.","Add retry for temporary failed operations.","Add timeout for every operations.","Add tracing for every operations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>BlockingLayer</code> with the current runtime’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Insert keys from iter.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Insert a key into index.","Everytime RetryLayer is retrying, this function will be …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Create a new retry layer.","Create a new ConcurrentLimitLayer will specify permits","Create a new <code>TimeoutLayer</code> with default settings.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Setting whether to output backtrace while unexpected …","Setting the log level while expected error happened.","Set factor of current backoff.","Setting the log level while unexpected failure happened.","Set jitter of current backoff.","Set max_delay of current backoff.","Set max_times of current backoff.","Set min_delay of current backoff.","Set the retry interceptor as new notify.","create PrometheusLayer by incoming registry.","Set speed for TimeoutLayer with given value.","Set timeout for TimeoutLayer with given value.","","An opendal layer with local LRU file cache supporting.","","","","","","","","","","","","","","","","","","","","","","","","","Returns true when the local cache contains the specific …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a <code>[LruCacheLayer]</code> with local file cache and …","","","","","","","Returns the read cache statistics info …","","","","","","","","","","","","","","","Local read cache for files in object storage","Cache value for read file","","Blocking version of <code>invalidate_entries_with_prefix</code>.","","","","","Returns true when the path of the file can be cached.","","","","","","","","","","","Returns true when the read cache contains the specific …","","","","","","","","","","","","","Local file cache backend","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invalidte all cache items which key starts with <code>prefix</code>.","Local memory cache to track local cache files","Create a <code>ReadCache</code> with capacity in bytes.","Read from a specific path using the OpRead operation. It …","Generate an unique cache key for the read path and range.","Read the file from remote storage. If success, write the …","Recover existing cache items from <code>file_cache</code> to <code>mem_cache</code>. …","","Returns the cache’s entry count and total approximate …","","","","","","","","","","","","Manages multiple object stores so that users can configure …","","Adds an object store to the manager.","","","","","","","","","","","Finds an object store corresponding to the name.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates a new manager from the object store used as a …","","","","","","Cache size in bytes","Cache entry number","Cache hit counter, no matter what the cache result is.","Cache miss counter","Object store read error counter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Azure Storage Blob services support.","Azure Data Lake Storage Gen2 Support. As known as <code>abfs</code>, …","Tencent-Cloud COS services support.","POSIX file system support.","Google Cloud Storage services support.","GitHub Action Cache Services support.","HTTP Read-only service support like Nginx and Caddy.","IPFS file system support based on IPFS MFS API.","In memory service support. (BTreeMap Based)","Huawei-Cloud Object Storage Service (OBS) support","Aliyun Object Storage Service (OSS) support","Aws S3 and compatible services (including minio, …","WebDAV backend support.","WebHDFS’s REST API support. There two implementations of …","Set access_key_id of this backend.","Set access_key_id of this backend.","Set access_key_id of this backend.","","","","Set access_key_secret of this backend.","","Set account_key of this backend.","Set account_key of this backend.","","","Set account_name of this backend.","Set account_name of this backend.","","","Allow anonymous will allow opendal to send request without …","","Set temp dir for atomic write.","","Set maximum batch operations of this backend.","Set maximum batch operations of this backend.","Set maximum batch operations of this backend.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set bucket of this backend. The param is required.","set the container’s name","Set bucket of this backend. The param is required.","Set bucket name of this backend.","Set bucket name of this backend.","","","","","","","","","","","","","","","","","","","build the backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set container name of this backend.","","set the base64 hashed credentials string used for OAuth2","","set the credentials path of GCS.","","Adding a customed credential load for service.","","Specify the customed token loader used by this service.","","","","","","","","","","","","","","","","Set the default storage class for GCS.","Set default storage_class for this backend.","","","Set the delegation token of this backend, used for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Detect region of S3 bucket.","Disable config load so that opendal will not load config …","Disable config load so that opendal will not load config …","","","Disable load credential from ec2 metadata.","","Disable batch listing","","","","","","","","","","","","","","","","Enable create simulation for ghac service.","","Enable exact buf write so that opendal will write data …","","OpenDAL requires all input path are normalized to make …","","Enable virtual host style so that opendal will send API …","","Set encryption_algorithm of this backend.","","Set encryption_key of this backend.","","Set encryption_key_sha256 of this backend.","","Set endpoint of this backend.","Set endpoint of this backend.","Set endpoint of this backend.","set the endpoint GCS service uses","Set endpoint for http backend.","Set endpoint for ipfs.","Set endpoint of this backend.","Set endpoint of this backend.","Set endpoint of this backend.","Set endpoint for http backend.","Set the remote address of this backend default to …","","","","","","","","","","","","Set external_id for this backend.","","Set filesystem name of this backend.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","from_connection_string will make a builder from connection …","","","","","","","","","","","","","","","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","Specify the http client that used by this service.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","set password for http backend","set the password for Webdav","","","Set the predefined acl for GCS.","","Set a endpoint for generating presigned urls.","","Region represent the signing region of this endpoint. This …","","Set role_arn for this backend.","","Set root of this backend.","Set root of this backend.","Set root of this backend.","Set root for backend.","set the working directory root of backend","set the working directory root of backend","Set root path of http backend.","Set root for ipfs.","Set the root for BTreeMap.","Set root of this backend.","Set root of this backend.","Set root of this backend.","Set root path of http backend.","Set the working directory of this backend","","","","","","","","","","","","","","","Set sas_token of this backend.","","set the GCS service scope","","Set secret_access_key of this backend.","Set secret_access_key of this backend.","","","Set secret_id of this backend.","","Set secret_key of this backend.","","Set temporary credential used in AWS S3 connections","","Set server_side_encryption for this backend.","Set server_side_encryption for this backend.","","","Set server_side_encryption_aws_kms_key_id for this backend","","Set server_side_encryption_customer_algorithm for this …","","Set server_side_encryption_customer_key for this backend.","","Set server_side_encryption_customer_key_md5 for this …","","Set server_side_encryption_key_id for this backend.","","Enable server side encryption with aws managed kms key","Enable server side encryption with customer key.","Enable server side encryption with customer key.","Enable server side encryption with customer managed kms key","Enable server side encryption with s3 managed key","Set the GCS service account.","","","","","","","set bearer token for http backend","set the bearer token for Webdav","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","set password for http backend","set the password for Webdav","","","set the version that used by cache.","","","","","","","","","","","","","","","","set the minimum size of unsized write, it should be …","","Temp folder for object store test","Test s3 config from environment variables","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns s3 test config, return None if not found.","","","","","","","","","","","","Join two paths and normalize the output dir.","Push <code>child</code> to <code>parent</code> dir and normalize the output path.","Normalize a directory path, ensure it is ends with ‘/’"],"i":[38,16,4,4,16,16,4,16,4,4,4,16,4,14,0,0,0,0,4,14,0,16,16,16,4,0,4,16,16,0,0,0,16,16,0,0,38,16,14,16,4,0,1,7,9,9,4,4,4,7,43,1,9,14,15,4,7,16,12,43,1,9,14,15,4,7,16,12,38,12,7,12,12,14,15,4,7,16,12,14,15,4,7,16,12,1,43,1,9,14,15,4,7,16,12,43,1,9,14,15,4,7,16,12,43,1,9,14,15,4,7,16,12,9,1,7,7,14,7,7,43,1,9,14,15,4,7,16,12,43,1,9,14,15,4,7,16,12,43,1,9,14,15,4,7,16,12,14,4,16,14,14,14,14,14,4,4,4,4,4,16,16,16,16,16,9,9,14,14,15,4,7,16,16,12,43,1,9,14,15,4,7,16,12,38,7,7,43,1,9,14,15,4,7,16,12,43,1,43,1,9,14,15,4,7,16,12,15,16,14,7,14,9,9,9,7,0,7,7,7,7,7,7,0,9,9,15,15,0,15,9,7,12,4,9,15,15,1,43,1,1,43,43,43,43,43,43,43,1,1,1,7,7,7,7,7,9,0,7,7,7,7,4,7,7,7,7,43,12,0,9,9,9,9,1,9,9,43,7,7,9,4,0,14,15,4,7,16,12,9,14,16,43,1,9,14,15,4,7,16,12,43,1,9,14,15,4,7,16,12,43,43,1,9,14,15,4,7,16,12,0,7,43,1,9,14,15,4,7,16,12,9,7,9,1,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,71,68,78,69,70,71,72,73,74,68,78,69,70,71,72,73,74,68,68,69,70,71,72,73,74,68,69,70,71,72,73,74,68,78,69,70,71,72,73,74,68,78,69,70,71,72,73,74,68,78,69,70,71,72,73,74,73,68,70,71,72,74,68,78,69,70,71,72,73,74,68,78,69,70,71,72,73,74,68,78,69,70,71,72,73,74,71,70,71,70,71,73,74,68,78,69,70,71,72,73,74,73,68,78,69,70,71,72,73,74,91,70,77,68,78,69,70,71,72,73,74,68,78,69,70,71,72,73,74,0,68,69,72,68,69,99,91,74,72,72,68,69,70,71,72,73,74,68,78,69,70,71,72,73,74,68,78,69,70,71,72,73,74,68,78,69,70,71,72,73,74,70,68,78,69,70,71,72,73,74,71,71,68,71,68,68,68,68,68,74,72,72,0,0,91,91,91,91,91,91,91,91,91,91,91,91,99,91,99,91,99,99,99,91,99,91,99,91,99,91,91,91,91,99,91,99,91,99,91,91,99,91,91,99,91,91,91,99,91,99,91,91,99,91,91,91,0,99,91,99,91,91,99,99,91,99,91,99,91,99,91,91,91,105,0,0,105,104,105,104,105,104,0,105,104,105,104,105,104,105,104,105,104,104,105,104,105,104,105,104,105,105,105,105,105,105,104,105,104,105,104,105,104,105,104,104,104,104,104,0,104,104,105,104,0,105,104,105,104,105,104,105,104,105,104,0,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,0,0,0,0,108,110,112,113,115,108,110,112,113,115,108,110,112,113,115,108,110,112,113,115,108,110,112,113,115,108,110,112,113,115,108,108,110,110,112,112,113,113,115,115,108,110,112,113,115,108,110,112,113,115,108,110,112,113,115,108,110,112,113,115,108,110,112,113,115,108,110,112,113,115,108,110,112,113,115,108,110,112,113,115,108,110,112,113,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,117,118,116,117,118,117,117,119,120,119,120,119,120,119,120,118,118,121,121,119,117,118,119,117,118,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,122,123,116,117,118,122,123,116,117,118,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,120,122,116,129,119,120,122,116,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,119,123,123,123,123,118,118,123,123,119,120,122,121,123,124,125,126,127,116,117,118,128,129,123,118,123,118,129,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,118,122,118,122,118,118,118,129,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,124,124,118,118,121,121,118,118,119,119,119,119,119,119,119,120,122,123,125,126,116,117,118,128,129,119,120,122,123,125,126,116,117,118,128,129,118,118,120,120,119,120,122,121,123,124,125,126,116,117,118,128,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,120,122,123,124,125,126,116,117,118,128,119,120,122,123,124,125,126,116,117,118,128,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,125,128,125,128,123,123,117,117,118,118,118,118,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,119,123,123,116,118,116,118,122,122,122,122,118,118,117,118,117,118,118,118,118,118,118,118,118,118,117,117,118,119,118,118,118,123,123,119,120,122,116,129,125,128,125,128,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,119,120,122,121,123,124,125,126,127,116,117,118,128,129,125,128,125,128,124,124,119,120,122,121,123,124,125,126,127,116,117,118,128,129,117,117,0,0,132,133,132,133,132,132,133,132,133,132,133,132,133,132,133,132,133,132,132,133,132,133,132,133,132,133,133,132,133,132,0,132,133,133,132,133,132,133,132,133,132,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[[],3],0,[[4,[6,[[5,[4]]]]]],[[4,[6,[[5,[4]]]]]],[[4,[6,[[5,[4]]]]]],[7,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[10,[9]]]],[11,[[10,[12,9]]]],[7,2],[12,13],0,[14,14],[15,15],[4,4],[7,7],[16,16],[12,12],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[[1,18],2],[[7,19,19],2],[[7,19],2],[[],14],[[7,19],2],[[7,19],20],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[14,14],22],[[4,4],22],[[16,16],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[9,23],[[10,[24]]]],[[9,23],[[10,[24]]]],[[14,23],[[10,[24]]]],[[14,23],[[10,[24]]]],[[15,23],[[10,[24]]]],[[4,23],[[10,[24]]]],[[7,23],[[10,[24]]]],[[16,23],[[10,[24]]]],[[16,23],[[10,[24]]]],[[12,23],[[10,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[25,25,26]]]],[[[27,[25,25,26]]],[[10,[[29,[28]],9]]]],[7,30],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15],[16,19],[14,22],[[7,19],2],[14,22],[9,22],[9,16],0,[[7,[33,[[32,[28,31]]]]],7],0,[7,21],0,[[7,19],2],[[7,19],34],[[7,19],2],[[7,19],35],0,[[9,36],9],0,[15,37],0,0,[15,19],[[16,19],9],[38,[[10,[[29,[28]],9]]]],[[],[[10,[12,9]]]],[4],0,[15,19],0,[[[39,[1]],40],[[42,[[10,[41]]]]]],[[[39,[43]],40],[[42,[[10,[44,41]]]]]],[[[39,[1]],40],[[42,[[10,[41]]]]]],[[[39,[1]],40],[[42,[[10,[41]]]]]],[[43,40],[[42,[[46,[[10,[45,9]]]]]]]],[[[39,[43]],40],[[42,[46]]]],[[[39,[43]],40,[48,[47]]],[[42,[[10,[21,41]]]]]],[[[39,[43]],40,49],[[42,[[10,[41]]]]]],[[43,40,[48,[47]]],[[42,[[10,[21,9]]]]]],[[43,40,50],[[42,[[10,[44,9]]]]]],[[[39,[43]],40,50],[[42,[[10,[44,41]]]]]],[[[39,[1]],40],[[42,[[10,[41]]]]]],[[[39,[1]],40,[48,[47]]],[[42,[[10,[21,41]]]]]],[[[39,[1]],40,[48,[47]]],[[42,[[10,[21,41]]]]]],[[7,19,51],2],[[7,19,51],52],[[7,19,51],2],[[7,19,51],2],[[7,19,51],53],[54],[19,25],[[7,19],2],[[7,19],55],[[7,19],2],[[7,19],56],[[4,[6,[[5,[4]]]]]],[[7,[57,[25,31]]],2],[[7,19],2],[[7,[0,[58,59]]],2],[[7,19,19],2],0,[[12,[61,[60]]],2],0,[9,9],[9,9],[[9,[6,[62]]],9],[9,9],[[1,58],2],[9,[[46,[3]]]],0,[[[39,[43]],50],[[10,[41]]]],[[7,19],2],[[7,19],63],0,[[4,[6,[[5,[4]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[39,40],[[42,[[46,[10]]]]]],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],0,[[65,[27,[25,25,26]]],[[10,[7,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,19,[6,[25]]],9],[[7,21],7],[[9,[6,[19]]],9],[[1,[6,[45]]],2],[[7,19,[6,[45]]],2],[[7,19,[6,[45]]],66],[[7,19],2],[[7,19],67],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],[[10,[73,9]]]],[[],[[68,[75]]]],[[],70],[[],71],[[],72],[[],74],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],0,[[70,76]],0,[[70,23],[[10,[24]]]],[[71,23],[[10,[24]]]],[[73,23],[[10,[24]]]],[[74,23],[[10,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[70,25]],[[9,51,48]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[68,[77]],28]],[[78,28]],[[69,28]],[[70,28]],[[71,28]],[[72,28]],[[73,28]],[[74,28]],0,[[],[[68,[75]]]],[21,69],[[],72],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[71,22],71],[[71,[46,[19]]],[[10,[71,9]]]],[[[68,[75]],79],[[68,[75]]]],[[71,[46,[19]]],[[10,[71,9]]]],[[[68,[75]]],[[68,[75]]]],[[[68,[75]],51],[[68,[75]]]],[[[68,[75]],21],[[68,[75]]]],[[[68,[75]],51],[[68,[75]]]],[[[68,[75]],77],[[68,[77]]]],[80,74],[[72,44],72],[[72,51],72],0,0,[81,[[39,[[82,[2,31]]]]]],[[19,19,83],[[10,[84,9]]]],[[19,85],[[10,[86,9]]]],[[19,87],[[10,[88,9]]]],[[19,89],[[10,[9]]]],[[[91,[28,[0,[28,90]]]],19,89],92],[[[91,[28,[0,[28,90]]]],19,93],92],[[19,93],[[10,[9]]]],[[19,19,94],[[10,[95,9]]]],[[19,96],[[10,[97,9]]]],[[19,98],[[10,[9]]]],[[[91,[28,[0,[28,90]]]],19,98],92],[[]],[[]],[[]],[[]],[[[99,[[0,[90,90]]]]],[[99,[[0,[90,90]]]]]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[[99,[[0,[28,90]]]],19],22],[[19,19,83],[[39,[[82,[2,31]]]]]],[[19,85],[[39,[[82,[2,31]]]]]],[[19,87],[[39,[[82,[2,31]]]]]],[[[91,[28,[0,[28,90]]]],19,87],[[39,[[82,[2]]]]]],[21],[21],[21],[21],[21],[21],[[[91,[100,[0,[100,90]]]],23],101],[[]],[[]],[[],102],[[],21],[[],21],[[[91,[28,[0,[28,90]]]]]],0,[[]],[[]],[[[99,[[0,[28,90]]]],28]],[[[91,[28,[0,[28,90]]]],19,89],[[39,[[82,[2]]]]]],[[19,89],[[39,[[82,[2,31]]]]]],[[[32,[[0,[28,90]]]],21],[[92,[[99,[[0,[28,90]]]]]]]],[[19,103],[[39,[[82,[2,31]]]]]],[[19,93],[[39,[[82,[2,31]]]]]],[[[91,[28,[0,[28,90]]]],19,93],[[39,[[82,[2]]]]]],0,0,0,[[[99,[[0,[28,90]]]]]],[[19,19,94],[[39,[[82,[2,31]]]]]],[[19,96],[[39,[[82,[2,31]]]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],64],[[],64],[[]],[[]],[[19,98],[[39,[[82,[2,31]]]]]],[[[91,[28,[0,[28,90]]]],19,98],[[39,[[82,[2]]]]]],0,0,0,0,[[[104,[[0,[28,90]]]],25]],[[]],[[]],[[]],[[]],[19,22],[105,105],[[[104,[[0,[90,90]]]]],[[104,[[0,[90,90]]]]]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[[104,[[0,[28,90]]]],19],22],[21],[21],[21],[21],[21],[21],[[105,105],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[105,23],101],[[[104,[[0,[100,90]]]],23],101],[[]],[[]],[[],21],[[],21],[[]],[[]],[[[104,[[0,[28,90]]]],25]],0,[[[32,[[0,[28,90]]]],21],[[104,[[0,[28,90]]]]]],[[[104,[[0,[28,90]]]],28,19,93],92],[[19,93],25],[[[104,[[0,[28,90]]]],28,19,19,93],[[92,[105]]]],[[[104,[[0,[28,90]]]]],92],[105,106],[[[104,[[0,[28,90]]]]]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],64],[[],64],[[]],[[]],0,0,[[107,19,7]],[[]],[[]],[[],17],[[],17],[[],17],[107,7],0,[21],[21],[21],[[107,19],[[46,[7]]]],[[107,23],101],[[]],[[],21],[[]],[[19,7],107],0,[[],10],[[],10],[[],64],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[108,109],[21],[110,111],[21],[112,109],[21],[21],[113,114],[115,114],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],64],[[],64],[[],64],[[],64],[[],64],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[116,19],116],[[117,19],117],[[118,19],118],0,0,0,[[117,19],117],0,[[119,19],119],[[120,19],120],0,0,[[119,19],119],[[120,19],120],0,0,[118,118],0,[[121,19],121],0,[[119,21],119],[[117,21],117],[[118,21],118],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[122,19],122],[[123,19],123],[[116,19],116],[[117,19],117],[[118,19],118],0,0,0,0,0,[119,[[10,[9]]]],[120,[[10,[9]]]],[122,[[10,[9]]]],[121,[[10,[9]]]],[123,[[10,[9]]]],[124,[[10,[9]]]],[125,[[10,[9]]]],[126,[[10,[9]]]],[127,[[10,[9]]]],[116,[[10,[9]]]],[117,[[10,[9]]]],[118,[[10,[9]]]],[128,[[10,[9]]]],[129,[[10,[9]]]],[119,119],[120,120],[122,122],[116,116],[129,129],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[119,19],119],0,[[123,19],123],0,[[123,19],123],0,[[118,[82,[130,31]]],118],0,[[123,[82,[131,31]]],123],0,[[],119],[[],120],[[],122],[[],121],[[],123],[[],124],[[],125],[[],126],[[],127],[[],116],[[],117],[[],118],[[],128],[[],129],[[123,19],123],[[118,19],118],0,0,[[129,19],129],0,[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[19,19],2],[122,122],[118,118],0,0,[118,118],0,[129,129],0,[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[124,124],0,[118,118],0,[121,121],0,[118,118],0,[[119,19],119],0,[[119,19],119],0,[[119,19],119],0,[[119,19],119],[[120,19],120],[[122,19],122],[[123,19],123],[[125,19],125],[[126,19],126],[[116,19],116],[[117,19],117],[[118,19],118],[[128,19],128],[[129,19],129],0,0,0,0,0,0,0,0,0,0,0,[[118,19],118],0,[[120,19],120],0,[[119,23],[[10,[24]]]],[[120,23],[[10,[24]]]],[[122,23],[[10,[24]]]],[[121,23],[[10,[24]]]],[[123,23],[[10,[24]]]],[[124,23],[[10,[24]]]],[[125,23],[[10,[24]]]],[[126,23],[[10,[24]]]],[[116,23],[[10,[24]]]],[[117,23],[[10,[24]]]],[[118,23],[[10,[24]]]],[[128,23],[[10,[24]]]],[[129,23],[[10,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,[[10,[119,9]]]],[[[27,[25,25,26]]],119],[[[27,[25,25,26]]],120],[[[27,[25,25,26]]],122],[[[27,[25,25,26]]],121],[[[27,[25,25,26]]],123],[[[27,[25,25,26]]],124],[[[27,[25,25,26]]],125],[[[27,[25,25,26]]],126],[[[27,[25,25,26]]],127],[[[27,[25,25,26]]],116],[[[27,[25,25,26]]],117],[[[27,[25,25,26]]],118],[[[27,[25,25,26]]],128],[[[27,[25,25,26]]],129],[[119,12],119],[[120,12],120],[[122,12],122],[[123,12],123],[[124,12],124],[[125,12],125],[[126,12],126],[[116,12],116],[[117,12],117],[[118,12],118],[[128,12],128],0,0,0,0,0,0,0,0,0,0,0,[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[125,19],125],[[128,19],128],0,0,[[123,19],123],0,[[117,19],117],0,[[118,19],118],0,[[118,19],118],0,[[119,19],119],[[120,19],120],[[122,19],122],[[121,19],121],[[123,19],123],[[124,19],124],[[125,19],125],[[126,19],126],[[127,19],127],[[116,19],116],[[117,19],117],[[118,19],118],[[128,19],128],[[129,19],129],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[119,19],119],0,[[123,19],123],0,[[116,19],116],[[118,19],118],0,0,[[122,19],122],0,[[122,19],122],0,[[118,19],118],0,[[117,19],117],[[118,19],118],0,0,[[118,19],118],0,[[118,19],118],0,[[118,19],118],0,[[118,19],118],0,[[117,19],117],0,[118,118],[[119,[48,[47]]],119],[[118,19,[48,[47]]],118],[[118,19],118],[118,118],[[123,19],123],0,[[]],[[]],[[]],[[]],[[]],[[125,19],125],[[128,19],128],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[],64],[[125,19],125],[[128,19],128],0,0,[[124,19],124],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[117,21],117],0,0,0,0,[[]],[[]],[[]],[[]],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[21],[21],[21],[21],[21],[21],[[132,23],101],[[]],[[]],[[],21],[[],21],[[]],[[]],[[7,19],133],0,0,[133,92],0,[[],[[46,[132]]]],0,0,[[],10],[[],10],[[],10],[[],10],[[],64],[[],64],[[]],[[]],[134,[[10,[[57,[15]],9]]]],[[19,19],25],[[19,19],25],[19,25]],"c":[],"p":[[3,"Writer"],[8,"Future"],[8,"Error"],[4,"Metakey"],[3,"FlagSet"],[8,"Into"],[3,"ObjectStore"],[3,"BlockingOperator"],[3,"Error"],[4,"Result"],[3,"ClientBuilder"],[3,"HttpClient"],[3,"Client"],[4,"EntryMode"],[3,"Entry"],[4,"ErrorKind"],[3,"Compat"],[8,"AsyncRead"],[15,"str"],[3,"FutureDelete"],[15,"usize"],[15,"bool"],[3,"Formatter"],[3,"Error"],[3,"String"],[3,"RandomState"],[3,"HashMap"],[8,"Accessor"],[3,"OperatorBuilder"],[3,"OperatorInfo"],[3,"Global"],[3,"Arc"],[8,"Layer"],[3,"FutureList"],[3,"FutureLister"],[8,"FnOnce"],[3,"Metadata"],[8,"ObjectStoreBuilder"],[3,"Pin"],[3,"Context"],[3,"Error"],[4,"Poll"],[3,"Reader"],[15,"u64"],[3,"Bytes"],[4,"Option"],[15,"u8"],[15,"slice"],[3,"ReadBuf"],[4,"SeekFrom"],[3,"Duration"],[3,"FuturePresignRead"],[3,"FuturePresignWrite"],[3,"Demand"],[3,"FutureRead"],[3,"FutureReader"],[3,"Vec"],[8,"Stream"],[8,"Unpin"],[4,"AsyncBody"],[3,"Request"],[3,"Error"],[3,"FutureStat"],[3,"TypeId"],[4,"Scheme"],[3,"FutureWrite"],[3,"FutureWriter"],[3,"RetryLayer"],[3,"ConcurrentLimitLayer"],[3,"ImmutableIndexLayer"],[3,"LoggingLayer"],[3,"TimeoutLayer"],[3,"BlockingLayer"],[3,"PrometheusLayer"],[3,"DefaultRetryInterceptor"],[8,"IntoIterator"],[8,"RetryInterceptor"],[3,"TracingLayer"],[15,"f32"],[3,"Registry"],[3,"OpBatch"],[3,"Box"],[3,"OpCopy"],[3,"RpCopy"],[3,"OpCreateDir"],[3,"RpCreateDir"],[3,"OpDelete"],[3,"RpDelete"],[3,"OpList"],[8,"Clone"],[3,"LruCacheAccessor"],[6,"Result"],[3,"OpRead"],[3,"OpRename"],[3,"RpRename"],[3,"OpStat"],[3,"RpStat"],[3,"OpWrite"],[3,"LruCacheLayer"],[8,"Debug"],[6,"Result"],[3,"AccessorInfo"],[3,"OpPresign"],[3,"ReadCache"],[4,"ReadResult"],[15,"u32"],[3,"ObjectStoreManager"],[3,"OBJECT_STORE_LRU_CACHE_HIT"],[6,"IntCounterVec"],[3,"OBJECT_STORE_LRU_CACHE_MISS"],[6,"IntCounter"],[3,"OBJECT_STORE_READ_ERROR"],[3,"OBJECT_STORE_LRU_CACHE_ENTRIES"],[6,"IntGauge"],[3,"OBJECT_STORE_LRU_CACHE_BYTES"],[3,"Obs"],[3,"Oss"],[3,"S3"],[3,"Azblob"],[3,"Azdls"],[3,"Fs"],[3,"Cos"],[3,"Gcs"],[3,"Ghac"],[3,"Http"],[3,"Ipmfs"],[3,"Memory"],[3,"Webdav"],[3,"Webhdfs"],[8,"CredentialLoad"],[8,"TokenLoad"],[3,"TestS3Config"],[3,"TempFolder"],[3,"Lister"]]},\
"operator":{"doc":"","t":"AAAAAAAAADGLLLMLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLFLNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNNDNDNDDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDLLLLLLFFFLLLFLLFLLLFFLLLLLLLLLLLLFLLLLLLLLDGLLLLFMLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLFFFLDDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLAAAFFFAFFFDLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDDDMAMMMAMADLLLLLLLLLLLLLLLLLLFLLLLLLLLLDLLLMLLLLMLLLLLLLLLLLLLMLLLLLLLLLDLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLDDDDMMAMMFMMMAFAMADLLLLLLLLLLLLLLLLLLFLLLLLLLLLDLLLMLLLLMLLLLLLLLLLLLLMLLLLLLLLLRDLLLMFLLLLMLLLLLLLLLLLLLLMFLFLLLLLLLLDLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLDLLLLALLLLMLMLLLLLLALALLLLLLAMLLALALLLLLLFLLLLFLLLMLLLLLLLMLLMLALLLLLMFFLLLALLLLLLLLRRRFFFFFFFFFFDLLLLLLLMLLLLLLLMLLLLLLLLFLLLLLLL","n":["delete","error","expr_factory","insert","metrics","region_req_factory","req_convert","statement","table","Deleter","DeleterRef","and","borrow","borrow_mut","catalog_manager","compat","compat_mut","compat_ref","datanode_manager","deref","deref_mut","do_request","drop","from","from_subset","get_table","group_requests_by_peer","handle_column_deletes","handle_row_deletes","handle_table_delete","init","into","into_request","is_in_subset","key_column_names","lift_into","new","or","partition_manager","sculpt","subset","to_subset","to_subset_unchecked","trim_columns","try_from","try_into","try_into","type_id","validate_column_count_match","vzip","AlterExprToRequest","AlterExprToRequestSnafu","BuildBackend","BuildBackendSnafu","BuildColumnVectors","BuildColumnVectorsSnafu","BuildCreateExprOnInsertion","BuildCreateExprOnInsertionSnafu","BuildCsvConfig","BuildCsvConfigSnafu","BuildDfLogicalPlan","BuildDfLogicalPlanSnafu","BuildFileStream","BuildFileStreamSnafu","BuildParquetRecordBatchStream","BuildParquetRecordBatchStreamSnafu","BuildRegex","BuildRegexSnafu","BuildTableMeta","BuildTableMetaSnafu","Catalog","CatalogSnafu","ColumnDataType","ColumnDataTypeSnafu","ColumnDefaultValue","ColumnDefaultValueSnafu","ColumnNoneDefaultValue","ColumnNoneDefaultValueSnafu","ColumnNotFound","ColumnNotFoundSnafu","ConvertColumnDefaultConstraint","ConvertColumnDefaultConstraintSnafu","ConvertSqlValue","ConvertSqlValueSnafu","CopyTable","CopyTableSnafu","CreateTableInfo","CreateTableInfoSnafu","DescribeStatement","DescribeStatementSnafu","DeserializePartition","DeserializePartitionSnafu","EncodeJson","EncodeJsonSnafu","Error","ExecLogicalPlan","ExecLogicalPlanSnafu","ExecuteDdl","ExecuteDdlSnafu","ExecuteStatement","ExecuteStatementSnafu","External","ExternalSnafu","FindNewColumnsOnInsertion","FindNewColumnsOnInsertionSnafu","FindRegionLeader","FindRegionLeaderSnafu","FindTablePartitionRule","FindTablePartitionRuleSnafu","IllegalPrimaryKeysDef","IllegalPrimaryKeysDefSnafu","InferFileTableSchema","InferFileTableSchemaSnafu","InferSchema","InferSchemaSnafu","Insert","InsertSnafu","IntoVectors","IntoVectorsSnafu","InvalidColumnDef","InvalidColumnDefSnafu","InvalidCopyParameter","InvalidCopyParameterSnafu","InvalidDeleteRequest","InvalidDeleteRequestSnafu","InvalidInsertRequest","InvalidInsertRequestSnafu","InvalidPartitionColumns","InvalidPartitionColumnsSnafu","InvalidSchema","InvalidSchemaSnafu","InvalidSql","InvalidSqlSnafu","InvalidateTableCache","InvalidateTableCacheSnafu","JoinTask","JoinTaskSnafu","ListObjects","ListObjectsSnafu","MissingInsertBody","MissingInsertBodySnafu","MissingTimeIndexColumn","MissingTimeIndexColumnSnafu","NotSupported","NotSupportedSnafu","ParseFileFormat","ParseFileFormatSnafu","ParseQuery","ParseQuerySnafu","ParseSql","ParseSqlSnafu","ParseUrl","ParseUrlSnafu","PlanStatement","PlanStatementSnafu","PrepareFileTable","PrepareFileTableSnafu","PrepareImmutableTable","PrepareImmutableTableSnafu","ProjectSchema","ProjectSchemaSnafu","ReadDfRecordBatch","ReadDfRecordBatchSnafu","ReadObject","ReadObjectSnafu","ReadOrc","ReadOrcSnafu","ReadParquet","ReadParquetSnafu","ReadRecordBatch","ReadRecordBatchSnafu","RequestDeletes","RequestDeletesSnafu","RequestInserts","RequestInsertsSnafu","Result","SchemaExists","SchemaExistsSnafu","SchemaIncompatible","SchemaIncompatibleSnafu","SchemaNotFound","SchemaNotFoundSnafu","SplitDelete","SplitDeleteSnafu","SplitInsert","SplitInsertSnafu","Table","TableAlreadyExists","TableAlreadyExistsSnafu","TableMetadataManager","TableMetadataManagerSnafu","TableNotFound","TableNotFoundSnafu","TableSnafu","Unexpected","UnexpectedSnafu","UnrecognizedTableOption","UnrecognizedTableOptionSnafu","UnsupportedFormat","UnsupportedFormatSnafu","WriteParquet","WriteParquetSnafu","WriteStreamToFile","WriteStreamToFileSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","column","column_name","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","feat","file_schema","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","msg","name","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","path","path","path","provide","reason","reason","reason","schema_info","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","source","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","table","table","table_name","table_name","table_name","table_name","table_name","table_schema","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","violated","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column","column","column","column_name","err_msg","error","error","error","error","error","error","error","error","error","error","error","error","feat","file_schema","format","index","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","name","path","path","path","reason","reason","reason","schema_info","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","table","table","table_name","table_name","table_name","table_name","table_name","table_schema","value","value","violated","CreateExprFactory","__clone_box","and","borrow","borrow_mut","clone","clone_into","column_schemas_to_defs","columns_to_column_schemas","columns_to_expr","compat","compat_mut","compat_ref","create_external_expr","create_table_expr_by_column_schemas","create_table_expr_by_columns","create_to_expr","deref","deref_mut","drop","find_primary_keys","find_time_index","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","or","sculpt","subset","to_alter_expr","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Inserter","InserterRef","alter_table_on_demand","and","borrow","borrow_mut","build_create_table_expr","catalog_manager","compat","compat_mut","compat_ref","create_or_alter_tables_on_demand","create_table","datanode_manager","deref","deref_mut","do_request","drop","from","from_subset","get_table","group_requests_by_peer","handle_column_inserts","handle_row_inserts","handle_statement_insert","handle_table_insert","init","into","into_request","is_in_subset","lift_into","new","or","partition_manager","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","validate_column_count_match","validate_request_with_table","validate_required_columns","vzip","DIST_CREATE_TABLE","DIST_DELETE_ROW_COUNT","DIST_INGEST_ROW_COUNT","__private_field","__private_field","__private_field","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","or","or","or","sculpt","sculpt","sculpt","subset","subset","subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","RegionRequestFactory","and","borrow","borrow_mut","build_delete","build_insert","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","header","init","into","into_request","is_in_subset","lift_into","new","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","common","delete","insert","column_schema","columns_to_rows","data_type","partitioner","push_column_to_rows","row_count","semantic_type","Partitioner","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","new","or","partition_delete_requests","partition_insert_requests","partition_manager","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","ColumnToRow","RowToRegion","TableToRegion","catalog_manager","column_to_row","ctx","partition_manager","partition_manager","row_to_region","table_info","table_to_region","ColumnToRow","and","borrow","borrow_mut","compat","compat_mut","compat_ref","convert","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","or","request_column_to_row","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RowToRegion","and","borrow","borrow_mut","catalog_manager","compat","compat_mut","compat_ref","convert","ctx","deref","deref_mut","drop","from","from_subset","get_table","init","into","into_request","is_in_subset","lift_into","new","or","partition_manager","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","TableToRegion","and","borrow","borrow_mut","compat","compat_mut","compat_ref","convert","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","new","or","partition_manager","sculpt","subset","table_info","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","ColumnToRow","RowToRegion","StatementToRegion","TableToRegion","catalog_manager","catalog_manager","column_to_row","ctx","ctx","data_type","partition_manager","partition_manager","partition_manager","row_to_region","semantic_type","stmt_to_region","table_info","table_to_region","ColumnToRow","and","borrow","borrow_mut","compat","compat_mut","compat_ref","convert","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","or","request_column_to_row","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RowToRegion","and","borrow","borrow_mut","catalog_manager","compat","compat_mut","compat_ref","convert","ctx","deref","deref_mut","drop","from","from_subset","get_table","init","into","into_request","is_in_subset","lift_into","new","or","partition_manager","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DEFAULT_PLACEHOLDER_VALUE","StatementToRegion","and","borrow","borrow_mut","catalog_manager","column_names","compat","compat_mut","compat_ref","convert","ctx","deref","deref_mut","drop","from","from_subset","get_full_name","get_table","init","into","into_request","is_in_subset","lift_into","new","or","partition_manager","replace_default","sculpt","sql_value_to_grpc_value","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","TableToRegion","and","borrow","borrow_mut","compat","compat_mut","compat_ref","convert","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","new","or","partition_manager","sculpt","subset","table_info","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","StatementExecutor","__clone_box","alter_table","alter_table_inner","and","backup","borrow","borrow_mut","build_file_stream","build_read_stream","cache_invalidator","catalog_manager","catalog_manager","clone","clone_into","compat","compat_mut","compat_ref","copy_database","copy_table_from","copy_table_from","copy_table_to","copy_table_to","create_database","create_external_table","create_table","create_table_inner","create_table_procedure","ddl","ddl_executor","deref","deref_mut","describe","describe_table","dml","drop","drop_table","drop_table_procedure","execute_sql","execute_stmt","execute_tql","extract_timestamp","from","from_ref","from_subset","get_table","idents_to_full_database_name","infer_schema","init","insert","inserter","into","into_request","is_in_subset","lift_into","list_copy_from_entries","new","or","partition_manager","plan","plan_exec","query_engine","sculpt","show","show_create_table","show_databases","show_tables","stream_to_file","subset","table_metadata_manager","to_copy_database_request","to_copy_table_request","to_owned","to_subset","to_subset_unchecked","tql","truncate_table","truncate_table_procedure","try_from","try_into","try_into","type_id","verify_alter","vzip","COPY_DATABASE_TIME_END_KEY","COPY_DATABASE_TIME_START_KEY","DEFAULT_BATCH_SIZE","batch_insert","ensure_schema_compatible","generated_schema_projection_and_compatible_file_schema","create_table_info","find_partition_columns","find_partition_entries","merge_options","parse_partitions","validate_partition_columns","create_partitions_stmt","TableMutationOperator","and","borrow","borrow_mut","compat","compat_mut","compat_ref","delete","deleter","deref","deref_mut","drop","from","from_subset","init","insert","inserter","into","into_request","is_in_subset","lift_into","new","or","sculpt","subset","table_idents_to_full_name","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip"],"q":[[0,"operator"],[9,"operator::delete"],[50,"operator::error"],[2814,"operator::error::Error"],[2979,"operator::expr_factory"],[3022,"operator::insert"],[3068,"operator::metrics"],[3155,"operator::region_req_factory"],[3186,"operator::req_convert"],[3189,"operator::req_convert::common"],[3196,"operator::req_convert::common::partitioner"],[3227,"operator::req_convert::delete"],[3238,"operator::req_convert::delete::column_to_row"],[3267,"operator::req_convert::delete::row_to_region"],[3300,"operator::req_convert::delete::table_to_region"],[3331,"operator::req_convert::insert"],[3349,"operator::req_convert::insert::column_to_row"],[3378,"operator::req_convert::insert::row_to_region"],[3411,"operator::req_convert::insert::stmt_to_region"],[3449,"operator::req_convert::insert::table_to_region"],[3480,"operator::statement"],[3564,"operator::statement::backup"],[3566,"operator::statement::copy_table_from"],[3570,"operator::statement::ddl"],[3576,"operator::statement::show"],[3577,"operator::table"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::AlterExprToRequest</code> …","","SNAFU context selector for the <code>Error::BuildBackend</code> variant","","SNAFU context selector for the <code>Error::BuildColumnVectors</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::BuildCsvConfig</code> …","","SNAFU context selector for the <code>Error::BuildDfLogicalPlan</code> …","","SNAFU context selector for the <code>Error::BuildFileStream</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::BuildRegex</code> variant","","SNAFU context selector for the <code>Error::BuildTableMeta</code> …","","SNAFU context selector for the <code>Error::Catalog</code> variant","","SNAFU context selector for the <code>Error::ColumnDataType</code> …","","SNAFU context selector for the <code>Error::ColumnDefaultValue</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ColumnNotFound</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ConvertSqlValue</code> …","","SNAFU context selector for the <code>Error::CopyTable</code> variant","","SNAFU context selector for the <code>Error::CreateTableInfo</code> …","","SNAFU context selector for the <code>Error::DescribeStatement</code> …","","SNAFU context selector for the <code>Error::DeserializePartition</code> …","","SNAFU context selector for the <code>Error::EncodeJson</code> variant","","","SNAFU context selector for the <code>Error::ExecLogicalPlan</code> …","","SNAFU context selector for the <code>Error::ExecuteDdl</code> variant","","SNAFU context selector for the <code>Error::ExecuteStatement</code> …","","SNAFU context selector for the <code>Error::External</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::FindRegionLeader</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::IllegalPrimaryKeysDef</code>…","","SNAFU context selector for the <code>Error::InferFileTableSchema</code> …","","SNAFU context selector for the <code>Error::InferSchema</code> variant","","SNAFU context selector for the <code>Error::Insert</code> variant","","SNAFU context selector for the <code>Error::IntoVectors</code> variant","","SNAFU context selector for the <code>Error::InvalidColumnDef</code> …","","SNAFU context selector for the <code>Error::InvalidCopyParameter</code> …","","SNAFU context selector for the <code>Error::InvalidDeleteRequest</code> …","","SNAFU context selector for the <code>Error::InvalidInsertRequest</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidSchema</code> variant","","SNAFU context selector for the <code>Error::InvalidSql</code> variant","","SNAFU context selector for the <code>Error::InvalidateTableCache</code> …","","SNAFU context selector for the <code>Error::JoinTask</code> variant","","SNAFU context selector for the <code>Error::ListObjects</code> variant","","SNAFU context selector for the <code>Error::MissingInsertBody</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::NotSupported</code> variant","","SNAFU context selector for the <code>Error::ParseFileFormat</code> …","","SNAFU context selector for the <code>Error::ParseQuery</code> variant","","SNAFU context selector for the <code>Error::ParseSql</code> variant","","SNAFU context selector for the <code>Error::ParseUrl</code> variant","","SNAFU context selector for the <code>Error::PlanStatement</code> variant","","SNAFU context selector for the <code>Error::PrepareFileTable</code> …","","SNAFU context selector for the <code>Error::PrepareImmutableTable</code>…","","SNAFU context selector for the <code>Error::ProjectSchema</code> variant","","SNAFU context selector for the <code>Error::ReadDfRecordBatch</code> …","","SNAFU context selector for the <code>Error::ReadObject</code> variant","","SNAFU context selector for the <code>Error::ReadOrc</code> variant","","SNAFU context selector for the <code>Error::ReadParquet</code> variant","","SNAFU context selector for the <code>Error::ReadRecordBatch</code> …","","SNAFU context selector for the <code>Error::RequestDeletes</code> …","","SNAFU context selector for the <code>Error::RequestInserts</code> …","","","SNAFU context selector for the <code>Error::SchemaExists</code> variant","","SNAFU context selector for the <code>Error::SchemaIncompatible</code> …","","SNAFU context selector for the <code>Error::SchemaNotFound</code> …","","SNAFU context selector for the <code>Error::SplitDelete</code> variant","","SNAFU context selector for the <code>Error::SplitInsert</code> variant","","","SNAFU context selector for the <code>Error::TableAlreadyExists</code> …","","SNAFU context selector for the <code>Error::TableMetadataManager</code> …","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","SNAFU context selector for the <code>Error::Table</code> variant","","SNAFU context selector for the <code>Error::Unexpected</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnsupportedFormat</code> …","","SNAFU context selector for the <code>Error::WriteParquet</code> variant","","SNAFU context selector for the <code>Error::WriteStreamToFile</code> …onsume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeonvert <code>CreateTable</code> statement to <code>CreateExpr</code> gRPC request.","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extracts timestamp from a [HashMap&lt;String, String&gt;] with …","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Converts CopyDatabaseArgument to CopyDatabaseRequest. This …","","","","","","","","","","","","","","","","","Executes all pending inserts all at once, drain pending …","","Allows the file schema is a subset of table","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Converts maybe fully-qualified table name (…","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,0,31,0,31,0,31,0,31,0,31,0,31,31,0,31,0,31,0,0,31,0,31,0,31,0,31,0,31,0,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,31,31,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,62,110,51,63,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,38,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,45,49,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,31,48,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,49,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,50,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,44,46,43,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,93,95,96,31,39,40,52,42,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,31,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,52,41,66,79,87,88,49,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,36,36,54,54,55,55,37,37,56,56,57,57,58,58,59,59,60,60,61,61,62,62,63,63,38,38,39,39,40,40,41,41,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,42,42,43,43,72,72,44,44,73,73,74,74,75,75,76,76,77,77,78,78,79,79,45,45,80,80,81,81,82,82,83,83,46,46,84,84,85,85,86,86,87,87,88,88,89,89,48,48,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,49,49,103,103,104,104,105,105,50,50,106,106,107,107,108,108,109,109,110,110,51,51,52,52,111,111,112,112,113,113,31,31,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,60,50,37,36,54,55,37,56,57,58,59,60,61,62,63,38,39,40,41,64,65,66,67,68,69,70,71,42,43,72,44,73,74,75,76,77,78,79,45,80,81,82,83,46,84,85,86,87,88,89,48,90,91,92,93,94,95,96,97,98,99,100,101,102,49,103,104,105,50,106,107,108,109,110,51,52,111,112,113,31,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,238,240,241,242,243,244,245,246,247,248,249,250,220,223,224,251,252,225,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,226,268,227,269,270,271,272,273,274,275,228,276,277,278,239,279,280,281,282,229,283,230,231,232,284,233,234,285,238,235,236,286,240,287,288,289,290,221,222,291,292,293,294,263,273,261,282,283,230,251,252,291,260,242,243,245,246,247,248,249,250,220,223,253,254,255,256,257,258,259,262,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,221,292,293,294,241,291,295,254,227,276,277,238,249,240,244,0,122,122,122,122,122,122,0,0,0,122,122,122,0,122,122,0,122,122,122,0,0,122,122,122,122,122,122,122,122,122,122,122,122,0,122,122,122,122,122,122,122,122,0,0,136,136,136,136,0,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,0,0,0,136,0,0,0,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,145,147,147,149,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,145,147,147,149,149,145,147,149,145,147,149,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,0,0,0,0,0,0,0,0,0,0,0,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,0,0,0,168,0,168,168,171,0,171,0,0,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,0,296,296,296,296,296,296,296,296,296,0,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,0,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,0,0,0,0,173,175,0,173,175,0,173,175,179,0,0,0,179,0,0,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,0,297,297,297,297,297,297,297,297,297,0,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,0,0,175,175,175,175,0,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,0,175,0,175,175,175,175,175,175,175,175,0,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,0,138,138,138,138,0,138,138,138,138,138,138,138,138,138,138,138,138,138,0,138,0,138,138,138,138,138,138,0,138,138,138,0,138,0,138,138,138,138,138,138,0,138,138,138,138,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,0,138,138,138,138,138,138,0,0,138,138,138,0,138,138,138,138,138,138,138,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,0,217,217,217,217,217,217,217],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1,1]]]],[[]],[[]],0,[[],3],[[],3],[[],3],0,[4],[4],[[5,6,7],[[9,[8]]]],[4],[[]],[[]],[[5,10,10,10],[[9,[11]]]],[[5,6],[[9,[[13,[12,6]]]]]],[[5,14,7],[[9,[15]]]],[[5,16,7],[[9,[15]]]],[[5,17,7],[[9,[4]]]],[[],4],[[]],[[],18],[[],19],[[5,11],[[9,[[21,[20]]]]]],[[]],[[22,23,24],5],[1,[[25,[1,1]]]],0,[[]],[[],[[27,[26]]]],[[],28],[[]],[[5,16,7],[[9,[16]]]],[[],27],[[],27],[[],27],[[],29],[16,9],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[30],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[31,32],[[],33],[31,[[28,[34]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[[35,[20]]]]],31],[[[37,[[35,[20]]]]],31],[[[38,[[35,[20]]]]],31],[[[39,[[35,[20]]]]],31],[[[40,[[35,[20]]]]],31],[[[41,[[35,[20]]]]],31],[[[42,[[35,[20]]]]],31],[[[43,[[35,[20]]]]],31],[[[44,[[35,[20]]]]],31],[[[45,[[35,[20]]]]],31],[[[46,[[35,[20]]]]],31],[[[48,[[35,[47]]]]],31],[[[49,[[35,[4]],[35,[20]],[35,[20]]]]],31],[[[50,[[35,[20]],[35,[20]]]]],31],[[[51,[[35,[20]]]]],31],[[[52,[[35,[20]],[35,[20]]]]],31],[31,[[28,[33]]]],[[[36,[53]]],[[36,[53]]]],[54,54],[55,55],[[[37,[53]]],[[37,[53]]]],[56,56],[57,57],[58,58],[59,59],[[[60,[53]]],[[60,[53]]]],[61,61],[[[62,[53]]],[[62,[53]]]],[[[63,[53]]],[[63,[53]]]],[[[38,[53]]],[[38,[53]]]],[[[39,[53]]],[[39,[53]]]],[[[40,[53]]],[[40,[53]]]],[[[41,[53]]],[[41,[53]]]],[64,64],[65,65],[[[66,[53]]],[[66,[53]]]],[67,67],[68,68],[69,69],[70,70],[71,71],[[[42,[53]]],[[42,[53]]]],[[[43,[53]]],[[43,[53]]]],[72,72],[[[44,[53]]],[[44,[53]]]],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[[[79,[53]]],[[79,[53]]]],[[[45,[53]]],[[45,[53]]]],[80,80],[81,81],[82,82],[83,83],[[[46,[53]]],[[46,[53]]]],[84,84],[85,85],[86,86],[[[87,[53]]],[[87,[53]]]],[[[88,[53]]],[[88,[53]]]],[89,89],[[[48,[53]]],[[48,[53]]]],[90,90],[91,91],[92,92],[[[93,[53]]],[[93,[53]]]],[94,94],[[[95,[53]]],[[95,[53]]]],[[[96,[53]]],[[96,[53]]]],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[[[49,[53,53,53]]],[[49,[53,53,53]]]],[103,103],[104,104],[105,105],[[[50,[53,53]]],[[50,[53,53]]]],[106,106],[107,107],[108,108],[109,109],[[[110,[53]]],[[110,[53]]]],[[[51,[53]]],[[51,[53]]]],[[[52,[53,53]]],[[52,[53,53]]]],[111,111],[112,112],[113,113],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[31,4,[114,[20]]]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[31,10],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[[[36,[[35,[20]]]]],[[27,[31]]]],[[[37,[[35,[20]]]]],[[27,[31]]]],[[[38,[[35,[20]]]]],[[27,[31]]]],[[[39,[[35,[20]]]]],[[27,[31]]]],[[[40,[[35,[20]]]]],[[27,[31]]]],[[[41,[[35,[20]]]]],[[27,[31]]]],[[[42,[[35,[20]]]]],[[27,[31]]]],[[[43,[[35,[20]]]]],[[27,[31]]]],[[[44,[[35,[20]]]]],[[27,[31]]]],[[[45,[[35,[20]]]]],[[27,[31]]]],[[[46,[[35,[20]]]]],[[27,[31]]]],[[[48,[[35,[47]]]]],[[27,[31]]]],[[[49,[[35,[4]],[35,[20]],[35,[20]]]]],[[27,[31]]]],[[[50,[[35,[20]],[35,[20]]]]],[[27,[31]]]],[[[51,[[35,[20]]]]],[[27,[31]]]],[[[52,[[35,[20]],[35,[20]]]]],[[27,[31]]]],0,0,[[[36,[115]],116],117],[[54,116],117],[[55,116],117],[[[37,[115]],116],117],[[56,116],117],[[57,116],117],[[58,116],117],[[59,116],117],[[[60,[115]],116],117],[[61,116],117],[[[62,[115]],116],117],[[[63,[115]],116],117],[[[38,[115]],116],117],[[[39,[115]],116],117],[[[40,[115]],116],117],[[[41,[115]],116],117],[[64,116],117],[[65,116],117],[[[66,[115]],116],117],[[67,116],117],[[68,116],117],[[69,116],117],[[70,116],117],[[71,116],117],[[[42,[115]],116],117],[[[43,[115]],116],117],[[72,116],117],[[[44,[115]],116],117],[[73,116],117],[[74,116],117],[[75,116],117],[[76,116],117],[[77,116],117],[[78,116],117],[[[79,[115]],116],117],[[[45,[115]],116],117],[[80,116],117],[[81,116],117],[[82,116],117],[[83,116],117],[[[46,[115]],116],117],[[84,116],117],[[85,116],117],[[86,116],117],[[[87,[115]],116],117],[[[88,[115]],116],117],[[89,116],117],[[[48,[115]],116],117],[[90,116],117],[[91,116],117],[[92,116],117],[[[93,[115]],116],117],[[94,116],117],[[[95,[115]],116],117],[[[96,[115]],116],117],[[97,116],117],[[98,116],117],[[99,116],117],[[100,116],117],[[101,116],117],[[102,116],117],[[[49,[115,115,115]],116],117],[[103,116],117],[[104,116],117],[[105,116],117],[[[50,[115,115]],116],117],[[106,116],117],[[107,116],117],[[108,116],117],[[109,116],117],[[[110,[115]],116],117],[[[51,[115]],116],117],[[[52,[115,115]],116],117],[[111,116],117],[[112,116],117],[[113,116],117],[[31,116],117],[[31,116],117],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[[35,[20]]]]],31],[54,31],[55,31],[[[37,[[35,[20]]]]],31],[56,31],[57,31],[58,31],[59,31],[[[60,[[35,[118]]]]],31],[61,31],[[[62,[[35,[20]]]]],31],[[[63,[[35,[20]]]]],31],[[[38,[[35,[20]]]]],31],[[[39,[[35,[20]]]]],31],[[[40,[[35,[20]]]]],31],[[[41,[[35,[20]]]]],31],[64,31],[65,31],[[[66,[[35,[20]]]]],31],[67,31],[68,31],[69,31],[70,31],[71,31],[[[42,[[35,[20]]]]],31],[[[43,[[35,[20]]]]],31],[72,31],[[[44,[[35,[20]]]]],31],[73,31],[74,31],[75,31],[76,31],[77,31],[78,31],[[[79,[[35,[20]]]]],31],[[[45,[[35,[20]]]]],31],[80,31],[81,31],[82,31],[83,31],[[[46,[[35,[20]]]]],31],[84,31],[85,31],[86,31],[[[87,[[35,[20]]]]],31],[[[88,[[35,[20]]]]],31],[89,31],[[[48,[[35,[47]]]]],31],[90,31],[91,31],[92,31],[[[93,[[35,[20]]]]],31],[94,31],[[[95,[[35,[20]]]]],31],[[[96,[[35,[20]]]]],31],[97,31],[98,31],[99,31],[100,31],[101,31],[102,31],[[[49,[[35,[4]],[35,[20]],[35,[20]]]]],31],[103,31],[104,31],[105,31],[[[50,[[35,[20]],[35,[20]]]]],31],[106,31],[107,31],[108,31],[109,31],[[[110,[[35,[20]]]]],31],[[[51,[[35,[20]]]]],31],[[[52,[[35,[20]],[35,[20]]]]],31],[111,31],[112,31],[113,31],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[31,[[28,[119]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],0,0,0,[120],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[28,[33]]]],[31,121],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[30],[1,[[2,[1,1]]]],[[]],[[]],[122,122],[[]],[[[114,[123]],[124,[20]]],[[9,[[114,[125]]]]]],[[[124,[126]],10],[[9,[[114,[123]]]]]],[[[124,[126]],10,[124,[20]]],[[9,[[114,[125]]]]]],[[],3],[[],3],[[],3],[[127,7],[[9,[128]]]],[[122,129,[124,[130]],10],[[9,[128]]]],[[122,129,[124,[131]],10],[[9,[128]]]],[[132,7],[[9,[128]]]],[4],[4],[4],[[[124,[126]],[124,[133]]],[[9,[[114,[20]]]]]],[[[124,[133]]],[[9,[20]]]],[[122,116],117],[[]],[[]],[[]],[[],4],[[]],[[],18],[[],19],[[]],[1,[[25,[1,1]]]],[[]],[[],[[27,[26]]]],[[134,7],[[9,[135]]]],[[]],[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[[]],0,0,[[136,137,11,7,138],9],[1,[[2,[1,1]]]],[[]],[[]],[[129,[124,[130]]],[[9,[128]]]],0,[[],3],[[],3],[[],3],[[136,139,7,138],9],[[136,137,7,138],9],0,[4],[4],[[136,140,7],[[9,[8]]]],[4],[[]],[[]],[[136,10,10,10],[[9,[[28,[11]]]]]],[[136,140],[[9,[[13,[12,140]]]]]],[[136,141,7,138],[[9,[15]]]],[[136,139,7,138],[[9,[15]]]],[[136,142,7],[[9,[15]]]],[[136,143,7],[[9,[4]]]],[[],4],[[]],[[],18],[[],19],[[]],[[22,23,24],136],[1,[[25,[1,1]]]],0,[[]],[[],[[27,[26]]]],[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[139,9],[[137,11],9],[[[124,[130]],144],9],[[]],0,0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[4],[145,146],[147,148],[4],[149,148],[4],[4],[4],[4],[4],[4],[4],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[]],[[]],[[]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[1,[[25,[1,1]]]],[[]],[[]],[[]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],29],[[],29],[[],29],[[]],[[]],[[]],0,[1,[[2,[1,1]]]],[[]],[[]],[[150,6],151],[[150,140],151],[[],3],[[],3],[[],3],[4],[4],[4],[[]],[[]],0,[[],4],[[]],[[],18],[[],19],[[]],[152,150],[1,[[25,[1,1]]]],[[]],[[],[[27,[26]]]],[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[[]],0,0,0,[[153,[13,[20,154]]],[[9,[[114,[130]]]]]],[[[114,[131]],155],[[9,[156]]]],[157,[[9,[158]]]],0,[[131,[124,[159]]],9],[[[13,[20,154]]],[[9,[4]]]],[[153,10],[[9,[160]]]],0,[1,[[2,[1,1]]]],[[]],[[]],[[],3],[[],3],[[],3],[4],[4],[4],[[]],[[]],[[],4],[[]],[[],18],[[],19],[[]],[161,162],[1,[[25,[1,1]]]],[[162,163,156],[[9,[[114,[164]]]]]],[[162,163,156],[[9,[[114,[165]]]]]],0,[[]],[[],[[27,[26]]]],[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1,1]]]],[[]],[[]],[[],3],[[],3],[[],3],[14,[[9,[16]]]],[4],[4],[4],[[]],[[]],[[],4],[[]],[[],18],[[],19],[[]],[1,[[25,[1,1]]]],[166,[[9,[167]]]],[[]],[[],[[27,[26]]]],[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[[]],0,[1,[[2,[1,1]]]],[[]],[[]],0,[[],3],[[],3],[[],3],[[168,16],[[9,[6]]]],0,[4],[4],[4],[[]],[[]],[[168,10],[[9,[11]]]],[[],4],[[]],[[],18],[[],19],[[]],[[169,161,170],168],[1,[[25,[1,1]]]],0,[[]],[[],[[27,[26]]]],[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[[]],0,[1,[[2,[1,1]]]],[[]],[[]],[[],3],[[],3],[[],3],[[171,17],[[9,[6]]]],[4],[4],[4],[[]],[[]],[[],4],[[]],[[],18],[[],19],[[]],[[153,161],171],[1,[[25,[1,1]]]],0,[[]],[[],[[27,[26]]]],0,[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[[]],0,0,0,0,0,0,0,0,0,[157,[[9,[158]]]],0,0,0,0,[[153,10],[[9,[160]]]],0,0,0,0,[1,[[2,[1,1]]]],[[]],[[]],[[],3],[[],3],[[],3],[141,[[9,[139]]]],[4],[4],[4],[[]],[[]],[[],4],[[]],[[],18],[[],19],[[]],[1,[[25,[1,1]]]],[172,[[9,[137]]]],[[]],[[],[[27,[26]]]],[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[[]],0,[1,[[2,[1,1]]]],[[]],[[]],0,[[],3],[[],3],[[],3],[[173,139],[[9,[140]]]],0,[4],[4],[4],[[]],[[]],[[173,10],[[9,[11]]]],[[],4],[[]],[[],18],[[],19],[[]],[[169,161,170],173],[1,[[25,[1,1]]]],0,[[]],[[],[[27,[26]]]],[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[[]],0,0,[1,[[2,[1,1]]]],[[]],[[]],0,[[142,174],[[114,[20]]]],[[],3],[[],3],[[],3],[[175,142],[[9,[140]]]],0,[4],[4],[4],[[]],[[]],[[175,176],9],[[175,10,10,10],[[9,[11]]]],[[],4],[[]],[[],18],[[],19],[[]],[[169,161,170],175],[1,[[25,[1,1]]]],0,[177,19],[[]],[[123,177],[[9,[178]]]],[[],[[27,[26]]]],[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[[]],0,[1,[[2,[1,1]]]],[[]],[[]],[[],3],[[],3],[[],3],[[179,143],[[9,[140]]]],[4],[4],[4],[[]],[[]],[[],4],[[]],[[],18],[[],19],[[]],[[153,161],179],[1,[[25,[1,1]]]],0,[[]],[[],[[27,[26]]]],0,[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[[]],0,[30],[[138,134,7],[[9,[15]]]],[[138,135],[[9,[15]]]],[1,[[2,[1,1]]]],0,[[]],[[]],[[138,[0,[180,181]],10,182],[[9,[183]]]],[[138,47,184,10,182,[114,[4]]],[[9,[183]]]],0,[138,22],0,[138,138],[[]],[[],3],[[],3],[[],3],[[138,185],[[9,[15]]]],0,[[138,186,7],[[9,[4]]]],0,[[138,186,7],[[9,[4]]]],[[138,10,10,19],[[9,[15]]]],[[138,127,7],[[9,[11]]]],[[138,132,7],[[9,[11]]]],[[138,128,[28,[187]]],[[9,[11]]]],[[138,128,[114,[188]],189],[[9,[190]]]],0,0,[4],[4],0,[[138,191,7],[[9,[15]]]],0,[4],[[138,192],[[9,[15]]]],[[138,192,193],[[9,[190]]]],[[138,194,7],[[9,[15]]]],[[138,195,7],[[9,[15]]]],[[138,196,7],[[9,[15]]]],[[197,10],[[9,[[28,[198]]]]]],[[]],[[]],[[]],[[138,129],[[9,[11]]]],[[176,7],9],[[138,47,184,10],[[9,[182]]]],[[],4],[[138,[199,[142]],7],[[9,[15]]]],0,[[]],[[],18],[[],19],[[]],[[138,186],9],[[22,200,201,202,203,204],138],[1,[[25,[1,1]]]],0,[[138,195,7],[[9,[205]]]],[[138,195,7],[[9,[15]]]],0,[[]],0,[[138,192,11,7],[[9,[15]]]],[[138,206,7],[[9,[15]]]],[[138,207,7],[[9,[15]]]],[[138,208,47,184,10],[[9,[4]]]],[[],[[27,[26]]]],0,[[209,7],[[9,[185]]]],[[210,7],[[9,[186]]]],[[]],[[],28],[[]],0,[[138,192],[[9,[15]]]],[[138,192,193],[[9,[190]]]],[[],27],[[],27],[[],27],[[],29],[[138,193,[211,[153]],135],9],[[]],0,0,0,[[[114,[212]],4],[[9,[4]]]],[[182,182],9],[[182,182]],[[128,[114,[20]],213],[[9,[189]]]],[[[28,[187]]],[[9,[[114,[20]]]]]],[[128,[28,[187]],[124,[20]]],[[9,[[114,[[114,[214]]]]]]]],[[215,213],215],[[128,[28,[187]]],9],[[128,[124,[20]]],9],[[[114,[216]]],[[9,[[28,[187]]]]]],0,[1,[[2,[1,1]]]],[[]],[[]],[[],3],[[],3],[[],3],[[217,17,7],[[218,[[199,[212]]]]]],0,[4],[4],[4],[[]],[[]],[[],4],[[217,143,7],[[218,[[199,[212]]]]]],0,[[]],[[],18],[[],19],[[]],[[204,219],217],[1,[[25,[1,1]]]],[[]],[[],[[27,[26]]]],[[176,7],9],[[],28],[[]],[[],27],[[],27],[[],27],[[],29],[[]]],"c":[],"p":[[8,"Policy"],[3,"And"],[3,"Compat"],[15,"usize"],[3,"Deleter"],[3,"DeleteRequests"],[6,"QueryContextRef"],[6,"AffectedRows"],[6,"Result"],[15,"str"],[6,"TableRef"],[3,"Peer"],[3,"HashMap"],[3,"DeleteRequests"],[4,"Output"],[3,"RowDeleteRequests"],[3,"DeleteRequest"],[3,"Request"],[15,"bool"],[3,"String"],[3,"HashSet"],[6,"CatalogManagerRef"],[6,"PartitionRuleManagerRef"],[6,"DatanodeManagerRef"],[3,"Or"],[4,"CNil"],[4,"Result"],[4,"Option"],[3,"TypeId"],[3,"Private"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"TableAlreadyExistsSnafu"],[3,"UnexpectedSnafu"],[3,"InvalidSqlSnafu"],[3,"InvalidInsertRequestSnafu"],[3,"InvalidDeleteRequestSnafu"],[3,"TableNotFoundSnafu"],[3,"SchemaNotFoundSnafu"],[3,"SchemaExistsSnafu"],[3,"ColumnNotFoundSnafu"],[3,"NotSupportedSnafu"],[3,"IllegalPrimaryKeysDefSnafu"],[4,"Format"],[3,"UnsupportedFormatSnafu"],[3,"InvalidSchemaSnafu"],[3,"InvalidCopyParameterSnafu"],[3,"ColumnNoneDefaultValueSnafu"],[3,"InvalidPartitionColumnsSnafu"],[8,"Clone"],[3,"InvalidateTableCacheSnafu"],[3,"ExecuteDdlSnafu"],[3,"ExternalSnafu"],[3,"RequestInsertsSnafu"],[3,"RequestDeletesSnafu"],[3,"ParseSqlSnafu"],[3,"ConvertSqlValueSnafu"],[3,"ColumnDataTypeSnafu"],[3,"InvalidColumnDefSnafu"],[3,"ConvertColumnDefaultConstraintSnafu"],[3,"JoinTaskSnafu"],[3,"CatalogSnafu"],[3,"FindTablePartitionRuleSnafu"],[3,"SplitInsertSnafu"],[3,"SplitDeleteSnafu"],[3,"FindRegionLeaderSnafu"],[3,"CreateTableInfoSnafu"],[3,"BuildCreateExprOnInsertionSnafu"],[3,"TableSnafu"],[3,"ExecuteStatementSnafu"],[3,"PlanStatementSnafu"],[3,"ParseQuerySnafu"],[3,"ExecLogicalPlanSnafu"],[3,"BuildDfLogicalPlanSnafu"],[3,"AlterExprToRequestSnafu"],[3,"BuildTableMetaSnafu"],[3,"FindNewColumnsOnInsertionSnafu"],[3,"IntoVectorsSnafu"],[3,"DeserializePartitionSnafu"],[3,"DescribeStatementSnafu"],[3,"UnrecognizedTableOptionSnafu"],[3,"MissingTimeIndexColumnSnafu"],[3,"BuildRegexSnafu"],[3,"CopyTableSnafu"],[3,"InsertSnafu"],[3,"ParseUrlSnafu"],[3,"ParseFileFormatSnafu"],[3,"BuildBackendSnafu"],[3,"ListObjectsSnafu"],[3,"InferSchemaSnafu"],[3,"BuildCsvConfigSnafu"],[3,"WriteStreamToFileSnafu"],[3,"ReadObjectSnafu"],[3,"ReadDfRecordBatchSnafu"],[3,"ReadParquetSnafu"],[3,"ReadOrcSnafu"],[3,"BuildParquetRecordBatchStreamSnafu"],[3,"BuildFileStreamSnafu"],[3,"WriteParquetSnafu"],[3,"ProjectSchemaSnafu"],[3,"EncodeJsonSnafu"],[3,"PrepareImmutableTableSnafu"],[3,"TableMetadataManagerSnafu"],[3,"ReadRecordBatchSnafu"],[3,"BuildColumnVectorsSnafu"],[3,"MissingInsertBodySnafu"],[3,"ColumnDefaultValueSnafu"],[3,"PrepareFileTableSnafu"],[3,"InferFileTableSchemaSnafu"],[3,"SchemaIncompatibleSnafu"],[3,"Vec"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Value"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"CreateExprFactory"],[3,"ColumnSchema"],[15,"slice"],[3,"ColumnDef"],[3,"ColumnDef"],[3,"CreateExternalTable"],[3,"CreateTableExpr"],[3,"TableReference"],[3,"ColumnSchema"],[3,"Column"],[3,"CreateTable"],[4,"TableConstraint"],[3,"AlterTable"],[3,"AlterExpr"],[3,"Inserter"],[3,"RowInsertRequest"],[3,"StatementExecutor"],[3,"RowInsertRequests"],[3,"InsertRequests"],[3,"InsertRequests"],[3,"Insert"],[3,"InsertRequest"],[3,"Schema"],[3,"DIST_CREATE_TABLE"],[3,"Histogram"],[3,"DIST_INGEST_ROW_COUNT"],[6,"IntCounter"],[3,"DIST_DELETE_ROW_COUNT"],[3,"RegionRequestFactory"],[3,"RegionRequest"],[3,"RegionRequestHeader"],[3,"TableInfo"],[6,"VectorRef"],[15,"u32"],[3,"Rows"],[4,"ConcreteDataType"],[4,"ColumnDataType"],[3,"Row"],[4,"SemanticType"],[3,"PartitionRuleManager"],[3,"Partitioner"],[6,"TableId"],[3,"DeleteRequest"],[3,"InsertRequest"],[3,"DeleteRequest"],[3,"RowDeleteRequest"],[3,"RowToRegion"],[8,"CatalogManager"],[3,"QueryContext"],[3,"TableToRegion"],[3,"InsertRequest"],[3,"RowToRegion"],[6,"SchemaRef"],[3,"StatementToRegion"],[3,"ObjectName"],[4,"Value"],[3,"Value"],[3,"TableToRegion"],[8,"FileOpener"],[8,"Send"],[6,"SchemaRef"],[6,"SendableRecordBatchStream"],[3,"Operator"],[3,"CopyDatabaseRequest"],[3,"CopyTableRequest"],[3,"Partitions"],[3,"Partition"],[3,"RawTableInfo"],[3,"SubmitDdlTaskResponse"],[3,"DescribeTable"],[3,"TableName"],[6,"TableId"],[4,"Statement"],[4,"QueryStatement"],[4,"Tql"],[3,"OptionMap"],[3,"Timestamp"],[3,"Box"],[6,"QueryEngineRef"],[6,"DdlTaskExecutorRef"],[6,"KvBackendRef"],[6,"CacheInvalidatorRef"],[6,"InserterRef"],[4,"LogicalPlan"],[3,"ShowDatabases"],[3,"ShowTables"],[6,"SendableRecordBatchStream"],[3,"CopyDatabaseArgument"],[4,"CopyTable"],[3,"Arc"],[8,"Future"],[3,"SchemaNameValue"],[4,"PartitionBound"],[3,"TableOptions"],[3,"PartitionInfo"],[3,"TableMutationOperator"],[3,"Pin"],[6,"DeleterRef"],[13,"InvalidColumnDef"],[13,"ColumnDefaultValue"],[13,"ColumnNoneDefaultValue"],[13,"ConvertColumnDefaultConstraint"],[13,"InvalidSql"],[13,"JoinTask"],[13,"BuildDfLogicalPlan"],[13,"BuildTableMeta"],[13,"BuildRegex"],[13,"BuildCsvConfig"],[13,"ReadObject"],[13,"ReadDfRecordBatch"],[13,"ReadParquet"],[13,"BuildParquetRecordBatchStream"],[13,"BuildFileStream"],[13,"ProjectSchema"],[13,"EncodeJson"],[13,"NotSupported"],[13,"InvalidSchema"],[13,"UnsupportedFormat"],[13,"InvalidCopyParameter"],[13,"TableAlreadyExists"],[13,"InvalidateTableCache"],[13,"ExecuteDdl"],[13,"Unexpected"],[13,"External"],[13,"RequestInserts"],[13,"RequestDeletes"],[13,"ParseSql"],[13,"ConvertSqlValue"],[13,"ColumnDataType"],[13,"InvalidInsertRequest"],[13,"InvalidDeleteRequest"],[13,"Catalog"],[13,"FindTablePartitionRule"],[13,"SplitInsert"],[13,"SplitDelete"],[13,"FindRegionLeader"],[13,"CreateTableInfo"],[13,"BuildCreateExprOnInsertion"],[13,"SchemaNotFound"],[13,"SchemaExists"],[13,"Table"],[13,"ColumnNotFound"],[13,"ExecuteStatement"],[13,"PlanStatement"],[13,"ParseQuery"],[13,"ExecLogicalPlan"],[13,"AlterExprToRequest"],[13,"FindNewColumnsOnInsertion"],[13,"IntoVectors"],[13,"DeserializePartition"],[13,"DescribeStatement"],[13,"IllegalPrimaryKeysDef"],[13,"UnrecognizedTableOption"],[13,"MissingTimeIndexColumn"],[13,"CopyTable"],[13,"Insert"],[13,"ParseUrl"],[13,"ParseFileFormat"],[13,"BuildBackend"],[13,"ListObjects"],[13,"InferSchema"],[13,"WriteStreamToFile"],[13,"ReadOrc"],[13,"WriteParquet"],[13,"PrepareImmutableTable"],[13,"TableMetadataManager"],[13,"ReadRecordBatch"],[13,"BuildColumnVectors"],[13,"MissingInsertBody"],[13,"InvalidPartitionColumns"],[13,"PrepareFileTable"],[13,"InferFileTableSchema"],[13,"SchemaIncompatible"],[13,"TableNotFound"],[3,"ColumnToRow"],[3,"ColumnToRow"]]},\
"partition":{"doc":"","t":"CCAAAAAAADLLLLMLLLLLLLLMMLLLLLLLLLMLLLLLLMLNDNDENDNDNNDDNDNDNDNDNDNDNDNDNDGNDNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDGIGLLLLLLLLLLLLLLLLLLFLLLLLLLLLLMLLLLLLKFLLLMFLMLLLLLLLLLLLLDMLLLLLLLLLLLLLLLLLLLLLNEDDIGNKLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLMLLMKLMLLLLLLLLLLLLLLLLLLLMLLLDLLLLLMLMLLLLLLLLLLLLLLLLLLMLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLL","n":["PartitionRule","PartitionRuleRef","columns","error","manager","metrics","partition","range","splitter","RangeColumnsPartitionRule","as_any","borrow","borrow_mut","column_list","column_list","compat","compat_mut","compat_ref","deref","deref_mut","drop","find_region","find_regions_by_exprs","first_column_bounds","first_column_regions","from","from_subset","init","into","into_request","is_in_subset","new","partition_columns","regions","regions","to_subset","to_subset_unchecked","try_from","try_into","type_id","value_lists","value_lists","vzip","ConvertScalarValue","ConvertScalarValueSnafu","DeserializeJson","DeserializeJsonSnafu","Error","FindDatanode","FindDatanodeSnafu","FindLeader","FindLeaderSnafu","FindRegion","FindRegionRoutes","FindRegionRoutesSnafu","FindRegionSnafu","FindRegions","FindRegionsSnafu","FindTableRoutes","FindTableRoutesSnafu","GetCache","GetCacheSnafu","InvalidDeleteRequest","InvalidDeleteRequestSnafu","InvalidInsertRequest","InvalidInsertRequestSnafu","InvalidTableRouteData","InvalidTableRouteDataSnafu","MissingDefaultValue","MissingDefaultValueSnafu","RegionKeysSize","RegionKeysSizeSnafu","RequestMeta","RequestMetaSnafu","Result","SerializeJson","SerializeJsonSnafu","TableRouteManager","TableRouteManagerSnafu","actual","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","expect","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","filters","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","next","provide","reason","reason","reason","region","region_id","region_id","source","status_code","table_id","table_id","table_id","table_id","table_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","column","err_msg","err_msg","error","error","expect","filters","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","reason","reason","reason","region","region_id","region_id","source","source","source","table_id","table_id","table_id","table_id","table_id","value","PartitionInfo","PartitionRuleManager","PartitionRuleManagerRef","TableRouteCacheInvalidator","TableRouteCacheInvalidatorRef","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","find_region_datanodes","find_region_leader","find_regions0","find_regions_by_filters","find_table_partition_rule","find_table_partitions","find_table_region_leaders","find_table_route","fmt","from","from","from_subset","from_subset","id","init","init","into","into","into_request","into_request","invalidate_table_route","is_compare_op","is_in_subset","is_in_subset","new","partition","reverse_operator","split_rows","table_route_manager","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","METRIC_TABLE_ROUTE_GET","__private_field","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","MaxValue","PartitionBound","PartitionDef","PartitionExpr","PartitionRule","PartitionRuleRef","Value","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","column","compare","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_region","find_regions_by_exprs","fmt","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","new","new","op","partial_cmp","partition_bounds","partition_bounds","partition_columns","partition_columns","partition_columns","serialize","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","value","vzip","vzip","vzip","RangePartitionRule","all_regions","as_any","borrow","borrow_mut","bounds","bounds","column_name","column_name","compat","compat_mut","compat_ref","deref","deref_mut","deserialize","drop","find_region","find_regions_by_exprs","fmt","from","from_subset","init","into","into_request","is_in_subset","new","partition_columns","regions","serialize","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","RowSplitter","SplitReadRowHelper","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","iter_partition_values","new","new","partition_cols_indexes","partition_rule","partition_rule","rows","schema","split","split_rows","split_to_regions","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"partition"],[9,"partition::columns"],[43,"partition::error"],[596,"partition::error::Error"],[635,"partition::manager"],[697,"partition::metrics"],[720,"partition::partition"],[826,"partition::range"],[861,"partition::splitter"]],"d":["","","","","","","","","","A RangeColumnsPartitionRule is very similar to …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::ConvertScalarValue</code> …","","SNAFU context selector for the <code>Error::DeserializeJson</code> …","","","SNAFU context selector for the <code>Error::FindDatanode</code> variant","","SNAFU context selector for the <code>Error::FindLeader</code> variant","","","SNAFU context selector for the <code>Error::FindRegionRoutes</code> …","SNAFU context selector for the <code>Error::FindRegion</code> variant","","SNAFU context selector for the <code>Error::FindRegions</code> variant","","SNAFU context selector for the <code>Error::FindTableRoutes</code> …","","SNAFU context selector for the <code>Error::GetCache</code> variant","","SNAFU context selector for the <code>Error::InvalidDeleteRequest</code> …","","SNAFU context selector for the <code>Error::InvalidInsertRequest</code> …","","SNAFU context selector for the <code>Error::InvalidTableRouteData</code>…","","SNAFU context selector for the <code>Error::MissingDefaultValue</code> …","","SNAFU context selector for the <code>Error::RegionKeysSize</code> …","","SNAFU context selector for the <code>Error::RequestMeta</code> variant","","","SNAFU context selector for the <code>Error::SerializeJson</code> variant","","SNAFU context selector for the <code>Error::TableRouteManager</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PartitionRuleManager manages the table routes and …","","","","","","","","","","","","","","","","","","","","Find datanodes of corresponding regions of given table.","","","Find regions in partition rule by filters.","Get partition rule of given table.","","Find all leader peers of given table.","Find table route of given table name.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","The right bound(exclusive) of partition range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finds the target region by the partition values.","Finds the target regions by the partition expressions.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","RangePartitionRule manages the distribution of partitions …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,18,0,18,0,0,18,0,18,0,18,18,0,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,0,18,0,18,0,29,18,18,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,22,24,25,27,28,29,30,32,33,34,35,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,28,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,22,35,29,22,24,25,27,28,29,30,32,33,34,35,37,32,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,18,18,30,33,34,24,27,37,18,18,24,25,27,35,37,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,43,38,22,40,24,25,27,41,42,28,29,30,32,33,34,35,43,37,18,76,77,78,79,80,81,76,82,83,78,84,85,86,87,80,81,76,88,82,89,90,79,91,92,88,89,90,85,87,92,83,84,91,85,86,87,79,92,91,0,0,0,0,0,52,57,52,57,52,57,52,57,52,57,52,57,52,57,52,57,52,52,0,52,52,52,52,52,57,52,57,52,57,57,52,57,52,57,52,57,93,0,52,57,52,57,0,52,52,52,57,52,57,52,57,52,57,52,57,52,57,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,14,0,0,0,0,0,14,94,14,69,11,14,69,11,14,14,14,11,14,14,69,11,14,69,11,14,69,11,14,69,11,14,69,11,14,14,69,11,14,11,14,14,14,14,14,11,11,11,11,11,94,94,14,69,11,14,69,11,14,14,69,11,14,69,11,14,69,11,14,69,11,14,69,11,69,11,11,14,69,69,94,69,69,14,14,14,69,11,14,69,11,14,69,69,11,14,69,11,14,69,11,11,11,14,69,11,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,75,73,75,73,75,73,75,73,75,73,75,73,75,73,75,73,75,73,75,73,75,73,75,73,75,73,75,73,73,75,73,73,75,73,73,73,75,73,73,75,73,75,73,75,73,75,73,75,73,75,73],"f":[0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[1,[[4,[3]]]],0,[[],5],[[],5],[[],5],[6],[6],[6],[[1,[8,[7]]],[[10,[9]]]],[[1,[8,[11]]],[[10,[[4,[9]]]]]],0,0,[[]],[[]],[[],6],[[]],[[],12],[[],13],[[[4,[3]],[4,[[4,[14]]]],[4,[9]]],1],[1,[[4,[3]]]],[1,[[4,[9]]]],0,[[],15],[[]],[[],16],[[],16],[[],17],[1,[[4,[[4,[14]]]]]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,2],[[],19],[18,[[15,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[[21,[3]]]]],18],[[[24,[[21,[23]],[21,[9]]]]],18],[[[25,[[21,[23]]]]],18],[[[27,[[21,[23]],[21,[26]]]]],18],[[[28,[[21,[3]]]]],18],[[[29,[[21,[6]],[21,[6]]]]],18],[[[30,[[21,[3]]]]],18],[[[32,[[21,[[4,[31]]]]]]],18],[[[33,[[21,[3]]]]],18],[[[34,[[21,[3]]]]],18],[[[35,[[21,[23]],[21,[3]]]]],18],[[[37,[[21,[23]],[21,[36]]]]],18],[18,[[15,[19]]]],[38,38],[[[22,[39]]],[[22,[39]]]],[40,40],[[[24,[39,39]]],[[24,[39,39]]]],[[[25,[39]]],[[25,[39]]]],[[[27,[39,39]]],[[27,[39,39]]]],[41,41],[42,42],[[[28,[39]]],[[28,[39]]]],[[[29,[39,39]]],[[29,[39,39]]]],[[[30,[39]]],[[30,[39]]]],[[[32,[39]]],[[32,[39]]]],[[[33,[39]]],[[33,[39]]]],[[[34,[39]]],[[34,[39]]]],[[[35,[39,39]]],[[35,[39,39]]]],[[[43,[39]]],[[43,[39]]]],[[[37,[39,39]]],[[37,[39,39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[18,6,[4,[3]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[18,44],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,0,0,[[[22,[[21,[3]]]]],[[16,[18]]]],[[[24,[[21,[23]],[21,[9]]]]],[[16,[18]]]],[[[25,[[21,[23]]]]],[[16,[18]]]],[[[27,[[21,[23]],[21,[26]]]]],[[16,[18]]]],[[[28,[[21,[3]]]]],[[16,[18]]]],[[[29,[[21,[6]],[21,[6]]]]],[[16,[18]]]],[[[30,[[21,[3]]]]],[[16,[18]]]],[[[32,[[21,[[4,[31]]]]]]],[[16,[18]]]],[[[33,[[21,[3]]]]],[[16,[18]]]],[[[34,[[21,[3]]]]],[[16,[18]]]],[[[35,[[21,[23]],[21,[3]]]]],[[16,[18]]]],[[[37,[[21,[23]],[21,[36]]]]],[[16,[18]]]],0,[[38,45],46],[[[22,[47]],45],46],[[40,45],46],[[[24,[47,47]],45],46],[[[25,[47]],45],46],[[[27,[47,47]],45],46],[[41,45],46],[[42,45],46],[[[28,[47]],45],46],[[[29,[47,47]],45],46],[[[30,[47]],45],46],[[[32,[47]],45],46],[[[33,[47]],45],46],[[[34,[47]],45],46],[[[35,[47,47]],45],46],[[[43,[47]],45],46],[[[37,[47,47]],45],46],[[18,45],46],[[18,45],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,18],[[[22,[[21,[3]]]]],18],[40,18],[[[24,[[21,[23]],[21,[9]]]]],18],[[[25,[[21,[23]]]]],18],[[[27,[[21,[23]],[21,[26]]]]],18],[41,18],[42,18],[[[28,[[21,[3]]]]],18],[[[29,[[21,[6]],[21,[6]]]]],18],[[[30,[[21,[3]]]]],18],[[[32,[[21,[[4,[31]]]]]]],18],[[[33,[[21,[3]]]]],18],[[[34,[[21,[3]]]]],18],[[[35,[[21,[23]],[21,[3]]]]],18],[[[43,[[21,[48]]]]],18],[[[37,[[21,[23]],[21,[36]]]]],18],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[18,[[15,[49]]]],[50],0,0,0,0,0,0,[18,[[15,[19]]]],[18,51],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[6],[6],[6],[6],[6],[6],[[52,23,[4,[9]]],[[10,[[54,[53,[4,[9]]]]]]]],[[52,36],[[10,[53]]]],[[55,31],[[10,[[56,[9]]]]]],[[52,55,[8,[31]]],[[10,[[4,[9]]]]]],[[52,23],[[10,[55]]]],[[52,23],[[10,[[4,[57]]]]]],[[52,23],[[10,[[4,[53]]]]]],[[52,23],[[10,[58]]]],[[57,45],46],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[]],[[]],[[],12],[[],12],[23,[[61,[[60,[59]]]]]],[62,13],[[],13],[[],13],[63,52],0,[62,62],[[52,23,64],[[10,[[54,[9,64]]]]]],0,[[],15],[[],15],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[]],[[]],0,0,[[]],[[]],[[],5],[[],5],[[],5],[6],[65,66],[6],[6],[[]],[[]],[[],6],[[]],[[],12],[[],13],[[],15],[[]],[[],16],[[],16],[[],17],[[]],0,0,0,0,0,0,0,[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[14,14],[[]],[[14,14],67],0,[[],67],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[6],[6],[6],[6],[6],[6],[68,[[16,[14]]]],[6],[6],[6],[[14,14],13],[[11,11],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[8,[7]]],[[10,[9]]]],[[[8,[11]]],[[10,[[4,[9]]]]]],[[14,45],46],[[69,45],46],[[11,45],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[[4,[3]],[4,[14]]],69],[[[21,[3]],62,7],11],0,[[14,14],[[15,[67]]]],[69,[[4,[14]]]],0,[[],[[4,[3]]]],[69,[[4,[3]]]],0,[[14,70],16],[[]],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[],16],[[],16],[71,[[10,[69]]]],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[11,7],0,[[]],[[]],[[]],0,[72,[[4,[9]]]],[72,2],[[]],[[]],[72,[[4,[7]]]],0,[72,3],0,[[],5],[[],5],[[],5],[6],[6],[68,[[16,[72]]]],[6],[[72,[8,[7]]],[[16,[9,18]]]],[[72,[8,[11]]],[[16,[[4,[9]],18]]]],[[72,45],46],[[]],[[]],[[],6],[[]],[[],12],[[],13],[[[21,[3]],[4,[7]],[4,[9]]],72],[72,[[4,[3]]]],0,[[72,70],16],[[],15],[[]],[[],16],[[],16],[[],17],[[]],0,0,[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[]],[[],6],[[],6],[[]],[[]],[[],12],[[],12],[[],13],[[],13],[73,74],[55,75],[[64,55],73],0,0,0,0,0,[[75,64],[[10,[[54,[9,64]]]]]],[73,[[10,[[54,[9,64]]]]]],[73,[[10,[[54,[9,[4,[6]]]]]]]],[[],15],[[],15],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[]],[[]]],"c":[],"p":[[3,"RangeColumnsPartitionRule"],[8,"Any"],[3,"String"],[3,"Vec"],[3,"Compat"],[15,"usize"],[4,"Value"],[15,"slice"],[6,"RegionNumber"],[6,"Result"],[3,"PartitionExpr"],[3,"Request"],[15,"bool"],[4,"PartitionBound"],[4,"Option"],[4,"Result"],[3,"TypeId"],[4,"Error"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"GetCacheSnafu"],[6,"TableId"],[3,"FindDatanodeSnafu"],[3,"FindTableRoutesSnafu"],[15,"u64"],[3,"FindRegionRoutesSnafu"],[3,"MissingDefaultValueSnafu"],[3,"RegionKeysSizeSnafu"],[3,"FindRegionSnafu"],[3,"Expr"],[3,"FindRegionsSnafu"],[3,"InvalidInsertRequestSnafu"],[3,"InvalidDeleteRequestSnafu"],[3,"InvalidTableRouteDataSnafu"],[3,"RegionId"],[3,"FindLeaderSnafu"],[3,"TableRouteManagerSnafu"],[8,"Clone"],[3,"RequestMetaSnafu"],[3,"SerializeJsonSnafu"],[3,"DeserializeJsonSnafu"],[3,"ConvertScalarValueSnafu"],[15,"str"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"ScalarValue"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"PartitionRuleManager"],[3,"Peer"],[3,"HashMap"],[6,"PartitionRuleRef"],[3,"HashSet"],[3,"PartitionInfo"],[3,"RegionRoutes"],[8,"Future"],[3,"Box"],[3,"Pin"],[4,"Operator"],[6,"KvBackendRef"],[3,"Rows"],[3,"METRIC_TABLE_ROUTE_GET"],[3,"Histogram"],[4,"Ordering"],[8,"Deserializer"],[3,"PartitionDef"],[8,"Serializer"],[3,"Partition"],[3,"RangePartitionRule"],[3,"SplitReadRowHelper"],[8,"Iterator"],[3,"RowSplitter"],[13,"RegionKeysSize"],[13,"MissingDefaultValue"],[13,"GetCache"],[13,"InvalidTableRouteData"],[13,"SerializeJson"],[13,"DeserializeJson"],[13,"FindRegions"],[13,"TableRouteManager"],[13,"RequestMeta"],[13,"FindDatanode"],[13,"FindTableRoutes"],[13,"FindRegionRoutes"],[13,"FindRegion"],[13,"InvalidInsertRequest"],[13,"InvalidDeleteRequest"],[13,"ConvertScalarValue"],[13,"FindLeader"],[8,"TableRouteCacheInvalidator"],[8,"PartitionRule"]]},\
"plugins":{"doc":"","t":"AAAFFFFFFFFFFFF","n":["datanode","frontend","meta_srv","setup_datanode_plugins","setup_frontend_plugins","setup_meta_srv_plugins","start_datanode_plugins","start_frontend_plugins","start_meta_srv_plugins","setup_datanode_plugins","start_datanode_plugins","setup_frontend_plugins","start_frontend_plugins","setup_meta_srv_plugins","start_meta_srv_plugins"],"q":[[0,"plugins"],[9,"plugins::datanode"],[11,"plugins::frontend"],[13,"plugins::meta_srv"]],"d":["","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,[1,[[3,[2]]]],[4,[[5,[2]]]],[6,[[7,[2]]]],[2,3],[2,5],[2,7],[1,[[3,[2]]]],[2,3],[4,[[5,[2]]]],[2,5],[6,[[7,[2]]]],[2,7]],"c":[],"p":[[3,"DatanodeOptions"],[3,"Plugins"],[6,"Result"],[3,"FrontendOptions"],[6,"Result"],[3,"MetaSrvOptions"],[6,"Result"]]},\
"promql":{"doc":"","t":"AAAAAANDNDNDNDNDENDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDDDDDDDGDDDDDDDDDDMMMFAMMMMMMMMMMMMMMMMMMMMMAMMMMMMMMMMMMMMMMMAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMAMMMMMMMMMMMMAMMMMMMAMMMMMMAMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLMLLLLMMLLLLLLLLLMMMLLLLMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLMMMLMMLLLLLMMMLLMMMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMMMLLMMMLLLLLLLLLLMMMLLMMLLLLLLLLLLLLLMLMMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLMMLLLLMMMLLMMMLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMMMLLLMMMLLLLLLLLLLLLMMLLLLLLLMMMLLMMMLLLLLLMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLMMLLLLLMLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLDDDDGDDDGDDDDDDGDDDDAAFAFAAAFAAMAMMMDDDDDDDDDDFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLFLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLFLLLLLLLLLLLLLLLLLLLGDGGLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLDLLLFLLLLLLLLFLLLLLLLLLMMLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLFLLMLLLLLLLDLLLLLLLLLLLLLLLLLLMFLLLLLLLLLDLLLLLLLLLLLLLLLLLLFLLLLLLLLLDMLLLLLLLLLLLLLLLLLLLLLLRRNNRDRDDRRENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMLLLLLMLLLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFLLL","n":["error","extension_plan","functions","metrics","planner","range_array","Catalog","CatalogSnafu","ColumnNotFound","ColumnNotFoundSnafu","DataFusionPlanning","DataFusionPlanningSnafu","Deserialize","DeserializeSnafu","EmptyRange","EmptyRangeSnafu","Error","ExpectExpr","ExpectExprSnafu","ExpectRangeSelector","ExpectRangeSelectorSnafu","FunctionInvalidArgument","FunctionInvalidArgumentSnafu","IllegalRange","IllegalRangeSnafu","MultipleMetricMatchers","MultipleMetricMatchersSnafu","MultipleVector","MultipleVectorSnafu","NoMetricMatcher","NoMetricMatcherSnafu","Result","TableNameNotFound","TableNameNotFoundSnafu","TimeIndexNotFound","TimeIndexNotFoundSnafu","UnexpectedPlanExpr","UnexpectedPlanExprSnafu","UnexpectedToken","UnexpectedTokenSnafu","UnknownTable","UnknownTableSnafu","UnsupportedExpr","UnsupportedExprSnafu","ValueNotFound","ValueNotFoundSnafu","ZeroRangeSelector","ZeroRangeSelectorSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","col","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desc","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","ensure","expr","expr","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_name","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","len","length","name","next","offset","provide","source","status_code","table","table","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","col","desc","error","error","expr","expr","fn_name","len","length","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","name","offset","source","table","table","token","EmptyMetric","EmptyMetricExec","EmptyMetricStream","HistogramFold","HistogramFoldExec","HistogramFoldStream","InstantManipulate","InstantManipulateExec","InstantManipulateStream","Millisecond","PromExtensionPlanner","RangeManipulate","RangeManipulateExec","RangeManipulateStream","SeriesDivide","SeriesDivideExec","SeriesDivideStream","SeriesNormalize","SeriesNormalizeExec","SeriesNormalizeStream","batch_size","bucket_size","buffer","build_special_time_expr","empty_metric","end","end","end","end","end","end","end","end","end","expr","expr","expr","field_column","field_column","field_column","field_column_index","field_column_index","field_columns","field_columns","field_columns","field_index","histogram_fold","input","input","input","input","input","input","input","input","input","input","input","input","input","input","input","input_buffer","input_buffered_rows","instant_manipulate","interval","interval","interval","interval","interval","interval","interval","interval","interval","is_first_poll","le_column","le_column_index","le_column_index","lookback_delta","lookback_delta","lookback_delta","metric","metric","metric","metric","metric","metric","metric","metric","metric","metric","metric","metric","need_filter_out_nan","need_filter_out_nan","need_filter_out_nan","normal_indices","normalize","num_series","offset","offset","offset","output_buffer","output_buffered_rows","output_schema","output_schema","output_schema","output_schema","output_schema","output_schema","planner","quantile","quantile","quantile","range","range","range","range_manipulate","result_schema","result_schema","result_schema","schema","schema","schema","series_divide","start","start","start","start","start","start","start","start","start","tag_columns","tag_columns","tag_indices","time_index","time_index","time_index","time_index","time_index_column","time_index_column","time_index_column","time_index_column_name","time_index_column_name","time_index_schema","time_index_schema","time_index_schema","time_range_column","ts_column","ts_column_index","EmptyMetric","EmptyMetricExec","EmptyMetricStream","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_special_time_expr","build_ts_only_schema","children","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dyn_eq","dyn_hash","end","end","end","eq","equivalent","equivalent","equivalent","equivalent","equivalent","execute","expr","expr","expr","expressions","expressions","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","inputs","inputs","interval","interval","interval","into","into","into","into_request","into_request","into_request","into_streaming_request","is_first_poll","is_in_subset","is_in_subset","is_in_subset","maintains_input_order","metric","metric","metrics","name","name","name","new","output_ordering","output_partitioning","poll_next","prevent_predicate_push_down_columns","result_schema","result_schema","result_schema","schema","schema","schema","schema","start","start","start","statistics","time_index_schema","time_index_schema","time_index_schema","to_execution_plan","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","HistogramFold","HistogramFoldExec","HistogramFoldStream","as_any","as_any","batch_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket_size","calculate_bucket_num","check_schema","children","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","convert_schema","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dyn_eq","dyn_hash","empty_output_buffer","eq","equivalent","equivalent","equivalent","equivalent","equivalent","evaluate_row","execute","expressions","expressions","field_column","field_column_index","field_column_index","find_positive_inf","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","fold_buf","fold_input","from","from","from","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","input","input_buffer","input_buffered_rows","inputs","inputs","into","into","into","into_request","into_request","into_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","le_column","le_column_index","le_column_index","maintains_input_order","metric","metric","metrics","name","name","name","new","normal_indices","output_buffer","output_buffered_rows","output_ordering","output_partitioning","output_schema","output_schema","output_schema","poll_next","prevent_predicate_push_down_columns","push_input_buf","quantile","quantile","quantile","required_input_distribution","required_input_ordering","schema","schema","schema","schema","statistics","tag_col_exprs","take_output_buf","to_execution_plan","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","ts_column","ts_column_index","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","InstantManipulate","InstantManipulateExec","InstantManipulateStream","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","dyn_eq","dyn_hash","end","end","end","eq","equivalent","equivalent","equivalent","equivalent","equivalent","execute","expressions","expressions","field_column","field_column","field_index","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","input","inputs","inputs","interval","interval","interval","into","into","into","into_request","into_request","into_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","lookback_delta","lookback_delta","lookback_delta","maintains_input_order","manipulate","metric","metric","metrics","name","name","name","new","output_ordering","output_partitioning","poll_next","prevent_predicate_push_down_columns","schema","schema","schema","schema","schema","serialize","start","start","start","statistics","take_record_batch_optional","time_index","time_index_column","time_index_column","to_execution_plan","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","SeriesNormalize","SeriesNormalizeExec","SeriesNormalizeStream","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","equivalent","execute","expressions","expressions","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","input","inputs","inputs","into","into","into","into_request","into_request","into_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","metric","metric","metrics","name","name","name","need_filter_out_nan","need_filter_out_nan","need_filter_out_nan","new","normalize","offset","offset","offset","output_ordering","output_partitioning","poll_next","prevent_predicate_push_down_columns","required_input_distribution","schema","schema","schema","schema","schema","serialize","statistics","time_index","time_index_column_name","time_index_column_name","to_execution_plan","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","PromExtensionPlanner","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","plan_extension","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RangeManipulate","RangeManipulateExec","RangeManipulateStream","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_timestamp_range_name","calculate_output_schema","calculate_range","children","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","dyn_eq","dyn_hash","end","end","end","eq","equivalent","equivalent","equivalent","equivalent","equivalent","execute","expressions","expressions","field_columns","field_columns","field_columns","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","input","inputs","inputs","internal_range_end_col_name","interval","interval","interval","into","into","into","into_request","into_request","into_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","maintains_input_order","manipulate","metric","metric","metrics","name","name","name","new","output_ordering","output_partitioning","output_schema","output_schema","output_schema","poll_next","prevent_predicate_push_down_columns","range","range","range","range_timestamp_name","schema","schema","schema","schema","serialize","start","start","start","statistics","time_index","time_index","time_index_column","time_range_column","to_execution_plan","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","SeriesDivide","SeriesDivideExec","SeriesDivideStream","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","children","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","equivalent","execute","expressions","expressions","fetch_next_batch","find_first_diff_row","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","input","inputs","inputs","into","into","into","into_request","into_request","into_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","maintains_input_order","metric","metric","metrics","name","name","name","new","num_series","output_ordering","output_partitioning","poll_next","prevent_predicate_push_down_columns","required_input_distribution","required_input_ordering","schema","schema","schema","schema","schema","serialize","statistics","tag_columns","tag_columns","tag_indices","to_execution_plan","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","AbsentOverTime","AvgOverTime","Changes","CountOverTime","Delta","Deriv","HoltWinters","IDelta","Increase","LastOverTime","MaxOverTime","MinOverTime","PredictLinear","PresentOverTime","QuantileOverTime","Rate","Resets","StddevOverTime","StdvarOverTime","SumOverTime","aggr_over_time","changes","compensated_sum_inc","deriv","extract_array","extrapolate_rate","holt_winters","idelta","linear_regression","predict_linear","quantile","quantile","resets","sf","t","tf","AbsentOverTime","AvgOverTime","CountOverTime","LastOverTime","MaxOverTime","MinOverTime","PresentOverTime","StddevOverTime","StdvarOverTime","SumOverTime","absent_over_time","avg_over_time","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc","calc","calc","calc","calc","calc","calc","calc","calc","calc","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","count_over_time","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","input_type","input_type","input_type","input_type","input_type","input_type","input_type","input_type","input_type","input_type","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","last_over_time","max_over_time","min_over_time","name","name","name","name","name","name","name","name","name","name","present_over_time","return_type","return_type","return_type","return_type","return_type","return_type","return_type","return_type","return_type","return_type","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","scalar_udf","stddev_over_time","stdvar_over_time","sum_over_time","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Changes","borrow","borrow_mut","calc","changes","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","input_type","into","into_request","is_in_subset","name","return_type","scalar_udf","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Deriv","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","deriv","drop","fmt","from","from_subset","init","input_type","into","into_request","is_in_subset","name","return_type","scalar_udf","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Delta","ExtrapolatedRate","Increase","Rate","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","drop","extrapolate_factor","fmt","fmt","fmt","fmt","from","from_subset","init","input_type","into","into_request","is_in_subset","name","name","name","new","range_length","return_type","scalar_udf","scalar_udf","scalar_udf","to_string","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","HoltWinters","borrow","borrow_mut","calc","calc_trend_value","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","holt_winter_impl","init","input_type","into","into_request","is_in_subset","name","new","return_type","scalar_udf","sf","tf","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","IDelta","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","fmt","from","from_subset","init","input_type","into","into_request","is_in_subset","name","return_type","scalar_udf","to_string","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","PredictLinear","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","input_type","into","into_request","is_in_subset","name","new","predict_linear_impl","return_type","scalar_udf","t","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","QuantileOverTime","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","input_type","into","into_request","is_in_subset","name","new","quantile","quantile_impl","return_type","scalar_udf","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Resets","borrow","borrow_mut","calc","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","input_type","into","into_request","is_in_subset","name","resets","return_type","scalar_udf","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","PROMQL_SERIES_COUNT","__private_field","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DEFAULT_FIELD_COLUMN","DEFAULT_TIME_INDEX_COLUMN","DataFusionBuiltin","ExtrapolateUdf","FIELD_COLUMN_MATCHER","FunctionArgs","LE_COLUMN_NAME","PromPlanner","PromPlannerContext","SPECIAL_HISTOGRAM_QUANTILE","SPECIAL_TIME_FUNCTION","ScalarFunc","Udf","agg_modifier_to_col","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","create_aggregate_exprs","create_empty_values_filter_expr","create_function_args","create_function_expr","create_table_scan_plan","create_tag_and_time_index_column_sort_exprs","create_tag_column_exprs","create_time_index_column_expr","ctx","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","end","field_column_matcher","field_columns","filter_on_field_column","fmt","fmt","fmt","from","from","from","from","from_eval_stmt","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","has_le_tag","init","init","init","init","input","interval","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_token_a_comparison_op","join_on_non_field_columns","literals","lookback_delta","matchers_to_expr","preprocess_label_matchers","projection_for_each_field_column","prom_expr_to_plan","prom_token_to_binary_expr_builder","range","reset","selector_to_series_normalize_plan","setup_context","start","stmt_to_plan","table_name","table_provider","tag_columns","time_index_column","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_build_float_literal","try_build_literal_expr","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","RangeArray","RangeTuple","array","as_any","borrow","borrow_mut","check_ranges","compat","compat_mut","compat_ref","convert_data_type","convert_field","data_type","deref","deref_mut","drop","fmt","from","from_ranges","from_ranges_unchecked","from_subset","get","get","get_array_memory_size","get_buffer_memory_size","init","into","into_data","into_dict","into_request","is_empty","is_empty","is_in_subset","key_type","len","len","nulls","offset","pack","ranges","slice","to_data","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_new","type_id","unpack","value_type","values","vzip"],"q":[[0,"promql"],[6,"promql::error"],[669,"promql::error::Error"],[704,"promql::extension_plan"],[856,"promql::extension_plan::empty_metric"],[997,"promql::extension_plan::histogram_fold"],[1146,"promql::extension_plan::instant_manipulate"],[1284,"promql::extension_plan::normalize"],[1412,"promql::extension_plan::planner"],[1435,"promql::extension_plan::range_manipulate"],[1580,"promql::extension_plan::series_divide"],[1707,"promql::functions"],[1743,"promql::functions::aggr_over_time"],[2033,"promql::functions::changes"],[2062,"promql::functions::deriv"],[2091,"promql::functions::extrapolate_rate"],[2133,"promql::functions::holt_winters"],[2165,"promql::functions::idelta"],[2195,"promql::functions::predict_linear"],[2225,"promql::functions::quantile"],[2255,"promql::functions::resets"],[2284,"promql::metrics"],[2308,"promql::planner"],[2457,"promql::range_array"]],"d":["","","","","","","","SNAFU context selector for the <code>Error::Catalog</code> variant","","SNAFU context selector for the <code>Error::ColumnNotFound</code> …","","SNAFU context selector for the <code>Error::DataFusionPlanning</code> …","","SNAFU context selector for the <code>Error::Deserialize</code> variant","","SNAFU context selector for the <code>Error::EmptyRange</code> variant","","","SNAFU context selector for the <code>Error::ExpectExpr</code> variant","","SNAFU context selector for the <code>Error::ExpectRangeSelector</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::IllegalRange</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MultipleVector</code> …","","SNAFU context selector for the <code>Error::NoMetricMatcher</code> …","","","SNAFU context selector for the <code>Error::TableNameNotFound</code> …","","SNAFU context selector for the <code>Error::TimeIndexNotFound</code> …","","SNAFU context selector for the <code>Error::UnexpectedPlanExpr</code> …","","SNAFU context selector for the <code>Error::UnexpectedToken</code> …","","SNAFU context selector for the <code>Error::UnknownTable</code> variant","","SNAFU context selector for the <code>Error::UnsupportedExpr</code> …","","SNAFU context selector for the <code>Error::ValueNotFound</code> variant","","SNAFU context selector for the <code>Error::ZeroRangeSelector</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codempty source plan that generate record batch with two …","","","<code>HistogramFold</code> will fold the conventional (non-native) …","","","Manipulate the input record batch to make it suitable for …","","","","","Time series manipulator for range function.","","","","","Assume the input stream is ordered on the tag columns.","Normalize the input record batch. Notice that for …","","","Expected output batch size","","","","","","","","","","","","","","","","","","A optional column for validating staleness","","","Index for field column in the schema of input.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This stream only generate one record batch at the first …","Name of the <code>le</code> column. It’s a special column in …","","Index for <code>le</code> column in the schema of input.","","","","","","","","","","","","","","","","","","","Columns need not folding. This indices is based on input …","","","","","","","","","","","","","","","","","","","","","","Schema of the output record batch","Schema of the output record batch","Schema of the output record batch","","","","","","","","","","","","","","","","","","","","","","","","","","Schema that only contains the time index column. This is …","Schema that only contains the time index column. This is …","Schema that only contains the time index column. This is …","","","","Empty source plan that generate record batch with two …","","","","","","","","","","","","Build a schema that only contains <strong>millisecond</strong> timestamp …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","This stream only generate one record batch at the first …","","","","","","","","","","","","","","","","Schema of the output record batch","Schema of the output record batch","Schema of the output record batch","","","","","","","","","Schema that only contains the time index column. This is …","Schema that only contains the time index column. This is …","Schema that only contains the time index column. This is …","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>HistogramFold</code> will fold the conventional (non-native) …","","","","","Expected output batch size","","","","","","","","","","","","","","","","","","","","Transform the schema","","","","","","","","","","","","Generate a group of empty MutableVectors from the output …","","","","","","","Evaluate the field column and return the result","","","","","","Index for field column in the schema of input.","Find the first <code>+Inf</code> which indicates the end of the bucket …","","","","","","Fold record batches from input buffer and put to output …","The inner most <code>Result</code> is for <code>poll_next()</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Name of the <code>le</code> column. It’s a special column in …","","Index for <code>le</code> column in the schema of input.","","","","","","","","","Columns need not folding. This indices is based on input …","","","","","","","","","","","","","","","","","","","","","Return all the PhysicalExpr of tag columns in order.","Compute result from output buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","Manipulate the input record batch to make it suitable for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A optional column for validating staleness","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper function to apply “take” on record batch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Normalize the input record batch. Notice that for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Time series manipulator for range function.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assume the input stream is ordered on the tag columns.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","absent_over_time returns an empty vector if the range …","The average value of all points in the specified interval.","used to count the number of value changes that occur …","The count of all values in the specified interval.","","","There are 3 variants of smoothing functions:","The <code>funcIdelta</code> in Promql, from …","","The most recent point value in specified interval.","The maximum value of all points in the specified interval.","The minimum value of all points in the specified interval.","","the value 1 for any series in the specified interval.","","","used to count the number of times the time series starts …","the population standard deviation of the values in the …","the population standard variance of the values in the …","The sum of all values in the specified interval.","","Implementation of <code>changes</code> in PromQL. Refer to the original …","compensation(Kahan) summation algorithm - a technique for …","Implementation of <code>deriv</code> in PromQL. Refer to the original …","","Implementations of <code>rate</code>, <code>increase</code> and <code>delta</code> functions in …","Implementation of <code>holt_winters</code> in PromQL. Refer to the …","","linear_regression performs a least-square linear …","Implementation of <code>predict_linear</code> in PromQL. Refer to the …","","","Implementation of <code>reset</code> in PromQL. Refer to the original …","","","","absent_over_time returns an empty vector if the range …","The average value of all points in the specified interval.","The count of all values in the specified interval.","The most recent point value in specified interval.","The maximum value of all points in the specified interval.","The minimum value of all points in the specified interval.","the value 1 for any series in the specified interval.","the population standard deviation of the values in the …","the population standard variance of the values in the …","The sum of all values in the specified interval.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","used to count the number of value changes that occur …","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Part of the <code>extrapolatedRate</code> in Promql, from …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Constructor. Other public usage should use scalar_udf() …","Range duration in millisecond","","","","","","","","","","","","","There are 3 variants of smoothing functions:","","","","","","","","","","","Returns the argument unchanged.","","Refer to …","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The <code>funcIdelta</code> in Promql, from …","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","Refer to …","","","","","","","","","","used to count the number of times the time series starts …","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Counter for the number of series processed per query.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","default value column name for empty metric","","","UDF that require extra information like range length to be …","Special modifier to project field columns under …","","<code>le</code> column for conventional histogram.","","","<code>histogram_quantile</code> function in PromQL","<code>time()</code> function in PromQL.","","","Convert LabelModifier to Column exprs for aggregation. …","","","","","","","","","","","","","","","","","","","","","","","","","Create DfExpr::AggregateFunction expr for each value …","","","Side Effects","","","","","","","","","","","","","","","","","","","","","","","Build a filter plan that filter on value column. Notice …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Check if <code>le</code> is present in tag columns","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Check if the given op is a comparison operator.","Build a inner join on time index column and tag columns to …","","","","Extract metric name from <code>__name__</code> matcher and set it into …","Build a projection that project and perform operation expr …","","Return a lambda to build binary expression from token. …","The range in millisecond of range selector. None if there …","Reset all planner states","","Setup PromPlannerContext’s state fields.","","","","","","","","","","","","","","","","","Try to build a f64 from PromExpr.","Try to build a DataFusion Literal Expression from PromQL …","","","","","","","","","","","","","","","","","","","","","An compound logical “array” type. Represent serval …","","","","","","","","","","Build datatype of wrapped RangeArray on given value type.","Change the field’s datatype to the type after processed …","","","","","","Returns the argument unchanged.","","Construct RangeArray from given range without checking its …","","","","","","","Calls <code>U::from(self)</code>.","","Return the underlying Arrow’s DictionaryArray. Notes the …","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,11,12,13,14,16,17,20,21,22,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,25,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,11,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,0,16,17,8,10,11,12,13,14,16,17,20,21,22,23,24,25,26,27,28,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,1,28,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,20,20,8,1,20,1,1,1,13,14,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,10,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,8,10,10,30,30,11,11,12,12,13,13,14,14,16,16,17,17,20,20,31,31,21,21,22,22,32,32,23,23,24,24,25,25,26,26,27,27,28,28,1,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,8,10,30,11,12,13,14,16,17,20,31,21,22,32,23,24,25,26,27,28,1,156,157,158,159,160,161,162,163,163,164,165,158,157,166,167,168,160,161,163,159,169,170,171,172,173,156,174,175,162,164,163,171,167,168,165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,82,107,0,0,70,95,103,52,48,93,91,104,102,70,52,48,86,93,91,82,81,103,104,102,95,0,82,95,99,103,107,86,81,93,91,97,96,104,102,106,105,82,82,0,70,95,103,52,48,93,91,104,102,70,86,82,81,95,93,91,70,82,95,99,103,107,48,81,91,96,102,105,99,97,96,82,0,107,99,97,96,82,82,82,103,86,81,104,102,0,82,86,81,103,104,102,0,70,52,48,95,99,107,0,70,95,103,52,48,93,91,104,102,106,105,107,95,99,103,104,93,91,102,97,96,70,52,48,102,86,81,0,0,0,52,48,70,52,48,70,52,48,0,0,48,52,48,52,48,70,52,48,70,52,48,70,52,48,70,52,48,70,52,48,70,52,48,52,52,70,52,48,52,52,52,52,52,52,48,70,52,48,52,52,52,48,48,52,52,70,52,48,52,48,70,52,48,52,52,52,52,70,52,48,52,52,70,52,48,70,52,48,70,52,48,70,70,70,52,48,48,70,48,48,52,52,52,52,48,48,70,52,70,52,48,70,52,52,48,70,52,48,48,70,52,48,52,52,48,70,52,48,70,52,48,70,52,48,70,70,52,52,48,48,70,70,52,48,70,52,48,48,0,0,0,86,81,82,82,86,81,82,86,81,82,82,86,81,82,86,81,82,86,81,82,86,81,86,82,86,81,82,86,81,82,86,81,86,86,82,86,86,86,86,86,86,82,81,86,86,86,82,81,82,86,81,81,86,86,82,82,82,86,81,82,86,81,86,86,86,86,82,86,81,82,86,81,82,82,86,86,82,86,81,82,86,81,82,82,86,81,86,82,81,81,82,81,81,86,86,86,86,82,82,82,81,81,82,86,81,82,86,82,82,86,81,81,81,82,86,86,81,81,81,82,86,82,86,81,82,86,81,82,86,81,82,82,86,86,81,81,82,86,81,82,86,81,82,86,81,81,0,0,0,93,91,95,93,91,95,93,91,91,95,93,91,95,93,91,95,93,91,95,93,91,95,93,91,93,95,93,91,93,93,95,93,91,93,93,93,93,93,93,91,93,93,93,91,95,93,91,91,93,93,95,93,91,95,93,91,93,93,93,93,95,93,91,95,93,91,93,93,95,93,91,95,93,91,95,93,91,95,95,93,91,95,93,91,91,95,95,91,91,93,93,93,93,91,91,95,93,95,93,93,91,95,93,95,93,91,91,95,95,93,91,93,95,93,91,95,93,91,95,93,91,95,95,93,93,91,91,95,95,93,91,95,93,91,91,0,0,0,97,96,99,97,96,99,97,96,96,99,97,96,99,97,96,99,97,96,99,97,96,99,97,96,97,99,97,96,97,97,97,97,97,97,97,97,96,97,97,97,96,96,97,97,99,97,96,99,97,96,97,97,97,97,99,97,96,99,97,96,97,97,99,97,96,99,97,96,99,99,97,96,99,96,96,97,97,97,99,97,96,97,99,99,97,96,96,96,99,97,96,99,97,97,96,99,97,96,99,97,96,97,99,97,96,99,97,96,99,97,96,99,99,97,97,96,96,99,99,97,96,99,97,96,96,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,0,0,104,102,103,104,102,103,104,102,104,104,103,102,103,104,102,103,104,102,103,104,102,103,104,102,103,104,102,104,103,104,102,104,104,103,104,102,104,104,104,104,104,104,102,104,104,103,104,102,104,102,102,104,104,103,104,102,103,104,102,104,104,104,104,103,104,102,103,104,102,104,104,104,103,104,102,103,104,102,103,104,102,103,103,104,102,102,103,103,102,102,104,104,104,104,102,102,103,104,102,103,104,103,104,102,104,103,104,104,102,104,103,104,102,102,103,104,102,102,104,103,104,102,103,104,102,103,104,102,103,103,104,104,102,102,103,103,104,102,103,104,102,102,0,0,0,106,105,107,106,105,107,106,105,107,105,107,106,105,107,106,105,107,106,105,107,106,105,107,106,105,106,107,106,105,106,106,106,106,106,106,106,106,105,106,106,107,107,106,105,105,106,106,107,106,105,107,106,105,106,106,106,106,107,106,105,107,106,105,106,106,107,106,105,107,106,105,107,107,106,105,105,107,105,105,106,106,106,106,107,105,105,107,106,105,105,107,106,106,105,107,106,105,106,105,107,106,107,106,105,107,106,105,107,106,105,107,107,106,106,105,105,107,107,106,105,107,106,105,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,0,128,130,128,0,0,0,0,0,0,0,0,0,0,0,0,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,0,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,0,0,0,113,114,115,116,117,118,119,120,121,122,0,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,0,0,0,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,113,114,115,116,117,118,119,120,121,122,113,114,115,116,117,118,119,120,121,122,0,125,125,125,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,126,126,126,126,126,126,126,126,0,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,0,0,0,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,128,128,128,0,128,128,128,128,128,128,128,128,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,131,131,131,131,131,131,131,131,131,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,132,132,132,132,132,132,132,132,132,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,0,0,138,138,0,0,0,0,0,0,0,0,138,135,135,137,139,138,135,137,139,138,137,138,137,138,135,137,139,138,135,137,139,138,135,137,139,138,135,135,135,135,135,135,135,135,135,137,139,135,137,139,138,135,137,139,138,135,137,139,138,137,137,137,135,137,139,138,135,137,139,138,137,137,138,135,137,139,138,137,135,137,139,138,139,137,135,137,139,138,135,137,139,138,135,137,139,138,135,135,139,137,135,135,135,135,135,137,137,135,135,137,135,137,135,137,137,137,138,135,137,139,138,135,137,139,138,135,135,135,137,139,138,135,135,137,137,139,139,138,138,135,137,139,138,135,137,139,138,0,0,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,0,148,148,148,148,148,148,148,148,148,148,0,148,148,148],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[],3],[1,[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[[7,[6]]]]],1],[[[10,[[7,[9]]]]],1],[[[11,[[7,[6]]]]],1],[12,1],[[[13,[[7,[6]]]]],1],[[[14,[[7,[6]]]]],1],[[[16,[[7,[15]]]]],1],[[[17,[[7,[15]]]]],1],[[[20,[[7,[18]],[7,[18]],[7,[19]]]]],1],[21,1],[22,1],[23,1],[24,1],[[[25,[[7,[6]]]]],1],[26,1],[27,1],[[[28,[[7,[6]]]]],1],[1,[[5,[3]]]],[[[8,[29]]],[[8,[29]]]],[[[10,[29]]],[[10,[29]]]],[30,30],[[[11,[29]]],[[11,[29]]]],[12,12],[[[13,[29]]],[[13,[29]]]],[[[14,[29]]],[[14,[29]]]],[[[16,[29]]],[[16,[29]]]],[[[17,[29]]],[[17,[29]]]],[[[20,[29,29,29]]],[[20,[29,29,29]]]],[31,31],[21,21],[22,22],[32,32],[23,23],[24,24],[[[25,[29]]],[[25,[29]]]],[26,26],[27,27],[[[28,[29]]],[[28,[29]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[1,19,[34,[6]]]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],0,[1,35],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[36,37],[[38,[37]]]],0,0,[[[8,[[7,[6]]]]],[[38,[1]]]],[[[10,[[7,[9]]]]],[[38,[1]]]],[[[11,[[7,[6]]]]],[[38,[1]]]],[12,[[38,[1]]]],[[[13,[[7,[6]]]]],[[38,[1]]]],[[[14,[[7,[6]]]]],[[38,[1]]]],[[[16,[[7,[15]]]]],[[38,[1]]]],[[[17,[[7,[15]]]]],[[38,[1]]]],[[[20,[[7,[18]],[7,[18]],[7,[19]]]]],[[38,[1]]]],[21,[[38,[1]]]],[22,[[38,[1]]]],[23,[[38,[1]]]],[24,[[38,[1]]]],[[[25,[[7,[6]]]]],[[38,[1]]]],[26,[[38,[1]]]],[27,[[38,[1]]]],[[[28,[[7,[6]]]]],[[38,[1]]]],[[[8,[39]],40],41],[[[10,[39]],40],41],[[30,40],41],[[[11,[39]],40],41],[[12,40],41],[[[13,[39]],40],41],[[[14,[39]],40],41],[[[16,[39]],40],41],[[[17,[39]],40],41],[[[20,[39,39,39]],40],41],[[31,40],41],[[21,40],41],[[22,40],41],[[32,40],41],[[23,40],41],[[24,40],41],[[[25,[39]],40],41],[[26,40],41],[[27,40],41],[[[28,[39]],40],41],[[1,40],41],[[1,40],41],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[[7,[6]]]]],1],[[[10,[[7,[9]]]]],1],[30,1],[[[11,[[7,[6]]]]],1],[12,1],[[[13,[[7,[6]]]]],1],[[[14,[[7,[6]]]]],1],[[[16,[[7,[15]]]]],1],[[[17,[[7,[15]]]]],1],[[[20,[[7,[18]],[7,[18]],[7,[19]]]]],1],[31,1],[21,1],[22,1],[32,1],[23,1],[24,1],[[[25,[[7,[6]]]]],1],[26,1],[27,1],[[[28,[[7,[6]]]]],1],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,0,0,[1,[[5,[43]]]],0,[44],[1,[[5,[3]]]],[1,45],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[35,47],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[48,2],[[]],[[]],[[]],[[]],[[]],[[]],[35,47],[35,49],[48,[[34,[[51,[50]]]]]],[52,52],[48,48],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[19],[19],[19],[19],[19],[19],[19],[19],[19],[53,36],[54],0,0,0,[[52,52],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[48,19,[51,[55]]],[[57,[56]]]],0,0,0,[[],[[34,[47,58]]]],[52,[[34,[47]]]],[[52,40],41],[[48,40],41],[[48,59,40],41],[40,[[38,[60]]]],[[52,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[61,[47]],[61,[62]]],[[51,[53,58]]]],[[52,[61,[47]],[61,[62]]],52],[[[0,[63,64]],65],66],[[52,54]],[[],19],[[],19],[[],19],[[],[[34,[62,58]]]],[52,[[34,[62]]]],0,0,0,[[]],[[]],[[]],[[],42],[[],42],[[],42],[[],42],0,[[],36],[[],36],[[],36],[48,[[34,[36]]]],0,0,[48,[[5,[67]]]],[[],35],[52,35],[[],35],[[6,6,47],[[57,[52]]]],[48,[[5,[[61,[68]]]]]],[48,69],[[[71,[70]],72],[[73,[5]]]],[[],[[75,[6,74]]]],0,0,0,[70,76],[[],[[51,[49,58]]]],[52,77],[48,76],0,0,0,[48,78],0,0,0,[[52,79,80],[[57,[[51,[50]]]]]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[71,72],[[73,[[5,[38]]]]]],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[[51,[48]],[34,[[51,[50]]]]],[[57,[[51,[50]]]]]],0,0,0,[[],2],[81,2],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[82,83],[[57,[[5,[19]]]]]],[[77,35,35,35],57],[81,[[34,[[51,[50]]]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[77,35],[[57,[77]]]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[53,36],[54],[[76,19],[[57,[[34,[[85,[84]]]]]]]],[[86,86],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[87,[61,[87]],[61,[87]]],[[57,[87]]]],[[81,19,[51,[55]]],[[57,[56]]]],[86,[[34,[47]]]],[[],[[34,[47,58]]]],0,0,0,[[82,83],[[57,[19]]]],[[86,40],41],[[81,40],41],[[81,59,40],41],[[86,40],41],[40,[[38,[60]]]],[[82,19,83],57],[[82,83],[[57,[[5,[[57,[83]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[86,[61,[47]],[61,[62]]],86],[[[61,[47]],[61,[62]]],[[51,[53,58]]]],[[[0,[63,64]],65],66],[[86,54]],[[],19],[[],19],[[],19],0,0,0,0,0,[86,[[34,[62]]]],[[],[[34,[62,58]]]],[[]],[[]],[[]],[[],42],[[],42],[[],42],[[],42],[[],36],[[],36],[[],36],0,0,0,[81,[[34,[36]]]],0,0,[81,[[5,[67]]]],[[],35],[86,35],[[],35],[[6,6,6,87,62],[[57,[86]]]],0,0,0,[81,[[5,[[61,[68]]]]]],[81,69],0,0,0,[[[71,[82]],72],[[73,[5]]]],[[],[[75,[6,74]]]],[[82,83]],0,0,0,[81,[[34,[88]]]],[81,[[34,[[5,[[34,[89]]]]]]]],[82,76],[[],[[51,[49,58]]]],[86,77],[81,76],[81,78],[81,[[34,[[51,[90]]]]]],[82,[[57,[[5,[83]]]]]],[[86,[51,[50]]],[[51,[50]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[71,72],[[73,[[5,[38]]]]]],0,0,[[],46],[[],46],[[],46],[[]],[[]],[[]],[[[51,[81]],[34,[[51,[50]]]]],[[57,[[51,[50]]]]]],0,0,0,[[],2],[91,2],[[]],[[]],[[]],[[]],[[]],[[]],[91,[[34,[[51,[50]]]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[19],[19],[19],[19],[19],[19],[[[61,[92]]],[[94,[93]]]],[19],[19],[19],[53,36],[54],0,0,0,[[93,93],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[91,19,[51,[55]]],[[57,[56]]]],[93,[[34,[47]]]],[[],[[34,[47,58]]]],0,0,0,[[93,40],41],[[91,40],41],[[91,59,40],41],[[93,40],41],[40,[[38,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[61,[47]],[61,[62]]],[[51,[53,58]]]],[[93,[61,[47]],[61,[62]]],93],[[[0,[63,64]],65],66],[[93,54]],[[],19],[[],19],[[],19],0,0,0,[[],[[34,[62,58]]]],[93,[[34,[62]]]],0,0,0,[[]],[[]],[[]],[[],42],[[],42],[[],42],[[],42],[[],36],[[],36],[[],36],0,0,0,[91,[[34,[36]]]],[[95,83],[[57,[83]]]],0,0,[91,[[5,[67]]]],[[],35],[93,35],[[],35],[[6,[5,[6]],62],93],[91,[[5,[[61,[68]]]]]],[91,69],[[[71,[95]],72],[[73,[5]]]],[[],[[75,[6,74]]]],[95,76],[93,77],[[],[[51,[49,58]]]],[91,76],0,[93,[[34,[92]]]],0,0,0,[91,78],[[95,83,[34,[66]],34],[[57,[83]]]],0,0,0,[[93,[51,[50]]],[[51,[50]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[71,72],[[73,[[5,[38]]]]]],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[[51,[91]],[34,[[51,[50]]]]],[[57,[[51,[50]]]]]],0,0,0,[[],2],[96,2],[[]],[[]],[[]],[[]],[[]],[[]],[96,[[34,[[51,[50]]]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[19],[19],[19],[19],[19],[19],[[[61,[92]]],[[94,[97]]]],[19],[19],[19],[53,36],[54],[[97,97],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[96,19,[51,[55]]],[[57,[56]]]],[97,[[34,[47]]]],[[],[[34,[47,58]]]],[[97,40],41],[[96,40],41],[[96,59,40],41],[40,[[38,[60]]]],[[97,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[97,[61,[47]],[61,[62]]],97],[[[61,[47]],[61,[62]]],[[51,[53,58]]]],[[[0,[63,64]],65],66],[[97,54]],[[],19],[[],19],[[],19],0,0,0,[[],[[34,[62,58]]]],[97,[[34,[62]]]],[[]],[[]],[[]],[[],42],[[],42],[[],42],[[],42],[[],36],[[],36],[[],36],0,0,[96,[[5,[67]]]],[[],35],[[],35],[97,35],0,0,0,[[[98,[35]],36,62],97],[[99,83],[[57,[83]]]],0,0,0,[96,[[5,[[61,[68]]]]]],[96,69],[[[71,[99]],72],[[73,[5]]]],[[],[[75,[6,74]]]],[96,[[34,[88]]]],[99,76],[[],[[51,[49,58]]]],[97,77],[96,76],0,[97,[[34,[92]]]],[96,78],0,0,0,[[97,[51,[50]]],[[51,[50]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[71,72],[[73,[[5,[38]]]]]],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[[51,[96]],[34,[[51,[50]]]]],[[57,[[51,[50]]]]]],0,[[]],[[]],[[],33],[[],33],[[],33],[19],[19],[19],[[]],[[]],[[],19],[[]],[[],42],[[],36],[[100,80,53,[61,[62]],[61,[[51,[50]]]],79],[[71,[[85,[101]]]]]],[[],5],[[]],[[],38],[[],38],[[],38],[[],46],[[]],0,0,0,[[],2],[102,2],[[]],[[]],[[]],[[]],[[]],[[]],[35,6],[[77,35,[61,[6]]],[[57,[77]]]],[[103,83]],[102,[[34,[[51,[50]]]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[19],[19],[19],[19],[19],[19],[[[61,[92]]],[[94,[104]]]],[19],[19],[19],[53,36],[54],0,0,0,[[104,104],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[102,19,[51,[55]]],[[57,[56]]]],[[],[[34,[47,58]]]],[104,[[34,[47]]]],0,0,0,[[104,40],41],[[102,40],41],[[102,59,40],41],[40,[[38,[60]]]],[[104,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[104,[61,[47]],[61,[62]]],104],[[[61,[47]],[61,[62]]],[[51,[53,58]]]],[[[0,[63,64]],65],66],[[104,54]],[[],19],[[],19],[[],19],0,0,0,[[],[[34,[62,58]]]],[104,[[34,[62]]]],[[],6],0,0,0,[[]],[[]],[[]],[[],42],[[],42],[[],42],[[],42],[[],36],[[],36],[[],36],[102,[[34,[36]]]],[[103,83],[[57,[[5,[83]]]]]],0,0,[102,[[5,[67]]]],[[],35],[[],35],[104,35],[[6,[34,[6]],62],[[57,[104]]]],[102,[[5,[[61,[68]]]]]],[102,69],0,0,0,[[[71,[103]],72],[[73,[5]]]],[[],[[75,[6,74]]]],0,0,0,[104,6],[103,76],[[],[[51,[49,58]]]],[104,77],[102,76],[104,[[34,[92]]]],0,0,0,[102,78],0,0,0,0,[[104,[51,[50]]],[[51,[50]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[71,72],[[73,[[5,[38]]]]]],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[[51,[102]],[34,[[51,[50]]]]],[[57,[[51,[50]]]]]],0,0,0,[[],2],[105,2],[[]],[[]],[[]],[[]],[[]],[[]],0,[105,[[34,[[51,[50]]]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[19],[19],[19],[19],[19],[19],[[[61,[92]]],[[94,[106]]]],[19],[19],[19],[53,36],[54],[[106,106],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[105,19,[51,[55]]],[[57,[56]]]],[[],[[34,[47,58]]]],[106,[[34,[47]]]],[[[71,[107]],72],[[73,[[5,[[57,[83]]]]]]]],[[107,83],19],[[106,40],41],[[105,40],41],[[105,59,40],41],[[106,40],41],[40,[[38,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[61,[47]],[61,[62]]],[[51,[53,58]]]],[[106,[61,[47]],[61,[62]]],106],[[[0,[63,64]],65],66],[[106,54]],[[],19],[[],19],[[],19],0,0,0,[106,[[34,[62]]]],[[],[[34,[62,58]]]],[[]],[[]],[[]],[[],42],[[],42],[[],42],[[],42],[[],36],[[],36],[[],36],[105,[[34,[36]]]],0,0,[105,[[5,[67]]]],[[],35],[[],35],[106,35],[[[34,[6]],62],106],0,[105,[[5,[[61,[68]]]]]],[105,69],[[[71,[107]],72],[[73,[5]]]],[[],[[75,[6,74]]]],[105,[[34,[88]]]],[105,[[34,[[5,[[34,[89]]]]]]]],[107,76],[[],[[51,[49,58]]]],[106,77],[105,76],0,[106,[[34,[92]]]],[105,78],0,0,0,[[106,[51,[50]]],[[51,[50]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[71,72],[[73,[[5,[38]]]]]],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[[51,[105]],[34,[[51,[50]]]]],[[57,[[51,[50]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[87,87,87]],0,[108,[[38,[109,37]]]],0,0,0,[[110,111,112]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[110,111],[[5,[87]]]],[[110,111],[[5,[87]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[61,[108]]],[[38,[108,37]]]],[[[61,[108]]],[[38,[108,37]]]],[[[61,[108]]],[[38,[108,37]]]],[[[61,[108]]],[[38,[108,37]]]],[[[61,[108]]],[[38,[108,37]]]],[[[61,[108]]],[[38,[108,37]]]],[[[61,[108]]],[[38,[108,37]]]],[[[61,[108]]],[[38,[108,37]]]],[[[61,[108]]],[[38,[108,37]]]],[[[61,[108]]],[[38,[108,37]]]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[110,111],[[5,[87]]]],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[[113,40],41],[[114,40],41],[[115,40],41],[[116,40],41],[[117,40],41],[[118,40],41],[[119,40],41],[[120,40],41],[[121,40],41],[[122,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],[[34,[123]]]],[[],[[34,[123]]]],[[],[[34,[123]]]],[[],[[34,[123]]]],[[],[[34,[123]]]],[[],[[34,[123]]]],[[],[[34,[123]]]],[[],[[34,[123]]]],[[],[[34,[123]]]],[[],[[34,[123]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[110,111],[[5,[87]]]],[[110,111],[[5,[87]]]],[[110,111],[[5,[87]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[110,111],[[5,[87]]]],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],123],[[],124],[[],124],[[],124],[[],124],[[],124],[[],124],[[],124],[[],124],[[],124],[[],124],[[110,111],[[5,[87]]]],[[110,111],[[5,[87]]]],[[110,111],[[5,[87]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[[61,[108]]],[[38,[108,37]]]],[[110,111],[[5,[87]]]],[[],33],[[],33],[[],33],[19],[19],[19],[[125,40],41],[[]],[[]],[[],19],[[],[[34,[123]]]],[[]],[[],42],[[],36],[[],35],[[],123],[[],124],[[],5],[[]],[[],38],[[],38],[[],38],[[],46],[[]],0,[[]],[[]],[[[61,[108]]],[[38,[108,37]]]],[[],33],[[],33],[[],33],[19],[19],[[110,111],[[5,[87]]]],[19],[[126,40],41],[[]],[[]],[[],19],[[],[[34,[123]]]],[[]],[[],42],[[],36],[[],35],[[],123],[[],124],[[],5],[[]],[[],38],[[],38],[[],38],[[],46],[[]],0,0,0,0,[[]],[[]],[[127,[61,[108]]],[[38,[108,37]]]],[[],33],[[],33],[[],33],[19],[19],[19],[[61,87,87],87],[[127,40],41],[[127,40],41],[[127,40],41],[[127,40],41],[[]],[[]],[[],19],[[],[[34,[123]]]],[[]],[[],42],[[],36],[[],35],[[],35],[[],35],[112,127],0,[[],123],[112,124],[112,124],[112,124],[[],6],[[],5],[[]],[[],38],[[],38],[[],38],[[],46],[[]],0,[[]],[[]],[[128,[61,[108]]],[[38,[108,37]]]],[[19,87,87,87,87],87],[[],33],[[],33],[[],33],[19],[19],[19],[[]],[[]],[[[61,[87]],87,87],[[5,[87]]]],[[],19],[[],[[34,[123]]]],[[]],[[],42],[[],36],[[],35],[[87,87],128],[[],123],[[87,87],124],0,0,[[],5],[[]],[[],38],[[],38],[[],38],[[],46],[[]],0,[[]],[[]],[[[61,[108]]],[[38,[108,37]]]],[[],33],[[],33],[[],33],[19],[19],[19],[[129,40],41],[[129,40],41],[[]],[[]],[[],19],[[],[[34,[123]]]],[[]],[[],42],[[],36],[[],35],[[],123],[[],124],[[],6],[[],5],[[]],[[],38],[[],38],[[],38],[[],46],[[]],0,[[]],[[]],[[130,[61,[108]]],[[38,[108,37]]]],[[],33],[[],33],[[],33],[19],[19],[19],[[]],[[]],[[],19],[[],[[34,[123]]]],[[]],[[],42],[[],36],[[],35],[112,130],[[110,111,112],[[5,[87]]]],[[],123],[112,124],0,[[],5],[[]],[[],38],[[],38],[[],38],[[],46],[[]],0,[[]],[[]],[[131,[61,[108]]],[[38,[108,37]]]],[[],33],[[],33],[[],33],[19],[19],[19],[[]],[[]],[[],19],[[],[[34,[123]]]],[[]],[[],42],[[],36],[[],35],[87,131],0,[[[61,[87]],87],[[5,[87]]]],[[],123],[87,124],[[],5],[[]],[[],38],[[],38],[[],38],[[],46],[[]],0,[[]],[[]],[[[61,[108]]],[[38,[108,37]]]],[[],33],[[],33],[[],33],[19],[19],[19],[[132,40],41],[[]],[[]],[[],19],[[],[[34,[123]]]],[[]],[[],42],[[],36],[[],35],[[110,111],[[5,[87]]]],[[],123],[[],124],[[],5],[[]],[[],38],[[],38],[[],38],[[],46],[[]],0,0,[[]],[[]],[[],33],[[],33],[[],33],[133,134],[19],[19],[19],[[]],[[]],[[],19],[[]],[[],42],[[],36],[[],5],[[]],[[],38],[[],38],[[],38],[[],46],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[135,77,[5,[136]]],[[94,[[34,[47]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137,137],[138,138],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[135,9,62],[[94,[[34,[47]]]]]],[135,[[94,[47]]]],[[135,[61,[[85,[15]]]]],[[94,[139]]]],[[135,140,[34,[47]]],[[94,[[34,[47]]]]]],[[135,35,[34,[47]]],[[94,[62]]]],[135,[[94,[[34,[47]]]]]],[135,[[94,[[34,[47]]]]]],[135,[[94,[47]]]],0,[[],137],[[],139],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],0,0,0,[[135,62,141],[[94,[62]]]],[[137,40],41],[[139,40],41],[[138,40],41],[[]],[[]],[[]],[[]],[142,137],[[]],[[]],[[]],[[]],[[]],[[]],[137,36],[[],19],[[],19],[[],19],[[],19],0,0,[[]],[[]],[[]],[[]],[[],42],[[],42],[[],42],[[],42],[[],36],[[],36],[[],36],[[],36],[9,36],[[135,62,62,143,143],[[94,[62]]]],0,0,[[135,144],[[94,[[34,[47]]]]]],[[135,144,[5,[6]]],[[94,[144]]]],[[135,62,141],[[94,[62]]]],[[135,15],[[71,[[85,[101]]]]]],[9,[[94,[[85,[145]]]]]],0,[137],[[135,[5,[146]],144,36],[[94,[62]]]],[135,94],0,[[147,142],[[94,[62]]]],0,0,0,0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[15,[[5,[87]]]],[15,[[5,[47]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],0,0,0,[148,2],[[]],[[]],[[19,149],94],[[],33],[[],33],[[],33],[123,123],[150,150],[148,123],[19],[19],[19],[[148,40],41],[[]],[[109,[0,[149,29]]],[[94,[148]]]],[[109,149],148],[[]],[[]],[[148,19],[[5,[109]]]],[148,19],[148,19],[[],19],[[]],[148,151],[148,[[153,[152]]]],[[],42],[148,36],[148,36],[[],36],[[],123],[148,19],[148,19],[148,[[5,[154]]]],[148,19],[[18,18],112],[148,155],[[148,19,19],109],[148,151],[[],5],[[]],[[],38],[[],38],[[],38],[[[153,[152]]],[[94,[148]]]],[[],46],[112],[148,123],[148,109],[[]]],"c":[],"p":[[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[4,"Option"],[3,"String"],[8,"Into"],[3,"UnsupportedExprSnafu"],[3,"TokenType"],[3,"UnexpectedTokenSnafu"],[3,"UnexpectedPlanExprSnafu"],[3,"UnknownTableSnafu"],[3,"TimeIndexNotFoundSnafu"],[3,"ValueNotFoundSnafu"],[4,"Expr"],[3,"MultipleVectorSnafu"],[3,"ExpectExprSnafu"],[15,"u32"],[15,"usize"],[3,"IllegalRangeSnafu"],[3,"EmptyRangeSnafu"],[3,"TableNameNotFoundSnafu"],[3,"ExpectRangeSelectorSnafu"],[3,"ZeroRangeSelectorSnafu"],[3,"ColumnNotFoundSnafu"],[3,"MultipleMetricMatchersSnafu"],[3,"NoMetricMatcherSnafu"],[3,"FunctionInvalidArgumentSnafu"],[8,"Clone"],[3,"DataFusionPlanningSnafu"],[3,"DeserializeSnafu"],[3,"CatalogSnafu"],[3,"Compat"],[3,"Vec"],[15,"str"],[15,"bool"],[4,"DataFusionError"],[4,"Result"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Request"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"TypeId"],[4,"Expr"],[3,"EmptyMetricExec"],[3,"DFSchema"],[8,"ExecutionPlan"],[3,"Arc"],[3,"EmptyMetric"],[8,"UserDefinedLogicalNode"],[8,"Hasher"],[3,"TaskContext"],[6,"SendableRecordBatchStream"],[6,"Result"],[3,"Global"],[4,"DisplayFormatType"],[3,"Error"],[15,"slice"],[4,"LogicalPlan"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[3,"MetricsSet"],[3,"PhysicalSortExpr"],[4,"Partitioning"],[3,"EmptyMetricStream"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"RandomState"],[3,"HashSet"],[6,"SchemaRef"],[6,"DFSchemaRef"],[3,"Statistics"],[3,"SessionState"],[8,"PhysicalPlanner"],[3,"HistogramFoldExec"],[3,"HistogramFoldStream"],[3,"RecordBatch"],[8,"MutableVector"],[3,"Box"],[3,"HistogramFold"],[15,"f64"],[4,"Distribution"],[3,"PhysicalSortRequirement"],[8,"PhysicalExpr"],[3,"InstantManipulateExec"],[15,"u8"],[3,"InstantManipulate"],[6,"Result"],[3,"InstantManipulateStream"],[3,"SeriesNormalizeExec"],[3,"SeriesNormalize"],[8,"AsRef"],[3,"SeriesNormalizeStream"],[3,"PromExtensionPlanner"],[8,"Future"],[3,"RangeManipulateExec"],[3,"RangeManipulateStream"],[3,"RangeManipulate"],[3,"SeriesDivideExec"],[3,"SeriesDivide"],[3,"SeriesDivideStream"],[4,"ColumnarValue"],[6,"ArrayRef"],[6,"TimestampMillisecondArray"],[6,"Float64Array"],[15,"i64"],[3,"AvgOverTime"],[3,"MinOverTime"],[3,"MaxOverTime"],[3,"SumOverTime"],[3,"CountOverTime"],[3,"LastOverTime"],[3,"AbsentOverTime"],[3,"PresentOverTime"],[3,"StdvarOverTime"],[3,"StddevOverTime"],[4,"DataType"],[3,"ScalarUDF"],[3,"Changes"],[3,"Deriv"],[3,"ExtrapolatedRate"],[3,"HoltWinters"],[3,"IDelta"],[3,"PredictLinear"],[3,"QuantileOverTime"],[3,"Resets"],[3,"PROMQL_SERIES_COUNT"],[3,"Histogram"],[3,"PromPlanner"],[4,"LabelModifier"],[3,"PromPlannerContext"],[4,"ScalarFunc"],[3,"FunctionArgs"],[3,"Function"],[8,"FnMut"],[3,"EvalStmt"],[6,"OwnedTableReference"],[3,"Matchers"],[8,"Fn"],[4,"Offset"],[3,"DfTableSourceProvider"],[3,"RangeArray"],[8,"IntoIterator"],[3,"Field"],[3,"ArrayData"],[3,"Int64Type"],[3,"DictionaryArray"],[3,"NullBuffer"],[8,"Iterator"],[13,"ColumnNotFound"],[13,"UnexpectedPlanExpr"],[13,"DataFusionPlanning"],[13,"Deserialize"],[13,"MultipleVector"],[13,"ExpectExpr"],[13,"FunctionInvalidArgument"],[13,"IllegalRange"],[13,"UnsupportedExpr"],[13,"UnexpectedToken"],[13,"UnknownTable"],[13,"TimeIndexNotFound"],[13,"ValueNotFound"],[13,"EmptyRange"],[13,"TableNameNotFound"],[13,"Catalog"],[13,"ExpectRangeSelector"],[13,"ZeroRangeSelector"],[13,"MultipleMetricMatchers"],[13,"NoMetricMatcher"]]},\
"query":{"doc":"","t":"CCCCCAAAAAAAAAAAAAAAAAAAENLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLFLLLLLLMALLLFLLLLLLLLLLLLLALMLLLLMMMMLLLLLLLNDNDNDNDENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMDLLLLLLLLMLLLLLLLLLLLLFMMMLLLLLLLLDDDAMAMMAAMDNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLDNENNNNGNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMLLLLLLLLLMLLMLMMLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLNDDDENNLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNNDDNDNDNDNDNDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLMMMMMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMIKIKDDDDDDDDDMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAADDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFLLLLLLLLLLLLLLRDDRRRDDDNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKIKIGKNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDILLLLLLLLMLLLLLLLKLLLMLLLLLLLDIDDGDMKLLLLMLLLLLLALLLLKMLLKLLLLLLLLLLLLLMKLLAKMMLMKKKFKMAMMLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLMLMLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLLLFLDDLMLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMMLLLLLLMLLLLLLLLLLLLLLLAAANNEENGNNNDDDDDNDMMMFMLMLLLLLLLLLLLLLLLLLLMMMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLMMMMLLLLLMMMMMMLMMLLLLMMMMMMMMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDMLLLLMLLLLLLLLLLFLLLLLLLLFLLMLLLLLLLLFFMLLMMLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLIGKRRRRRRHRRRRRHRFFFFFFFFFFFFFAFFFFFFFFFFFGIGKK","n":["DfContextProviderAdapter","QueryEngine","QueryEngineContext","QueryEngineFactory","QueryEngineRef","dataframe","datafusion","dist_plan","error","executor","logical_optimizer","metrics","optimizer","parser","physical_optimizer","physical_planner","physical_wrapper","plan","planner","query_engine","range_select","region_query","sql","table_mutation","DataFrame","DataFusion","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","init","into","into_request","is_in_subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DatafusionQueryEngine","DfContextProviderAdapter","as_any","borrow","borrow_mut","compat","compat_mut","compat_ref","convert_filter_to_df_filter","create_physical_plan","delete","deref","deref_mut","describe","drop","engine_state","error","exec_dml_statement","exec_query_plan","execute","execute_show_with_filter","execute_stream","find_table","from","from_subset","init","insert","into","into_request","is_in_subset","name","new","optimize","optimize_physical_plan","planner","planner","plugins","read_table","register_aggregate_function","register_function","register_udf","session_state","state","table_provider","tables","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","ConvertDfRecordBatchStream","ConvertDfRecordBatchStreamSnafu","ConvertSchema","ConvertSchemaSnafu","Datafusion","DatafusionSnafu","ExecutePhysicalPlan","ExecutePhysicalPlanSnafu","InnerError","PhysicalPlanDowncast","PhysicalPlanDowncastSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","next","provide","source","status_code","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","error","location","location","location","location","location","source","source","source","DfContextProviderAdapter","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","engine_state","from","from_subset","get_aggregate_meta","get_function_meta","get_table_provider","get_variable_type","get_window_meta","init","into","into_request","is_in_subset","options","resolve_tables","session_state","table_provider","tables","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_new","type_id","vzip","DistExtensionPlanner","DistPlannerAnalyzer","MergeScanLogicalPlan","analyzer","catalog_manager","commutativity","input","is_placeholder","merge_scan","planner","region_query_handler","DistPlannerAnalyzer","Expanded","PlanRewriter","RewriterStatus","Unexpanded","analyze","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cmp","compare","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","get_parent","handle_subquery","init","init","init","inspect_plan_with_subquery","into","into","into","into_request","into_request","into_request","is_expanded","is_in_subset","is_in_subset","is_in_subset","level","maybe_set_partitions","mutate","name","partial_cmp","partition_cols","pop_stack","pre_visit","set_expanded","set_unexpanded","should_expand","stack","stage","status","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transform_subquery","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Categorizer","Commutative","Commutativity","ConditionalCommutative","NonCommutative","PartialCommutative","TransformedCommutative","Transformer","Unimplemented","Unsupported","borrow","borrow","borrow_mut","borrow_mut","check_expr","check_extension_plan","check_partition","check_plan","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","partial_commutative_transformer","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","MergeScanExec","MergeScanLogicalPlan","MergeScanMetric","arrow_schema","arrow_schema_to_schema","arrow_schema_without_metadata","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone_into","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dyn_eq","dyn_hash","eq","equivalent","equivalent","equivalent","equivalent","equivalent","execute","expressions","expressions","finish_time","finish_time","first_consume_time","first_consume_time","fmt","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_template","from_template","get_hash","hash","init","init","init","input","input","inputs","inputs","into","into","into","into_logical_plan","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_placeholder","is_placeholder","metric","metrics","name","name","name","new","new","new","output_ordering","output_partitioning","output_rows","prevent_predicate_push_down_columns","ready_time","ready_time","record_output_batch_rows","region_query_handler","regions","schema","schema","schema","schema","statistics","substrait_plan","table","to_owned","to_owned","to_stream","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_new_children","Base","DistExtensionPlanner","TableNameExtractor","TableNameRewriter","TableType","Temporary","View","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog_manager","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extract_full_table_name","fmt","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","get_regions","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","optimize_input_logical_plan","plan_extension","plan_with_full_table_name","pre_visit","region_query_handler","rewrite_table_name","serialize","table_name","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AddSystemTimeOverflow","AddSystemTimeOverflowSnafu","BuildBackend","BuildBackendSnafu","BuildRegex","BuildRegexSnafu","Catalog","CatalogNotFound","CatalogNotFoundSnafu","CatalogSnafu","ColumnSchemaIncompatible","ColumnSchemaIncompatibleSnafu","ColumnSchemaNoDefault","ColumnSchemaNoDefaultSnafu","ConvertDatafusionSchema","ConvertDatafusionSchemaSnafu","ConvertSchema","ConvertSchemaSnafu","ConvertSqlType","ConvertSqlTypeSnafu","ConvertSqlValue","ConvertSqlValueSnafu","CreateRecordBatch","CreateRecordBatchSnafu","CreateSchema","CreateSchemaSnafu","DataFusion","DataFusionSnafu","EncodeSubstraitLogicalPlan","EncodeSubstraitLogicalPlanSnafu","Error","InferSchema","InferSchemaSnafu","ListObjects","ListObjectsSnafu","MissingRequiredField","MissingRequiredFieldSnafu","MissingTableMutationHandler","MissingTableMutationHandlerSnafu","MissingTimestampColumn","MissingTimestampColumnSnafu","MultipleStatements","MultipleStatementsSnafu","ParseFileFormat","ParseFileFormatSnafu","ParseFloat","ParseFloatSnafu","ParseSql","ParseSqlSnafu","ParseTimestamp","ParseTimestampSnafu","PlanSql","PlanSqlSnafu","QueryAccessDenied","QueryAccessDeniedSnafu","QueryExecution","QueryExecutionSnafu","QueryParse","QueryParseSnafu","QueryPlan","QueryPlanSnafu","RangeQuery","RangeQuerySnafu","RegionQuery","RegionQuerySnafu","RemoteRequest","RemoteRequestSnafu","Result","RoutePartition","RoutePartitionSnafu","SchemaNotFound","SchemaNotFoundSnafu","Sql","SqlSnafu","TableMutation","TableMutationSnafu","TableNotFound","TableNotFoundSnafu","TimeIndexNotFound","TimeIndexNotFoundSnafu","UnexpectedOutputKind","UnexpectedOutputKindSnafu","Unimplemented","UnimplementedSnafu","UnknownTable","UnknownTableSnafu","UnsupportedExpr","UnsupportedExprSnafu","VectorComputation","VectorComputationSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","datatype","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duration","expected","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","file_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","got","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","msg","name","name","next","operation","provide","query","query","raw","raw","schema","schema","source","status_code","table","table","table","table_name","table_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","catalog","catalog","column","column","datatype","duration","error","error","error","error","error","expected","file_type","got","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","name","name","operation","query","query","raw","raw","schema","schema","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","table","table","table","table_name","table_type","value","QueryExecutor","execute_stream","LogicalOptimizer","optimize","METRIC_CREATE_PHYSICAL_ELAPSED","METRIC_EXEC_PLAN_ELAPSED","METRIC_MERGE_SCAN_ERRORS_TOTAL","METRIC_MERGE_SCAN_POLL_ELAPSED","METRIC_MERGE_SCAN_REGIONS","METRIC_OPTIMIZE_LOGICAL_ELAPSED","METRIC_OPTIMIZE_PHYSICAL_ELAPSED","METRIC_PARSE_PROMQL_ELAPSED","METRIC_PARSE_SQL_ELAPSED","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","order_hint","string_normalization","type_conversion","OrderHintRule","OrderHintVisitor","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","name","optimize","order_expr","pre_visit","set_ordering_hint","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","try_optimize","type_id","type_id","vzip","vzip","StringNormalizationConverter","StringNormalizationRule","analyze","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","mutate","name","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","trim_utf_expr","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","TypeConversionRule","TypeConverter","analyze","borrow","borrow","borrow_mut","borrow_mut","cast_scalar_value","column_type","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","convert_type","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","mutate","name","schema","string_to_timestamp_ms","timestamp_to_timestamp_ms_expr","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","ANALYZE_NODE_NAME","Analyze","AnalyzeExpr","DEFAULT_LOOKBACK","DEFAULT_LOOKBACK_STRING","EXPLAIN_NODE_NAME","Explain","ExplainExpr","PromQuery","Promql","QueryLanguageParser","QueryStatement","Sql","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","children","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_extension_node","default","define_node_ast_extension","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","end","eq","equivalent","equivalent","equivalent","equivalent","equivalent","expr","expr","expr","expr","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","name","new","new","parse_promql","parse_promql_timestamp","parse_sql","post_process","query","start","step","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_type","value_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","PhysicalOptimizer","optimize_physical_plan","PhysicalPlanner","create_physical_plan","PhysicalPlanWrapper","PhysicalPlanWrapperRef","wrap","DfPlan","LogicalPlan","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","display_indent","drop","fmt","from","from","from_ref","from_subset","get_param_types","init","into","into_request","is_in_subset","replace_params_with_values","schema","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DfLogicalPlanner","LogicalPlanner","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","engine_state","from","from_subset","init","into","into_request","is_in_subset","new","plan","plan","plan_pql","plan_sql","session_state","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DescribeResult","QueryEngine","QueryEngineContext","QueryEngineFactory","QueryEngineRef","QueryEngineState","aggregate_functions","as_any","borrow","borrow","borrow_mut","borrow_mut","catalog_manager","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","context","deref","deref","deref_mut","deref_mut","describe","df_context","drop","drop","execute","fmt","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","logical_plan","name","new","new_with_plugins","options","planner","plugins","query_ctx","query_engine","query_engine","read_table","register_aggregate_function","register_function","register_functions","register_udf","schema","state","state","table_mutation_handler","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","QueryEngineContext","borrow","borrow_mut","build_task_ctx","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","is_in_subset","new","query_ctx","query_ctx","state","state","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","QueryOptions","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","disallow_cross_schema_query","drop","from","from_ref","from_subset","init","into","into_request","is_in_subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","validate_catalog_and_schema","vzip","DfQueryPlanner","QueryEngineState","aggregate_function","aggregate_functions","borrow","borrow","borrow_mut","borrow_mut","catalog_manager","catalog_manager","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_physical_plan","deref","deref","deref_mut","deref_mut","df_context","disallow_cross_schema_query","drop","drop","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","new","physical_planner","plugins","read_table","register_aggregate_function","register_udf","remove_analyzer_rule","session_state","table_mutation_handler","table_mutation_handler","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","plan","plan_rewrite","planner","Const","Done","ExecutionState","Fill","Linear","Millisecond","Null","Prev","ProducingOutput","RangeFn","RangeFnExec","RangeSelect","RangeSelectExec","RangeSelectStream","ReadingInput","SeriesState","align","align","align","align_to_calendar","align_ts_accumulator","apply_fill_strategy","args","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by","by","by","by_schema","by_schema","cast_scalar_values","children","clone","clone","clone","clone_into","clone_into","clone_into","cmp","compare","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_physical_expr_list","data_type","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","dyn_eq","dyn_hash","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","evaluate_many","exec_state","execute","expr","expr","expressions","expressions","fill","fill","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_as","fmt_for_explain","fmt_for_explain","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_template","from_template","generate_output","get_hash","get_hash","get_hash","hash","hash","hash","init","init","init","init","init","init","init","init","input","input","input","inputs","inputs","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","metric","metric","metrics","modify_map","name","name","name","need_cast","need_cast","output_num_rows","output_ordering","output_partitioning","partial_cmp","poll_next","prevent_predicate_push_down_columns","random_state","range","range","range_exec","range_exec","range_expr","required_input_distribution","row","row_converter","schema","schema","schema","schema","schema","schema","schema","schema_before_project","schema_before_project","schema_before_project","schema_project","schema_project","schema_project","series_map","statistics","time_index","time_index","time_index","to_execution_plan","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_str","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_range_context","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_new_children","RangeExprRewriter","RangePlanRewriter","align","borrow","borrow","borrow_mut","borrow_mut","by","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","dispose_parse_error","drop","drop","from","from","from_subset","from_subset","get_index_by","get_range_expr","have_range_in_exprs","init","init","input_plan","into","into","into_request","into_request","is_in_subset","is_in_subset","mutate","new","parse_expr_list","parse_str_expr","range_fn","rewrite","rewrite_logical_plan","sub_aggr","table_provider","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","RangeSelectPlanner","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","plan_extension","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","RegionQueryHandler","RegionQueryHandlerRef","do_get","COLUMN_DEFAULT_COLUMN","COLUMN_KEY_COLUMN","COLUMN_NAME_COLUMN","COLUMN_NULLABLE_COLUMN","COLUMN_SEMANTIC_TYPE_COLUMN","COLUMN_TYPE_COLUMN","DESCRIBE_TABLE_OUTPUT_SCHEMA","GREPTIME_TIMESTAMP","NULLABLE_NO","NULLABLE_YES","PRI_KEY","SCHEMAS_COLUMN","SHOW_CREATE_TABLE_OUTPUT_SCHEMA","TABLES_COLUMN","check_file_to_table_schema_compatibility","describe_column_defaults","describe_column_keys","describe_column_names","describe_column_nullables","describe_column_semantic_types","describe_column_types","describe_table","file_column_schemas_to_table","get_table_types","infer_file_table_schema","parse_file_table_format","prepare_file_table_files","show_create_table","show_create_table","show_databases","show_tables","column_option_def","create_column_def","create_sql_options","create_table_constraints","create_table_stmt","number_value","sql_option","string_value","AffectedRows","TableMutationHandler","TableMutationHandlerRef","delete","insert"],"q":[[0,"query"],[24,"query::dataframe"],[51,"query::datafusion"],[103,"query::datafusion::error"],[285,"query::datafusion::error::InnerError"],[294,"query::datafusion::planner"],[328,"query::dist_plan"],[339,"query::dist_plan::analyzer"],[439,"query::dist_plan::commutativity"],[496,"query::dist_plan::merge_scan"],[634,"query::dist_plan::planner"],[752,"query::error"],[2123,"query::error::Error"],[2219,"query::executor"],[2221,"query::logical_optimizer"],[2223,"query::metrics"],[2439,"query::optimizer"],[2442,"query::optimizer::order_hint"],[2493,"query::optimizer::string_normalization"],[2541,"query::optimizer::type_conversion"],[2594,"query::parser"],[2815,"query::physical_optimizer"],[2817,"query::physical_planner"],[2819,"query::physical_wrapper"],[2822,"query::plan"],[2855,"query::planner"],[2885,"query::query_engine"],[2960,"query::query_engine::context"],[2989,"query::query_engine::options"],[3018,"query::query_engine::state"],[3085,"query::range_select"],[3088,"query::range_select::plan"],[3409,"query::range_select::plan_rewrite"],[3469,"query::range_select::planner"],[3492,"query::region_query"],[3495,"query::sql"],[3526,"query::sql::show_create_table"],[3534,"query::table_mutation"]],"d":["","","","","","","Planner, QueryEngine implementations based on DataFusion.","","","","","","","","","","","","","","","","","","DataFrame represents a logical set of rows with the same …","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a table in memory and executes a show statement on …","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Note in SQL queries, aggregate names are looked up using …","","","","","","","","","","","","","","","SNAFU context selector for the …","","SNAFU context selector for the <code>InnerError::ConvertSchema</code> …","","SNAFU context selector for the <code>InnerError::Datafusion</code> …","","SNAFU context selector for the …","Inner error of datafusion based query engine.","","SNAFU context selector for the …","","","","","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","In logical plan phase it only contains one input","If this plan is a placeholder","","ExtensionPlanner implementation for distributed planner","","","","","Status of the rewriter to mark if the current pass is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Current level in the tree","","ascend","","","Partition columns of the table in current pass","pop one stack item and reduce the level by 1","descend","","","Return true if should stop and expand. The input plan is …","Simulated stack for the <code>rewrite</code> recursion","Stages to be expanded","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For unrelated plans like DDL","","","","","","","Return true if the given expr and partition cols satisfied …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nanosecond elapsed till the scan operator finished …","","Nanosecond elapsed till the first record batch emitted …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","In logical plan phase it only contains one input","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a LogicalPlan::Extension node from this merge scan …","","","","","","","","If this plan is a placeholder","","","","","","","","","","","Count of rows fetched from remote","","","Nanosecond elapsed till the scan operator is ready to emit …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An ordinary physical table.","","Visitor to extract table name from logical plan (TableScan …","","Indicates the type of this table for metadata/catalog …","A transient table.","A non-materialised table that itself uses a query …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract fully resolved table name from logical plan","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Apply the fully resolved table name to the TableScan plan","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::AddSystemTimeOverflow</code>…","","SNAFU context selector for the <code>Error::BuildBackend</code> variant","","SNAFU context selector for the <code>Error::BuildRegex</code> variant","","","SNAFU context selector for the <code>Error::CatalogNotFound</code> …","SNAFU context selector for the <code>Error::Catalog</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ColumnSchemaNoDefault</code>…","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ConvertSchema</code> variant","","SNAFU context selector for the <code>Error::ConvertSqlType</code> …","","SNAFU context selector for the <code>Error::ConvertSqlValue</code> …","","SNAFU context selector for the <code>Error::CreateRecordBatch</code> …","","SNAFU context selector for the <code>Error::CreateSchema</code> variant","","SNAFU context selector for the <code>Error::DataFusion</code> variant","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::InferSchema</code> variant","","SNAFU context selector for the <code>Error::ListObjects</code> variant","","SNAFU context selector for the <code>Error::MissingRequiredField</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MultipleStatements</code> …","","SNAFU context selector for the <code>Error::ParseFileFormat</code> …","","SNAFU context selector for the <code>Error::ParseFloat</code> variant","","SNAFU context selector for the <code>Error::ParseSql</code> variant","","SNAFU context selector for the <code>Error::ParseTimestamp</code> …","","SNAFU context selector for the <code>Error::PlanSql</code> variant","","SNAFU context selector for the <code>Error::QueryAccessDenied</code> …","","SNAFU context selector for the <code>Error::QueryExecution</code> …","","SNAFU context selector for the <code>Error::QueryParse</code> variant","","SNAFU context selector for the <code>Error::QueryPlan</code> variant","","SNAFU context selector for the <code>Error::RangeQuery</code> variant","","SNAFU context selector for the <code>Error::RegionQuery</code> variant","","SNAFU context selector for the <code>Error::RemoteRequest</code> variant","","","SNAFU context selector for the <code>Error::RoutePartition</code> …","","SNAFU context selector for the <code>Error::SchemaNotFound</code> …","","SNAFU context selector for the <code>Error::Sql</code> variant","","SNAFU context selector for the <code>Error::TableMutation</code> variant","","SNAFU context selector for the <code>Error::TableNotFound</code> variant","","SNAFU context selector for the <code>Error::TimeIndexNotFound</code> …","","SNAFU context selector for the <code>Error::UnexpectedOutputKind</code> …","","SNAFU context selector for the <code>Error::Unimplemented</code> variant","","SNAFU context selector for the <code>Error::UnknownTable</code> variant","","SNAFU context selector for the <code>Error::UnsupportedExpr</code> …","","SNAFU context selector for the <code>Error::VectorComputation</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codexecutor to run PhysicalPlan.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This rule will pass the nearest order requirement to the …","Find the most closest order requirement to the leaf node.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","StringNormalizationRule normalizes(trims) string values in …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","remove extra whitespaces from the String value when there …","","","","","","","","","","","","","","","","","TypeConversionRule converts some literal values in logical …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The implementation of the <code>$name_expr</code> extension AST node","","","","","The implementation of the <code>$name_expr</code> extension AST node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Physical query planner that converts a <code>LogicalPlan</code> to an …","Create a physical plan from a logical plan","wrap physical plan with additional layer e.g: metrics …","","","","A LogicalPlan represents the different types of relational …","","","","","","","","","","Return a <code>format</code>able structure that produces a single line …","","","Returns the argument unchanged.","","","","Walk the logical plan, find any <code>PlaceHolder</code> tokens, and …","","Calls <code>U::from(self)</code>.","","","Return a logical plan with all placeholders/params (e.g $1 …","Get the schema for this logical plan","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Describe statement result","","","","","Query engine global state","","Returns the query engine as Any so that it can be downcast …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","The logical plan for statement","","","","","","","","","","Create a DataFrame from a table.","","","","","The schema of statement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Query engine global state","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Create a DataFrame for a table","Register an aggregate function.","Register a udf function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the unit of <code>align</code> is millisecond","","","According to <code>align</code>, produces a calendar-based aligned time.","key: align_ts value: a vector, each element is a range_fn …","The input <code>data</code> contains data on a complete time series. If …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The incoming logical plan","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","key: <code>(hash of by rows, align_ts)</code> value: <code>[row_ids]</code> It is …","","","with format like <code>max(a) 300s null</code>","If the <code>FIll</code> strategy is <code>Linear</code> and the output is an …","","The number of rows of the final output","","","","","","","","","","","all range expressions","","by values written by <code>RowWriter</code>","Converter for the by values","","","","","the schema of output column","","","","The schema before run projection, follow the order of …","","","If the <code>schema</code> of the <code>RangeSelect</code> happens to be the same as …","","key: time series’s hash value value: time series’s …","","Column index of TIME INDEX column’s position in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>RangeExprRewriter</code> will recursively search certain <code>Expr</code>, …","In order to implement RangeSelect query like …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","this function use to find the time_index column and row …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Use <code>BTreeSet</code> to avoid in case like …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function checks if the column schemas from a file can …","","","","","","","","","","","","","Implementation of <code>SHOW CREATE TABLE</code> statement.","","","","","","","","Create a CreateTable statement from table info.","","","","","A trait for handling table mutations in <code>QueryEngine</code>.","","Delete rows from the table.","Inserts rows into the table."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,9,9,9,9,9,9,0,9,9,9,9,9,9,52,0,9,9,9,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,9,9,9,9,9,9,52,9,52,52,9,9,9,9,9,9,9,38,0,38,0,38,0,38,0,0,38,0,38,38,38,42,41,43,44,45,38,42,41,43,44,45,38,41,38,42,41,43,44,45,42,41,43,44,45,42,41,43,44,45,38,42,41,43,44,45,38,42,41,43,44,45,38,38,42,41,43,44,45,38,42,41,43,44,45,38,38,42,41,43,44,45,38,41,42,41,43,44,45,38,38,42,41,43,44,45,38,42,41,43,44,45,42,41,43,44,45,38,42,41,43,44,45,38,42,41,43,44,45,38,42,41,43,44,45,42,41,43,44,45,38,42,41,43,44,45,38,38,38,38,38,42,41,43,44,45,38,42,41,43,44,45,38,42,41,43,44,45,38,42,41,43,44,45,38,42,42,41,41,43,43,44,44,45,45,38,38,42,41,43,44,45,38,42,41,43,44,45,38,251,251,252,253,254,255,253,254,255,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,52,52,52,52,52,52,52,52,52,52,52,0,0,0,0,110,0,81,81,0,0,110,0,68,0,0,68,66,66,68,70,66,68,70,68,68,66,68,70,66,68,70,66,68,70,68,70,66,68,70,66,68,70,66,68,70,68,68,68,68,68,68,68,70,66,68,70,66,68,70,70,66,66,68,70,66,66,68,70,66,68,70,70,66,68,70,70,70,70,66,68,70,70,70,70,70,70,70,70,70,66,68,70,66,68,70,66,66,68,70,66,66,68,68,70,70,66,68,70,66,68,70,0,74,0,74,74,74,74,0,74,74,74,256,74,256,256,256,256,256,74,256,74,256,74,256,74,256,74,256,74,256,74,256,74,256,74,256,74,256,74,256,74,256,0,74,256,74,256,74,256,74,74,256,256,74,256,74,256,0,0,0,79,79,79,79,81,79,81,82,79,81,82,79,81,82,81,82,79,81,82,79,81,82,79,81,82,79,81,82,79,81,82,79,81,82,81,81,81,81,81,81,81,81,79,81,81,82,82,82,82,79,81,82,79,81,81,79,81,82,81,82,79,81,82,81,81,81,81,79,81,82,81,81,81,81,79,81,82,81,79,81,82,79,81,82,81,81,79,79,81,81,81,79,81,82,79,79,82,81,82,82,82,79,79,79,81,81,79,79,79,79,81,82,79,79,81,82,79,81,82,79,81,82,79,79,81,81,82,82,79,81,82,79,81,82,79,107,0,0,0,0,107,107,110,257,107,108,110,257,107,108,110,107,107,110,257,107,108,110,257,107,108,110,257,107,108,108,110,257,107,108,110,257,107,108,107,110,257,107,108,107,107,107,107,107,107,110,107,107,110,257,107,108,107,110,257,107,108,110,110,257,107,108,110,257,107,108,110,257,107,108,110,257,107,108,110,110,110,110,108,110,257,107,108,107,107,110,257,107,108,110,257,107,108,110,257,107,108,110,110,257,257,107,107,108,108,110,257,107,108,110,257,107,108,115,0,115,0,115,0,115,115,0,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,0,115,115,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,119,120,121,122,123,124,125,126,127,128,130,132,133,134,135,119,122,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,132,133,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,152,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,130,125,117,118,119,120,121,122,123,124,125,126,127,128,130,132,133,134,135,132,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,125,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,135,117,126,115,118,115,143,123,145,146,120,122,115,115,121,153,128,124,132,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,117,117,118,118,137,137,119,119,120,120,121,121,138,138,139,139,140,140,141,141,142,142,143,143,122,122,123,123,144,144,145,145,146,146,147,147,148,148,149,149,150,150,124,124,151,151,152,152,153,153,154,154,155,155,125,125,126,126,156,156,157,157,158,158,159,159,160,160,161,161,127,127,128,128,130,130,132,132,133,133,162,162,163,163,134,134,135,135,115,115,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,151,117,118,137,119,120,121,138,139,140,141,142,143,122,123,144,145,146,147,148,149,150,124,151,152,153,154,155,125,126,156,157,158,159,160,161,127,128,130,132,133,162,163,134,135,115,258,259,260,261,262,263,264,265,266,267,268,269,260,269,270,271,272,258,273,274,275,276,277,278,279,280,259,281,282,264,265,266,283,284,267,285,286,262,287,288,289,269,290,268,291,292,293,294,295,296,297,263,260,261,298,299,300,301,301,270,290,271,280,281,264,265,273,259,272,275,276,277,278,279,280,282,283,284,286,262,287,288,289,291,292,293,294,295,298,299,274,287,297,285,260,286,0,302,0,303,0,0,0,0,0,0,0,0,0,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,166,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,166,166,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,166,168,169,170,171,172,173,174,175,166,168,169,170,171,172,173,174,175,0,0,0,0,0,178,177,178,177,178,177,178,177,178,177,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,177,178,178,177,177,178,178,177,178,177,178,177,178,178,177,177,178,178,177,178,177,0,0,181,181,182,181,182,181,182,181,182,181,182,181,182,181,182,181,182,181,182,181,182,181,182,181,182,181,182,181,182,182,181,181,182,181,182,0,181,182,181,181,182,182,181,182,181,182,0,0,183,183,185,183,185,185,185,183,185,183,185,183,185,185,183,185,183,185,183,185,183,185,183,185,183,185,183,185,183,185,183,185,185,183,185,0,0,183,185,183,185,183,185,183,183,185,185,183,185,183,185,0,0,0,0,0,0,0,0,0,191,0,0,191,188,189,304,191,192,188,193,189,194,304,191,192,188,193,189,194,188,189,191,192,188,193,189,194,191,192,188,193,189,194,304,191,192,188,193,189,194,304,191,192,188,193,189,194,304,191,192,188,193,189,194,191,192,0,304,191,192,188,193,189,194,304,191,192,188,193,189,194,304,191,192,188,193,189,194,192,192,192,192,192,192,192,188,193,189,194,191,192,188,193,189,194,304,191,192,188,193,189,194,191,192,188,193,189,194,304,191,192,188,193,189,194,304,191,192,188,193,189,194,304,191,192,188,193,189,194,304,191,192,188,193,189,194,304,191,192,188,193,189,194,188,189,193,194,304,304,304,191,192,192,192,191,192,188,193,189,194,304,191,192,188,193,189,194,304,191,192,188,193,189,194,304,191,192,188,193,189,194,304,304,191,191,192,192,188,188,193,193,189,189,194,194,304,191,192,188,193,189,194,188,189,304,191,192,188,193,189,194,0,305,0,306,0,0,307,15,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,34,200,200,200,200,200,200,200,200,200,200,200,0,0,0,0,0,0,32,308,205,203,205,203,32,205,203,205,203,205,203,0,205,203,205,203,308,32,205,203,308,203,205,203,205,203,205,203,205,203,205,203,205,203,203,308,205,205,0,308,32,14,205,205,308,308,308,0,308,203,0,14,32,205,203,205,203,205,203,205,205,203,203,205,203,205,203,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,0,207,0,0,32,32,208,32,208,32,32,32,32,32,208,32,208,32,208,32,208,208,32,208,32,32,32,208,32,32,208,32,32,208,32,208,32,208,32,208,32,208,32,208,32,208,32,32,32,32,32,32,32,32,32,208,32,208,32,208,32,208,208,32,32,208,32,208,32,0,0,0,213,309,0,0,213,0,213,213,309,0,0,0,0,0,309,0,219,217,214,0,222,213,216,217,214,219,309,213,215,217,216,214,222,219,309,213,215,217,216,214,222,219,217,214,217,214,0,214,213,215,216,213,215,216,215,215,219,309,213,215,217,216,214,222,219,309,213,215,217,216,214,222,219,309,213,215,217,216,214,222,217,215,219,309,213,215,217,216,214,222,219,309,213,215,217,216,214,222,219,309,213,215,217,216,214,222,217,217,213,215,217,213,213,213,213,213,215,215,215,215,215,217,217,217,217,217,219,219,214,215,216,217,217,215,216,213,213,215,215,217,216,214,222,214,217,217,219,309,213,215,217,216,214,222,213,215,216,219,309,213,215,217,216,214,222,217,217,219,213,215,217,213,215,217,219,309,213,215,217,216,214,222,219,217,214,217,217,219,309,213,215,217,216,214,222,219,309,213,215,217,216,214,222,219,219,309,213,215,217,216,214,222,219,214,214,219,217,217,215,215,216,219,214,214,215,219,217,219,215,216,219,214,217,214,222,219,219,217,217,214,219,217,214,219,217,214,219,217,214,219,214,219,217,214,217,213,215,216,213,215,219,309,213,215,217,216,214,222,219,309,213,215,217,216,214,222,219,309,213,215,217,216,214,222,213,219,219,309,309,213,213,215,215,217,217,216,216,214,214,222,222,217,219,219,309,213,215,217,216,214,222,219,219,309,213,215,217,216,214,222,214,0,0,228,228,227,228,227,228,228,227,228,227,228,227,228,227,228,227,0,228,227,228,227,228,227,227,228,0,228,227,228,228,227,228,227,228,227,228,227,0,0,228,227,227,228,227,228,227,228,227,228,227,228,228,227,227,228,227,228,227,0,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,0,0,310,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,311,311],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[],2],[[],2],[[],2],[3],[3],[3],[[]],[[]],[[]],[[],3],[[]],[[],4],[[],5],[[]],[[],6],[[]],[[],7],[[],7],[[],7],[[],8],[[]],0,0,[9,10],[[]],[[]],[[],2],[[],2],[[],2],[11,[[13,[12]]]],[[9,14,15],[[18,[[17,[16]]]]]],[[9,19,20,[23,[21,22]],24],[[13,[3]]]],[3],[3],[[9,15],[[18,[[17,[16]]]]]],[3],0,0,[[9,25,24],[[13,[26]]]],[[9,15,24],[[13,[26]]]],[[9,15,24],[[18,[[17,[16]]]]]],[[27,[6,[11]]],[[13,[26]]]],[[9,14,[29,[28]]],[[13,[30]]]],[[9,19],[[13,[20]]]],[[]],[[]],[[],3],[[9,19,[23,[21,22]],24],[[13,[3]]]],[[]],[[],4],[[],5],[9,31],[[[29,[32]],33],9],[[9,15],[[13,[15]]]],[[9,14,[29,[28]]],[[13,[[29,[28]]]]]],0,[9,[[29,[34]]]],0,[[9,20],[[13,[1]]]],[[9,35]],[[9,36]],[[9,37]],0,0,0,0,[[],6],[[]],[[],7],[[],7],[[],7],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,0,[38,10],[[],39],[38,[[6,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,38],[38,[[6,[39]]]],[42,42],[41,41],[43,43],[44,44],[45,45],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[38,3,[46,[21]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[38,31],[3],[3],[3],[3],[3],[3],[41,[[7,[38]]]],[[42,47],48],[[41,47],48],[[43,47],48],[[44,47],48],[[45,47],48],[[38,47],48],[[38,47],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[42,38],[41,38],[43,38],[44,38],[45,38],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[38,[[6,[49]]]],[50],[38,[[6,[39]]]],[38,51],[[]],[[]],[[]],[[]],[[]],[[],21],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],2],[[],2],[[],2],[3],[3],[3],0,[[]],[[]],[[52,31],[[6,[[29,[53]]]]]],[[52,31],[[6,[[29,[54]]]]]],[[52,55],[[57,[[29,[56]]]]]],[[52,[58,[21]]],[[6,[59]]]],[[52,31],[[6,[[29,[60]]]]]],[[],3],[[]],[[],4],[[],5],[52,61],[[[46,[62]],63],[[13,[[23,[21,[29,[56]]]]]]]],0,0,0,[[],6],[[]],[[],7],[[],7],[[],7],[[[29,[32]],64,65,24],[[13,[52]]]],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[66,67,61],[[57,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[68,68],69],[[],69],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],68],[[],70],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[68,68],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[68,47],48],[[70,47],48],[[]],[[]],[[]],[[]],[[]],[[]],[70,[[6,[67]]]],[71,[[57,[71]]]],[[],3],[[],3],[[],3],[67,[[57,[[72,[67]]]]]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[70,5],[[],5],[[],5],[[],5],0,[[70,67]],[70,57],[66,31],[[68,68],[[6,[69]]]],0,[70],[70,[[57,[73]]]],[70],[70],[[70,67],5],0,0,0,[[],6],[[],6],[[],6],[[]],[[]],[[]],[12,[[57,[[72,[12]]]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[12,74],[75,74],[[[58,[12]],[58,[21]]],5],[[67,[6,[[46,[21]]]]],74],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],4],[[],4],[[],5],[[],5],[67,[[6,[67]]]],[[],6],[[],6],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[]],[[]],0,0,0,0,[76,[[57,[77]]]],[78,76],[79,10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[79,[[46,[[29,[80]]]]]],[81,81],[82,82],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[75,5],[83],[[81,81],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[79,3,[29,[84]]],[[57,[85]]]],[81,[[46,[12]]]],[[],[[46,[12,86]]]],[82,87],0,[82,87],0,[[79,47],48],[[81,47],48],[[82,47],48],[[79,88,47],48],[[81,47],48],[47,[[7,[89]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[81,[58,[12]],[58,[67]]],81],[[[58,[12]],[58,[67]]],[[29,[75,86]]]],[[[0,[90,91]],92],93],[[81,83]],[[],3],[[],3],[[],3],[81,67],0,[81,[[46,[67]]]],[[],[[46,[67,86]]]],[[]],[[]],[[]],[81,67],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[81,5],0,0,[79,[[6,[94]]]],[[],31],[[],31],[81,31],[[95,[46,[96]],97,78,98],[[57,[79]]]],[[67,5],81],[99,82],[79,[[6,[[58,[100]]]]]],[79,101],0,[[],[[103,[21,102]]]],[82,87],0,[[82,3]],0,0,[79,76],[[],[[29,[104,86]]]],[81,105],0,[79,106],0,0,[[]],[[]],[[79,[29,[84]]],[[57,[30]]]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[[29,[79]],[46,[[29,[80]]]]],[[57,[[29,[80]]]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[107,107],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],108],[3],[3],[3],[3],[3],[3],[3],[3],[109,[[7,[107]]]],[3],[3],[3],[3],[[107,107],5],[[],5],[[],5],[[],5],[[],5],[[],5],[67,[[57,[[6,[95]]]]]],[[107,47],[[7,[89]]]],[[107,47],[[7,[89]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[110,95],[[57,[[46,[96]]]]]],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[[],5],[[111,98],110],[[110,64,67],[[57,[67]]]],[[110,112,75,[58,[67]],[58,[[29,[80]]]],64],[[18,[[17,[16]]]]]],[[67,95],[[57,[67]]]],[108,[[57,[113]]]],0,[[67,95],[[57,[[72,[67]]]]]],[[107,114],7],0,[[]],[[],21],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[115,10],[[],39],[115,[[6,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[117,[[116,[21]]]]],115],[[[118,[[116,[21]]]]],115],[[[119,[[116,[21]]]]],115],[[[120,[[116,[21]]]]],115],[[[121,[[116,[21]]]]],115],[[[122,[[116,[21]],[116,[21]]]]],115],[[[123,[[116,[21]]]]],115],[[[124,[[116,[21]]]]],115],[[[125,[[116,[21]],[116,[21]]]]],115],[[[126,[[116,[21]]]]],115],[127,115],[[[128,[[116,[21]]]]],115],[[[130,[[116,[129]]]]],115],[[[132,[[116,[21]],[116,[131]],[116,[131]]]]],115],[[[133,[[116,[21]]]]],115],[134,115],[[[135,[[116,[21]]]]],115],0,0,[115,[[6,[39]]]],[[[117,[136]]],[[117,[136]]]],[[[118,[136]]],[[118,[136]]]],[137,137],[[[119,[136]]],[[119,[136]]]],[[[120,[136]]],[[120,[136]]]],[[[121,[136]]],[[121,[136]]]],[138,138],[139,139],[140,140],[141,141],[142,142],[[[143,[136]]],[[143,[136]]]],[[[122,[136,136]]],[[122,[136,136]]]],[[[123,[136]]],[[123,[136]]]],[144,144],[[[145,[136]]],[[145,[136]]]],[[[146,[136]]],[[146,[136]]]],[147,147],[148,148],[149,149],[150,150],[[[124,[136]]],[[124,[136]]]],[[[151,[136]]],[[151,[136]]]],[[[152,[136]]],[[152,[136]]]],[[[153,[136]]],[[153,[136]]]],[154,154],[155,155],[[[125,[136,136]]],[[125,[136,136]]]],[[[126,[136]]],[[126,[136]]]],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[127,127],[[[128,[136]]],[[128,[136]]]],[[[130,[136]]],[[130,[136]]]],[[[132,[136,136,136]]],[[132,[136,136,136]]]],[[[133,[136]]],[[133,[136]]]],[162,162],[163,163],[134,134],[[[135,[136]]],[[135,[136]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[115,3,[46,[21]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[115,31],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,0,[[[117,[[116,[21]]]]],[[7,[115]]]],[[[118,[[116,[21]]]]],[[7,[115]]]],[[[119,[[116,[21]]]]],[[7,[115]]]],[[[120,[[116,[21]]]]],[[7,[115]]]],[[[121,[[116,[21]]]]],[[7,[115]]]],[[[122,[[116,[21]],[116,[21]]]]],[[7,[115]]]],[[[123,[[116,[21]]]]],[[7,[115]]]],[[[124,[[116,[21]]]]],[[7,[115]]]],[[[125,[[116,[21]],[116,[21]]]]],[[7,[115]]]],[[[126,[[116,[21]]]]],[[7,[115]]]],[127,[[7,[115]]]],[[[128,[[116,[21]]]]],[[7,[115]]]],[[[130,[[116,[129]]]]],[[7,[115]]]],[[[132,[[116,[21]],[116,[131]],[116,[131]]]]],[[7,[115]]]],[[[133,[[116,[21]]]]],[[7,[115]]]],[134,[[7,[115]]]],[[[135,[[116,[21]]]]],[[7,[115]]]],0,[[[117,[164]],47],48],[[[118,[164]],47],48],[[137,47],48],[[[119,[164]],47],48],[[[120,[164]],47],48],[[[121,[164]],47],48],[[138,47],48],[[139,47],48],[[140,47],48],[[141,47],48],[[142,47],48],[[[143,[164]],47],48],[[[122,[164,164]],47],48],[[[123,[164]],47],48],[[144,47],48],[[[145,[164]],47],48],[[[146,[164]],47],48],[[147,47],48],[[148,47],48],[[149,47],48],[[150,47],48],[[[124,[164]],47],48],[[[151,[164]],47],48],[[[152,[164]],47],48],[[[153,[164]],47],48],[[154,47],48],[[155,47],48],[[[125,[164,164]],47],48],[[[126,[164]],47],48],[[156,47],48],[[157,47],48],[[158,47],48],[[159,47],48],[[160,47],48],[[161,47],48],[[127,47],48],[[[128,[164]],47],48],[[[130,[164]],47],48],[[[132,[164,164,164]],47],48],[[[133,[164]],47],48],[[162,47],48],[[163,47],48],[[134,47],48],[[[135,[164]],47],48],[[115,47],48],[[115,47],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[117,[[116,[21]]]]],115],[[[118,[[116,[21]]]]],115],[137,115],[[[119,[[116,[21]]]]],115],[[[120,[[116,[21]]]]],115],[[[121,[[116,[21]]]]],115],[138,115],[139,115],[140,115],[141,115],[142,115],[[[143,[[116,[21]]]]],115],[[[122,[[116,[21]],[116,[21]]]]],115],[[[123,[[116,[21]]]]],115],[144,115],[[[145,[[116,[21]]]]],115],[[[146,[[116,[21]]]]],115],[147,115],[148,115],[149,115],[150,115],[[[124,[[116,[21]]]]],115],[[[151,[[116,[165]]]]],115],[[[152,[[116,[131]]]]],115],[[[153,[[116,[95]]]]],115],[154,115],[155,115],[[[125,[[116,[21]],[116,[21]]]]],115],[[[126,[[116,[21]]]]],115],[156,115],[157,115],[158,115],[159,115],[160,115],[161,115],[127,115],[[[128,[[116,[21]]]]],115],[[[130,[[116,[129]]]]],115],[[[132,[[116,[21]],[116,[131]],[116,[131]]]]],115],[[[133,[[116,[21]]]]],115],[162,115],[163,115],[134,115],[[[135,[[116,[21]]]]],115],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,[115,[[6,[49]]]],0,[50],0,0,0,0,0,0,[115,[[6,[39]]]],[115,51],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[14,[29,[28]]],[[13,[30]]]],0,[15,[[13,[15]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[166,167],[168,167],[3],[169,167],[3],[3],[170,167],[3],[171,167],[172,167],[3],[173,167],[3],[3],[174,167],[175,176],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],177],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],4],[[],4],[[],5],[[],5],[178,31],[67,[[57,[67]]]],0,[177,[[57,[113]]]],[[67,[58,[179]]],[[57,[[72,[67]]]]]],[[],6],[[],6],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[178,67,180],[[57,[[6,[67]]]]]],[[],8],[[],8],[[]],[[]],0,0,[[181,67,61],[[57,[67]]]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],4],[[],4],[[],5],[[],5],[[182,12],[[57,[12]]]],[181,31],[[],6],[[],6],[[]],[[]],[21,12],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[]],[[]],0,0,[[183,67,61],[[57,[67]]]],[[]],[[]],[[]],[[]],[[184,59],[[57,[184]]]],[[185,12],[[6,[59]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[185,12,12],57],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],4],[[],4],[[],5],[[],5],[[185,12],[[57,[12]]]],[183,31],0,[31,[[57,[184]]]],[[186,187],12],[[],6],[[],6],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[188,10],[189,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[188,[[58,[190]]]],[189,[[58,[190]]]],[191,191],[192,192],[188,188],[193,193],[189,189],[194,194],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[31,190],[[6,[195]]]],[[],192],0,[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,[[192,192],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,[[191,47],48],[[192,47],48],[[188,47],48],[[193,47],48],[[189,47],48],[[194,47],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[188,31],[189,31],[190,193],[190,194],[192,[[13,[191]]]],[31,[[13,[196]]]],[31,[[13,[191]]]],[[191,[23,[21,21]]],[[13,[191]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[188,197],[189,197],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[14,[29,[28]]],[[13,[[29,[28]]]]]],0,[[14,15],[[18,[[17,[16]]]]]],0,0,[[[29,[28]],24],[[29,[28]]]],0,0,[[]],[[]],[15,15],[[]],[[],2],[[],2],[[],2],[3],[3],[15,198],[3],[[15,47],48],[[]],[67,15],[[]],[[]],[15,[[13,[[23,[21,[6,[131]]]]]]]],[[],3],[[]],[[],4],[[],5],[[15,[58,[184]]],[[13,[15]]]],[15,[[13,[199]]]],[[]],[[],6],[[]],[[],7],[[],7],[[],7],[[],8],[[]],0,0,[[]],[[]],[[],2],[[],2],[[],2],[3],[3],[3],0,[[]],[[]],[[],3],[[]],[[],4],[[],5],[[[29,[32]]],200],[[191,24],[[18,[[17,[16]]]]]],[[200,191,24],[[18,[[17,[16]]]]]],[[200,201,24],[[13,[15]]]],[[200,202,24],[[13,[15]]]],0,[[],6],[[]],[[],7],[[],7],[[],7],[[],8],[[]],0,0,0,0,0,0,0,[[],10],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[3],[3],[3],[3],[15,[[18,[[17,[16]]]]]],0,[3],[3],[[15,24],[[18,[[17,[16]]]]]],[[203,47],48],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],4],[[],4],[[],5],[[],5],0,[[],31],[[111,[6,[98]],[6,[204]],5],205],[[111,[6,[98]],[6,[204]],5,33],205],0,[[],[[29,[34]]]],0,0,[205,206],0,[20,[[13,[1]]]],[35],[36],[[[29,[9]]]],[37],0,0,0,0,[[],6],[[],6],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[]],[[]],0,[[]],[[]],[14,[[29,[84]]]],[[],2],[[],2],[[],2],[3],[3],[3],[[14,47],48],[[]],[[]],[[],3],[[]],[[],4],[[],5],[[64,24],14],[14,24],0,[14,64],0,[[],6],[[]],[[],7],[[],7],[[],7],[[],8],[[]],0,[[]],[[]],[207,207],[[]],[[],2],[[],2],[[],2],[[],207],[3],[3],0,[3],[[]],[[]],[[]],[[],3],[[]],[[],4],[[],5],[[]],[[],6],[[]],[[],7],[[],7],[[],7],[[],8],[[31,31,24],13],[[]],0,0,[[32,31],[[6,[35]]]],0,[[]],[[]],[[]],[[]],[32,111],0,[32,32],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[208,67,64],[[18,[[17,[16]]]]]],[3],[3],[3],[3],0,[32,5],[3],[3],[[32,47],48],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],4],[[],4],[[],5],[[],5],[[111,[6,[98]]],208],[[111,[6,[98]],[6,[204]],5,33],32],0,0,[[32,20],[[57,[209]]]],[[32,35]],[[32,37]],[[[46,[[29,[210]]]],31]],[32,64],[32,[[6,[204]]]],0,[[]],[[],6],[[],6],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[211,[58,[93]],[23,[[46,[212]]]]]],0,[[213,[58,[184]]],57],0,[[],10],[214,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[[58,[184]],59],57],[214,[[46,[[29,[80]]]]]],[213,213],[215,215],[216,216],[[]],[[]],[[]],[[215,215],69],[[],69],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[217,[58,[12]],[29,[104]],78,64],[[57,[[46,[[29,[218]]]]]]]],0,[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[75,5],[83],[[213,213],5],[[215,215],5],[[217,217],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[219,220,[58,[[29,[218]]]]],[[57,[[46,[221]]]]]],0,[[214,3,[29,[84]]],[[57,[85]]]],0,0,[217,[[46,[12]]]],[[],[[46,[12,86]]]],0,0,[[213,47],48],[[213,47],48],[[215,47],48],[[215,47],48],[[217,47],48],[[216,47],48],[[214,47],48],[[222,47],48],[[214,88,47],48],[[217,47],48],[47,[[7,[89]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[217,[58,[12]],[58,[67]]],217],[[[58,[12]],[58,[67]]],[[29,[75,86]]]],[219,[[57,[220]]]],[[[0,[90,91]],92],93],[[[0,[90,91]],92],93],[[[0,[90,91]],92],93],[[213,83]],[[215,83]],[[217,83]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,[217,[[46,[67]]]],[[],[[46,[67,86]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[214,[[6,[94]]]],0,[[],31],[217,31],0,0,0,0,[214,[[6,[[58,[100]]]]]],[214,101],[[215,215],[[6,[69]]]],[[[18,[219]],223],[[224,[6]]]],[[],[[103,[21,102]]]],0,0,0,0,0,0,[214,[[46,[225]]]],0,0,[219,76],[[],[[29,[104,86]]]],[217,105],[214,76],0,0,0,0,0,0,0,0,0,0,[214,106],0,0,0,[[217,67,[29,[80]],64],[[57,[[29,[80]]]]]],[[]],[[]],[[]],[[],21],[[],21],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[31,59],[[57,[213]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[29,[67]],[46,[215]],129,12,[46,[12]],[58,[12]]],[[13,[217]]]],[[18,223],[[224,[[6,[7]]]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[219,220],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[214]],[46,[[29,[80]]]]],[[57,[[29,[80]]]]]],0,0,0,[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[3],[3],[3],[3],[[[6,[12]]],226],[3],[3],[[]],[[]],[[]],[[]],[[227,[29,[104]]],13],[[228,[58,[12]],3],[[57,[12]]]],[[[58,[12]]],5],[[],3],[[],3],0,[[]],[[]],[[],4],[[],4],[[],5],[[],5],[[228,12],[[57,[12]]]],[63,227],[[[58,[12]],3,3],[[57,[[46,[12]]]]]],[[[58,[12]],3],[[57,[31]]]],0,[[227,67],[[13,[67]]]],[[227,67],[[18,[[17,[16]]]]]],0,0,[[],6],[[],6],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[]],[[]],0,[[]],[[]],[[],2],[[],2],[[],2],[3],[3],[3],[[]],[[]],[[],3],[[]],[[],4],[[],5],[[229,112,75,[58,[67]],[58,[[29,[80]]]],64],[[18,[[17,[16]]]]]],[[],6],[[]],[[],7],[[],7],[[],7],[[],8],[[]],0,0,[230,[[18,[[17,[16]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[58,[231]],[58,[231]]],13],[[[58,[231]]],22],[[[58,[231]],[58,[3]]],22],[[[58,[231]]],22],[[[58,[231]]],22],[[[58,[231]],[58,[3]]],22],[[[58,[231]]],22],[20,[[13,[26]]]],[[[58,[231]]]],[[[58,[21]],111,24,31],[[13,[[29,[232]]]]]],[[233,[58,[21]],[23,[21,21]]],[[13,[234]]]],[[[23,[21,21]]],[[13,[[17,[235]]]]]],[[[23,[21,21]]],13],0,[[20,[6,[236]],24],[[13,[26]]]],[[237,111,24],[[13,[26]]]],[[238,111,24],[[13,[26]]]],[239,240],[[231,241],[[13,[242]]]],[243,[[46,[244]]]],[[77,243,241],[[46,[245]]]],[[246,241],[[13,[247]]]],[198,248],[[31,248],244],[[[116,[21]]],248],0,0,0,[[249,24],[[18,[[17,[16]]]]]],[[250,24],[[18,[[17,[16]]]]]]],"c":[],"p":[[4,"DataFrame"],[3,"Compat"],[15,"usize"],[3,"Request"],[15,"bool"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"DatafusionQueryEngine"],[8,"Any"],[4,"Expr"],[4,"Expr"],[6,"Result"],[3,"QueryEngineContext"],[4,"LogicalPlan"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"ResolvedTableReference"],[6,"TableRef"],[3,"String"],[6,"VectorRef"],[3,"HashMap"],[6,"QueryContextRef"],[3,"DmlStatement"],[4,"Output"],[3,"RecordBatch"],[8,"PhysicalPlan"],[3,"Arc"],[6,"SendableRecordBatchStream"],[15,"str"],[3,"QueryEngineState"],[3,"Plugins"],[8,"LogicalPlanner"],[6,"AggregateFunctionMetaRef"],[6,"FunctionRef"],[3,"ScalarUdf"],[4,"InnerError"],[8,"Error"],[3,"Backtrace"],[3,"PhysicalPlanDowncastSnafu"],[3,"DatafusionSnafu"],[3,"ConvertSchemaSnafu"],[3,"ConvertDfRecordBatchStreamSnafu"],[3,"ExecutePhysicalPlanSnafu"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"DfContextProviderAdapter"],[3,"AggregateUDF"],[3,"ScalarUDF"],[4,"TableReference"],[8,"TableSource"],[6,"Result"],[15,"slice"],[4,"DataType"],[3,"WindowUDF"],[3,"ConfigOptions"],[6,"OwnedTableReference"],[3,"DfTableSourceProvider"],[3,"SessionState"],[4,"Statement"],[3,"DistPlannerAnalyzer"],[4,"LogicalPlan"],[4,"RewriterStatus"],[4,"Ordering"],[3,"PlanRewriter"],[3,"Subquery"],[4,"Transformed"],[4,"RewriteRecursion"],[4,"Commutativity"],[8,"UserDefinedLogicalNode"],[6,"SchemaRef"],[6,"SchemaRef"],[3,"Schema"],[3,"MergeScanExec"],[8,"ExecutionPlan"],[3,"MergeScanLogicalPlan"],[3,"MergeScanMetric"],[8,"Hasher"],[3,"TaskContext"],[6,"SendableRecordBatchStream"],[3,"Global"],[3,"Time"],[4,"DisplayFormatType"],[3,"Error"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[3,"MetricsSet"],[3,"TableName"],[3,"RegionId"],[3,"Bytes"],[6,"RegionQueryHandlerRef"],[3,"ExecutionPlanMetricsSet"],[3,"PhysicalSortExpr"],[4,"Partitioning"],[3,"RandomState"],[3,"HashSet"],[3,"DFSchema"],[6,"DFSchemaRef"],[3,"Statistics"],[4,"TableType"],[3,"TableNameExtractor"],[8,"Deserializer"],[3,"DistExtensionPlanner"],[6,"CatalogManagerRef"],[8,"PhysicalPlanner"],[4,"VisitRecursion"],[8,"Serializer"],[4,"Error"],[8,"Into"],[3,"UnsupportedExprSnafu"],[3,"UnimplementedSnafu"],[3,"CatalogNotFoundSnafu"],[3,"SchemaNotFoundSnafu"],[3,"TableNotFoundSnafu"],[3,"QueryAccessDeniedSnafu"],[3,"MultipleStatementsSnafu"],[3,"MissingTimestampColumnSnafu"],[3,"UnexpectedOutputKindSnafu"],[3,"MissingRequiredFieldSnafu"],[3,"UnknownTableSnafu"],[3,"TimeIndexNotFoundSnafu"],[3,"Duration"],[3,"AddSystemTimeOverflowSnafu"],[4,"ConcreteDataType"],[3,"ColumnSchemaIncompatibleSnafu"],[3,"ColumnSchemaNoDefaultSnafu"],[3,"MissingTableMutationHandlerSnafu"],[3,"RangeQuerySnafu"],[8,"Clone"],[3,"CatalogSnafu"],[3,"VectorComputationSnafu"],[3,"CreateRecordBatchSnafu"],[3,"CreateSchemaSnafu"],[3,"QueryExecutionSnafu"],[3,"QueryPlanSnafu"],[3,"QueryParseSnafu"],[3,"ConvertDatafusionSchemaSnafu"],[3,"ParseTimestampSnafu"],[3,"ParseFloatSnafu"],[3,"DataFusionSnafu"],[3,"EncodeSubstraitLogicalPlanSnafu"],[3,"SqlSnafu"],[3,"PlanSqlSnafu"],[3,"ConvertSqlValueSnafu"],[3,"ConvertSqlTypeSnafu"],[3,"RoutePartitionSnafu"],[3,"ParseSqlSnafu"],[3,"RemoteRequestSnafu"],[3,"BuildRegexSnafu"],[3,"BuildBackendSnafu"],[3,"ListObjectsSnafu"],[3,"ParseFileFormatSnafu"],[3,"InferSchemaSnafu"],[3,"ConvertSchemaSnafu"],[3,"RegionQuerySnafu"],[3,"TableMutationSnafu"],[8,"Debug"],[4,"Value"],[3,"METRIC_PARSE_SQL_ELAPSED"],[3,"Histogram"],[3,"METRIC_PARSE_PROMQL_ELAPSED"],[3,"METRIC_OPTIMIZE_LOGICAL_ELAPSED"],[3,"METRIC_OPTIMIZE_PHYSICAL_ELAPSED"],[3,"METRIC_CREATE_PHYSICAL_ELAPSED"],[3,"METRIC_EXEC_PLAN_ELAPSED"],[3,"METRIC_MERGE_SCAN_POLL_ELAPSED"],[3,"METRIC_MERGE_SCAN_REGIONS"],[3,"METRIC_MERGE_SCAN_ERRORS_TOTAL"],[6,"IntCounter"],[3,"OrderHintVisitor"],[3,"OrderHintRule"],[3,"Sort"],[8,"OptimizerConfig"],[3,"StringNormalizationRule"],[3,"StringNormalizationConverter"],[3,"TypeConversionRule"],[4,"ScalarValue"],[3,"TypeConverter"],[15,"i64"],[4,"TimeUnit"],[3,"AnalyzeExpr"],[3,"ExplainExpr"],[4,"Expr"],[4,"QueryStatement"],[3,"PromQuery"],[3,"Analyze"],[3,"Explain"],[3,"Extension"],[3,"SystemTime"],[4,"ValueType"],[8,"Display"],[3,"Schema"],[3,"DfLogicalPlanner"],[3,"EvalStmt"],[4,"Statement"],[3,"DescribeResult"],[6,"TableMutationHandlerRef"],[3,"QueryEngineFactory"],[6,"QueryEngineRef"],[3,"QueryOptions"],[3,"DfQueryPlanner"],[3,"DataFrame"],[8,"AnalyzerRule"],[6,"TimestampMillisecondArray"],[15,"u32"],[4,"Fill"],[3,"RangeSelectExec"],[3,"RangeFn"],[3,"RangeFnExec"],[3,"RangeSelect"],[8,"PhysicalExpr"],[3,"RangeSelectStream"],[3,"RecordBatch"],[6,"ArrayRef"],[3,"SeriesState"],[3,"Context"],[4,"Poll"],[4,"Distribution"],[4,"DataFusionError"],[3,"RangePlanRewriter"],[3,"RangeExprRewriter"],[3,"RangeSelectPlanner"],[3,"QueryRequest"],[3,"ColumnSchema"],[8,"Vector"],[3,"Operator"],[3,"RawSchema"],[8,"FileFormat"],[3,"Partitions"],[3,"ShowDatabases"],[3,"ShowTables"],[4,"ColumnOption"],[3,"ColumnOptionDef"],[15,"char"],[3,"ColumnDef"],[3,"TableMeta"],[3,"SqlOption"],[4,"TableConstraint"],[6,"TableInfoRef"],[3,"CreateTable"],[4,"Value"],[3,"DeleteRequest"],[3,"InsertRequest"],[13,"Datafusion"],[13,"PhysicalPlanDowncast"],[13,"ConvertSchema"],[13,"ConvertDfRecordBatchStream"],[13,"ExecutePhysicalPlan"],[3,"Categorizer"],[3,"TableNameRewriter"],[13,"CatalogNotFound"],[13,"QueryAccessDenied"],[13,"ColumnSchemaIncompatible"],[13,"ColumnSchemaNoDefault"],[13,"ConvertSqlType"],[13,"AddSystemTimeOverflow"],[13,"ParseTimestamp"],[13,"ParseFloat"],[13,"DataFusion"],[13,"PlanSql"],[13,"BuildRegex"],[13,"UnexpectedOutputKind"],[13,"UnsupportedExpr"],[13,"Unimplemented"],[13,"Catalog"],[13,"SchemaNotFound"],[13,"TableNotFound"],[13,"VectorComputation"],[13,"CreateRecordBatch"],[13,"CreateSchema"],[13,"QueryExecution"],[13,"QueryPlan"],[13,"QueryParse"],[13,"MultipleStatements"],[13,"ConvertDatafusionSchema"],[13,"EncodeSubstraitLogicalPlan"],[13,"Sql"],[13,"MissingTimestampColumn"],[13,"ConvertSqlValue"],[13,"RoutePartition"],[13,"ParseSql"],[13,"RemoteRequest"],[13,"MissingRequiredField"],[13,"BuildBackend"],[13,"ListObjects"],[13,"ParseFileFormat"],[13,"InferSchema"],[13,"ConvertSchema"],[13,"UnknownTable"],[13,"TimeIndexNotFound"],[13,"RegionQuery"],[13,"TableMutation"],[13,"MissingTableMutationHandler"],[13,"RangeQuery"],[8,"QueryExecutor"],[8,"LogicalOptimizer"],[3,"QueryLanguageParser"],[8,"PhysicalOptimizer"],[8,"PhysicalPlanner"],[8,"PhysicalPlanWrapper"],[8,"QueryEngine"],[4,"ExecutionState"],[8,"RegionQueryHandler"],[8,"TableMutationHandler"]]},\
"script":{"doc":"","t":"AAOAAADQQDIQILLKKLLLLLLLLLLKLLLLLLLLKKLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLNDNDNDNDENDNDNDNDGNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLMLLLLLLLLMLLLLLLLLLMMLLLMLLLLLLLLDDMAAAAMMAADRDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDENDNDNDNDNDNDGNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLFLMMFLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMAAAANDENDGEDDNNLLLLLLLLLLLLLMMLLLLLLLLLLLLLFLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMLLLLLLMLLLLLLAMLMMLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFDLLMMLLFFLLLLLLLLLLLLLLLLLLLFFLLLLLLFFFFFFFFMFLMLLLLLLLFLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLFFFDGLLLLLLLLFFFLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLFLFFLLLLLLLLLLLFLLLLLLLLLLLLLLLLLFLLLLLFMLLLLLFDDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAFOOFFFAFFFFFFRRDLLLFFLLFFFFFFFFLLFLFLLFLLLLFFFFFFFLLFLLFFLFFLLFFLLLLLLLFFLLMLFLLLLFLLFFFFFFFFFFLFFFFFFFFFFLLLFFLFLFFLFFLLLLLLLLLLLFFFLRFFFFFFAFRRDGLLLLLLLLLLLLLLLLLLLFLLLLLLLLMLLLLLFLLLLFLLLLLLLLLLLLLLFFFFFGFFFFFFRDGLLLFFLLLLLLLLLFLMLLLLLLLLFMLLLMLLLLLLLL","n":["engine","error","fail_parse_error","manager","python","table","CompileContext","Error","Error","EvalContext","Script","Script","ScriptEngine","and","and","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","compile","default","default","deref","deref","deref_mut","deref_mut","drop","drop","engine_name","execute","fmt","fmt","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","name","or","or","sculpt","sculpt","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","BuildDfLogicalPlan","BuildDfLogicalPlanSnafu","CastType","CastTypeSnafu","CollectRecords","CollectRecordsSnafu","CompilePython","CompilePythonSnafu","Error","ExecuteInternalStatement","ExecuteInternalStatementSnafu","ExecutePython","ExecutePythonSnafu","FindColumnInScriptsTable","FindColumnInScriptsTableSnafu","InsertScript","InsertScriptSnafu","Result","ScriptNotFound","ScriptNotFoundSnafu","ScriptsTableNotFound","ScriptsTableNotFoundSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","name","name","name","name","name","next","or","or","or","or","or","or","or","or","or","or","or","provide","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","source","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","location","location","location","location","location","location","location","location","location","location","msg","name","name","name","name","name","source","source","source","source","source","ScriptManager","and","borrow","borrow_mut","compat","compat_mut","compat_ref","compile","compile_without_cache","compiled","create_table_request","deref","deref_mut","drop","execute","from","from_subset","get_scripts_table","grpc_handler","init","insert_and_compile","insert_scripts_table","into","into_request","is_in_subset","lift_into","new","or","py_engine","query_engine","sculpt","start","subset","tables","to_subset","to_subset_unchecked","try_find_script_and_compile","try_from","try_into","try_into","type_id","vzip","PyEngine","PyScript","copr","engine","error","ffi_types","metric","query_engine","query_engine","rspython","utils","CoprStream","PY_ENGINE","PyEngine","PyScript","PyUDF","and","and","and","and","as_any","as_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compile","copr","copr","copr","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","engine_name","eval","execute","fake_schema","fmt","fmt","from","from","from","from","from_copr","from_script","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","name","name","new","or","or","or","or","params","poll_next","query_engine","query_engine","register_as_udf","register_to_query_engine","register_udf","ret_schema","return_type","schema","sculpt","sculpt","sculpt","sculpt","signature","size_hint","stream","subset","subset","subset","subset","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_poll_next","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Arrow","ArrowSnafu","CoprParse","CoprParseSnafu","DataFusion","DataFusionSnafu","DatabaseQuery","DatabaseQuerySnafu","Error","NewRecordBatch","NewRecordBatchSnafu","Other","OtherSnafu","PyCompile","PyCompileSnafu","PyParse","PyParseSnafu","PyRuntime","PyRuntimeSnafu","RecordBatch","RecordBatchSnafu","Result","TokioJoin","TokioJoinSnafu","TypeCast","TypeCastSnafu","UnsupportedSql","UnsupportedSqlSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","ensure","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_error_reason_loc","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","loc","msg","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","pretty_print_error_in_src","provide","reason","reason","ret_other_error_with","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","source","sql","status_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visualize_loc","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","error","error","error","error","loc","location","location","location","location","location","location","location","location","location","location","location","location","msg","reason","reason","source","source","source","source","sql","copr","py_recordbatch","utils","vector","AffectedRows","AnnotationInfo","BackendType","CPython","Coprocessor","CoprocessorRef","Either","PyQueryEngine","QueryEngineWeakRef","Rb","RustPython","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__extend_py_class","__extend_slots","and","and","and","and","and","and","arg_types","backend","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_and_cast_type","check_args_anno_real_type","class","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","code_obj","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compile","datatype","deco_args","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exec_parsed","extend_slots","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_weakref","gen_schema","impl_extend_class","init","init","init","init","init","init","inner","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_nullable","kwarg","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","name","or","or","or","or","or","or","parse","query_engine","query_with_new_thread","return_types","script","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","select_from_rb","sql","sql_to_rb","static_cell","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_pyobject","to_pyresult","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","compile_script","create_located","gen_call","DecoratorArgs","__clone_box","and","arg_names","backend","borrow","borrow_mut","check_annotation_ret_slice","check_bin_op","clone","clone_into","compat","compat_mut","compat_ref","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","get_arg_annotations","get_return_annotations","init","into","into_request","is_in_subset","lift_into","or","parse_and_compile_copr","parse_annotation","parse_bin_op","parse_decorator","parse_keywords","parse_native_type","py_str_to_string","pylist_to_vec","ret_names","ret_parse_error","sculpt","sql","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_into_datatype","type_id","vzip","PyRecordBatch","__extend_py_class","__extend_slots","and","as_mapping","borrow","borrow_mut","class","compat","compat_mut","compat_ref","deref","deref_mut","drop","extend_slots","fmt","from","from","from_subset","get_item","impl_extend_class","init","into","into_request","is_in_subset","len","lift_into","new","or","record_batch","rspy_repr","sculpt","static_cell","subset","to_pyobject","to_pyresult","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","all_to_f64","collect_diff_types_string","new_item_field","PyVector","PyVectorRef","__clone_box","__extend_py_class","__extend_slots","_getitem","add","and","and","arrow_data_type","arrow_rfloordiv","arrow_rsub","arrow_rtruediv","as_mapping","as_number","as_ref","as_sequence","as_vector_ref","borrow","borrow_mut","cast","class","clone","clone_into","cmp","coerce_types","compat","compat_mut","compat_ref","concat","data_type","default","deref","deref_mut","doc","drop","extend_slots","filter","floordiv","fmt","from","from","from_ref","from_subset","get_arrow_op","get_arrow_scalar_op","getitem_by_index","getitem_by_slice","impl_extend_class","init","into","into_request","invert","is_float","is_in_subset","is_signed","is_unsigned","len","len_rspy","lift_into","mul","new","obj_to_vector","or","or","repr_str","rfloordiv","richcompare","rspy_is_pyobj_scalar","rspy_scalar_arith_op","rspy_vector_arith_op","rsub","rtruediv","scalar_arith_op","sculpt","setitem_by_index","slot_richcompare","static_cell","sub","subset","to_arrow_array","to_owned","to_pyobject","to_pyresult","to_subset","to_subset_unchecked","to_type_error","truediv","try_from","try_into","try_into","type_id","val_to_pyobj","vector","vector_and","vector_arith_op","vector_invert","vector_or","vzip","wrap_result","METRIC_RSPY_EXEC_ELAPSED","METRIC_RSPY_EXEC_TOTAL_ELAPSED","METRIC_RSPY_INIT_ELAPSED","__private_field","__private_field","__private_field","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","or","or","or","sculpt","sculpt","sculpt","subset","subset","subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","builtins","copr_impl","dataframe_impl","utils","vector_impl","all_to_f64","bind_aggr_fn","bind_call_unary_math_function","collect_diff_types_string","eval_aggr_fn","from_df_err","greptime_builtin","init_greptime_builtins","new_item_field","scalar_val_try_into_py_obj","try_into_columnar_value","try_into_py_obj","type_cast_error","DOC","MODULE_NAME","PyDataFrame","__clone_box","__extend_py_class","__extend_slots","abs","acos","aggregate","and","approx_distinct","approx_percentile_cont","argmax","argmin","array_agg","asin","atan","avg","borrow","borrow_mut","ceil","class","clip","clone","clone_into","col","collect","compat","compat_mut","compat_ref","correlation","cos","count","covariance","covariance_pop","dataframe","datetime","deref","deref_mut","diff","distinct","drop","eval_aggr_func","eval_func","except","exp","extend_module","extend_slots","filter","first","floor","fmt","from","from","from_record_batch","from_ref","from_sql","from_subset","gen_inteveral","gen_none_array","impl_extend_class","init","inner","intersect","interval","into","into_request","is_in_subset","join","last","lift_into","limit","lit","ln","log10","log2","make_module","max","mean","median","min","next","or","percentile","polyval","pow","pow_gp","prev","query","random","round","scipy_stats_norm_cdf","scipy_stats_norm_pdf","sculpt","select","select_columns","signum","sin","sort","sqrt","static_cell","stddev","stddev_pop","subset","sum","tan","to_owned","to_pyobject","to_pyresult","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","union","union_distinct","variance","variance_pop","vector","vzip","INTERPRETER","exec_with_cached_vm","init_interpreter","rspy_exec_parsed","set_items_in_scope","set_query_engine_in_scope","try_into_columns","data_frame","init_data_frame","DOC","MODULE_NAME","PyExpr","PyExprRef","__clone_box","__extend_py_class","__extend_slots","alias","and","and","as_number","borrow","borrow_mut","class","clone","clone_into","cmp","compat","compat_mut","compat_ref","deref","deref_mut","drop","extend_module","extend_slots","fmt","from","from","from_ref","from_subset","impl_extend_class","init","inner","into","into_request","invert","is_in_subset","lift_into","make_module","or","or","richcompare","sculpt","set_dataframe_in_scope","slot_richcompare","sort","static_cell","subset","to_owned","to_pyobject","to_pyresult","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","format_py_error","is_instance","obj_cast_to","py_obj_to_value","py_obj_to_vec","PyVectorRef","get_concrete_type","pyobj_try_to_typed_val","to_type_error","block_on_async","format_py_error","spawn_blocking_script","SCRIPTS_TABLE_NAME","ScriptsTable","ScriptsTableRef","and","borrow","borrow_mut","build_insert_column_schemas","build_scripts_schema","compat","compat_mut","compat_ref","deref","deref_mut","drop","find_script_by_name","from","from_subset","get_primary_key_indices","get_str_col_by_name","grpc_handler","init","insert","into","into_request","is_in_subset","lift_into","new","or","query_ctx","query_engine","recompile_register_udf","sculpt","subset","table","table_full_scan","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip"],"q":[[0,"script"],[6,"script::engine"],[75,"script::error"],[480,"script::error::Error"],[502,"script::manager"],[544,"script::python"],[555,"script::python::engine"],[698,"script::python::error"],[1212,"script::python::error::Error"],[1238,"script::python::ffi_types"],[1242,"script::python::ffi_types::copr"],[1491,"script::python::ffi_types::copr::compile"],[1494,"script::python::ffi_types::copr::parse"],[1552,"script::python::ffi_types::py_recordbatch"],[1595,"script::python::ffi_types::utils"],[1598,"script::python::ffi_types::vector"],[1698,"script::python::metric"],[1785,"script::python::rspython"],[1790,"script::python::rspython::builtins"],[1803,"script::python::rspython::builtins::greptime_builtin"],[1924,"script::python::rspython::copr_impl"],[1931,"script::python::rspython::dataframe_impl"],[1933,"script::python::rspython::dataframe_impl::data_frame"],[1991,"script::python::rspython::utils"],[1996,"script::python::rspython::vector_impl"],[2000,"script::python::utils"],[2003,"script::table"]],"d":["Script engine","","append a <code>.fail()</code> after <code>ret_parse_error</code>, so compiler can …","Scripts manager","Python script coprocessor","Scripts table","Compile script context","","","Evaluate script context","","","","","","","","","","","","","","","","","","Compile a script text into a script instance.","","","","","","","","","Returns the script engine name such as <code>python</code> etc.","Execute the script and returns the output.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the script engine name such as <code>python</code> etc.","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BuildDfLogicalPlan</code> …","","SNAFU context selector for the <code>Error::CastType</code> variant","","SNAFU context selector for the <code>Error::CollectRecords</code> …","","SNAFU context selector for the <code>Error::CompilePython</code> variant","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ExecutePython</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InsertScript</code> variant","","","SNAFU context selector for the <code>Error::ScriptNotFound</code> …","","SNAFU context selector for the <code>Error::ScriptsTableNotFound</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codecompile script, and register them to the query engine and …","compile script to PyScript, but not register them to the …","","","","","","","Returns the argument unchanged.","","Get the scripts table in the catalog","","","","Insert a scripts table.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Python script engine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fake a schema, should only be used with dynamically eval a …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Register to <code>FUNCTION_REGISTRY</code>","","Register Current Script as UDF, register name is same as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::Arrow</code> variant","errors in coprocessors’ parse check for types and etc.","SNAFU context selector for the <code>Error::CoprParse</code> variant","","SNAFU context selector for the <code>Error::DataFusion</code> variant","","SNAFU context selector for the <code>Error::DatabaseQuery</code> variant","","","SNAFU context selector for the <code>Error::NewRecordBatch</code> …","Other types of error that isn’t any of above","SNAFU context selector for the <code>Error::Other</code> variant","","SNAFU context selector for the <code>Error::PyCompile</code> variant","","SNAFU context selector for the <code>Error::PyParse</code> variant","rustpython problem, using python virtual machines’ …","SNAFU context selector for the <code>Error::PyRuntime</code> variant","","SNAFU context selector for the <code>Error::RecordBatch</code> variant","","","SNAFU context selector for the <code>Error::TokioJoin</code> variant","","SNAFU context selector for the <code>Error::TypeCast</code> variant","","SNAFU context selector for the <code>Error::UnsupportedSql</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensure a condition is true. If it is not, return from the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","extract a reason for <code>Error</code> in string format, also return a …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pretty print <code>Error</code> in given script, basically print a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pretty print a location in script with desc.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","PyRecordBatch is a Python class that wraps a RecordBatch, …","","","","","","","","","","","","","","","","","","","","","","","","","","","get from python function args’ annotation, first is …","Use which backend to run this script Ideally in test both …","","","","","","","","","","","","","check if real types and annotation types(if have) is the …","match between arguments’ real type and annotation types …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","compile script to code object","if None, use types inferred by PyVector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","using a parsed <code>Coprocessor</code> struct as input to execute …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","generate <code>Schema</code> according to return names, types, if no …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","kwargs in coprocessor function’s signature","","","","","","","","","","","","","","","","","get from python function returns’ annotation, first is …","store its corresponding script, also skip serde when in …","","","","","","","select columns according to <code>fetch_names</code> from <code>rb</code> and cast …","return sql query results in <code>PyRecordBatch</code>,  ora empty …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stripe the decorator(<code>@xxxx</code>) and type annotation(for type …","","generate a call to the coprocessor function with arguments …","","","","","","","","check for the grammar correctness of annotation, also …","check if binary op expr is legal(with one typename and one …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","parse script and return <code>Coprocessor</code> struct with info …","where:","parse a <code>DataType | None</code> or a single <code>DataType</code>","returns args and returns in Vec of String","parse a list of keyword and return args and returns list …","Item =&gt; NativeType default to be not nullable","","turn a python list of string in ast form(a <code>ast::Expr</code>) of …","","Return a CoprParseSnafu for you to chain fail() to return …","","","","","","","","","","","","","This is a Wrapper around a RecordBatch, impl PyMapping …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Because most of the datafusion’s UDF only support …","Generate friendly error message when the type of the input …","","The Main FFI type <code>PyVector</code> that is used both in RustPython …","","","","","","","","","","Performs <code>val / arr</code>, but cast to i64.","Performs <code>val - arr</code>.","Performs <code>val / arr</code>","","","","","create a ref to inner vector","","","","","","","","Returns the type that should be used for the result of an …","","","","","","","","","","","","take a boolean array and filters the Array, returning …","","","Returns the argument unchanged.","","","","get corresponding arrow op function according to given …","get corresponding arrow scalar op function according to …","","Return a <code>PyVector</code> in <code>PyObjectRef</code>","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","rich compare, return a boolean array, accept type are vec …","if this pyobj can be cast to a scalar value(i.e …","","","","","","","Unsupported TODO(discord9): make it work","","","","","","","","","","","","","","","","","convert a DataType <code>Value</code> into a <code>PyObjectRef</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builtin module contains GreptimeDB builtin udf/udaf","","","","","Because most of the datafusion’s UDF only support …","The macro for binding function in …","use to bind to Data Fusion’s UDF function P.S: seems due …","","evaluate Aggregate Expr using its backing accumulator","","GrepTime User Define Function module","","","turn a ScalarValue into a Python Object, currently support","try to turn a Python Object into a PyVector or a scalar …","cast a columnar value into python object","“Can’t cast operand of type <code>{name}</code> into <code>{ty}</code>.”","","","","","","","simple math function, the backing implement is datafusion…","simple math function, the backing implement is datafusion…","","","","Not implement in datafusion TODO(discord9): use greptime’…","","","effectively equals to <code>list(vector)</code>","simple math function, the backing implement is datafusion…","simple math function, the backing implement is datafusion…","directly port from datafusion’s <code>avg</code> function","","","simple math function, the backing implement is datafusion…","","","","","","collect <code>DataFrame</code> results into <code>PyRecordBatch</code> that impl …","","","","","simple math function, the backing implement is datafusion…","","","","get <code>__dataframe__</code> from globals and return it …","","","","","","","","","","simple math function, the backing implement is datafusion…","","","","return first element in a <code>PyVector</code> in sliced new <code>PyVector</code>, …","simple math function, the backing implement is datafusion…","","Returns the argument unchanged.","","TODO(discord9): error handling","","","","generate interval time point","","","","","","<code>func</code>: exec on sliding window slice of given <code>arr</code>, expect it …","Calls <code>U::from(self)</code>.","","","","return last element in a <code>PyVector</code> in sliced new <code>PyVector</code>, …","","","","simple math function, the backing implement is datafusion…","simple math function, the backing implement is datafusion…","simple math function, the backing implement is datafusion…","","","","","","","","","","Pow function, bind from gp’s <code>PowFunction</code>","GrepTime’s own impl of pow function","","get <code>__query__</code> from globals and return it TODO(discord9): …","return a random vector range from 0 to 1 and length of len","simple math function, the backing implement is datafusion…","","","","","","simple math function, the backing implement is datafusion…","simple math function, the backing implement is datafusion…","","simple math function, the backing implement is datafusion…","","","","","","simple math function, the backing implement is datafusion…","","","","","","","","","","","","","","","","","","init interpreter with type PyVector and Module: greptime","Using <code>RustPython</code> to run a parsed <code>Coprocessor</code> struct as …","set arguments with given name and values in python scopes","","convert a tuple of <code>PyVector</code> or one <code>PyVector</code>(wrapped in a …","with <code>register_batch</code>, and then wrap DataFrame API in it","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","<code>~</code> operator, return <code>!self</code>","","","","","","","","set DataFrame instance into current scope with given name","","sort ascending&amp;nulls_first","","","","","","","","","","","","","","use <code>rustpython</code>’s <code>is_instance</code> method to check if a …","","","convert a single PyVector or a number(a constant)(wrapping …","","","convert a <code>PyObjectRef</code> into a <code>datatypes::Value</code>(is that ok?) …","PyVectors’ rustpython specify methods","Please only use this method because you are calling from …","","just like <code>tokio::task::spawn_blocking</code> but using a …","","The scripts table that keeps the script content etc.","","","","","Build the inserted column schemas","Build scripts table","","","","","","","","Returns the argument unchanged.","","Returns the scripts schema’s primary key indices","","","","","Calls <code>U::from(self)</code>.","","","","Create a new <code>[ScriptsTable]</code> based on the table.","","","","this is used as a callback function when scripts table is …","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,163,164,0,0,164,0,10,6,163,164,10,6,10,6,10,6,10,6,10,6,164,10,6,10,6,10,6,10,6,163,163,10,6,10,6,10,6,10,6,10,6,10,6,10,6,10,6,164,10,6,10,6,10,6,10,6,10,6,10,6,10,10,6,6,10,6,10,6,24,0,24,0,24,0,24,0,0,24,0,24,0,24,0,24,0,0,24,0,24,0,28,29,33,34,35,30,36,31,37,38,28,29,33,34,35,30,36,31,37,38,24,24,24,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,28,29,30,31,24,28,29,33,34,35,30,36,31,37,38,28,29,33,34,35,30,36,31,37,38,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,24,28,29,33,34,35,30,36,31,37,38,24,28,29,30,31,28,29,33,34,35,30,36,31,37,38,24,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,31,28,33,34,35,30,24,28,29,33,34,35,30,36,31,37,38,24,24,28,29,33,34,35,30,36,31,37,38,24,24,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,28,28,29,29,33,33,34,34,35,35,30,30,36,36,31,31,37,37,38,38,24,24,28,29,33,34,35,30,36,31,37,38,24,28,29,33,34,35,30,36,31,37,38,24,165,166,167,168,169,170,171,172,173,165,174,173,166,168,169,170,171,168,169,170,172,174,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,48,0,0,0,0,48,51,0,0,0,0,0,0,0,48,66,51,58,48,51,48,66,51,58,48,66,51,58,48,66,51,58,48,66,51,58,48,66,51,58,51,48,66,58,48,66,51,58,48,66,51,58,48,66,51,58,48,58,48,58,58,58,48,66,51,58,58,48,48,66,51,58,48,66,51,58,48,66,51,58,48,66,51,58,66,48,66,51,58,48,66,51,58,51,58,51,48,66,51,58,66,66,48,51,58,58,48,66,58,66,48,66,51,58,58,66,66,48,66,51,58,58,48,66,51,58,48,66,51,58,48,66,51,58,48,48,66,66,51,51,58,58,66,66,48,66,51,58,48,66,51,58,72,0,72,0,72,0,72,0,0,72,0,72,0,72,0,72,0,72,0,72,0,0,72,0,72,0,72,0,78,79,80,81,73,82,83,75,76,77,84,85,86,78,79,80,81,73,82,83,75,76,77,84,85,86,72,72,72,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,73,75,76,77,72,78,79,80,81,73,82,83,75,76,77,84,85,86,78,79,80,81,73,82,83,75,76,77,84,85,86,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,0,73,75,76,77,78,79,80,81,73,82,83,75,76,77,84,85,86,72,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,78,79,80,81,73,82,83,75,76,77,84,85,86,72,0,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,75,73,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,0,72,75,76,0,78,79,80,81,73,82,83,75,76,77,84,85,86,72,72,77,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,78,78,79,79,80,80,81,81,73,73,82,82,83,83,75,75,76,76,77,77,84,84,85,85,86,86,72,72,78,79,80,81,73,82,83,75,76,77,84,85,86,72,0,78,79,80,81,73,82,83,75,76,77,84,85,86,72,175,176,177,178,179,180,181,182,175,176,183,177,178,180,184,185,186,187,183,180,184,181,182,186,187,185,0,0,0,0,99,0,0,94,0,0,0,0,0,99,94,93,94,64,95,96,96,96,99,93,94,64,95,96,64,64,99,93,94,64,95,96,99,93,94,64,95,96,64,0,96,93,94,64,95,96,93,94,64,95,96,64,99,93,94,64,95,96,99,93,94,64,95,96,99,93,94,64,95,96,0,93,64,94,99,93,94,64,95,96,99,93,94,64,95,96,99,93,94,64,95,96,93,94,64,93,93,93,93,93,94,94,94,94,94,64,64,64,64,64,0,96,93,94,64,95,96,99,93,94,64,95,95,95,96,93,94,64,95,96,99,93,94,64,95,96,96,64,96,99,93,94,64,95,96,96,99,93,94,64,95,96,99,93,94,64,95,96,99,93,94,64,95,96,93,64,99,93,94,64,95,96,64,99,93,94,64,95,96,0,64,96,64,64,99,93,94,64,95,96,0,96,96,96,99,93,94,64,95,96,93,94,64,95,96,96,96,99,93,94,64,95,96,99,93,94,64,95,96,99,93,94,64,95,96,99,99,93,93,94,94,64,64,95,95,96,96,99,93,94,64,95,96,99,93,94,64,95,96,0,0,0,0,107,107,107,107,107,107,0,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,0,107,107,107,107,107,107,0,0,0,0,0,0,0,0,107,0,107,107,107,107,107,107,107,107,107,0,107,107,0,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,0,0,0,0,0,91,91,91,91,91,91,91,91,0,0,0,91,91,91,91,91,91,91,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,91,91,91,91,91,91,91,0,91,0,0,91,91,91,91,91,91,91,91,91,91,91,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,91,91,91,91,91,0,91,91,91,91,91,91,0,0,0,0,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,135,137,137,138,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,137,138,135,135,137,137,138,138,135,137,138,135,137,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,142,142,0,0,142,142,0,0,0,0,0,0,0,0,142,142,0,142,0,142,142,0,142,142,142,142,0,0,0,0,0,0,0,142,142,0,142,142,0,0,142,0,0,142,142,0,0,142,142,142,142,142,142,142,0,0,142,142,142,142,0,142,142,142,142,0,142,142,0,0,0,0,0,0,0,0,0,0,142,0,0,0,0,0,0,0,0,0,0,142,142,142,0,0,142,0,142,0,0,142,0,0,142,142,142,142,142,142,142,142,142,142,142,0,0,0,142,0,0,0,0,0,0,0,0,0,0,0,0,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,143,143,143,143,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,158,158,158,0,0,158,158,158,158,158,158,158,158,158,0,158,158,158,158,158,158,158,158,158,158,0,158,158,158,158,158,158,158,158,158,158,158,158,158],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[],3],[[],3],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[5,6],[[9,[[8,[7]]]]]],[[],10],[[],6],[11],[11],[11],[11],[11],[11],[[],5],[[[13,[12,12]],10],[[9,[[8,[7]]]]]],[[10,14],15],[[6,14],15],[[]],[[]],[[]],[[]],[[],11],[[],11],[[]],[[]],[[],16],[[],16],[[],17],[[],17],[[]],[[]],[[],5],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[[]],[[]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],21],[[],21],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],22],[[],22],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[24,3],[[],25],[24,[[21,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[28,[[27,[12]]]]],24],[29,24],[[[30,[[27,[12]]]]],24],[[[31,[[27,[12]]]]],24],[24,[[21,[25]]]],[[[28,[32]]],[[28,[32]]]],[29,29],[[[33,[32]]],[[33,[32]]]],[[[34,[32]]],[[34,[32]]]],[[[35,[32]]],[[35,[32]]]],[[[30,[32]]],[[30,[32]]]],[36,36],[[[31,[32]]],[[31,[32]]]],[37,37],[38,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[24,11,[39,[12]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[24,5],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[[28,[[27,[12]]]]],[[20,[24]]]],[29,[[20,[24]]]],[[[30,[[27,[12]]]]],[[20,[24]]]],[[[31,[[27,[12]]]]],[[20,[24]]]],[[[28,[40]],14],15],[[29,14],15],[[[33,[40]],14],15],[[[34,[40]],14],15],[[[35,[40]],14],15],[[[30,[40]],14],15],[[36,14],15],[[[31,[40]],14],15],[[37,14],15],[[38,14],15],[[24,14],15],[[24,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[28,[[27,[12]]]]],24],[29,24],[[[33,[[27,[12]]]]],24],[[[34,[[27,[12]]]]],24],[[[35,[[27,[12]]]]],24],[[[30,[[27,[12]]]]],24],[36,24],[[[31,[[27,[12]]]]],24],[37,24],[38,24],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[24,[[21,[41]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,[[21,[25]]]],[24,43],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1,1]]]],[[]],[[]],[[],4],[[],4],[[],4],[[[47,[[0,[44,45,46]]]],5,5],[[50,[[49,[48]]]]]],[[51,5,5],[[50,[48]]]],0,[[[47,[[0,[44,45,46]]]],5],52],[11],[11],[11],[[[47,[[0,[44,45,46]]]],5,5,5,[13,[12,12]]],[[50,[53]]]],[[]],[[]],[[[47,[[0,[44,45,46]]]],5],[[21,[[54,[[0,[44,45,46]]]]]]]],0,[[],11],[[[47,[[0,[44,45,46]]]],5,5,5,5],[[50,[[49,[48]]]]]],[[[47,[[0,[44,45,46]]]],5,55]],[[]],[[],16],[[],17],[[]],[[[56,[[0,[44,45,46]]]],57],[[50,[[47,[[0,[44,45,46]]]]]]]],[1,[[18,[1,1]]]],0,0,[[]],[[[47,[[0,[44,45,46]]]],[56,[[0,[44,45,46]]]]],50],[[],[[20,[19]]]],0,[[],21],[[]],[[[47,[[0,[44,45,46]]]],5,5,5],[[50,[[21,[[49,[48]]]]]]]],[[],20],[[],20],[[],20],[[],22],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[48,3],[51,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[51,5,6],[[9,[[8,[7]]]]]],0,0,0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[48,5],[[58,59,[61,[60]]],[[62,[60]]]],[[48,[13,[12,12]],10],[[9,[[8,[7]]]]]],[[58,[61,[60]]],63],[[58,14],15],[[58,14],15],[[]],[[]],[[]],[[]],[[[49,[64]]],[[49,[58]]]],[[5,57],[[65,[48]]]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[51,5],[58,5],[57,51],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],0,[[[9,[66]],67],[[68,[21]]]],0,0,[[[49,[58]]]],[[[49,[58]],57]],[48],0,[[58,[61,[69]]],[[62,[69]]]],[66,63],[[]],[[]],[[]],[[]],[58,70],[66],0,[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],12],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[71,[49,[64]],[13,[12,12]]],[[65,[66]]]],[[9,67],[[68,[[21,[20]]]]]],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[72,3],[[],25],[72,[[21,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[73,[[27,[12]]]]],72],[[[75,[[27,[12]],[27,[[21,[74]]]]]]],72],[[[76,[[27,[12]]]]],72],[[[77,[[27,[12]]]]],72],[72,[[21,[25]]]],[78,78],[79,79],[80,80],[81,81],[[[73,[32]]],[[73,[32]]]],[82,82],[83,83],[[[75,[32,32]]],[[75,[32,32]]]],[[[76,[32]]],[[76,[32]]]],[[[77,[32]]],[[77,[32]]]],[84,84],[85,85],[86,86],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[72,11,[39,[12]]]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[72,5],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,[[[73,[[27,[12]]]]],[[20,[72]]]],[[[75,[[27,[12]],[27,[[21,[74]]]]]]],[[20,[72]]]],[[[76,[[27,[12]]]]],[[20,[72]]]],[[[77,[[27,[12]]]]],[[20,[72]]]],[[78,14],15],[[79,14],15],[[80,14],15],[[81,14],15],[[[73,[40]],14],15],[[82,14],15],[[83,14],15],[[[75,[40,40]],14],15],[[[76,[40]],14],15],[[[77,[40]],14],15],[[84,14],15],[[85,14],15],[[86,14],15],[[72,14],15],[[72,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[78,72],[79,72],[80,72],[81,72],[[[73,[[27,[12]]]]],72],[82,72],[83,72],[[[75,[[27,[12]],[27,[[21,[74]]]]]]],72],[[[76,[[27,[12]]]]],72],[[[77,[[27,[12]]]]],72],[84,72],[85,72],[86,72],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[72,[[21,[41]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[[5,72,11,5],12],[42],0,0,[12,[[76,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,[[21,[25]]]],0,[72,43],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[5,74,5,5,11,5],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[23],[23],[23],[23],[23],[[87,[89,[88]]]],[90],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[64,[61,[60]]],65],[[[61,[12]],[61,[91]],64,92],65],[87,[[89,[88]]]],[93,93],[94,94],[64,64],[95,95],[96,96],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,[[],94],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[93,93],17],[[94,94],17],[[64,64],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[64,[21,[92]],[13,[12,12]]],[[65,[92]]]],[90],[[93,14],15],[[94,14],15],[[64,14],15],[[95,14],15],[[96,14],15],[[]],[[]],[[]],[[]],[[[98,[97]]],95],[[[49,[97]]],95],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[95,96],[[64,[61,[60]]],[[65,[63]]]],[[87,[89,[88]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],0,0,[[96,12],[[20,[99,12]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[92,[61,[12]]],[[65,[[39,[91]]]]]],[[96,12,100],[[102,[101]]]],[[96,12],[[20,[92,12]]]],[[],[[104,[103]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[]],[[]],[[]],[[]],[[]],[100,101],[100,[[20,[101,[106,[105]]]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[5,107,[21,[12]],5],[[65,[108]]]],[74,109],[[5,107,[21,[12]],74],110],0,[23],[1,[[2,[1,1]]]],0,0,[[]],[[]],[111,[[65,[111]]]],[111,65],[107,107],[[]],[[],4],[[],4],[[],4],[[],107],[11],[11],[11],[[107,107],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[107,14],15],[[]],[[]],[[]],[112,[[65,[[39,[[21,[93]]]]]]]],[111,[[65,[[39,[[21,[93]]]]]]]],[[],11],[[]],[[],16],[[],17],[[]],[1,[[18,[1,1]]]],[[5,[21,[57]]],[[65,[64]]]],[111,[[65,[93]]]],[111,[[65,[93]]]],[111,[[65,[107]]]],[[[39,[113]]],[[65,[107]]]],[111,[[65,[93]]]],[111,[[65,[12]]]],[111,[[65,[[39,[12]]]]]],0,[[12,[21,[74]]],[[75,[12,[21,[74]]]]]],[[]],0,[[],[[20,[19]]]],[[]],[[],21],[[]],[[],20],[[],20],[[],20],[[5,74],[[65,[[21,[69]]]]]],[[],22],[[]],0,[[87,[89,[88]]]],[90],[1,[[2,[1,1]]]],[[],114],[[]],[[]],[87,[[89,[88]]]],[[],4],[[],4],[[],4],[11],[11],[11],[90],[[115,14],15],[92,115],[[]],[[]],[[115,116,100],102],[[87,[89,[88]]]],[[],11],[[]],[[],16],[[],17],[115,11],[[]],[92,115],[1,[[18,[1,1]]]],0,[115,12],[[]],[[],[[104,[103]]]],[[],[[20,[19]]]],[100,101],[100,[[20,[101,[106,[105]]]]]],[[],21],[[]],[[],20],[[],20],[[],20],[[],22],[[]],[117,[[20,[117,12]]]],[[[61,[118]],119],12],[119,120],0,0,[23],[[87,[89,[88]]]],[90],[[91,116,100],[[102,[101]]]],[[101,101,100],[[102,[91]]]],[[101,101,100],[[102,[91]]]],[1,[[2,[1,1]]]],[91,119],[[121,121],[[20,[122,12]]]],[[121,121],[[20,[122,12]]]],[[121,121],[[20,[122,12]]]],[[],114],[[],123],[91,91],[[],124],[91,60],[[]],[[]],[[122,119],[[20,[122,12]]]],[87,[[89,[88]]]],[91,91],[[]],[[[89,[91]],116,125,100],[[102,[126]]]],[[119,119,[21,[119]]],119],[[],4],[[],4],[[],4],[[91,[106,[91]],100],[[102,[91]]]],[91,69],[[],91],[11],[11],[91,[[102,[127]]]],[11],[90],[[91,[106,[91]],100],[[102,[91]]]],[[101,101,100],[[102,[91]]]],[[91,14],15],[[]],[60,91],[[]],[[]],[125,128],[125,128],[[91,129,100],[[102,[101]]]],[[91,130,100],[[102,[101]]]],[[87,[89,[88]]]],[[],11],[[]],[[],16],[[101,100],[[102,[91]]]],[119,17],[[],17],[119,17],[119,17],[91,11],[91,11],[[]],[[101,101,100],[[102,[91]]]],[[[131,[101]],100],[[102,[91]]]],[[101,100],[[102,[[106,[91]]]]]],[[101,101,100],[[102,[91]]]],[1,[[18,[1,1]]]],[[[89,[91]],100],[[102,[12]]]],[[91,101,100],[[102,[91]]]],[[91,101,125,100],[[102,[91]]]],[[101,100],17],[[91,101,[21,[119]],128,100],[[102,[91]]]],[[91,101,[21,[119]],128,100],[[102,[91]]]],[[101,101,100],[[102,[91]]]],[[91,101,100],[[102,[91]]]],[[91,132,[21,[119]],128],[[20,[91,12]]]],[[]],[[[106,[91]],129,101,100],102],[[116,116,125,100],[[102,[[133,[101,126]]]]]],[[],[[104,[103]]]],[[101,101,100],[[102,[91]]]],[[],[[20,[19]]]],[91,122],[[]],[100,101],[100,[[20,[101,[106,[105]]]]]],[[],21],[[]],[100,134],[[101,101,100],[[102,[91]]]],[[],20],[[],20],[[],20],[[],22],[[132,100],102],0,[[91,91],[[20,[91,12]]]],[[91,91,[21,[119]],128],[[20,[91,12]]]],[91,[[20,[91,12]]]],[[91,91],[[20,[91,12]]]],[[]],[128,128],0,0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[11],[135,136],[137,136],[11],[11],[138,136],[11],[11],[11],[11],[11],[11],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[]],[[]],[[]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[1,[[18,[1,1]]]],[[]],[[]],[[]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],[[20,[19]]]],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,0,0,[[117,100],[[102,[117]]]],0,0,[[[61,[118]],119],12],[[139,[61,[122]],100],[[102,[101]]]],[[140,100],141],0,[[5,100]],[119,120],[[118,100],[[102,[101]]]],[[101,100],[[102,[117]]]],[[117,100],[[102,[101]]]],[[5,5,100],141],0,0,0,[23],[[87,[89,[88]]]],[90],[[101,100],[[102,[101]]]],[[101,100],[[102,[101]]]],[[142,[39,[[106,[143]]]],[39,[[106,[143]]]],100],[[102,[142]]]],[1,[[2,[1,1]]]],[[[106,[91]],100],[[102,[101]]]],[[[106,[91]],144,100],[[102,[101]]]],[[[106,[91]],100],[[102,[101]]]],[[[106,[91]],100],[[102,[101]]]],[[[106,[91]],100],[[102,[101]]]],[[101,100],[[102,[101]]]],[[101,100],[[102,[101]]]],[[[106,[91]],100],[[102,[101]]]],[[]],[[]],[[101,100],[[102,[101]]]],[87,[[89,[88]]]],[[[106,[91]],[106,[91]],[106,[91]],100],[[102,[91]]]],[142,142],[[]],[[12,100],[[106,[143]]]],[[142,100],[[102,[101]]]],[[],4],[[],4],[[],4],[[[106,[91]],[106,[91]],100],[[102,[101]]]],[[101,100],[[102,[101]]]],[[[106,[91]],100],[[102,[101]]]],[[[106,[91]],[106,[91]],100],[[102,[101]]]],[[[106,[91]],[106,[91]],100],[[102,[101]]]],[100,[[102,[142]]]],[[127,100],[[102,[145]]]],[11],[11],[[[106,[91]],100],[[102,[101]]]],[[142,100],[[102,[142]]]],[11],[[5,[61,[[106,[91]]]],100],[[102,[101]]]],[[5,[61,[[106,[91]]]],100],[[102,[91]]]],[[142,[106,[142]],100],[[102,[142]]]],[[101,100],[[102,[101]]]],[[100,116]],[90],[[142,[106,[143]],100],[[102,[142]]]],[[[106,[91]],100],[[102,[91]]]],[[101,100],[[102,[101]]]],[[142,14],15],[[]],[146,142],[147,[[65,[142]]]],[[]],[[12,100],[[102,[142]]]],[[]],[[145,145,145,100],[[102,[[39,[145]]]]]],[[119,11,100],[[102,[122]]]],[[87,[89,[88]]]],[[],11],0,[[142,[106,[142]],100],[[102,[142]]]],[[[106,[91]],[106,[91]],145,[106,[148]],100],[[102,[91]]]],[[]],[[],16],[[],17],[[142,[106,[142]],12,[39,[12]],[39,[12]],[21,[[106,[143]]]],100],[[102,[142]]]],[[[106,[91]],100],[[102,[91]]]],[[]],[[142,11,[21,[11]],100],[[102,[142]]]],[[101,100],[[102,[[106,[143]]]]]],[[101,100],[[102,[101]]]],[[101,100],[[102,[101]]]],[[101,100],[[102,[101]]]],[100,101],[[[106,[91]],100],[[102,[101]]]],[[[106,[91]],100],[[102,[101]]]],[[[106,[91]],100],[[102,[101]]]],[[[106,[91]],100],[[102,[101]]]],[[[106,[91]],100],[[102,[91]]]],[1,[[18,[1,1]]]],[[[106,[91]],[106,[91]],100],[[102,[101]]]],[[[106,[91]],[106,[91]],100],[[102,[101]]]],[[101,101,100],[[102,[91]]]],[[[106,[91]],[106,[91]],100],[[102,[91]]]],[[[106,[91]],100],[[102,[91]]]],[100,[[102,[96]]]],[[11,100],[[102,[101]]]],[[101,100],[[102,[101]]]],[[[106,[91]],[106,[91]],100],[[102,[101]]]],[[[106,[91]],[106,[91]],100],[[102,[101]]]],[[]],[[142,[39,[[106,[143]]]],100],[[102,[142]]]],[[142,[39,[12]],100],[[102,[142]]]],[[101,100],[[102,[101]]]],[[101,100],[[102,[101]]]],[[142,[39,[[106,[143]]]],100],[[102,[142]]]],[[101,100],[[102,[101]]]],[[],[[104,[103]]]],[[[106,[91]],100],[[102,[101]]]],[[[106,[91]],100],[[102,[101]]]],[[],[[20,[19]]]],[[[106,[91]],100],[[102,[101]]]],[[101,100],[[102,[101]]]],[[]],[100,101],[100,[[20,[101,[106,[105]]]]]],[[],21],[[]],[[],20],[[],20],[[],20],[[],22],[[142,[106,[142]],100],[[102,[142]]]],[[142,[106,[142]],100],[[102,[142]]]],[[[106,[91]],100],[[102,[101]]]],[[[106,[91]],100],[[102,[101]]]],[[[131,[101]],100],[[102,[91]]]],[[]],0,[[64,[21,[92]],[39,[91]],[13,[12,12]],[150,[149]]],[[65,[92]]]],[[],[[150,[149]]]],[[64,[21,[92]],[13,[12,12]]],[[65,[92]]]],[[151,100,[61,[12]],[39,[91]]],65],[[151,100,5,96],65],[[101,100,11],[[65,[[39,[60]]]]]],0,[[5,100]],0,0,0,0,[23],[[87,[89,[88]]]],[90],[[143,12],[[102,[143]]]],[1,[[2,[1,1]]]],[[101,101,100],[[102,[143]]]],[[],123],[[]],[[]],[87,[[89,[88]]]],[143,143],[[]],[[[89,[143]],116,125,100],[[102,[126]]]],[[],4],[[],4],[[],4],[11],[11],[11],[[100,116]],[90],[[143,14],15],[152,143],[[]],[[]],[[]],[[87,[89,[88]]]],[[],11],0,[[]],[[],16],[[101,100],[[102,[143]]]],[[],17],[[]],[100,101],[[101,101,100],[[102,[143]]]],[1,[[18,[1,1]]]],[[143,101,125,100],[[102,[143]]]],[[]],[[151,100,5,92],65],[[116,116,125,100],[[102,[[133,[101,126]]]]]],[143,143],[[],[[104,[103]]]],[[],[[20,[19]]]],[[]],[100,101],[100,[[20,[101,[106,[105]]]]]],[[],21],[[]],[[],20],[[],20],[[],20],[[],22],[[]],[[141,100],72],[[101,100],17],[[101,100],[[102,[[106,[153]]]]]],[[101,100],[[102,[132]]]],[[101,100,11],[[20,[60,72]]]],0,[[101,100],[[102,[69]]]],[[101,100,[21,[69]]],[[21,[132]]]],[100,134],[[[0,[7,45]]],[[154,[45]]]],[[141,100],72],[[[0,[134,45]]],[[155,[45]]]],0,0,0,[1,[[2,[1,1]]]],[[]],[[]],[[],[[39,[156]]]],[[],157],[[],4],[[],4],[[],4],[11],[11],[11],[[[158,[[0,[44,45,46]]]],5,5],[[50,[12]]]],[[]],[[]],[[],[[39,[11]]]],[[92,5],[[50,[159]]]],0,[[],11],[[[158,[[0,[44,45,46]]]],5,5,5],50],[[]],[[],16],[[],17],[[]],[[55,[56,[[0,[44,45,46]]]],57],[[158,[[0,[44,45,46]]]]]],[1,[[18,[1,1]]]],[160,161],0,[[55,57],162],[[]],[[],[[20,[19]]]],0,[[55,57],[[50,[71]]]],[[],21],[[]],[[],20],[[],20],[[],20],[[],22],[[]]],"c":[],"p":[[8,"Policy"],[3,"And"],[8,"Any"],[3,"Compat"],[15,"str"],[3,"CompileContext"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"EvalContext"],[15,"usize"],[3,"String"],[3,"HashMap"],[3,"Formatter"],[6,"Result"],[3,"Request"],[15,"bool"],[3,"Or"],[4,"CNil"],[4,"Result"],[4,"Option"],[3,"TypeId"],[3,"Private"],[4,"Error"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"FindColumnInScriptsTableSnafu"],[3,"ScriptsTableNotFoundSnafu"],[3,"ScriptNotFoundSnafu"],[3,"CastTypeSnafu"],[8,"Clone"],[3,"InsertScriptSnafu"],[3,"CompilePythonSnafu"],[3,"ExecutePythonSnafu"],[3,"CollectRecordsSnafu"],[3,"BuildDfLogicalPlanSnafu"],[3,"ExecuteInternalStatementSnafu"],[3,"Vec"],[8,"Debug"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[8,"ErrorExt"],[8,"Send"],[8,"Sync"],[3,"ScriptManager"],[3,"PyScript"],[3,"Arc"],[6,"Result"],[3,"PyEngine"],[3,"RegisterSystemTableRequest"],[4,"Output"],[6,"ScriptsTableRef"],[6,"TableRef"],[6,"GrpcQueryHandlerRef"],[6,"QueryEngineRef"],[3,"PyUDF"],[3,"FunctionContext"],[6,"VectorRef"],[15,"slice"],[6,"Result"],[6,"SchemaRef"],[3,"Coprocessor"],[6,"Result"],[3,"CoprStream"],[3,"Context"],[4,"Poll"],[4,"ConcreteDataType"],[3,"Signature"],[6,"SendableRecordBatchStream"],[4,"Error"],[3,"PyRuntimeSnafu"],[3,"Location"],[3,"CoprParseSnafu"],[3,"OtherSnafu"],[3,"UnsupportedSqlSnafu"],[3,"TypeCastSnafu"],[3,"DatabaseQuerySnafu"],[3,"PyParseSnafu"],[3,"PyCompileSnafu"],[3,"ArrowSnafu"],[3,"DataFusionSnafu"],[3,"RecordBatchSnafu"],[3,"NewRecordBatchSnafu"],[3,"TokioJoinSnafu"],[3,"Context"],[3,"PyType"],[3,"Py"],[3,"PyTypeSlots"],[3,"PyVector"],[3,"RecordBatch"],[3,"AnnotationInfo"],[4,"BackendType"],[3,"QueryEngineWeakRef"],[3,"PyQueryEngine"],[8,"QueryEngine"],[3,"Weak"],[4,"Either"],[3,"VirtualMachine"],[3,"PyObjectRef"],[6,"PyResult"],[6,"PyTypeRef"],[3,"StaticCell"],[3,"PyBaseException"],[3,"PyRef"],[3,"DecoratorArgs"],[3,"CodeObject"],[3,"Located"],[6,"Stmt"],[6,"Expr"],[3,"Arguments"],[6,"Keyword"],[3,"PyMappingMethods"],[3,"PyRecordBatch"],[3,"PyObject"],[4,"ColumnarValue"],[4,"ScalarValue"],[4,"DataType"],[3,"Field"],[8,"Datum"],[6,"ArrayRef"],[3,"PyNumberMethods"],[3,"PySequenceMethods"],[3,"PyComparisonOp"],[6,"PyComparisonValue"],[3,"PyStr"],[8,"Fn"],[15,"isize"],[3,"SaturatedSlice"],[4,"OptionalArg"],[4,"Value"],[4,"Either"],[8,"FnOnce"],[3,"METRIC_RSPY_INIT_ELAPSED"],[3,"Histogram"],[3,"METRIC_RSPY_EXEC_ELAPSED"],[3,"METRIC_RSPY_EXEC_TOTAL_ELAPSED"],[8,"AggregateExpr"],[4,"DataFusionError"],[6,"PyBaseExceptionRef"],[3,"PyDataFrame"],[3,"PyExpr"],[15,"f64"],[15,"i64"],[3,"DataFrame"],[3,"RecordBatch"],[3,"PyFunction"],[3,"Interpreter"],[3,"Rc"],[3,"Scope"],[4,"Expr"],[8,"PyObjectPayload"],[6,"Result"],[3,"JoinHandle"],[3,"ColumnSchema"],[3,"RawSchema"],[3,"ScriptsTable"],[3,"StringVector"],[3,"TableInfo"],[6,"QueryContextRef"],[6,"Result"],[8,"Script"],[8,"ScriptEngine"],[13,"BuildDfLogicalPlan"],[13,"FindColumnInScriptsTable"],[13,"ScriptsTableNotFound"],[13,"InsertScript"],[13,"CompilePython"],[13,"ExecutePython"],[13,"ScriptNotFound"],[13,"CollectRecords"],[13,"CastType"],[13,"ExecuteInternalStatement"],[13,"PyParse"],[13,"PyCompile"],[13,"Arrow"],[13,"DataFusion"],[13,"TokioJoin"],[13,"CoprParse"],[13,"TypeCast"],[13,"DatabaseQuery"],[13,"PyRuntime"],[13,"Other"],[13,"UnsupportedSql"],[13,"RecordBatch"],[13,"NewRecordBatch"]]},\
"servers":{"doc":"","t":"NEDNLLLLLLLLLLLLLLLLLLAOLLLLLLLLLLLLLALLLLLLLAAAALLALLLLLLLLAAAAALLAMAAAMAAMLLLAALLALLLLLLLLLLLLLLLLIGLLNDNDNDNDNDNDNDNDNDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDNNDDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMRDDDGLLLLLLLLLLLLLLLLLLLLLMLLLLLAMLLLLLLLLLLAMLLLLLLLLALLLLLLLLLLLLLLLLMMLLLLLAMAMLLLMLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLIGDDGLLLLLLLLLLKLLLMLMLLLLLLLLLLLLLLLLMLLLLMLALFLLLLLLLDLLLLLLLLMLLMLLLLLLLLMLLLLLLMLLLLLLLLLLDDLLLFLLLLLLLLLLLLFMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMLLMMLLLLLLLLLLLLLLLMLLDLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLIGDLLLLLLLLLLLLLLLKLLMLLLLLLLMLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLNDDRDRRRDDDDEDHNDLLLMLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFAAAMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLMLLLLLAMMLLLLLLLLLLAMLMMAMAAMLLLLLLLLLMLMLLLLLLLLLLAMMLLLLLLLLLLLLLLLLFFLMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLENGDGGLMLLFLLLLLLLLLLLLLFLLLLLLFFFFLLLLLLFLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLFMLLDDDDDLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLFMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLFMMLLLLLLLLLLLLLLLLLLLLMFMFMFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLHDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFDNNNEDDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLFFLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFFLLLLLLLLFLLLLLLLLLLACFDLLLLLLMFFLLLLLLLLLLLLLLLFFLLLLLLLLLLLLDDNNDDDNDDEDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLMMMMLLLLLLLLLLFMMFLFFMMFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMDLLLMLLLMLLLLLLLLLLLLOLLMLMFLLFLLLLLLLLLOLRRDLLLLLLLLLLLLLLLLLMLMLLLLLLLLFLQQQIGIGIGLLLLLLLLGGDLLLMLLLLMMLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLDDRRDRDDDDDDDDDDDDDDDDRRDDDRRRDRDDRRRDDDRDDLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHDDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAAHHHHHHHHHHHHFFFFFFFFFDLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLFMMMFFLMLLMLLLLLLLMFLFFFFFRRDDDLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMMLLLLLMLLLLLLLLLLLLLLLLLLLMLLLDDLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLFLLLMRDLLMLLALLLALFLLLLLALLLLLLMLMLLLLLLLLLLLDRRLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLMLLMLDGLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDLLLLLLMLLLLLLLLLLLLMLLMLLLLLLLLRRRAAARRFFFFFFFFFFFFIGKKRRAFAFFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDGLLLLLLLLLLMMLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMFMMMMLLLLLLLLLMMMMMMMMMMFLLLLLMLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLMLLLLLDRRRRDDEDDNNLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLMMMLMLLMMMLMLLLLLALMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMMMLLLLLEDNDNLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLFMLLLFFLLLLLLLLLLLLLLLLLLLLLMMLLLDLLLLLLLLLLLLLLLLLLFLMFLMLLLLLLLLRDLLMLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLFAFFFFFFFFDLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLRRDRDLLLLLLLFLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLFFFLLLFFFLLFFLLFFLLLLLLLLLLLLLLRIGKKIGIGIGIGDIGLMLLLLLMMLLLKKKLLAKLKLLLLLKLKLALLLKLLLLLKQIGDGLLLLLLLLLKLLLLLLLLLLLLLLLLLLLQDGIGLLLLLLLLLKLKLKLKLLLLLLLLKLLLLLLLLLLLLDDLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMLLLLLLLLLLLLLLFFFFFFFGDDIMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLKMLLLLKLLKLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLNNNEDNNLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Distributed","Mode","SqlPlan","Standalone","__clone_box","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","configurator","define_into_tonic_status","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","error","fmt","from","from","from_ref","from_ref","from_subset","from_subset","grpc","heartbeat_options","http","influxdb","init","init","interceptor","into","into","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","line_writer","metrics","metrics_handler","mysql","opentsdb","or","or","otlp","plan","postgres","prom_store","prometheus_handler","query","query_handler","row_writer","schema","sculpt","sculpt","serialize","server","shutdown","subset","subset","tls","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","Configurator","ConfiguratorRef","config_grpc","config_http","AlreadyStarted","AlreadyStartedSnafu","Auth","AuthSnafu","BuildHttpResponse","BuildHttpResponseSnafu","CatalogError","CatalogSnafu","CheckDatabaseValidity","CheckDatabaseValiditySnafu","CollectRecordbatch","CollectRecordbatchSnafu","ConnResetByPeer","ConnResetByPeerSnafu","ConvertScalarValue","ConvertScalarValueSnafu","DataFrame","DataFrameSnafu","DatabaseNotFound","DatabaseNotFoundSnafu","DecodeOtlpRequest","DecodeOtlpRequestSnafu","DecodePromRemoteRequest","DecodePromRemoteRequestSnafu","DecompressPromRemoteRequest","DecompressPromRemoteRequestSnafu","DescribeStatement","DescribeStatementSnafu","Error","ExecuteGrpcQuery","ExecuteGrpcQuerySnafu","ExecuteGrpcRequest","ExecuteGrpcRequestSnafu","ExecutePlan","ExecutePlanSnafu","ExecuteQuery","ExecuteQuerySnafu","ExecuteScript","ExecuteScriptSnafu","GetPreparedStmtParams","GetPreparedStmtParamsSnafu","GrpcReflectionService","GrpcReflectionServiceSnafu","Hyper","HyperSnafu","IncompatibleSchema","IncompatibleSchemaSnafu","InfluxdbLineProtocol","InfluxdbLineProtocolSnafu","InfluxdbLinesWrite","InfluxdbLinesWriteSnafu","InsertScript","InsertScriptSnafu","Internal","InternalIo","InternalIoSnafu","InternalSnafu","InvalidAuthorizationHeader","InvalidAuthorizationHeaderSnafu","InvalidBase64Value","InvalidBase64ValueSnafu","InvalidFlightTicket","InvalidFlightTicketSnafu","InvalidFlushArgument","InvalidFlushArgumentSnafu","InvalidOpentsdbJsonRequest","InvalidOpentsdbJsonRequestSnafu","InvalidOpentsdbLine","InvalidOpentsdbLineSnafu","InvalidParameter","InvalidParameterSnafu","InvalidPrepareStatement","InvalidPrepareStatementSnafu","InvalidPromRemoteReadQueryResult","InvalidPromRemoteReadQueryResultSnafu","InvalidPromRemoteRequest","InvalidPromRemoteRequestSnafu","InvalidQuery","InvalidQuerySnafu","InvalidUtf8Value","InvalidUtf8ValueSnafu","InvisibleASCII","InvisibleASCIISnafu","JoinTask","JoinTaskSnafu","Metrics","MetricsSnafu","NotFoundAuthHeader","NotFoundAuthHeaderSnafu","NotFoundInfluxAuth","NotFoundInfluxAuthSnafu","NotSupported","NotSupportedSnafu","Other","OtherSnafu","OtlpMetricsWrite","OtlpMetricsWriteSnafu","ParsePromQL","ParsePromQLSnafu","PreparedStmtTypeMismatch","PreparedStmtTypeMismatchSnafu","PromSeriesWrite","PromSeriesWriteSnafu","ReplacePreparedStmtParams","ReplacePreparedStmtParamsSnafu","Result","StartGrpc","StartGrpcSnafu","StartHttp","StartHttpSnafu","TcpBind","TcpBindSnafu","TcpIncoming","TcpIncomingSnafu","TimePrecision","TimePrecisionSnafu","TlsRequired","TlsRequiredSnafu","TokioIo","TokioIoSnafu","UnexpectedResult","UnexpectedResultSnafu","UnsupportedAuthScheme","UnsupportedAuthSchemeSnafu","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","actual","actual","addr","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","catalog","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_name","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","datatype","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","err_msg","err_msg","err_msg","err_msg","expected","expected","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","feat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_response","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","msg","msg","name","name","name","name","next","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","provide","query","query","reason","reason","reason","schema","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","server","server","source","status_code","status_to_tonic_code","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","actual","addr","catalog","column_name","datatype","err_msg","err_msg","err_msg","err_msg","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","expected","expected","feat","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","name","name","name","name","query","query","reason","reason","reason","schema","server","server","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","GRPC_SERVER","GrpcServer","GrpcServerConfig","HealthCheckHandler","TonicResult","__clone_box","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","config","create_flight_service","create_healthcheck_service","create_prom_query_gateway_service","create_reflection_service","create_region_service","database","database_handler","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","flight","flight_handler","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","greptime_handler","health_check","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","max_recv_message_size","max_send_message_size","name","new","or","or","or","prom_query_gateway","prometheus_handler","region_server","region_server_handler","sculpt","sculpt","sculpt","serve_state","shutdown","shutdown_tx","start","subset","subset","subset","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","user_provider","vzip","vzip","vzip","wait_for_serve","DatabaseService","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","handle_requests","handler","init","into","into_request","is_in_subset","lift_into","new","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","FlightCraft","FlightCraftRef","FlightCraftWrapper","FlightRecordBatchStream","TonicStream","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","do_action","do_exchange","do_get","do_get","do_get","do_put","done","drop","encoder","from","from","from","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_socketlike","from_subset","get_flight_info","get_schema","handshake","init","into","into_request","is_in_subset","join_handle","lift_into","list_actions","list_flights","or","rx","sculpt","stream","subset","to_flight_data_stream","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","FlightRecordBatchStream","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","done","drop","drop","encoder","flight_data_stream","from","from_subset","init","into","into_request","into_streaming_request","is_in_subset","join_handle","lift_into","new","or","poll_next","project","project_ref","rx","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","try_poll_next","type_id","vzip","GreptimeRequestHandler","RequestTimer","__clone_box","and","and","auth","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_query_context","db","deref","deref","deref_mut","deref_mut","do_get","drop","drop","drop","from","from","from_ref","from_subset","from_subset","handle_request","handler","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","new","new","or","or","record","request_type","runtime","sculpt","sculpt","start","status_code","subset","subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","user_provider","vzip","vzip","PrometheusGatewayService","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","handle","handle_inner","handler","init","into","into_request","is_in_subset","lift_into","new","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","user_provider","vzip","RegionServerHandler","RegionServerHandlerRef","RegionServerRequestHandler","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","handle","handle","handle","handler","init","into","into_request","is_in_subset","lift_into","new","or","runtime","sculpt","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","HeartbeatOptions","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","datanode_default","default","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","frontend_default","init","interval","into","into_request","is_in_subset","lift_into","or","retry_interval","sculpt","serialize","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","AffectedRows","ApiState","ColumnSchema","DEFAULT_BODY_LIMIT","GreptimeOptionsConfigState","HTTP_API_PREFIX","HTTP_API_VERSION","HTTP_SERVER","HttpOptions","HttpRecordsOutput","HttpServer","HttpServerBuilder","JsonOutput","JsonResponse","PUBLIC_APIS","Records","Schema","__clone_box","__clone_box","__clone_box","addr","and","and","and","and","and","and","and","and","and","and","authorize","body_limit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone_into","clone_into","clone_into","code","code","column_schemas","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","data_type","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disable_dashboard","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","error","execution_time_ms","execution_time_ms","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_output","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","greptime_config_options","greptime_config_options","grpc_handler","handle_error","handler","header","influxdb","influxdb_handler","init","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","json_schema","json_schema","json_schema","json_schema","json_schema","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","make_app","mem_prof","metrics_handler","name","name","new","new","new","num_cols","num_rows","opentsdb","opentsdb_handler","options","or","or","or","or","or","or","or","or","or","or","otlp","otlp_handler","output","output","plugins","pprof","prom_handler","prom_store","prometheus","prometheus_handler","route_config","route_influxdb","route_metrics","route_opentsdb","route_otlp","route_prom","route_prometheus","route_sql","rows","rows","schema","schema","schema_id","schema_id","schema_id","schema_id","schema_id","schema_name","schema_name","schema_name","schema_name","schema_name","script","script_handler","script_handler","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","serialize","serialize","serve_api","serve_docs","shutdown","shutdown_tx","sql_handler","sql_handler","start","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","success","timeout","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","track_metrics","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_provider","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_error","with_execution_time","with_greptime_config_options","with_grpc_handler","with_influxdb_handler","with_metrics_handler","with_opentsdb_handler","with_otlp_handler","with_output","with_plugins","with_prom_handler","with_prometheus_handler","with_script_handler","with_sql_handler","with_user_provider","AuthScheme","Basic","Credential","HttpAuth","Password","Username","__clone_box","_ty","and","and","auth_header","authorize","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","decode_basic","deref","deref","deref_mut","deref_mut","drop","drop","extract_catalog_and_schema","extract_db_from_query","extract_influxdb_user_from_query","extract_username_and_password","fmt","from","from","from_ref","from_subset","from_subset","get_influxdb_credentials","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","need_auth","new","or","or","sculpt","sculpt","subset","subset","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","unauthorized_resp","user_provider","vzip","vzip","HealthQuery","HealthResponse","PromqlQuery","SqlQuery","StatusResponse","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","commit","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","config","db","db","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","end","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","health","hostname","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","json_schema","json_schema","json_schema","json_schema","json_schema","lift_into","lift_into","lift_into","lift_into","lift_into","metrics","or","or","or","or","or","promql","query","rustc_version","schema_id","schema_id","schema_id","schema_id","schema_id","schema_name","schema_name","schema_name","schema_name","schema_name","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","serialize","source_time","sql","sql","sql_docs","start","status","step","subset","subset","subset","subset","subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_schema","version","vzip","vzip","vzip","vzip","vzip","GREPTIME_DB_NAME_HEADER_NAME","GreptimeDbName","and","borrow","borrow_mut","compat","compat_mut","compat_ref","decode","deref","deref_mut","drop","encode","from","from_subset","init","into","into_request","is_in_subset","lift_into","name","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","value","vzip","influxdb_health","influxdb_ping","influxdb_write","influxdb_write_v1","influxdb_write_v2","parse_time_precision","mem_prof_handler","DataPointRequest","Debug","Empty","One","OneOrMany","OpentsdbDebuggingResponse","OpentsdbDetailError","OpentsdbPutResponse","Vec","__clone_box","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","datapoint","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","error","errors","failed","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","metric","on_failed","on_success","or","or","or","or","or","parse_data_points","put","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","serialize","subset","subset","subset","subset","subset","success","tags","timestamp","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","OtlpMetricsResponse","OtlpTracesResponse","and","and","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_response","into_response","is_in_subset","is_in_subset","lift_into","lift_into","metrics","or","or","parse_metrics_body","parse_traces_body","sculpt","sculpt","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","traces","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","handler","pprof_handler","pprof_handler","DatabaseQuery","and","borrow","borrow_mut","compat","compat_mut","compat_ref","db","decode_remote_read_request","decode_remote_write_request","default","deref","deref_mut","deserialize","drop","fmt","from","from_subset","init","into","into_request","is_in_subset","json_schema","lift_into","or","remote_read","remote_write","schema_id","schema_name","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","InstantQuery","LabelValueQuery","LabelValues","Labels","LabelsQuery","Matches","PromData","PromData","PromSeries","PrometheusJsonResponse","PrometheusResponse","RangeQuery","Series","SeriesQuery","and","and","and","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","data","db","db","db","db","db","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","end","end","end","eq","eq","eq","eq","error","error","error_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_query_result","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_all_column_names","init","init","init","init","init","init","init","init","init","init","instant_query","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","json_schema","json_schema","json_schema","json_schema","json_schema","json_schema","json_schema","json_schema","json_schema","json_schema","label_values_query","labels_query","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","matches","matches","matches","metric","or","or","or","or","or","or","or","or","or","or","promql_expr_to_metric_name","query","query","range_query","record_batches_to_data","record_batches_to_labels_name","record_batches_to_series","result","result_type","retrieve_label_values","retrieve_label_values_from_record_batch","retrieve_labels_name_from_query_result","retrieve_metric_name_and_result_type","retrieve_series_from_query_result","schema_id","schema_id","schema_id","schema_id","schema_id","schema_id","schema_id","schema_id","schema_id","schema_id","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","series_query","start","start","start","start","status","step","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","success","time","timeout","timeout","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","warnings","ScriptQuery","and","borrow","borrow_mut","catalog","compat","compat_mut","compat_ref","db","default","deref","deref_mut","deserialize","drop","fmt","from","from_subset","init","into","into_request","is_in_subset","json_err","json_schema","lift_into","name","or","params","run_script","schema_id","schema_name","scripts","sculpt","serialize","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","unwrap_or_json_err","vzip","DEFAULT_TIME_PRECISION","INFLUXDB_TIMESTAMP_COLUMN_NAME","InfluxdbRequest","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","is_in_subset","lift_into","lines","or","precision","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","unwrap_or_default_precision","vzip","Error","Error","Error","GrpcQueryInterceptor","GrpcQueryInterceptorRef","PromQueryInterceptor","PromQueryInterceptorRef","SqlQueryInterceptor","SqlQueryInterceptorRef","post_execute","post_execute","post_execute","post_parsing","pre_execute","pre_execute","pre_execute","pre_parsing","ColumnLen","ColumnName","LineWriter","and","borrow","borrow_mut","columns_builders","commit","compat","compat_mut","compat_ref","current_rows","db","deref","deref_mut","drop","expected_rows","finish","from","from_subset","init","into","into_request","is_in_subset","lift_into","or","sculpt","subset","table_name","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","with_lines","write","write_bool","write_f64","write_i64","write_string","write_tag","write_ts","write_u64","HTTP_TRACK_METRICS","METRIC_AUTH_FAILURE","METRIC_CODE_LABEL","METRIC_DB_LABEL","METRIC_ERROR_COUNTER","METRIC_ERROR_COUNTER_LABEL_MYSQL","METRIC_GRPC_REQUESTS_ELAPSED","METRIC_GRPC_REQUESTS_TOTAL","METRIC_HTTP_INFLUXDB_WRITE_ELAPSED","METRIC_HTTP_OPENTELEMETRY_METRICS_ELAPSED","METRIC_HTTP_OPENTELEMETRY_TRACES_ELAPSED","METRIC_HTTP_PROMQL_ELAPSED","METRIC_HTTP_PROMQL_INSTANT_QUERY_ELAPSED","METRIC_HTTP_PROMQL_LABEL_QUERY_ELAPSED","METRIC_HTTP_PROMQL_LABEL_VALUE_QUERY_ELAPSED","METRIC_HTTP_PROMQL_RANGE_QUERY_ELAPSED","METRIC_HTTP_PROMQL_SERIES_QUERY_ELAPSED","METRIC_HTTP_PROM_STORE_READ_ELAPSED","METRIC_HTTP_PROM_STORE_WRITE_ELAPSED","METRIC_HTTP_REQUESTS_ELAPSED","METRIC_HTTP_REQUESTS_TOTAL","METRIC_HTTP_SQL_ELAPSED","METRIC_METHOD_LABEL","METRIC_MYSQL_BINQUERY","METRIC_MYSQL_CONNECTIONS","METRIC_MYSQL_PREPARED_COUNT","METRIC_MYSQL_QUERY_TIMER","METRIC_MYSQL_SUBPROTOCOL_LABEL","METRIC_MYSQL_TEXTQUERY","METRIC_PATH_LABEL","METRIC_POSTGRES_CONNECTIONS","METRIC_POSTGRES_EXTENDED_QUERY","METRIC_POSTGRES_PREPARED_COUNT","METRIC_POSTGRES_QUERY_TIMER","METRIC_POSTGRES_SIMPLE_QUERY","METRIC_POSTGRES_SUBPROTOCOL_LABEL","METRIC_PROTOCOL_LABEL","METRIC_SERVER_GRPC_DB_REQUEST_TIMER","METRIC_SERVER_GRPC_PROM_REQUEST_TIMER","METRIC_TCP_OPENTSDB_LINE_WRITE_ELAPSED","METRIC_TYPE_LABEL","MetricsMiddleware","MetricsMiddlewareLayer","__clone_box","__clone_box","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_make_service","into_make_service_with_connect_info","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","jemalloc","layer","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","make_service","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","or","poll_ready","poll_ready","poll_ready","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","subset","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","JEMALLOC_COLLECTOR","JemallocCollector","SYS_JEMALLOC_ALLOCATED","SYS_JEMALLOC_RESIDEN","__private_field","__private_field","allocated","and","and","and","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","epoch","error","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","or","or","or","resident","sculpt","sculpt","sculpt","subset","subset","subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","update","vzip","vzip","vzip","Error","UpdateJemallocMetrics","UpdateJemallocMetricsSnafu","__clone_box","and","and","as_any","as_error_source","backtrace","borrow","borrow","borrow_mut","borrow_mut","cause","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","debug_fmt","deref","deref","deref_mut","deref_mut","description","drop","drop","fmt","fmt","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_error","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","next","or","or","provide","sculpt","sculpt","source","status_code","subset","subset","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","error","location","MetricsHandler","__clone_box","and","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","or","render","sculpt","subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","federated","handler","helper","server","writer","MYSQL_CONN_JAVA_PATTERN","OTHER_NOT_SUPPORTED_STMT","SELECT_DATABASE_PATTERN","SELECT_TIME_DIFF_FUNC_PATTERN","SELECT_VAR_PATTERN","SELECT_VERSION_PATTERN","SET_TIME_ZONE_PATTERN","SHOW_COLLATION_PATTERN","SHOW_LOWER_CASE_PATTERN","SHOW_SQL_MODE_PATTERN","SHOW_VARIABLES_PATTERN","VAR_VALUES","check","check_others","check_select_variable","check_set_variables","check_show_variables","get_version","select_function","select_variable","show_variables","MysqlInstanceShim","and","authenticate","borrow","borrow_mut","compat","compat_mut","compat_ref","create","deref","deref_mut","do_describe","do_exec_plan","do_query","drop","dummy_params","format_duration","from","from_subset","init","into","into_request","is_in_subset","lift_into","on_close","on_execute","on_init","on_prepare","on_query","or","plan","prepared_params","prepared_stmts","prepared_stmts_counter","query_handler","replace_params","replace_params_with_values","salt","salt","save_plan","sculpt","session","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","user_provider","validate_query","vzip","convert_value","format_placeholder","replace_placeholders","transform_placeholders","visit_placeholders","DEFAULT_RESULT_SET_WRITE_BUFFER_SIZE","MYSQL_SERVER","MysqlServer","MysqlSpawnConfig","MysqlSpawnRef","accept","and","and","and","base_server","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create_server","deref","deref","deref","deref_mut","deref_mut","deref_mut","do_handle","drop","drop","drop","force_tls","from","from","from","from_subset","from_subset","from_subset","handle","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","name","new","new","or","or","or","query_handler","query_handler","reject_no_database","sculpt","sculpt","sculpt","shutdown","spawn_config","spawn_ref","start","subset","subset","subset","tls","tls","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","user_provider","user_provider","vzip","vzip","vzip","MysqlResultWriter","QueryResult","and","and","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_mysql_column","create_mysql_column_def","deref","deref","deref_mut","deref_mut","drop","drop","finish","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","new","or","or","query_context","schema","sculpt","sculpt","stream","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","try_write_one","type_id","type_id","vzip","vzip","write_affected_rows","write_output","write_query_error","write_query_result","write_recordbatch","writer","OPENTSDB_SERVER","OpentsdbServer","accept","and","base_server","borrow","borrow_mut","codec","compat","compat_mut","compat_ref","connection","create_server","data_point_to_grpc_row_insert_requests","deref","deref_mut","drop","from","from_subset","handler","init","into","into_request","is_in_subset","lift_into","name","notify_shutdown","or","query_handler","sculpt","shutdown","start","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","DataPoint","OPENTSDB_FIELD_COLUMN_NAME","OPENTSDB_TIMESTAMP_COLUMN_NAME","__clone_box","and","as_grpc_insert","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from","from_ref","from_subset","init","into","into_request","is_in_subset","lift_into","metric","metric","new","or","sculpt","subset","tags","tags","tags_mut","timestamp_to_millis","to_owned","to_subset","to_subset_unchecked","try_create","try_from","try_into","try_into","ts_millis","ts_millis","type_id","value","value","vzip","Connection","Line","and","borrow","borrow_mut","buffer","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","is_in_subset","lift_into","new","or","parse_line","read_line","sculpt","stream","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","write_line","Handler","and","borrow","borrow_mut","compat","compat_mut","compat_ref","connection","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","new","or","query_handler","run","sculpt","shutdown","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","GREPTIME_COUNT","GREPTIME_TIMESTAMP","GREPTIME_VALUE","metrics","plugin","trace","APPROXIMATE_COLUMN_COUNT","HISTOGRAM_LE_COLUMN","encode_exponential_histogram","encode_gauge","encode_histogram","encode_metrics","encode_sum","encode_summary","normalize_otlp_name","to_grpc_insert_requests","write_attributes","write_data_point_value","write_tags_and_timestamp","write_timestamp","TraceParser","TraceParserRef","parse","table_name","APPROXIMATE_COLUMN_COUNT","TRACE_TABLE_NAME","attributes","parse","span","to_grpc_insert_requests","write_span_to_row","Attributes","OtlpAnyValue","__clone_box","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_subset","from_subset","get_mut","get_ref","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","or","or","sculpt","sculpt","serialize","serialize","subset","subset","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","SpanEvent","SpanEvents","SpanLink","SpanLinks","TraceSpan","TraceSpans","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","and","and","and","and","and","attributes","attributes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_to_hex_string","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","end_in_nanosecond","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","get_mut","get_mut","get_ref","get_ref","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","name","or","or","or","or","or","parent_span_id","parse_span","resource_attributes","scope_attributes","scope_name","scope_version","sculpt","sculpt","sculpt","sculpt","sculpt","serialize","serialize","serialize","serialize","span_attributes","span_events","span_id","span_id","span_kind","span_links","span_name","span_status_code","span_status_message","start_in_nanosecond","status_to_string","subset","subset","subset","subset","subset","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","trace_id","trace_id","trace_state","trace_state","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","uplifted_span_attributes","vzip","vzip","vzip","vzip","vzip","GreptimeDBStartupParameters","METADATA_CATALOG","METADATA_DATABASE","METADATA_SCHEMA","METADATA_USER","MakePostgresServerHandler","MakePostgresServerHandlerBuilder","MakePostgresServerHandlerBuilderError","PostgresServer","PostgresServerHandler","UninitializedField","ValidationError","__clone_box","and","and","and","and","and","as_error_source","auth_handler","base_server","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_empty","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","do_describe","do_query","do_query","drop","drop","drop","drop","drop","fmt","fmt","force_tls","force_tls","force_tls","force_tls","from","from","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","handler","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","login_verifier","make","make_handler","new","on_startup","or","or","or","or","or","param_provider","param_provider","param_provider","param_provider","portal_store","portal_store","provide","query_handler","query_handler","query_handler","query_handler","query_parser","query_parser","sculpt","sculpt","sculpt","sculpt","sculpt","server","server_parameters","session","subset","subset","subset","subset","subset","tls","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","user_provider","user_provider","user_provider","version","vzip","vzip","vzip","vzip","vzip","DbResolution","LoginInfo","NotFound","PgLoginVerifier","Resolved","and","and","and","auth","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","catalog","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_client_info","from_subset","from_subset","from_subset","host","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","new","or","or","or","resolve_db_info","schema","sculpt","sculpt","sculpt","send_error","set_client_info","subset","subset","subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","user","user_provider","vzip","vzip","vzip","DefaultQueryParser","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","new","or","output_to_query_response","parse_sql","query_handler","recordbatches_to_query_response","sculpt","session","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","POSTGRES_SERVER","PostgresServer","accept","and","base_server","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","make_handler","name","new","or","sculpt","shutdown","start","subset","tls","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","encode_value","interval","invalid_parameter_error","param_types_to_pg_types","parameter_to_string","parameters_to_scalar_values","schema_to_pg","to_timestamp_scalar_value","type_gt_to_pg","type_pg_to_gt","PgInterval","__clone_box","accepts","accepts","and","borrow","borrow_mut","borrow_to_sql","clone","clone_into","compat","compat_mut","compat_ref","days","default","deref","deref_mut","drop","fmt","fmt","from","from","from_ref","from_sql","from_subset","init","into","into_request","is_in_subset","lift_into","microseconds","months","or","sculpt","subset","to_owned","to_sql","to_sql_checked","to_sql_text","to_string","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","FIELD_COLUMN_NAME","METRIC_NAME_LABEL","Metrics","TIMESTAMP_COLUMN_NAME","TimeSeriesId","and","and","borrow","borrow","borrow_mut","borrow_mut","cmp","collect_timeseries_ids","compare","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","exposition","fmt","from","from","from_subset","from_subset","get_hash","hash","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","labels","lift_into","lift_into","lit_timestamp_millisecond","mock_timeseries","new_label","or","or","partial_cmp","query_to_plan","recordbatch_to_timeseries","recordbatches_to_timeseries","sculpt","sculpt","snappy_compress","snappy_decompress","subset","subset","table_name","to_grpc_row_insert_requests","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","PROMETHEUS_API_VERSION","PrometheusHandler","PrometheusHandlerRef","catalog_manager","do_query","InfluxdbLineProtocolHandler","InfluxdbLineProtocolHandlerRef","OpenTelemetryProtocolHandler","OpenTelemetryProtocolHandlerRef","OpentsdbProtocolHandler","OpentsdbProtocolHandlerRef","PromStoreProtocolHandler","PromStoreProtocolHandlerRef","PromStoreResponse","ScriptHandler","ScriptHandlerRef","and","body","borrow","borrow_mut","compat","compat_mut","compat_ref","content_encoding","content_type","deref","deref_mut","drop","exec","exec","execute_script","from","from_subset","grpc","ingest_metrics","init","insert_script","into","into_request","into_response","is_in_subset","lift_into","metrics","or","read","sculpt","sql","subset","to_subset","to_subset_unchecked","traces","try_from","try_into","try_into","type_id","vzip","write","Error","GrpcQueryHandler","GrpcQueryHandlerRef","ServerGrpcQueryHandlerAdaptor","ServerGrpcQueryHandlerRef","and","arc","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","do_query","do_query","drop","from","from_subset","init","into","into_request","is_in_subset","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Error","ServerSqlQueryHandlerAdaptor","ServerSqlQueryHandlerRef","SqlQueryHandler","SqlQueryHandlerRef","and","arc","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","do_describe","do_describe","do_exec_plan","do_exec_plan","do_promql_query","do_promql_query","do_query","do_query","drop","from","from_subset","init","into","into_request","is_in_subset","is_valid_schema","is_valid_schema","lift_into","or","sculpt","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","MultiTableData","TableData","add_row","add_table_data","alloc_one_row","and","and","borrow","borrow","borrow_mut","borrow_mut","check_schema","column_indexes","columns","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","get_or_default_table_data","init","init","into","into","into_request","into_request","into_row_insert_requests","into_schema_and_rows","is_in_subset","is_in_subset","lift_into","lift_into","new","new","num_columns","num_rows","num_tables","or","or","rows","schema","sculpt","sculpt","subset","subset","table_data_map","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","write_by_semantic_type","write_f64","write_fields","write_tag","write_tags","write_ts_millis","write_ts_precision","AbortableStream","AcceptTask","BaseTcpServer","Server","abort_handle","abort_registration","accept_task","and","and","bind","bind","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_server","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","io_runtime","io_runtime","is_in_subset","is_in_subset","join_handle","lift_into","lift_into","name","name","or","or","sculpt","sculpt","shutdown","shutdown","shutdown","start","start_with","start_with","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","Shutdown","and","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","fmt","from","from_subset","init","into","into_request","is_in_subset","is_shutdown","lift_into","new","notify","or","recv","sculpt","shutdown","subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","Disable","Prefer","Require","TlsMode","TlsOption","VerifyCa","VerifyFull","__clone_box","__clone_box","and","and","borrow","borrow","borrow_mut","borrow_mut","cert_path","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","from_str","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","key_path","lift_into","lift_into","mode","new","or","or","sculpt","sculpt","serialize","serialize","setup","should_force_tls","subset","subset","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"servers"],[100,"servers::configurator"],[104,"servers::error"],[2351,"servers::error::Error"],[2461,"servers::grpc"],[2577,"servers::grpc::database"],[2608,"servers::grpc::flight"],[2663,"servers::grpc::flight::stream"],[2702,"servers::grpc::greptime_handler"],[2776,"servers::grpc::prom_query_gateway"],[2808,"servers::grpc::region_server"],[2848,"servers::heartbeat_options"],[2894,"servers::http"],[3341,"servers::http::authorize"],[3419,"servers::http::handler"],[3619,"servers::http::header"],[3651,"servers::http::influxdb"],[3657,"servers::http::mem_prof"],[3658,"servers::http::opentsdb"],[3830,"servers::http::otlp"],[3890,"servers::http::pprof"],[3892,"servers::http::pprof::handler"],[3893,"servers::http::prom_store"],[3932,"servers::http::prometheus"],[4330,"servers::http::script"],[4372,"servers::influxdb"],[4405,"servers::interceptor"],[4422,"servers::line_writer"],[4467,"servers::metrics"],[5370,"servers::metrics::jemalloc"],[5462,"servers::metrics::jemalloc::error"],[5537,"servers::metrics::jemalloc::error::Error"],[5539,"servers::metrics_handler"],[5572,"servers::mysql"],[5577,"servers::mysql::federated"],[5598,"servers::mysql::handler"],[5650,"servers::mysql::helper"],[5655,"servers::mysql::server"],[5758,"servers::mysql::writer"],[5826,"servers::opentsdb"],[5866,"servers::opentsdb::codec"],[5915,"servers::opentsdb::connection"],[5950,"servers::opentsdb::handler"],[5982,"servers::otlp"],[5988,"servers::otlp::metrics"],[6002,"servers::otlp::plugin"],[6006,"servers::otlp::trace"],[6013,"servers::otlp::trace::attributes"],[6089,"servers::otlp::trace::span"],[6299,"servers::postgres"],[6492,"servers::postgres::auth_handler"],[6586,"servers::postgres::handler"],[6619,"servers::postgres::server"],[6655,"servers::postgres::types"],[6665,"servers::postgres::types::interval"],[6712,"servers::prom_store"],[6794,"servers::prometheus_handler"],[6799,"servers::query_handler"],[6851,"servers::query_handler::grpc"],[6885,"servers::query_handler::sql"],[6927,"servers::row_writer"],[7006,"servers::server"],[7079,"servers::shutdown"],[7112,"servers::tls"]],"d":["","","Cached SQL and logical plan for database interfaces","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","prometheus protocol supportings handles prometheus …","prom supply the prometheus HTTP API Server compliance","","All query handler traits for various request protocols, …","","","","","","","Copied from tokio’s mini-redis example.","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::AlreadyStarted</code> …","","SNAFU context selector for the <code>Error::Auth</code> variant","","SNAFU context selector for the <code>Error::BuildHttpResponse</code> …","","SNAFU context selector for the <code>Error::CatalogError</code> variant","","SNAFU context selector for the <code>Error::CheckDatabaseValidity</code>…","","SNAFU context selector for the <code>Error::CollectRecordbatch</code> …","","SNAFU context selector for the <code>Error::ConnResetByPeer</code> …","","SNAFU context selector for the <code>Error::ConvertScalarValue</code> …","","SNAFU context selector for the <code>Error::DataFrame</code> variant","","SNAFU context selector for the <code>Error::DatabaseNotFound</code> …","","SNAFU context selector for the <code>Error::DecodeOtlpRequest</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::DescribeStatement</code> …","","","SNAFU context selector for the <code>Error::ExecuteGrpcQuery</code> …","","SNAFU context selector for the <code>Error::ExecuteGrpcRequest</code> …","","SNAFU context selector for the <code>Error::ExecutePlan</code> variant","","SNAFU context selector for the <code>Error::ExecuteQuery</code> variant","","SNAFU context selector for the <code>Error::ExecuteScript</code> variant","","SNAFU context selector for the <code>Error::GetPreparedStmtParams</code>…","","SNAFU context selector for the <code>Error::GrpcReflectionService</code>…","","SNAFU context selector for the <code>Error::Hyper</code> variant","","SNAFU context selector for the <code>Error::IncompatibleSchema</code> …","","SNAFU context selector for the <code>Error::InfluxdbLineProtocol</code> …","","SNAFU context selector for the <code>Error::InfluxdbLinesWrite</code> …","","SNAFU context selector for the <code>Error::InsertScript</code> variant","","","SNAFU context selector for the <code>Error::InternalIo</code> variant","SNAFU context selector for the <code>Error::Internal</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidBase64Value</code> …","","SNAFU context selector for the <code>Error::InvalidFlightTicket</code> …","","SNAFU context selector for the <code>Error::InvalidFlushArgument</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidOpentsdbLine</code> …","","SNAFU context selector for the <code>Error::InvalidParameter</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::InvalidQuery</code> variant","","SNAFU context selector for the <code>Error::InvalidUtf8Value</code> …","","SNAFU context selector for the <code>Error::InvisibleASCII</code> …","","SNAFU context selector for the <code>Error::JoinTask</code> variant","","SNAFU context selector for the <code>Error::Metrics</code> variant","","SNAFU context selector for the <code>Error::NotFoundAuthHeader</code> …","","SNAFU context selector for the <code>Error::NotFoundInfluxAuth</code> …","","SNAFU context selector for the <code>Error::NotSupported</code> variant","","SNAFU context selector for the <code>Error::Other</code> variant","","SNAFU context selector for the <code>Error::OtlpMetricsWrite</code> …","","SNAFU context selector for the <code>Error::ParsePromQL</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::PromSeriesWrite</code> …","","SNAFU context selector for the …","","","SNAFU context selector for the <code>Error::StartGrpc</code> variant","","SNAFU context selector for the <code>Error::StartHttp</code> variant","","SNAFU context selector for the <code>Error::TcpBind</code> variant","","SNAFU context selector for the <code>Error::TcpIncoming</code> variant","","SNAFU context selector for the <code>Error::TimePrecision</code> variant","","SNAFU context selector for the <code>Error::TlsRequired</code> variant","","SNAFU context selector for the <code>Error::TokioIo</code> variant","","SNAFU context selector for the <code>Error::UnexpectedResult</code> …","","SNAFU context selector for the <code>Error::UnsupportedAuthScheme</code>…onsume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the tonic Code of a StatusCoderpc Server configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handler for DatabaseService service.","","","","","","","","","","","","Handler for FlightService.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Handler for Greptime Database service. It’s implemented …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","PrometheusGateway provides a gRPC interface to query …","Handler for Prometheus-compatible PromQL queries (…","","Handler for RegionServer.","","","","gRPC serving state receiver. Only present if the gRPC …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","A subset of FlightService","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Histogram timer for handling gRPC request.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns a new timer.","","","","Consumes the timer and record the elapsed time with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Default http body limiteturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a json response from query result","","","","","","","","","","","","","","","","","handle error middleware","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","prom supply the prometheus HTTP API Server compliance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A middleware to record metrics for HTTP.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handler to expose configuration information info about …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Handler to export healthy check","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Handler to export metrics","","","","","","Handler to execute promql","","","","","","","","","","","","","","","","","","","","","","","","Handler to execute sql","","","","Handler to expose information info about runtime, build, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from <code>Result&lt;Output&gt;</code>","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert RecordBatches to PromData","Retrieve labels name from record batches","","","","","","Retrieve labels name from query result","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For ValueType::Vector result type","For ValueType::Matrix result type","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Handler to execute script","","","Handler to insert and compile script","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","GrpcQueryInterceptor can track life cycle of a grpc …","","PromQueryInterceptor can track life cycle of a prometheus …","","SqlQueryInterceptor can track life cycle of a sql query …","","Called after execution finished. The implementation can …","Called after execution finished. The implementation can …","Called after execution finished. The implementation can …","Called after sql is parsed into statements. This …","Called before sql is actually executed. This hook is not …","Called before request is actually executed.","Called before request is actually executed.","Called before a query string is parsed into sql statements.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A metrics middlewareeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::UpdateJemallocMetrics</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a server that serves metrics only start when datanode …","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Use regex to filter out some MySQL federated components’ …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describe the statement","Execute the logical plan and return the output","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Retrieve the query and logical plan by id","Parameters that the client must provide when executing the …","","","","","","","","Save query and logical plan, return the unique id","","","","","","","","","","","","","Convert <code>ParamValue</code> into <code>Value</code> according to param type. It …","Returns the placeholder string “$i”.","Replace all the “?” placeholder into “$i” in SQL, …","Transform all the “?” placeholder into “$i”. Only …","","","","","<code>MysqlSpawnConfig</code> stores config values which are used to …","<code>MysqlSpawnRef</code> stores arc refs that should be passed to new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates MySQL columns definition from our column schema.","","","","","","","Indicate no more result set to write. No need to call this …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to write one result set. If there are more than one …","","","","","","Try to write multiple output to the writer if possible.","","","","","","","","","","","","","","","","Modified from Tokio’s mini-redis example.","","","","","","Returns the argument unchanged.","","Modified from Tokio’s mini-redis example.","","Calls <code>U::from(self)</code>.","","","","","Broadcasts a shutdown signal to all active connections.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Tries to parse a line from the buffer.","Read one line from the underlying stream.","","","","","","","","","","","","Per-connection handler. Reads requests from <code>connection</code> and …","","","","","","","The TCP connection decorated with OpenTSDB line protocol …","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Listen for shutdown notifications.","","","","","","","","","","","","","","","the default column count for table writer","","","encode this gauge metric","Encode histogram data. This function returns 3 insert …","","encode this sum metric","","Normalize otlp instrumentation, metric and attribute names","Convert OpenTelemetry metrics to GreptimeDB insert requests","","","","","Transformer helps to transform ExportTraceServiceRequest …","","","","","","","Convert OpenTelemetry traces to SpanTraces","","Convert SpanTraces to GreptimeDB row insert requests. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","key to store our parsed catalog","","key to store our parsed schema","","","Builder for <code>MakePostgresServerHandler</code>.","Error type for MakePostgresServerHandlerBuilder","","","Uninitialized field","Custom validation error","","","","","","","","","","","","","","","","","","","","Builds a new <code>MakePostgresServerHandler</code>.","","","","","","","","","","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","A function extracted to resolve lifetime and readability …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Creates a new Postgres server with provided query_handler …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Metrics for push gateway protocol","","","","","","","","","","Collect each row’s timeseries id This processing is …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Mock timeseries for test, it is both used in servers and …","","","","","Create a DataFrame from a remote Query","","","","","","","","","Get table name from remote query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A successful request will not return a response. Only on …","A successful request will not return a response. Only on …","","Returns the argument unchanged.","","","Handling push gateway requests","","","Calls <code>U::from(self)</code>.","","","","","Handling opentelemetry metrics request","","Handling prometheus remote read requests","","","","","","Handling opentelemetry traces request","","","","","","Handling prometheus remote write requests","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the request and number of rows in it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Shutdown the server gracefully.","","","Starts the server and binds on <code>listening</code>.","","","","","","","","","","","","","","","","","","","Listens for the server shutdown signal.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if the shutdown signal has been received.","","Create a new <code>Shutdown</code> backed by the given …","The receive half of the channel used to listen for …","","Receive the shutdown notice, waiting if necessary.","","<code>true</code> if the shutdown signal has been received","","","","","","","","","","","","TlsMode is used for Mysql and Postgres server start up.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[0,0,0,0,[1],[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[4,4],[5,5],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,[7],[7],[7],[7],[8,[[9,[4]]]],[7],[7],[[4,4],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[4,11],12],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],7],[[],7],0,[[]],[[]],[[],13],[[],13],[[],10],[[],10],[[]],[[]],0,0,0,0,0,[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[4,15],9],0,0,[[],[[9,[16]]]],[[],[[9,[16]]]],0,[[]],[[]],[[],17],[[],17],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[]],[[]],0,0,[19,19],[20,20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[21,22],[[],23],[21,[[17,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[[26,[25]]]]],21],[[[28,[[26,[25]]]]],21],[[[29,[[26,[25]]]]],21],[[[30,[[26,[25]]]]],21],[[[31,[[26,[25]]]]],21],[[[32,[[26,[25]]]]],21],[33,21],[[[34,[[26,[25]]]]],21],[[[35,[[26,[25]]]]],21],[[[36,[[26,[25]]]]],21],[37,21],[38,21],[[[39,[[26,[25]]]]],21],[40,21],[[[41,[[26,[25]],[26,[25]]]]],21],[[[42,[[26,[25]]]]],21],[[[43,[[26,[25]]]]],21],[[[44,[[26,[25]]]]],21],[[[47,[[26,[45]],[26,[46]]]]],21],[[[49,[[26,[25]],[26,[25]],[26,[48]],[26,[48]]]]],21],0,[21,[[17,[23]]]],[[[27,[50]]],[[27,[50]]]],[51,51],[[[52,[50]]],[[52,[50]]]],[53,53],[54,54],[55,55],[[[28,[50]]],[[28,[50]]]],[[[56,[50]]],[[56,[50]]]],[57,57],[[[58,[50]]],[[58,[50]]]],[59,59],[60,60],[61,61],[62,62],[63,63],[[[64,[50]]],[[64,[50]]]],[[[65,[50]]],[[65,[50]]]],[[[29,[50]]],[[29,[50]]]],[[[30,[50]]],[[30,[50]]]],[[[31,[50]]],[[31,[50]]]],[66,66],[67,67],[68,68],[69,69],[[[32,[50]]],[[32,[50]]]],[33,33],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[[[34,[50]]],[[34,[50]]]],[[[35,[50]]],[[35,[50]]]],[76,76],[[[36,[50]]],[[36,[50]]]],[77,77],[37,37],[38,38],[78,78],[[[39,[50]]],[[39,[50]]]],[40,40],[79,79],[80,80],[81,81],[[[41,[50,50]]],[[41,[50,50]]]],[[[42,[50]]],[[42,[50]]]],[[[43,[50]]],[[43,[50]]]],[82,82],[83,83],[[[84,[50]]],[[84,[50]]]],[85,85],[[[44,[50]]],[[44,[50]]]],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[[[47,[50,50]]],[[47,[50,50]]]],[[[49,[50,50,50,50]]],[[49,[50,50,50,50]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[21,7,[92,[25]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[21,93],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,0,0,0,0,0,[[[27,[[26,[25]]]]],[[9,[21]]]],[[[28,[[26,[25]]]]],[[9,[21]]]],[[[29,[[26,[25]]]]],[[9,[21]]]],[[[30,[[26,[25]]]]],[[9,[21]]]],[[[31,[[26,[25]]]]],[[9,[21]]]],[[[32,[[26,[25]]]]],[[9,[21]]]],[33,[[9,[21]]]],[[[34,[[26,[25]]]]],[[9,[21]]]],[[[35,[[26,[25]]]]],[[9,[21]]]],[[[36,[[26,[25]]]]],[[9,[21]]]],[37,[[9,[21]]]],[38,[[9,[21]]]],[[[39,[[26,[25]]]]],[[9,[21]]]],[40,[[9,[21]]]],[[[41,[[26,[25]],[26,[25]]]]],[[9,[21]]]],[[[42,[[26,[25]]]]],[[9,[21]]]],[[[43,[[26,[25]]]]],[[9,[21]]]],[[[44,[[26,[25]]]]],[[9,[21]]]],[[[47,[[26,[45]],[26,[46]]]]],[[9,[21]]]],[[[49,[[26,[25]],[26,[25]],[26,[48]],[26,[48]]]]],[[9,[21]]]],0,[[[27,[94]],11],12],[[51,11],12],[[[52,[94]],11],12],[[53,11],12],[[54,11],12],[[55,11],12],[[[28,[94]],11],12],[[[56,[94]],11],12],[[57,11],12],[[[58,[94]],11],12],[[59,11],12],[[60,11],12],[[61,11],12],[[62,11],12],[[63,11],12],[[[64,[94]],11],12],[[[65,[94]],11],12],[[[29,[94]],11],12],[[[30,[94]],11],12],[[[31,[94]],11],12],[[66,11],12],[[67,11],12],[[68,11],12],[[69,11],12],[[[32,[94]],11],12],[[33,11],12],[[70,11],12],[[71,11],12],[[72,11],12],[[73,11],12],[[74,11],12],[[75,11],12],[[[34,[94]],11],12],[[[35,[94]],11],12],[[76,11],12],[[[36,[94]],11],12],[[77,11],12],[[37,11],12],[[38,11],12],[[78,11],12],[[[39,[94]],11],12],[[40,11],12],[[79,11],12],[[80,11],12],[[81,11],12],[[[41,[94,94]],11],12],[[[42,[94]],11],12],[[[43,[94]],11],12],[[82,11],12],[[83,11],12],[[[84,[94]],11],12],[[85,11],12],[[[44,[94]],11],12],[[86,11],12],[[87,11],12],[[88,11],12],[[89,11],12],[[90,11],12],[[91,11],12],[[[47,[94,94]],11],12],[[[49,[94,94,94,94]],11],12],[[21,11],12],[[21,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[95,21],[[]],[96,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[27,[[26,[25]]]]],21],[51,21],[[[52,[[26,[25]]]]],21],[53,21],[54,21],[55,21],[[[28,[[26,[25]]]]],21],[[[56,[[26,[97]]]]],21],[57,21],[[[58,[[26,[25]]]]],21],[59,21],[60,21],[61,21],[62,21],[63,21],[[[64,[[26,[25]]]]],21],[[[65,[[26,[25]]]]],21],[[[29,[[26,[25]]]]],21],[[[30,[[26,[25]]]]],21],[[[31,[[26,[25]]]]],21],[66,21],[67,21],[68,21],[69,21],[[[32,[[26,[25]]]]],21],[33,21],[70,21],[71,21],[72,21],[73,21],[74,21],[75,21],[[[34,[[26,[25]]]]],21],[[[35,[[26,[25]]]]],21],[76,21],[[[36,[[26,[25]]]]],21],[77,21],[37,21],[38,21],[78,21],[[[39,[[26,[25]]]]],21],[40,21],[79,21],[80,21],[81,21],[[[41,[[26,[25]],[26,[25]]]]],21],[[[42,[[26,[25]]]]],21],[[[43,[[26,[25]]]]],21],[82,21],[83,21],[[[84,[[26,[98]]]]],21],[85,21],[[[44,[[26,[25]]]]],21],[86,21],[87,21],[88,21],[89,21],[90,21],[91,21],[[[47,[[26,[45]],[26,[46]]]]],21],[[[49,[[26,[25]],[26,[25]],[26,[48]],[26,[48]]]]],21],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[21,99],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[21,[[17,[100]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[101],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[21,[[17,[23]]]],[21,102],[102,103],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[104,104],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[105,[[107,[106]]]],[105,[[109,[108]]]],[[105,110],[[112,[111]]]],[105,[[114,[113]]]],[105,[[116,[115]]]],0,0,[[],104],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,0,[[104,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[117,[13,[118]]],[[121,[[120,[119]]]]]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],10],[[],10],[[],10],[[]],[[]],[[]],0,0,[105,93],[[[17,[104]],[17,[122]],[17,[110]],[17,[123]],[17,[124]],[17,[125]],[127,[126]]],105],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],0,0,0,0,[[]],[[]],[[]],0,[105,[[121,[[120,[119]]]]]],0,[[105,97],[[121,[[120,[119]]]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[]],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[105,128],0,[2,[[3,[2,2]]]],[[]],[[]],[[],6],[[],6],[[],6],[7],[7],[7],[[]],[[]],[[129,[13,[130]]],[[121,[[120,[119]]]]]],[[129,[13,[[131,[130]]]]],[[121,[[120,[119]]]]]],0,[[],7],[[]],[[],13],[[],10],[[]],[132,129],[2,[[14,[2,2]]]],[[]],[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,0,0,0,0,[2,[[3,[2,2]]]],[[]],[[]],[[],6],[[],6],[[],6],[7],[7],[[[134,[133]],[13,[135]]],[[121,[[120,[119]]]]]],[[[134,[133]],[13,[[131,[136]]]]],[[121,[[120,[119]]]]]],[[[13,[137]]],[[121,[[120,[119]]]]]],[[123,[13,[137]]],[[121,[[120,[119]]]]]],[[[134,[133]],[13,[137]]],[[121,[[120,[119]]]]]],[[[134,[133]],[13,[[131,[136]]]]],[[121,[[120,[119]]]]]],0,[7],0,[133,[[134,[133]]]],[138],[[]],[139],[139],[140],[141],[139],[[]],[[[134,[133]],[13,[142]]],[[121,[[120,[119]]]]]],[[[134,[133]],[13,[142]]],[[121,[[120,[119]]]]]],[[[134,[133]],[13,[[131,[143]]]]],[[121,[[120,[119]]]]]],[[],7],[[]],[[],13],[[],10],0,[[]],[[[134,[133]],[13,[144]]],[[121,[[120,[119]]]]]],[[[134,[133]],[13,[145]]],[[121,[[120,[119]]]]]],[2,[[14,[2,2]]]],0,[[]],0,[[],[[9,[16]]]],[[146,147],[[148,[136]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],6],[[],6],[[],6],[7],[7],0,[149],[7],0,[[150,[153,[[9,[151,152]]]]]],[[]],[[]],[[],7],[[]],[[],13],[[],13],[[],10],0,[[]],[[150,147],149],[2,[[14,[2,2]]]],[[[121,[149]],154],[[155,[17]]]],0,0,0,[[]],[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[121,154],[[155,[[17,[9]]]]]],[[],18],[[]],0,0,[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[[17,[125]],[17,[156]],157],[[128,[[17,[158]]]]]],[[]],[[]],[[]],[[]],[132,132],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[17,[156]]],157],0,[7],[7],[7],[7],[[132,[13,[137]]],[[121,[[120,[119]]]]]],[159],[7],[7],[[]],[[]],[[]],[[]],[[]],[[132,130],[[128,[146]]]],0,[[],7],[[],7],[[]],[[]],[[],13],[[],13],[[],10],[[],10],[[]],[[]],[[25,25],159],[[122,[17,[125]],[127,[126]]],132],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[[159,102]],0,0,[[]],[[]],0,0,[[],[[9,[16]]]],[[],[[9,[16]]]],[[]],[[],17],[[],17],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],0,[[]],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],6],[[],6],[[],6],[7],[7],[7],[[]],[[]],[[160,[13,[161]]],[[121,[[120,[119]]]]]],[[160,98,[127,[162]],10],163],0,[[],7],[[]],[[],13],[[],10],[[]],[[110,[17,[125]]],160],[2,[[14,[2,2]]]],[[]],[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],0,[[]],0,0,0,[1],[2,[[3,[2,2]]]],[[]],[[]],[164,164],[[]],[[],6],[[],6],[[],6],[7],[7],[7],[[]],[[]],[[]],[165,[[121,[[120,[119]]]]]],[[164,[13,[166]]],[[121,[[120,[119]]]]]],[[164,166],[[128,[167]]]],0,[[],7],[[]],[[],13],[[],10],[[]],[[[127,[168]],[127,[126]]],164],[2,[[14,[2,2]]]],0,[[]],[[],[[9,[16]]]],[[]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,[1],[2,[[3,[2,2]]]],[[]],[[]],[169,169],[[]],[[],6],[[],6],[[],6],[[],169],[[],169],[7],[7],[8,[[9,[169]]]],[7],[[169,169],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[169,11],12],[[]],[[]],[[]],[[],169],[[],7],0,[[]],[[],13],[[],10],[[]],[2,[[14,[2,2]]]],0,[[]],[[169,15],9],[[],[[9,[16]]]],[[]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[170,20],20],[171,170],[172,172],[173,173],[174,174],[[]],[[]],[[]],[175,176],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[],170],[[],172],[[],171],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[8,[[9,[172]]]],[8,[[9,[177]]]],[8,[[9,[178]]]],[8,[[9,[179]]]],[8,[[9,[180]]]],[8,[[9,[175]]]],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[172,172],10],[[177,177],10],[[178,178],10],[[179,179],10],[[180,180],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[175,[[17,[25]]]],0,[175,[[17,[181]]]],0,[[172,11],12],[[177,11],12],[[178,11],12],[[179,11],12],[[180,11],12],[[175,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[92,[[128,[146]]]]],175],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[182,[[183,[175]]]],0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[184,185],[184,185],[184,185],[184,185],[184,185],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[170,20],0,0,[170,93],0,[[25,25],177],[[[92,[177]]],178],[172,171],[179,7],[179,7],0,0,0,[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],0,0,[175,[[17,[[186,[180]]]]]],0,0,0,0,0,0,0,[[170,174],187],[[170,188],20],[[170,189],20],[[170,190],20],[[170,191],20],[[170,192],20],[[170,110],20],[[170,173],187],[179,[[92,[[92,[193]]]]]],0,[179,[[17,[178]]]],0,[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[172,15],9],[[177,15],9],[[178,15],9],[[179,15],9],[[180,15],9],[[175,15],9],[[[196,[195]]],197],[[],[[198,[25]]]],[170,[[121,[[120,[119]]]]]],0,0,0,[[170,97],[[121,[[120,[119]]]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[175,10],0,[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[199,200],201],[[],9],[[],9],[[],9],[[],9],[[[92,[202]]],[[9,[179]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[25,102],175],[[175,181],175],[[171,25],171],[[171,122],171],[[171,188],171],[[171,189],171],[[171,190],171],[[171,191],171],[[[17,[[92,[180]]]]],175],[[171,203],171],[[171,192],171],[[171,110],171],[[171,204],171],[[171,205],171],[[171,125],171],0,0,0,0,0,0,[1],0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[199,[[128,[206]]]],[[[209,[[0,[207,208]]]],[199,[[0,[210,211]]]]]],[[]],[[]],[[]],[[]],[209,209],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[93,128],[7],[7],[7],[7],[7],[7],[[[199,[[0,[210,211]]]]]],[93,[[17,[93]]]],[93],[[[199,[[0,[210,211]]]]],128],[[206,11],12],[[]],[[]],[[]],[[]],[[]],[[[199,[[0,[210,211]]]]],[[128,[17]]]],[[],7],[[],7],[[]],[[]],[[],13],[[],13],[[],10],[[],10],[[]],[[]],[199,10],[[[17,[125]]],209],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[[]],[[]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[]],[[],17],[[],17],[[]],[[]],[[],9],[93,[[128,[206]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],[[99,[[0,[207,208]]]]]],0,[[]],[[]],0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[212,[174]]],99],0,0,[[],213],[[],214],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[8,[[9,[213]]]],[8,[[9,[214]]]],[8,[[9,[215]]]],[8,[[9,[216]]]],[8,[[9,[217]]]],[7],[7],[7],[7],[7],0,[[216,216],10],[[217,217],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[213,11],12],[[214,11],12],[[215,11],12],[[216,11],12],[[217,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[218,[215]]],[[183,[216]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],10],[[],10],[[],10],[[],10],[[],10],[184,185],[184,185],[184,185],[184,185],[184,185],[[]],[[]],[[]],[[]],[[]],[[[212,[189]],[218,[[219,[25,25]]]]],25],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[[[212,[173]],[218,[214]],[196,[157]]],[[183,[175]]]],0,0,[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[213,15],9],[[214,15],9],[[215,15],9],[[216,15],9],[[217,15],9],0,[[[212,[173]],[218,[213]],[196,[157]],[220,[213]]],[[183,[175]]]],0,[221,221],0,[[],[[183,[217]]]],0,[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[],18],[[205,157],[[17,[175]]]],0,[[]],[[]],[[]],[[]],[[]],0,0,[2,[[3,[2,2]]]],[[]],[[]],[[],6],[[],6],[[],6],[222,[[9,[223,224]]]],[7],[7],[7],[[223,[226,[225]]]],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[]],[[],227],[2,[[14,[2,2]]]],[[]],[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[223,[[17,[25]]]],[[]],[[],[[128,[201]]]],[[],[[128,[201]]]],[[93,[17,[228]],25,188,157],[[128,[201]]]],[[[212,[188]],[218,[[219,[25,25]]]],[196,[157]],25],[[128,[201]]]],[[[212,[188]],[218,[[219,[25,25]]]],[196,[157]],25],[[128,[201]]]],[93,[[128,[228]]]],[[],[[128,[201]]]],0,0,0,0,0,0,0,0,0,[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[229,229],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[8,[[9,[[231,[230]]]]]],[8,[[9,[229]]]],[8,[[9,[232]]]],[8,[[9,[233]]]],[8,[[9,[234]]]],[7],[7],[7],[7],[7],[[229,229],10],0,0,0,[[229,11],12],[[232,11],12],[[233,11],12],[[234,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],0,[[234,229,235]],[[234,7]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[236,[[128,[[92,[229]]]]]],[[[212,[190]],[218,[[219,[25,25]]]],[196,[157]],237],128],[[]],[[]],[[]],[[]],[[]],[[[231,[238]],15],9],[[229,15],9],[[232,15],9],[[233,15],9],[[234,15],9],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],0,0,0,[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],[[]],0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[]],[[],13],[[],13],[239,99],[240,99],[[],10],[[],10],[[]],[[]],[[[212,[191]],[196,[157]],237],[[128,[239]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[236,[[128,[241]]]],[236,[[128,[242]]]],[[]],[[]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],17],[[],17],[[]],[[]],[[[212,[191]],[196,[157]],237],[[128,[240]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[]],[[]],0,0,[[],[[128,[201]]]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],6],[[],6],[[],6],0,[236,[[128,[243]]]],[236,[[128,[244]]]],[[],245],[7],[7],[8,[[9,[245]]]],[7],[[245,11],12],[[]],[[]],[[],7],[[]],[[],13],[[],10],[184,185],[[]],[2,[[14,[2,2]]]],[[[212,[192]],[218,[245]],[196,[157]],237],[[128,[246]]]],[[[212,[192]],[218,[245]],[196,[157]],237],128],[[],[[194,[93]]]],[[],25],[[]],[[245,15],9],[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,0,0,0,[[],247],[[],248],[[],249],[[],163],[[],250],[[],251],[[],252],[[],253],[[],254],[[],255],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[8,[[9,[247]]]],[8,[[9,[248]]]],[8,[[9,[249]]]],[8,[[9,[163]]]],[8,[[9,[250]]]],[8,[[9,[251]]]],[8,[[9,[252]]]],[8,[[9,[253]]]],[8,[[9,[254]]]],[8,[[9,[255]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,0,0,0,[[247,247],10],[[248,248],10],[[249,249],10],[[163,163],10],[[[26,[25]],[26,[25]]],[[183,[163]]]],0,0,[[247,11],12],[[248,11],12],[[249,11],12],[[163,11],12],[[250,11],12],[[251,11],12],[[252,11],12],[[253,11],12],[[254,11],12],[[255,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[128,[146]],25,256],[[183,[163]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[93,93,257],[[9,[[92,[25]],258]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[212,[110]],[218,[250]],[196,[157]],[220,[250]]],[[183,[163]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[184,185],[184,185],[184,185],[184,185],[184,185],[184,185],[184,185],[184,185],[184,185],[184,185],[[[212,[110]],[259,[25]],[196,[157]],[218,[254]]],[[183,[163]]]],[[[212,[110]],[218,[253]],[196,[157]],[220,[253]]],[[183,[163]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[260,[[17,[25]]]],0,0,[[[212,[110]],[218,[251]],[196,[157]],[220,[251]]],[[183,[163]]]],[[261,25,256],[[128,[249]]]],[[261,[262,[25]]],128],[[261,[92,[[219,[25,25]]]],93],128],0,0,[[[128,[146]],93,[262,[25]]],128],[[261,93,[262,[25]]],128],[[[128,[146]],[262,[25]]],128],[93,128],[[[128,[146]],[92,[[219,[25,25]]]],93],128],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],[[194,[93]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[247,15],9],[[248,15],9],[[249,15],9],[[163,15],9],[[250,15],9],[[251,15],9],[[252,15],9],[[253,15],9],[[254,15],9],[[255,15],9],[[[212,[110]],[218,[255]],[196,[157]],[220,[255]]],[[183,[163]]]],0,0,0,0,0,0,[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[249,[[183,[163]]]],0,0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[2,[[3,[2,2]]]],[[]],[[]],0,[[],6],[[],6],[[],6],0,[[],263],[7],[7],[8,[[9,[263]]]],[7],[[263,11],12],[[]],[[]],[[],7],[[]],[[],13],[[],10],0,[184,185],[[]],0,[2,[[14,[2,2]]]],0,[[[212,[173]],[218,[263]]],[[183,[175]]]],[[],[[194,[93]]]],[[],25],[[[212,[173]],[218,[263]],237],[[183,[175]]]],[[]],[[263,15],9],[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],0,[[]],0,0,0,[2,[[3,[2,2]]]],[[]],[[]],[[],6],[[],6],[[],6],[7],[7],[7],[[264,11],12],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[]],0,[2,[[14,[2,2]]]],0,[[]],[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[[17,[228]]],228],[[]],0,0,0,0,0,0,0,0,0,[[146,157],[[9,[146]]]],[[146,157],[[9,[146]]]],[[146,157],[[9,[146]]]],[[[92,[265]],157],[[9,[[92,[265]]]]]],[[265,[17,[266]],157],9],[[267,157],9],[[98,157],9],[[93,157],[[9,[[194,[93]]]]]],0,0,0,[2,[[3,[2,2]]]],[[]],[[]],0,[268],[[],6],[[],6],[[],6],0,0,[7],[7],[7],0,[268,269],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[]],[2,[[14,[2,2]]]],[[]],[[],[[9,[16]]]],0,[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],[[[26,[25]],[26,[25]],7],268],[[268,93,45,270]],[[268,93,10]],[[268,93,271]],[[268,93,272]],[[268,93,93]],[[268,93,93]],[[268,93]],[[268,93,147]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[199],[[[274,[[0,[[273,[[199,[236]]]],50,210]]]],[199,[236]]]],[275,275],[[[274,[50]]],[[274,[50]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],275],[7],[276,277],[278,279],[7],[280,279],[7],[281,277],[7],[282,279],[7],[7],[283,279],[7],[284,279],[7],[285,279],[286,279],[7],[7],[287,288],[289,288],[7],[7],[290,288],[291,288],[7],[7],[292,288],[7],[293,288],[7],[294,295],[296,279],[7],[297,277],[7],[298,295],[7],[299,279],[7],[7],[300,301],[302,279],[7],[303,279],[7],[304,277],[7],[305,279],[7],[7],[306,277],[7],[307,279],[308,279],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[275,11],12],[[[274,[94]],11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],309],[[],310],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[275],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[[[274,[[0,[[273,[[199,[236]]]],50,210]]]],154],[[155,[9]]]],[154,[[155,[9]]]],[154,[[155,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[7],[311,295],[7],[312,295],[7],[7],[7],[7],[7],[7],[7],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],10],[[],10],[[],10],[[]],[[]],[[]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],0,[[]],[[]],[[]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],[[128,[313]]]],[[],18],[[],18],[[],18],[313,128],[[]],[[]],[[]],0,0,0,[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[96,22],[[],23],[96,[[17,[24]]]],[[]],[[]],[[]],[[]],[96,[[17,[23]]]],[314,314],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[96,7,[92,[25]]]],[7],[7],[7],[7],[96,93],[7],[7],[[314,11],12],[[96,11],12],[[96,11],12],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[]],[314,96],[[],13],[[],13],[[],10],[[],10],[[]],[[]],[96,[[17,[100]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[101],[[]],[[]],[96,[[17,[23]]]],[96,102],[[],[[9,[16]]]],[[],[[9,[16]]]],[[]],[[],25],[[],17],[[],17],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[]],[[]],0,0,0,[1],[2,[[3,[2,2]]]],[[]],[[]],[189,189],[[]],[[],6],[[],6],[[],6],[7],[7],[7],[[]],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[]],[2,[[14,[2,2]]]],[189,25],[[]],[[],[[9,[16]]]],[[]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[93,157,315],[[17,[146]]]],[[93,157],[[17,[146]]]],[[93,157],[[17,[146]]]],[[93,315],[[17,[146]]]],[93,[[17,[146]]]],[[],25],[[93,93],261],[[93,157],[[17,[146]]]],[[93,93],261],0,[2,[[3,[2,2]]]],[[316,93,[186,[317]],[186,[317]],[186,[317]]],[[121,[[120,[119]]]]]],[[]],[[]],[[],6],[[],6],[[],6],[[205,[17,[125]],97],316],[7],[7],[[316,265,157],[[128,[[17,[318]]]]]],[[316,93,266,157],[[128,[146]]]],[[316,93,157],[[92,[[128,[146]]]]]],[7],[7,[[128,[[92,[319]]]]]],[320,25],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[]],[[316,176],[[121,[[120,[119]]]]]],[[316,176,321,[324,[[0,[322,210,211,323]]]]],[[121,[[120,[119]]]]]],[[316,93,[325,[[0,[322,210,211,323]]]]],[[121,[[120,[119]]]]]],[[316,93,[326,[[0,[322,210,211,323]]]]],[[121,[[120,[119]]]]]],[[316,93,[324,[[0,[322,210,211,323]]]]],[[121,[[120,[119]]]]]],[2,[[14,[2,2]]]],[[316,176],[[17,[5]]]],[[[219,[25,[17,[45]]]]],[[128,[[92,[319]]]]]],0,0,0,[[[92,[327]],25],25],[[266,[219,[25,[17,[45]]]],[92,[327]]],[[128,[266]]]],[316,[[328,[317]]]],0,[[316,5],176],[[]],0,[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],0,[93,[[128,[265]]]],[[]],[[327,45],[[128,[329]]]],[7,25],[93],[265,265],[330],0,0,0,0,0,[[331,[127,[126]],[333,[332]]],119],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[127,[126]],[127,[334]],[127,[335]]],[[120,[336]]]],[7],[7],[7],[7],[7],[7],[[337,[127,[334]],[127,[335]]],128],[7],[7],[7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[337,[127,[126]],[127,[334]],[127,[335]]],128],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],10],[[],10],[[],10],[[]],[[]],[[]],[331,93],[[205,[17,[125]]],334],[[10,[17,[[127,[338]]]],10],335],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[334,205],0,0,[[]],[[]],[[]],[331,[[121,[[120,[119]]]]]],0,0,[[331,97],[[121,[[120,[119]]]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[335,[[17,[[127,[338]]]]]],0,[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[334,[[17,[125]]]],0,[[]],[[]],[[]],0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[45,93],[[128,[319]]]],[339,[[128,[[92,[319]]]]]],[7],[7],[7],[7],[7],[7],[[[340,[[0,[322,323]]]]],128],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[]],[[],13],[[],13],[[],10],[[],10],[[]],[[]],[[[324,[[0,[322,323]]]],157],[[340,[[0,[322,323]]]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],0,0,[[]],[[]],0,[[],[[9,[16]]]],[[],[[9,[16]]]],[[],17],[[],17],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[[340,[[0,[322,323]]]],[128,[146]]],[[128,[[17,[[340,[[0,[322,323]]]]]]]]]],[[],18],[[],18],[[]],[[]],[[[324,[[0,[322,323]]]],7],[[128,[[324,[[0,[322,323]]]]]]]],[[[324,[[0,[322,210,211,323]]]],157,[92,[[128,[146]]]]],128],[[235,[324,[[0,[322,323]]]]],128],[[341,[324,[[0,[322,323]]]],157],128],[[[342,[[0,[322,323]]]],202,157],128],0,0,0,[[343,[127,[126]],[333,[332]]],119],[2,[[3,[2,2]]]],0,[[]],[[]],0,[[],6],[[],6],[[],6],0,[[190,[127,[126]]],[[120,[336]]]],[[[92,[344]]],128],[7],[7],[7],[[]],[[]],0,[[],7],[[]],[[],13],[[],10],[[]],[343,93],0,[2,[[14,[2,2]]]],0,[[]],[343,[[121,[[120,[119]]]]]],[[343,97],[[121,[[120,[119]]]]]],[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,0,0,[1],[2,[[3,[2,2]]]],[344,345],[[]],[[]],[344,344],[[]],[[],6],[[],6],[[],6],[7],[7],[7],[[344,11],12],[229,344],[[]],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[]],[344,93],0,[[25,272,271,92],344],[2,[[14,[2,2]]]],[[]],[[],[[9,[16]]]],[344,92],0,[344,92],[272,272],[[]],[[],17],[[]],[93,[[128,[344]]]],[[],9],[[],9],[[],9],[344,272],0,[[],18],[344,271],0,[[]],0,0,[2,[[3,[2,2]]]],[[]],[[]],0,[[],6],[[],6],[[],6],[7],[7],[7],[[[347,[[0,[94,322,346,323]]]],11],12],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[]],[[[0,[322,346,323]]],[[347,[[0,[322,346,323]]]]]],[2,[[14,[2,2]]]],[[[347,[[0,[322,346,323]]]]],[[128,[[17,[25]]]]]],[[[347,[[0,[322,346,323]]]]],[[128,[[17,[25]]]]]],[[]],0,[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],[[[347,[[0,[322,346,323]]]],25],128],0,[2,[[3,[2,2]]]],[[]],[[]],[[],6],[[],6],[[],6],0,[7],[7],[7],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[]],[[190,[347,[[0,[322,346,323]]]],348],[[349,[[0,[322,346,323]]]]]],[2,[[14,[2,2]]]],0,[[[349,[[0,[322,346,323]]]]],128],[[]],0,[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,0,0,0,0,0,0,0,[[93,350],128],[[351,93,352,[17,[[92,[353]]]],[17,[[92,[353]]]]],128],[[351,93,354,[17,[[92,[353]]]],[17,[[92,[353]]]]],128],[[351,355,[17,[[92,[353]]]],[17,[[92,[353]]]]],128],[[351,93,356,[17,[[92,[353]]]],[17,[[92,[353]]]]],128],[[351,93,357,[17,[[92,[353]]]],[17,[[92,[353]]]]],128],[93,25],[241,128],[[358,[92,[359]],[17,[[92,[353]]]]],128],[[358,[92,[359]],93,[17,[360]]],128],[[358,[92,[359]],[17,[[92,[353]]]],[17,[[92,[353]]]],[17,[[92,[353]]]],272],128],[[358,[92,[359]],272],128],0,0,[242,361],[[],25],0,0,0,[242,361],0,[[25,361],128],[[358,362],128],0,0,[1],[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[363,363],[364,364],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[7],[7],[7],[7],[7],[7],[[363,11],12],[[363,11],12],[[364,11],12],[[364,11],12],[[]],[365,363],[[]],[[[92,[353]]],364],[[]],[[]],[[]],[[]],[364,[[92,[353]]]],[364,[[92,[353]]]],[[],7],[[],7],[[]],[[]],[[],13],[[],13],[[],10],[[],10],[[]],[[]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[[]],[[]],[[363,15],9],[[364,15],9],[[],[[9,[16]]]],[[],[[9,[16]]]],[[]],[[]],[[],25],[[],25],[[],17],[[],17],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,[1],[1],[1],[1],[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[186,[317]]],25],[362,362],[366,366],[367,367],[368,368],[369,369],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[[362,11],12],[[366,11],12],[[367,11],12],[[367,11],12],[[368,11],12],[[369,11],12],[[369,11],12],[[]],[370,366],[[]],[[]],[[[92,[370]]],367],[371,368],[[]],[[]],[[[92,[371]]],369],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[367,[[92,[366]]]],[369,[[92,[368]]]],[367,[[92,[366]]]],[369,[[92,[368]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],0,[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],0,[[[92,[353]],372,373],362],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[366,15],9],[[367,15],9],[[368,15],9],[[369,15],9],0,0,0,0,0,0,0,0,0,0,[[[17,[374]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],0,[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[],23],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[375,[[9,[376,377]]]],[375,375],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],375],[[],375],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[378,[0,[379,323,210,211]],380],[[121,[[120,[119]]]]]],[[378,[0,[379,323,210,211]],93],[[121,[[120,[119]]]]]],[[378,[0,[379,323,210,211]],381,7],[[121,[[120,[119]]]]]],[7],[7],[7],[7],[7],[[377,11],12],[[377,11],12],[[375,10],375],0,0,0,[[]],[[]],[[]],[[]],[[]],[25,377],[382,377],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],0,[[376,[17,[97]]],378],0,[[],383],[[378,[0,[379,[385,[384]],323,210]],386],[[121,[[120,[119]]]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[[375,[127,[383]]],375],0,0,0,[378,127],0,[101],[[375,205],375],0,0,0,[378,127],0,[[]],[[]],[[]],[[]],[[]],0,[[383,379],[[17,[[219,[25,25]]]]]],0,[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],0,[[]],[[],25],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[375,[17,[125]]],375],0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[387,388,93],[[128,[[17,[158]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[379,388],[[]],[[]],[[]],0,[[],7],[[],7],[[],7],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[[17,[125]]],387],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[[[389,[[0,[379,323,210]]]],205],[[391,[390]]]],0,[[]],[[]],[[]],[[[0,[379,[385,[384]],323,210]],93,93,25],391],[[379,392]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],0,0,[[]],[[]],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],6],[[],6],[[],6],[7],[7],[7],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[]],[[205,[127,[392]]],393],[2,[[14,[2,2]]]],[[[128,[146]],394],[[391,[395]]]],[[393,93,[186,[396]]],[[121,[[120,[119]]]]]],0,[[[0,[397,210,323]],339,394],[[391,[395]]]],[[]],0,[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,0,[[398,[127,[126]],[333,[332]],[17,[[127,[399]]]]],119],[2,[[3,[2,2]]]],0,[[]],[[]],[[],6],[[],6],[[],6],[7],[7],[7],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[]],0,[398,93],[[205,400,[127,[126]],[17,[125]]],398],[2,[[14,[2,2]]]],[[]],[398,[[121,[[120,[119]]]]]],[[398,97],[[121,[[120,[119]]]]]],[[],[[9,[16]]]],0,[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],[[270,401],391],0,[[93,[17,[93]]],402],[[[219,[25,[17,[45]]]]],[[128,[[92,[396]]]]]],[[[381,[5]],7],[[391,[25]]]],[[266,[381,[5]]],[[391,[[92,[329]]]]]],[[403,394],[[128,[[92,[404]]]]]],[[[17,[[26,[272]]]],405,45],[[391,[329]]]],[45,[[128,[396]]]],[396,[[128,[45]]]],0,[1],[396,10],[396,10],[2,[[3,[2,2]]]],[[]],[[]],[[],406],[407,407],[[]],[[],6],[[],6],[[],6],0,[[],407],[7],[7],[7],[[407,11],12],[[407,11],12],[[]],[408,407],[[]],[[396,[186,[317]]],[[9,[407,[120,[23]]]]]],[[]],[[],7],[[]],[[],13],[[],10],[[]],0,0,[2,[[14,[2,2]]]],[[]],[[],[[9,[16]]]],[[]],[[407,396,409],[[9,[410,[120,[23]]]]]],[[407,396,409],[[9,[410,[120,[23]]]]]],[[407,396,409],[[9,[410,[120,[23]]]]]],[[],25],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[411,411],412],[[93,202],[[92,[411]]]],[[],412],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[7],[7],[7],[7],[7],[7],[[411,411],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[411,11],12],[[]],[[]],[[]],[[]],[[[0,[413,414]],415],147],[[411,416]],[[],7],[[],7],[[]],[[]],[[],13],[[],13],[[],10],[[],10],0,[[]],[[]],[272,417],[[],[[92,[418]]]],[[25,25],419],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[[411,411],[[17,[412]]]],[[420,421],[[128,[266]]]],[[93,202],[[128,[[92,[418]]]]]],[[93,261],[[128,[[92,[418]]]]]],[[]],[[]],[[[186,[317]]],[[128,[[92,[317]]]]]],[[[186,[317]]],[[128,[[92,[317]]]]]],[[],[[9,[16]]]],[[],[[9,[16]]]],[421,[[128,[25]]]],[244,128],[[],17],[[],17],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[]],[[]],0,0,0,[[],257],[[98,157],[[121,[[120,[119]]]]]],0,0,0,0,0,0,0,0,0,0,0,[2,[[3,[2,2]]]],0,[[]],[[]],[[],6],[[],6],[[],6],0,0,[7],[7],[7],[[264,157],[[121,[[120,[119]]]]]],[[[92,[344]],157],[[121,[[120,[119]]]]]],[[157,93,[219,[25,25]]],[[121,[[120,[119]]]]]],[[]],[[]],0,[422,[[121,[[120,[119]]]]]],[[],7],[[157,93,93],[[121,[[120,[119]]]]]],[[]],[[],13],[246,99],[[],10],[[]],[[241,157],[[121,[[120,[119]]]]]],[2,[[14,[2,2]]]],[[243,157],[[121,[[120,[119]]]]]],[[]],0,[[],[[9,[16]]]],[[],17],[[]],[[242,157],[[121,[[120,[119]]]]]],[[],9],[[],9],[[],9],[[],18],[[]],[[244,157],[[121,[[120,[119]]]]]],0,0,0,0,0,[2,[[3,[2,2]]]],[423,[[127,[424]]]],[[]],[[]],[[],6],[[],6],[[],6],[7],[7],[[267,157],[[121,[[120,[119]]]]]],[[[424,[[0,[235,210,211]]]],267,157],[[121,[[120,[119]]]]]],[7],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[]],[2,[[14,[2,2]]]],[[]],[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,0,0,0,0,[2,[[3,[2,2]]]],[425,[[127,[426]]]],[[]],[[]],[[],6],[[],6],[[],6],[7],[7],[[265,157],[[121,[[120,[119]]]]]],[[[426,[[0,[235,210,211]]]],265,157],[[121,[[120,[119]]]]]],[[266,157],[[121,[[120,[119]]]]]],[[[426,[[0,[235,210,211]]]],266,157],[[121,[[120,[119]]]]]],[[98,157],[[121,[[120,[119]]]]]],[[[426,[[0,[235,210,211]]]],98,157],[[121,[[120,[119]]]]]],[[93,157],[[121,[[120,[119]]]]]],[[[426,[[0,[235,210,211]]]],93,157],[[121,[[120,[119]]]]]],[7],[[]],[[]],[[],7],[[]],[[],13],[[],10],[[93,93],[[121,[[120,[119]]]]]],[[[426,[[0,[235,210,211]]]],93,93],[[121,[[120,[119]]]]]],[[]],[2,[[14,[2,2]]]],[[]],[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,0,[[358,[92,[359]]]],[[351,427,358]],[358,[[92,[359]]]],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],[[428,429,430],128],0,[358,[[92,[430]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],351],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[351,427,7,7],358],[[],7],[[],7],[[]],[[]],[[],13],[[],13],[351],[358],[[],10],[[],10],[[]],[[]],[[7,7],358],[[],351],[358,7],[358,7],[351,7],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],0,0,[[]],[[]],[[],[[9,[16]]]],[[],[[9,[16]]]],0,[[],17],[[],17],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[]],[[]],[[358,429,222,[92,[359]]],128],[[358,427,271,[92,[359]]],128],[[358,222,[92,[359]]],128],[[358,427,427,[92,[359]]],128],[[358,222,[92,[359]]],128],[[358,427,[17,[272]],[92,[359]]],128],[[358,427,[17,[272]],228,[92,[359]]],128],0,0,0,0,0,0,0,[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[431,97,93],128],[[432,97],128],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[26,[25]],[127,[126]]],432],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[[]],[[],7],[[],7],[[]],[[]],[[],13],[[],13],[432,[[127,[126]]]],0,[[],10],[[],10],0,[[]],[[]],[[],93],0,[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[[]],[[]],[[],[[121,[[120,[119]]]]]],[[431,93],128],[432,128],[97,[[121,[[120,[119]]]]]],[[431,433,93],128],[[432,433],128],[[],[[9,[16]]]],[[],[[9,[16]]]],[[],17],[[],17],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[]],[[]],0,[2,[[3,[2,2]]]],[[]],[[]],[[],6],[[],6],[[],6],[7],[7],[7],[[348,11],12],[[]],[[]],[[],7],[[]],[[],13],[[],10],[348,10],[[]],[434,348],0,[2,[[14,[2,2]]]],[348],[[]],0,[[],[[9,[16]]]],[[],17],[[]],[[],9],[[],9],[[],9],[[],18],[[]],0,0,0,0,0,0,0,[1],[1],[2,[[3,[2,2]]]],[2,[[3,[2,2]]]],[[]],[[]],[[]],[[]],0,[435,435],[400,400],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],435],[[],400],[7],[7],[7],[7],[8,[[9,[435]]]],[8,[[9,[400]]]],[7],[7],[[435,435],10],[[400,400],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[435,11],12],[[400,11],12],[[]],[[]],[[]],[[]],[93,[[9,[435]]]],[[]],[[]],[[],7],[[],7],[[]],[[]],[[],13],[[],13],[[],10],[[],10],0,[[]],[[]],0,[[[17,[435]],[17,[25]],[17,[25]]],400],[2,[[14,[2,2]]]],[2,[[14,[2,2]]]],[[]],[[]],[[435,15],9],[[400,15],9],[400,[[9,[[17,[338]],95]]]],[400,10],[[],[[9,[16]]]],[[],[[9,[16]]]],[[]],[[]],[[],17],[[],17],[[]],[[]],[[],9],[93,9],[93,[[9,[435]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[]],[[]]],"c":[],"p":[[3,"Private"],[8,"Policy"],[3,"And"],[4,"Mode"],[3,"SqlPlan"],[3,"Compat"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"Or"],[8,"Serializer"],[4,"CNil"],[4,"Option"],[3,"TypeId"],[3,"Router"],[3,"Router"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[3,"String"],[8,"Into"],[3,"InternalSnafu"],[3,"AlreadyStartedSnafu"],[3,"NotSupportedSnafu"],[3,"InvalidParameterSnafu"],[3,"InvalidQuerySnafu"],[3,"TimePrecisionSnafu"],[3,"ConnResetByPeerSnafu"],[3,"InvalidPromRemoteRequestSnafu"],[3,"InvalidPromRemoteReadQueryResultSnafu"],[3,"TlsRequiredSnafu"],[3,"NotFoundAuthHeaderSnafu"],[3,"NotFoundInfluxAuthSnafu"],[3,"UnsupportedAuthSchemeSnafu"],[3,"InvalidAuthorizationHeaderSnafu"],[3,"DatabaseNotFoundSnafu"],[3,"InvalidPrepareStatementSnafu"],[3,"InvalidFlushArgumentSnafu"],[3,"UnexpectedResultSnafu"],[4,"ConcreteDataType"],[4,"ColumnType"],[3,"PreparedStmtTypeMismatchSnafu"],[15,"i32"],[3,"IncompatibleSchemaSnafu"],[8,"Clone"],[3,"InternalIoSnafu"],[3,"TokioIoSnafu"],[3,"CollectRecordbatchSnafu"],[3,"StartHttpSnafu"],[3,"StartGrpcSnafu"],[3,"TcpBindSnafu"],[3,"TcpIncomingSnafu"],[3,"ExecuteQuerySnafu"],[3,"ExecutePlanSnafu"],[3,"ExecuteGrpcQuerySnafu"],[3,"ExecuteGrpcRequestSnafu"],[3,"CheckDatabaseValiditySnafu"],[3,"DescribeStatementSnafu"],[3,"InsertScriptSnafu"],[3,"ExecuteScriptSnafu"],[3,"InfluxdbLineProtocolSnafu"],[3,"InfluxdbLinesWriteSnafu"],[3,"PromSeriesWriteSnafu"],[3,"OtlpMetricsWriteSnafu"],[3,"HyperSnafu"],[3,"InvalidOpentsdbLineSnafu"],[3,"InvalidOpentsdbJsonRequestSnafu"],[3,"DecodePromRemoteRequestSnafu"],[3,"DecodeOtlpRequestSnafu"],[3,"DecompressPromRemoteRequestSnafu"],[3,"InvalidFlightTicketSnafu"],[3,"AuthSnafu"],[3,"InvisibleASCIISnafu"],[3,"InvalidBase64ValueSnafu"],[3,"InvalidUtf8ValueSnafu"],[3,"CatalogSnafu"],[3,"GrpcReflectionServiceSnafu"],[3,"BuildHttpResponseSnafu"],[3,"ParsePromQLSnafu"],[3,"GetPreparedStmtParamsSnafu"],[3,"OtherSnafu"],[3,"JoinTaskSnafu"],[3,"MetricsSnafu"],[3,"DataFrameSnafu"],[3,"ReplacePreparedStmtParamsSnafu"],[3,"ConvertScalarValueSnafu"],[3,"Vec"],[15,"str"],[8,"Debug"],[3,"Error"],[4,"Error"],[4,"SocketAddr"],[3,"PromQuery"],[6,"Response"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[4,"Code"],[3,"GrpcServerConfig"],[3,"GrpcServer"],[8,"FlightService"],[3,"FlightServiceServer"],[8,"HealthCheck"],[3,"HealthCheckServer"],[6,"PrometheusHandlerRef"],[8,"PrometheusGateway"],[3,"PrometheusGatewayServer"],[8,"ServerReflection"],[3,"ServerReflectionServer"],[8,"Region"],[3,"RegionServer"],[3,"HealthCheckHandler"],[3,"HealthCheckRequest"],[8,"Future"],[3,"Box"],[3,"Pin"],[6,"ServerGrpcQueryHandlerRef"],[6,"FlightCraftRef"],[6,"RegionServerHandlerRef"],[6,"UserProviderRef"],[3,"Runtime"],[3,"Arc"],[6,"Result"],[3,"DatabaseService"],[3,"GreptimeRequest"],[3,"Streaming"],[3,"GreptimeRequestHandler"],[8,"FlightCraft"],[3,"FlightCraftWrapper"],[3,"Action"],[3,"FlightData"],[3,"Ticket"],[15,"never"],[3,"OwnedFd"],[8,"IntoFilelike"],[8,"IntoSocketlike"],[3,"FlightDescriptor"],[3,"HandshakeRequest"],[3,"Empty"],[3,"Criteria"],[4,"Output"],[15,"u64"],[6,"TonicStream"],[3,"FlightRecordBatchStream"],[6,"SendableRecordBatchStream"],[4,"FlightMessage"],[3,"Status"],[3,"Sender"],[3,"Context"],[4,"Poll"],[3,"RequestHeader"],[6,"QueryContextRef"],[6,"UserInfoRef"],[3,"RequestTimer"],[3,"PrometheusGatewayService"],[3,"PromqlRequest"],[3,"QueryContext"],[3,"PrometheusJsonResponse"],[3,"RegionServerRequestHandler"],[4,"Body"],[3,"RegionRequest"],[3,"RegionResponse"],[8,"RegionServerHandler"],[3,"HeartbeatOptions"],[3,"HttpServer"],[3,"HttpServerBuilder"],[3,"HttpOptions"],[3,"ApiState"],[3,"GreptimeOptionsConfigState"],[3,"JsonResponse"],[15,"u32"],[3,"ColumnSchema"],[3,"Schema"],[3,"HttpRecordsOutput"],[4,"JsonOutput"],[15,"u128"],[6,"BoxError"],[3,"Json"],[3,"SchemaGenerator"],[4,"Schema"],[15,"slice"],[3,"ApiRouter"],[6,"InfluxdbLineProtocolHandlerRef"],[3,"MetricsHandler"],[6,"OpentsdbProtocolHandlerRef"],[6,"OpenTelemetryProtocolHandlerRef"],[6,"PromStoreProtocolHandlerRef"],[4,"Value"],[4,"Cow"],[3,"OpenApi"],[3,"Extension"],[8,"IntoApiResponse"],[3,"Html"],[3,"Request"],[3,"Next"],[8,"IntoResponse"],[3,"RecordBatch"],[3,"Plugins"],[6,"ScriptHandlerRef"],[6,"ServerSqlQueryHandlerRef"],[4,"AuthScheme"],[8,"Body"],[8,"Default"],[3,"HttpAuth"],[8,"Send"],[8,"Sync"],[3,"State"],[3,"SqlQuery"],[3,"PromqlQuery"],[3,"HealthQuery"],[3,"HealthResponse"],[3,"StatusResponse"],[3,"Query"],[3,"HashMap"],[3,"Form"],[3,"TransformOperation"],[8,"Iterator"],[3,"GreptimeDbName"],[3,"Error"],[3,"HeaderValue"],[8,"Extend"],[3,"HeaderName"],[4,"Precision"],[3,"DataPointRequest"],[8,"Deserialize"],[4,"OneOrMany"],[4,"OpentsdbPutResponse"],[3,"OpentsdbDetailError"],[3,"OpentsdbDebuggingResponse"],[8,"ErrorExt"],[3,"Body"],[3,"RawBody"],[8,"Serialize"],[3,"OtlpMetricsResponse"],[3,"OtlpTracesResponse"],[3,"ExportMetricsServiceRequest"],[3,"ExportTraceServiceRequest"],[3,"ReadRequest"],[3,"WriteRequest"],[3,"DatabaseQuery"],[3,"PromStoreResponse"],[3,"PromSeries"],[3,"PromData"],[4,"PrometheusResponse"],[3,"InstantQuery"],[3,"RangeQuery"],[3,"Matches"],[3,"LabelsQuery"],[3,"LabelValueQuery"],[3,"SeriesQuery"],[4,"ValueType"],[6,"CatalogManagerRef"],[4,"Error"],[3,"Path"],[4,"Expr"],[3,"RecordBatches"],[3,"HashSet"],[3,"ScriptQuery"],[3,"InfluxdbRequest"],[4,"Statement"],[4,"LogicalPlan"],[4,"Request"],[3,"LineWriter"],[3,"InsertRequest"],[4,"Value"],[15,"f64"],[15,"i64"],[8,"Service"],[3,"MetricsMiddleware"],[3,"MetricsMiddlewareLayer"],[3,"METRIC_ERROR_COUNTER"],[6,"IntCounterVec"],[3,"METRIC_HTTP_SQL_ELAPSED"],[6,"HistogramVec"],[3,"METRIC_HTTP_PROMQL_ELAPSED"],[3,"METRIC_AUTH_FAILURE"],[3,"METRIC_HTTP_INFLUXDB_WRITE_ELAPSED"],[3,"METRIC_HTTP_PROM_STORE_WRITE_ELAPSED"],[3,"METRIC_HTTP_PROM_STORE_READ_ELAPSED"],[3,"METRIC_HTTP_OPENTELEMETRY_METRICS_ELAPSED"],[3,"METRIC_HTTP_OPENTELEMETRY_TRACES_ELAPSED"],[3,"METRIC_TCP_OPENTSDB_LINE_WRITE_ELAPSED"],[3,"Histogram"],[3,"METRIC_HTTP_PROMQL_INSTANT_QUERY_ELAPSED"],[3,"METRIC_HTTP_PROMQL_RANGE_QUERY_ELAPSED"],[3,"METRIC_HTTP_PROMQL_LABEL_QUERY_ELAPSED"],[3,"METRIC_HTTP_PROMQL_SERIES_QUERY_ELAPSED"],[3,"METRIC_HTTP_PROMQL_LABEL_VALUE_QUERY_ELAPSED"],[3,"METRIC_MYSQL_CONNECTIONS"],[6,"IntGauge"],[3,"METRIC_MYSQL_QUERY_TIMER"],[3,"METRIC_MYSQL_PREPARED_COUNT"],[3,"METRIC_POSTGRES_CONNECTIONS"],[3,"METRIC_POSTGRES_QUERY_TIMER"],[3,"METRIC_POSTGRES_PREPARED_COUNT"],[6,"IntCounter"],[3,"METRIC_SERVER_GRPC_DB_REQUEST_TIMER"],[3,"METRIC_SERVER_GRPC_PROM_REQUEST_TIMER"],[3,"METRIC_HTTP_REQUESTS_TOTAL"],[3,"METRIC_HTTP_REQUESTS_ELAPSED"],[3,"METRIC_GRPC_REQUESTS_TOTAL"],[3,"METRIC_GRPC_REQUESTS_ELAPSED"],[3,"HTTP_TRACK_METRICS"],[3,"IntoMakeService"],[3,"IntoMakeServiceWithConnectInfo"],[3,"SYS_JEMALLOC_RESIDEN"],[3,"SYS_JEMALLOC_ALLOCATED"],[3,"JemallocCollector"],[3,"UpdateJemallocMetricsSnafu"],[6,"SessionRef"],[3,"MysqlInstanceShim"],[15,"u8"],[3,"DescribeResult"],[3,"Column"],[3,"Duration"],[3,"ParamParser"],[8,"AsyncWrite"],[8,"Unpin"],[3,"QueryResultWriter"],[3,"InitWriter"],[3,"StatementMetaWriter"],[3,"ParamValue"],[15,"array"],[4,"ScalarValue"],[8,"VisitMut"],[3,"MysqlServer"],[3,"TcpListenerStream"],[3,"Abortable"],[3,"MysqlSpawnRef"],[3,"MysqlSpawnConfig"],[8,"Server"],[3,"TcpStream"],[3,"ServerConfig"],[6,"SchemaRef"],[3,"MysqlResultWriter"],[3,"QueryResult"],[3,"RowWriter"],[3,"OpentsdbServer"],[3,"DataPoint"],[3,"InsertRequest"],[8,"AsyncRead"],[3,"Connection"],[3,"Shutdown"],[3,"Handler"],[3,"ExponentialHistogram"],[3,"MultiTableData"],[3,"Gauge"],[3,"KeyValue"],[3,"Histogram"],[3,"Metric"],[3,"Sum"],[3,"Summary"],[3,"TableData"],[3,"Value"],[4,"Value"],[6,"TraceSpans"],[3,"TraceSpan"],[3,"OtlpAnyValue"],[3,"Attributes"],[3,"AnyValue"],[3,"SpanLink"],[3,"SpanLinks"],[3,"SpanEvent"],[3,"SpanEvents"],[3,"Link"],[3,"Event"],[3,"InstrumentationScope"],[3,"Span"],[3,"Status"],[3,"MakePostgresServerHandlerBuilder"],[3,"MakePostgresServerHandler"],[4,"MakePostgresServerHandlerBuilderError"],[3,"PostgresServerHandler"],[8,"ClientInfo"],[4,"StatementOrPortal"],[3,"Portal"],[3,"UninitializedFieldError"],[3,"GreptimeDBStartupParameters"],[4,"PgWireBackendMessage"],[8,"Sink"],[4,"PgWireFrontendMessage"],[3,"PgLoginVerifier"],[3,"LoginInfo"],[3,"Exclusive"],[4,"DbResolution"],[6,"PgWireResult"],[3,"Session"],[3,"DefaultQueryParser"],[4,"Format"],[4,"Response"],[3,"Type"],[8,"Stream"],[3,"PostgresServer"],[3,"TlsAcceptor"],[3,"TlsOption"],[3,"DataRowEncoder"],[4,"PgWireError"],[3,"Schema"],[3,"FieldInfo"],[4,"TimestampType"],[8,"ToSql"],[3,"PgInterval"],[3,"Interval"],[3,"BytesMut"],[4,"IsNull"],[3,"TimeSeriesId"],[4,"Ordering"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[4,"Expr"],[3,"TimeSeries"],[3,"Label"],[4,"DataFrame"],[3,"Query"],[3,"Metrics"],[6,"GrpcQueryHandlerRef"],[3,"ServerGrpcQueryHandlerAdaptor"],[6,"SqlQueryHandlerRef"],[3,"ServerSqlQueryHandlerAdaptor"],[8,"ToString"],[4,"ColumnDataType"],[4,"SemanticType"],[3,"ColumnSchema"],[3,"AcceptTask"],[3,"BaseTcpServer"],[3,"JoinHandle"],[3,"Receiver"],[4,"TlsMode"],[8,"Configurator"],[13,"PreparedStmtTypeMismatch"],[13,"IncompatibleSchema"],[13,"TcpBind"],[13,"DatabaseNotFound"],[13,"Internal"],[13,"TokioIo"],[13,"InvalidPrepareStatement"],[13,"InvalidFlushArgument"],[13,"InternalIo"],[13,"StartHttp"],[13,"StartGrpc"],[13,"TcpIncoming"],[13,"InfluxdbLineProtocol"],[13,"Hyper"],[13,"InvalidOpentsdbLine"],[13,"InvalidOpentsdbJsonRequest"],[13,"DecodePromRemoteRequest"],[13,"DecodeOtlpRequest"],[13,"DecompressPromRemoteRequest"],[13,"InvalidFlightTicket"],[13,"InvisibleASCII"],[13,"InvalidBase64Value"],[13,"InvalidUtf8Value"],[13,"GrpcReflectionService"],[13,"BuildHttpResponse"],[13,"JoinTask"],[13,"DataFrame"],[13,"NotSupported"],[13,"CollectRecordbatch"],[13,"AlreadyStarted"],[13,"ExecuteQuery"],[13,"ExecutePlan"],[13,"ExecuteGrpcQuery"],[13,"ExecuteGrpcRequest"],[13,"CheckDatabaseValidity"],[13,"InsertScript"],[13,"ExecuteScript"],[13,"InvalidParameter"],[13,"InvalidQuery"],[13,"InfluxdbLinesWrite"],[13,"PromSeriesWrite"],[13,"OtlpMetricsWrite"],[13,"TimePrecision"],[13,"ConnResetByPeer"],[13,"InvalidPromRemoteRequest"],[13,"InvalidPromRemoteReadQueryResult"],[13,"Auth"],[13,"InvalidAuthorizationHeader"],[13,"ParsePromQL"],[13,"GetPreparedStmtParams"],[13,"UnexpectedResult"],[13,"Other"],[13,"ReplacePreparedStmtParams"],[13,"ConvertScalarValue"],[13,"UnsupportedAuthScheme"],[13,"TlsRequired"],[13,"DescribeStatement"],[13,"CatalogError"],[13,"Metrics"],[8,"SqlQueryInterceptor"],[8,"GrpcQueryInterceptor"],[8,"PromQueryInterceptor"],[13,"UpdateJemallocMetrics"],[8,"TraceParser"],[8,"PrometheusHandler"],[8,"InfluxdbLineProtocolHandler"],[8,"OpentsdbProtocolHandler"],[8,"ScriptHandler"],[8,"PromStoreProtocolHandler"],[8,"OpenTelemetryProtocolHandler"],[8,"GrpcQueryHandler"],[8,"SqlQueryHandler"]]},\
"session":{"doc":"","t":"DGLLMLLLLMALLLLLLLLLLLLLLMLLLLLMLLLLLLMLEDGNNDDEGNNLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMLLMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLL","n":["Session","SessionRef","borrow","borrow_mut","catalog","compat","compat_mut","compat_ref","conn_info","conn_info","context","deref","deref_mut","drop","fmt","from","from_subset","get_db_string","init","into","into_request","is_in_subset","mut_conn_info","new","new_query_context","schema","set_catalog","set_schema","set_time_zone","set_user_info","time_zone","time_zone","to_subset","to_subset_unchecked","try_from","try_into","type_id","user_info","user_info","vzip","Channel","ConnInfo","ConnInfoRef","Mysql","Postgres","QueryContext","QueryContextBuilder","QueryContextBuilderError","QueryContextRef","UninitializedField","ValidationError","arc","as_error_source","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","channel","client_addr","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_empty","current_catalog","current_catalog","current_catalog","current_catalog","current_schema","current_schema","current_schema","current_schema","current_user","current_user","current_user","current_user","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dialect","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","get_db_string","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","provide","set_current_user","span_id","span_id","span_id","span_id","sql_dialect","sql_dialect","sql_dialect","sql_dialect","time_zone","time_zone","time_zone","time_zone","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","trace_id","trace_id","trace_id","trace_id","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_trace_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with","with_db_name"],"q":[[0,"session"],[40,"session::context"]],"d":["Session for persistent connection such as MySQL, …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Builder for <code>QueryContext</code>.","Error type for QueryContextBuilder","","Uninitialized field","Custom validation error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,12,12,0,0,0,0,25,25,20,25,19,25,20,3,12,19,25,20,3,12,19,3,3,19,25,20,3,12,19,25,20,3,12,19,25,20,3,12,19,19,20,19,20,19,20,19,20,19,20,19,20,19,19,25,20,3,12,19,25,20,3,12,12,19,25,20,3,12,12,25,25,20,20,3,3,12,12,19,25,25,25,20,20,3,12,19,25,20,3,12,20,19,25,20,3,12,19,25,20,3,12,19,25,20,3,12,19,25,20,3,12,3,25,20,19,20,19,20,19,20,19,20,19,20,19,20,25,20,3,12,19,25,20,3,12,19,25,20,3,12,19,20,19,20,19,25,20,3,12,19,25,20,3,12,19,19,25,20,3,12,19,25,20,3,12,20,20],"f":[0,0,[[]],[[]],0,[[],1],[[],1],[[],1],[2,3],0,0,[4],[4],[4],[[2,5],6],[[]],[[]],[2,7],[[],4],[[]],[[],8],[[],9],[2,3],[[[11,[10]],12],2],[2,13],0,[[2,7]],[[2,7]],[[2,[11,[14]]]],[[2,15]],[2,[[11,[14]]]],0,[[],11],[[]],[[],16],[[],16],[[],17],[2,15],0,[[]],0,0,0,0,0,0,0,0,0,0,0,[[],13],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,13],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],19],[[19,7],19],[20,21],0,0,[[19,7],19],[20,21],0,0,[[19,[22,[[11,[15]]]]],19],[20,[[11,[15]]]],0,0,[[],19],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[12,[[24,[23]]]],[4],[4],[4],[4],[4],[[12,12],9],[[25,5],6],[[25,5],6],[[20,5],6],[[20,5],6],[[3,5],6],[[3,5],6],[[12,5],6],[[12,5],6],[[]],[26,25],[[]],[7,25],[[]],[27,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,7],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[[11,[10]],12],3],[28],[[20,[11,[15]]]],[[19,29],19],[20,29],0,0,[[19,[24,[23]]],19],[20,23],0,0,[[19,[11,[14]]],19],[20,[[11,[14]]]],0,0,[[],7],[[],7],[[],7],[[],7],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[19,29],19],[20,29],0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[19,[11,[29]]],19],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[21,21],13],[[[11,[7]]],13]],"c":[],"p":[[3,"Compat"],[3,"Session"],[3,"ConnInfo"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"String"],[3,"Request"],[15,"bool"],[4,"SocketAddr"],[4,"Option"],[4,"Channel"],[6,"QueryContextRef"],[4,"TimeZone"],[6,"UserInfoRef"],[4,"Result"],[3,"TypeId"],[8,"Error"],[3,"QueryContextBuilder"],[3,"QueryContext"],[15,"str"],[6,"ArcSwap"],[8,"Dialect"],[3,"Box"],[4,"QueryContextBuilderError"],[3,"UninitializedFieldError"],[3,"RegionRequestHeader"],[3,"Demand"],[15,"u64"]]},\
"sql":{"doc":"","t":"RRCRAAAAAAANNNNNNNNNNNNNNNNENNNNNNNQQNNNNNNNNNNNNNNNDEDNNNNNNENNNNNNNNNNNNNNNNNENNNNNNNNNDNEENNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNENNNENNNNNNNNNNNNNNNNNNNNNENNNIIIINNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMIDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNNDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLMMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLAAAAAAAAAAAAGGRHRHFFFFFFFFFRRRRDAFFAAAAAAFFAMAFFOFFAAFFFFFAAAFAFNNDENNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMMENDENDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMRDDDRRDDRLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLFMMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLMLLLOLFLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLALLALDLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLNNDDEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNDNNNNNENNLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLNNNEDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIMLLLLLLLLLLLCLLLLLLFLLALLLLDLLLLLLLLLLFLLLLFLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLHFFF","n":["ENGINE","MAXVALUE","TIME_INDEX","TQL","ast","dialect","error","parser","parsers","statements","util","AggregateExpressionWithFilter","AllOp","And","AnyOp","Array","Array","ArrayAgg","ArrayIndex","ArraySubquery","AtTimeZone","Between","BigDecimal","BigInt","BigNumeric","Binary","BinaryOp","BinaryOperator","BitwiseAnd","BitwiseOr","BitwiseXor","Blob","Bool","Boolean","Boolean","Break","Break","Bytea","Case","Cast","Ceil","Char","CharLargeObject","CharVarying","Character","CharacterLargeObject","CharacterSet","CharacterVarying","Check","Check","Clob","Collate","ColumnDef","ColumnOption","ColumnOptionDef","Comment","CompositeAccess","CompoundIdentifier","Cube","Custom","Custom","DataType","Date","Datetime","Dec","Decimal","Default","DialectSpecific","Divide","DollarQuotedString","Double","DoublePrecision","DoubleQuotedByteStringLiteral","DoubleQuotedString","DuckIntegerDivide","Enum","Eq","EscapedStringLiteral","Exists","Expr","Expr","Extract","Float","Float4","Float8","Floor","ForeignKey","ForeignKey","FulltextOrSpatial","Function","Function","FunctionArg","FunctionArgExpr","Generated","GroupingSets","Gt","GtEq","HexStringLiteral","ILike","Ident","Identifier","InList","InSubquery","InUnnest","Index","Int","Int2","Int4","Int8","Integer","Interval","Interval","IntroducedString","IsDistinctFrom","IsFalse","IsNotDistinctFrom","IsNotFalse","IsNotNull","IsNotTrue","IsNotUnknown","IsNull","IsTrue","IsUnknown","JSON","JsonAccess","Like","ListAgg","Lt","LtEq","MapAccess","MatchAgainst","MediumInt","Minus","Modulo","Multiply","MyIntegerDivide","Named","NationalStringLiteral","Nested","None","NotEq","NotNull","Null","Null","Number","Numeric","Nvarchar","ObjectName","OnUpdate","Or","Overlay","PGBitwiseShiftLeft","PGBitwiseShiftRight","PGBitwiseXor","PGCustomBinaryOperator","PGExp","PGOverlap","PGRegexIMatch","PGRegexMatch","PGRegexNotIMatch","PGRegexNotMatch","Placeholder","Plus","Position","QualifiedWildcard","RawStringLiteral","Real","Regclass","Rollup","SafeCast","Set","SimilarTo","SingleQuotedByteStringLiteral","SingleQuotedString","SmallInt","Spaceship","SqlOption","String","StringConcat","Subquery","Substring","TableConstraint","Text","Time","Timestamp","TimezoneInfo","TinyInt","Trim","TryCast","Tuple","TypedString","Tz","UnQuotedString","UnaryOp","Unique","Unique","Unnamed","UnsignedBigInt","UnsignedInt","UnsignedInt2","UnsignedInt4","UnsignedInt8","UnsignedInteger","UnsignedMediumInt","UnsignedSmallInt","UnsignedTinyInt","Uuid","Value","Value","Varbinary","Varchar","Visit","VisitMut","Visitor","VisitorMut","Wildcard","WithTimeZone","WithoutTimeZone","Xor","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","collation","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","data_type","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distinct","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","name","name","name","new","option","options","order_by","over","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","post_visit_expr","post_visit_expr","post_visit_relation","post_visit_relation","post_visit_statement","post_visit_statement","post_visit_table_factor","post_visit_table_factor","pre_visit_expr","pre_visit_expr","pre_visit_relation","pre_visit_relation","pre_visit_statement","pre_visit_statement","pre_visit_table_factor","pre_visit_table_factor","quote_style","special","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","verify_duration","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit_expressions_mut","visit_statements_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_quote","foreign_table","generated_as","generation_expr","is_primary","on_delete","on_update","referred_columns","sequence_options","array_expr","collation","column","columns","compare_op","compare_op","conditions","data_type","data_type","data_type","data_type","else_result","escape_char","escape_char","escape_char","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","field","field","field","filter","high","in","indexes","introducer","key","keys","left","left","left","left","list","low","match_value","negated","negated","negated","negated","negated","negated","negated","negated","obj","op","op","operand","operator","opt_search_modifier","overlay_for","overlay_from","overlay_what","pattern","pattern","pattern","results","right","right","right","right","special","subquery","subquery","substring_for","substring_from","time_zone","timestamp","trim_what","trim_where","value","value","arg","name","columns","columns","columns","columns","display_as_key","expr","foreign_table","fulltext","index_type","index_type_display","is_primary","name","name","name","name","on_delete","on_update","opt_index_name","referred_columns","Dialect","GreptimeDbDialect","MySqlDialect","PostgreSqlDialect","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","get_next_precedence","init","init","init","into","into","into","into_request","into_request","into_request","is","is_delimited_identifier_start","is_delimited_identifier_start","is_delimited_identifier_start","is_identifier_part","is_identifier_part","is_identifier_part","is_identifier_part","is_identifier_start","is_identifier_start","is_identifier_start","is_identifier_start","is_in_subset","is_in_subset","is_in_subset","is_proper_identifier_inside_quotes","parse_infix","parse_infix","parse_prefix","parse_statement","parse_statement","supports_filter_during_aggregation","supports_filter_during_aggregation","supports_filter_during_aggregation","supports_group_by_expr","supports_group_by_expr","supports_substring_from_for_expr","supports_within_after_array_aggregation","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ColumnTypeMismatch","ColumnTypeMismatchSnafu","ConvertSqlValue","ConvertSqlValueSnafu","ConvertToDfStatement","ConvertToDfStatementSnafu","ConvertToGrpcDataType","ConvertToGrpcDataTypeSnafu","ConvertValue","ConvertValueSnafu","Error","InvalidCast","InvalidCastSnafu","InvalidColumnOption","InvalidColumnOptionSnafu","InvalidDatabaseName","InvalidDatabaseNameSnafu","InvalidDefault","InvalidDefaultSnafu","InvalidSql","InvalidSqlSnafu","InvalidSqlValue","InvalidSqlValueSnafu","InvalidTableName","InvalidTableNameSnafu","InvalidTableOption","InvalidTableOptionSnafu","InvalidTimeIndex","InvalidTimeIndexSnafu","MissingTimeIndex","MissingTimeIndexSnafu","ParseSqlValue","ParseSqlValueSnafu","Result","SerializeColumnDefaultConstraint","SerializeColumnDefaultConstraintSnafu","SqlTypeNotSupported","SqlTypeNotSupportedSnafu","Syntax","SyntaxSnafu","TimestampOverflow","TimestampOverflowSnafu","Unexpected","UnexpectedSnafu","Unsupported","UnsupportedDefaultValue","UnsupportedDefaultValueSnafu","UnsupportedSnafu","actual","actual","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column_name","column_name","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","datatype","datatype","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","expect","expected","expr","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","keyword","msg","msg","msg","msg","name","name","name","next","provide","source","sql","sql","sql_value","statement","status_code","t","target_unit","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","actual","actual","column","column_name","column_name","datatype","datatype","error","error","expect","expected","expr","key","keyword","location","location","location","location","location","location","location","location","msg","msg","msg","msg","name","name","name","source","source","source","source","sql","sql","sql_value","statement","t","target_unit","timestamp","value","value","value","ParserContext","borrow","borrow_mut","compat","compat_mut","compat_ref","consume_token","create_with_dialect","deref","deref_mut","drop","expected","from","from_subset","init","into","into_request","is_in_subset","matches_keyword","parse_alter","parse_alter_table","parse_column","parse_column_def","parse_columns","parse_comma_separated","parse_copy","parse_copy_table","parse_copy_table_from","parse_copy_to","parse_create","parse_create_database","parse_create_external_table","parse_create_table","parse_delete","parse_describe","parse_describe_table","parse_drop","parse_explain","parse_function","parse_insert","parse_optional_column_option","parse_optional_table_constraint","parse_partition_entry","parse_partitions","parse_query","parse_show","parse_show_create_table","parse_show_databases","parse_show_tables","parse_statement","parse_string_or_number","parse_table_engine","parse_tql","parse_tql_analyze","parse_tql_eval","parse_tql_explain","parse_tql_query","parse_truncate","parse_value_list","parser","parser_copy_database","peek_token_as_string","sql","to_subset","to_subset_unchecked","try_from","try_into","type_id","unsupported","vzip","alter_parser","copy_parser","create_parser","delete_parser","describe_parser","drop_parser","explain_parser","insert_parser","query_parser","show_parser","tql_parser","truncate_parser","Connection","With","ENGINE","LESS","MAXVALUE","THAN","ensure_partition_columns_defined","ensure_partition_names_no_duplicate","ensure_value_list_len_matches_columns","ensure_value_lists_bounded_by_maxvalue","ensure_value_lists_strictly_increased","get_real_timestamp_type","validate_create","validate_partitions","validate_time_index","EVAL","EVALUATE","EXPLAIN","TQL","OptionMap","alter","column_def_to_schema","concrete_data_type_to_sql_data_type","copy","create","delete","describe","drop","explain","get_data_type_by_alias_name","has_primary_key_option","insert","map","option_map","parse_column_default_constraint","parse_hex_string","parse_number_to_value","parse_sql_number","parse_string_to_value","query","show","sql_column_def_to_grpc_column_def","sql_data_type_to_concrete_data_type","sql_location_to_grpc_add_column_location","sql_number_to_value","sql_value_to_value","statement","tql","transform","transform_statements","truncate","value_to_sql_value","AddColumn","AddConstraint","AlterTable","AlterTableOperation","DropColumn","RenameTable","alter_operation","alter_operation","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","table_name","table_name","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","visit","visit","visit","visit","vzip","vzip","column_def","location","name","new_table_name","Copy","CopyDatabase","CopyDatabaseArgument","CopyTable","CopyTable","CopyTableArgument","From","To","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","connection","connection","database_name","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","location","location","table_name","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit","visit","visit","visit","visit","visit","visit","visit","vzip","vzip","vzip","vzip","with","with","COMMA_SEP","CreateDatabase","CreateExternalTable","CreateTable","INDENT","LINE_SEP","PartitionEntry","Partitions","TIME_INDEX","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","column_list","columns","columns","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","constraints","constraints","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","engine","engine","entries","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_constraints","format_if_not_exits","format_indent","format_list_comma","format_list_indent","format_options","format_partitions","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","if_not_exists","if_not_exists","if_not_exists","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_time_index","name","name","name","name","options","options","partitions","set_quote","table_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value_list","visit","visit","visit","visit","visit","visit","visit","visit","visit","visit","vzip","vzip","vzip","vzip","vzip","Delete","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","inner","into","into_request","is_in_subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit","visit","vzip","DescribeTable","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","name","name","new","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit","visit","vzip","DropTable","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","new","table_name","table_name","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit","visit","vzip","Explain","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","inner","into","into_request","is_in_subset","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_from","try_into","type_id","visit","visit","vzip","Insert","borrow","borrow_mut","can_extract_values","clone","clone_into","columns","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","inner","into","into_request","is_in_subset","parse_fail","query_body","sql_exprs_to_values","table_name","to_owned","to_subset","to_subset_unchecked","try_from","try_from","try_into","type_id","values_body","visit","visit","vzip","OptionMap","as_ref","borrow","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_iter","from_ref","from_subset","get","init","insert","into","into_request","is_in_subset","map","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit","visit","visit","visit_mut","vzip","Query","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from_ref","from_subset","init","inner","into","into_request","is_in_subset","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_from","try_into","type_id","visit","visit","vzip","All","Like","ShowCreateTable","ShowDatabases","ShowKind","ShowTables","Where","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","database","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","full","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kind","kind","new","table_name","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit","visit","visit","visit","visit","visit","visit","visit","vzip","vzip","vzip","vzip","Alter","Copy","CreateDatabase","CreateExternalTable","CreateTable","Delete","DescribeTable","DropTable","Explain","Hint","Insert","Query","ShowCreateTable","ShowDatabases","ShowTables","Statement","Tql","TruncateTable","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","comment","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_code","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","prefix","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","visit","visit","vzip","vzip","Analyze","Eval","Explain","Tql","TqlAnalyze","TqlEval","TqlExplain","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","end","end","end","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","query","query","query","start","start","start","step","step","step","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit","visit","visit","visit","visit","visit","visit","visit","vzip","vzip","vzip","vzip","RULES","TransformRule","__private_field","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref","deref_mut","drop","from","from_subset","get_data_type_by_alias_name","init","into","into_request","is_in_subset","to_subset","to_subset_unchecked","transform_statements","try_from","try_into","type_alias","type_id","visit_expr","visit_statement","vzip","TypeAliasTransformRule","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","get_data_type_by_alias_name","init","into","into_request","is_in_subset","replace_type_alias","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit_expr","visit_statement","vzip","TruncateTable","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","new","table_name","table_name","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","visit","visit","vzip","SQL_SECRET_PATTERNS","parse_option_string","redact_sql_secrets","to_lowercase_options_map"],"q":[[0,"sql"],[11,"sql::ast"],[860,"sql::ast::ColumnOption"],[868,"sql::ast::Expr"],[957,"sql::ast::FunctionArg"],[959,"sql::ast::TableConstraint"],[978,"sql::dialect"],[1075,"sql::error"],[1817,"sql::error::Error"],[1860,"sql::parser"],[1930,"sql::parsers"],[1942,"sql::parsers::copy_parser"],[1944,"sql::parsers::create_parser"],[1957,"sql::parsers::tql_parser"],[1961,"sql::statements"],[1994,"sql::statements::alter"],[2071,"sql::statements::alter::AlterTableOperation"],[2075,"sql::statements::copy"],[2223,"sql::statements::create"],[2432,"sql::statements::delete"],[2467,"sql::statements::describe"],[2504,"sql::statements::drop"],[2541,"sql::statements::explain"],[2578,"sql::statements::insert"],[2621,"sql::statements::option_map"],[2664,"sql::statements::query"],[2702,"sql::statements::show"],[2849,"sql::statements::statement"],[2934,"sql::statements::tql"],[3085,"sql::statements::transform"],[3114,"sql::statements::transform::type_alias"],[3139,"sql::statements::truncate"],[3176,"sql::util"]],"d":["","","","","","","","","","","","Aggregate function with filter","ALL operation e.g. <code>foo &gt; ALL(bar)</code>, comparison operator is …","And, e.g. <code>a AND b</code>","Any operation e.g. <code>foo &gt; ANY(bar)</code>, comparison operator is …","Arrays","An array expression e.g. <code>ARRAY[1, 2]</code>","The <code>ARRAY_AGG</code> function <code>SELECT ARRAY_AGG(... ORDER BY ...)</code>","An array index expression e.g. <code>(ARRAY[1, 2])[1]</code> or …","An array subquery constructor, e.g. …","AT a timestamp to a different timezone e.g. …","<code>&lt;expr&gt; [ NOT ] BETWEEN &lt;low&gt; AND &lt;high&gt;</code>","This is alias for <code>BigNumeric</code> type used in BigQuery","Big integer with optional display width e.g. BIGINT or …","BigNumeric type used in BigQuery","Fixed-length binary type with optional length e.g.  …","Binary operation e.g. <code>1 + 1</code> or <code>foo &gt; bar</code>","Binary operators","Bitwise and, e.g. <code>a &amp; b</code>","Bitwise or, e.g. <code>a | b</code>","Bitwise XOR, e.g. <code>a ^ b</code>","Large binary object with optional length e.g. BLOB, …","Bool as alias for Boolean in postgresql","Boolean","Boolean value true or false","Type returned when the recursion returns early.","Type returned when the recursion returns early.","Bytea","…","CAST an expression to a different data type e.g. …","","Fixed-length char type e.g. CHAR(10)","Large character object with optional length e.g. CHAR …","Char varying type e.g. CHAR VARYING(10)","Fixed-length character type e.g. CHARACTER(10)","Large character object with optional length e.g. CHARACTER …","","Character varying type e.g. CHARACTER VARYING(10)","<code>[ CONSTRAINT &lt;name&gt; ] CHECK (&lt;expr&gt;)</code>","<code>CHECK (&lt;expr&gt;)</code>","Large character object with optional length e.g. CLOB, …","<code>expr COLLATE collation</code>","SQL column definition","<code>ColumnOption</code>s are modifiers that follow a column …","An optionally-named <code>ColumnOption</code>: …","","CompositeAccess (postgres) eg: SELECT (information_schema._…","Multi-part identifier, e.g. <code>table_alias.column</code> or …","The <code>CUBE</code> expr.","Custom type such as enums","Support for custom operators (built by parsers outside …","SQL data types","Date","Datetime with optional time precision e.g. MySQL.","Dec type with optional precision and scale e.g. DEC(10,2), …","Decimal type with optional precision and scale e.g. …","<code>DEFAULT &lt;restricted-expr&gt;</code>","Dialect-specific options, such as:","Divide, e.g. <code>a / b</code>","","Double","Double PRECISION e.g. standard, postgresql","B“string value“","","Integer division operator <code>//</code> in DuckDB","Enums","Equal, e.g. <code>a = b</code>","e’string value’ (postgres extension) See Postgres docs …","An exists expression <code>[ NOT ] EXISTS(SELECT ...)</code>, used in …","An SQL expression of any type.","","","Floating point with optional precision e.g. FLOAT(8)","Float4 as alias for Real in postgresql","Float8 as alias for Double in postgresql","","A referential integrity constraint (…","A referential integrity constraint (…","MySQLs fulltext definition. Since the <code>SPATIAL</code> definition …","A function call","Scalar function call e.g. <code>LEFT(foo, 5)</code>","","","<code>Generated</code>s are modifiers that follow a column definition …","The <code>GROUPING SETS</code> expr.","Greater than, e.g. <code>a &gt; b</code>","Greater equal, e.g. <code>a &gt;= b</code>","X’hex value’","ILIKE (case-insensitive LIKE)","An identifier, decomposed into its value or character data …","Identifier e.g. table name or column name","<code>[ NOT ] IN (val1, val2, ...)</code>","<code>[ NOT ] IN (SELECT ...)</code>","<code>[ NOT ] IN UNNEST(array_expression)</code>","MySQLs index definition for index creation. Not present on …","Int with optional display width e.g. INT or INT(11)","Int2 as alias for SmallInt in postgresql Note: Int2 mean 2 …","Int4 as alias for Integer in postgresql Note: Int4 mean 4 …","Int8 as alias for Bigint in postgresql Note: Int8 mean 8 …","Integer with optional display width e.g. INTEGER or …","Interval","An interval expression e.g. <code>INTERVAL &#39;1&#39; YEAR</code>","…","<code>IS DISTINCT FROM</code> operator","<code>IS FALSE</code> operator","<code>IS NOT DISTINCT FROM</code> operator","<code>IS NOT FALSE</code> operator","<code>IS NOT NULL</code> operator","<code>IS NOT TRUE</code> operator","<code>IS NOT UNKNOWN</code> operator","<code>IS NULL</code> operator","<code>IS TRUE</code> operator","<code>IS UNKNOWN</code> operator","JSON type used in BigQuery","JSON access (postgres)  eg: data-&gt;‘tags’","LIKE","The <code>LISTAGG</code> function …","Less than, e.g. <code>a &lt; b</code>","Less equal, e.g. <code>a &lt;= b</code>","Access a map-like object by field (e.g. <code>column[&#39;field&#39;]</code> or …","<code>MySQL</code> specific text search function (1).","MySQL medium integer (1) with optional display width e.g. …","Minus, e.g. <code>a - b</code>","Modulo, e.g. <code>a % b</code>","Multiply, e.g. <code>a * b</code>","MySQL <code>DIV</code> integer division","","N’string value’","Nested expression e.g. <code>(foo &gt; bar)</code> or <code>(1)</code>","No information about time zone. E.g., TIMESTAMP","Not equal, e.g. <code>a &lt;&gt; b</code>","<code>NOT NULL</code>","<code>NULL</code>","<code>NULL</code> value","Numeric literal","Numeric type with optional precision and scale e.g. …","Variable-length character type e.g. NVARCHAR(10)","A name of a table, view, custom type, etc., possibly …","","Or, e.g. <code>a OR b</code>","","Bitwise shift left, e.g. <code>a &lt;&lt; b</code> (PostgreSQL-specific)","Bitwise shift right, e.g. <code>a &gt;&gt; b</code> (PostgreSQL-specific)","Bitwise XOR, e.g. <code>a # b</code> (PostgreSQL-specific)","PostgreSQL-specific custom operator.","Exponent, e.g. <code>a ^ b</code> (PostgreSQL-specific)","Overlap operator, e.g. <code>a &amp;&amp; b</code> (PostgreSQL-specific)","String matches regular expression (case insensitively), …","String matches regular expression (case sensitively), e.g. …","String does not match regular expression (case …","String does not match regular expression (case …","<code>?</code> or <code>$</code> Prepared statement arg placeholder","Plus, e.g. <code>a + b</code>","","Qualified wildcard, e.g. <code>alias.*</code> or <code>schema.table.*</code>.","R’string value’ or r’string value’ or r“string …","Floating point e.g. REAL","Regclass used in postgresql serial","The <code>ROLLUP</code> expr.","SAFE_CAST an expression to a different data type e.g. …","Set","SIMILAR TO regex","B’string value’","‘string value’","Small integer with optional display width e.g. SMALLINT or …","Spaceship, e.g. <code>a &lt;=&gt; b</code>","","String","String/Array Concat operator, e.g. <code>a || b</code>","A parenthesized subquery <code>(SELECT ...)</code>, used in expression …","","A table-level constraint, specified in a <code>CREATE TABLE</code> or an","Text","Time with optional time precision and time zone …","Timestamp with optional time precision and time zone …","Timestamp and Time data types information about TimeZone …","Tiny integer with optional display width e.g. TINYINT or …","","TRY_CAST an expression to a different data type e.g. …","ROW / TUPLE a single value, such as <code>SELECT (1, 2)</code>","A constant of form <code>&lt;data_type&gt; &#39;value&#39;</code>. This can represent …","Postgresql specific <code>WITH TIME ZONE</code> formatting, for both …","Add support of snowflake field:key - key should be a value","Unary operation e.g. <code>NOT foo</code>","<code>[ CONSTRAINT &lt;name&gt; ] { PRIMARY KEY | UNIQUE } (&lt;columns&gt;)</code>","<code>{ PRIMARY KEY | UNIQUE }</code>","","Unsigned big integer with optional display width e.g. …","Unsigned int with optional display width e.g. INT UNSIGNED …","Unsigned Int2 with optional display width e.g. INT2 …","Unsigned int4 with optional display width e.g. INT4 …","Unsigned Int8 with optional display width e.g. INT8 …","Unsigned integer with optional display width e.g. INTGER …","Unsigned medium integer (1) with optional display width …","Unsigned small integer with optional display width e.g. …","Unsigned tiny integer with optional display width e.g. …","Uuid type","Primitive SQL values such as number and string","A literal value, such as string, number, date or NULL","Variable-length binary with optional length type e.g. …","Variable-length character type e.g. VARCHAR(10)","A type that can be visited by a <code>Visitor</code>. See <code>Visitor</code> for …","A type that can be visited by a <code>VisitorMut</code>. See <code>VisitorMut</code> …","A visitor that can be used to walk an AST tree.","A visitor that can be used to mutate an AST tree.","An unqualified <code>*</code>","Temporal type ‘WITH TIME ZONE’. E.g., TIMESTAMP WITH …","Temporal type ‘WITHOUT TIME ZONE’. E.g., TIME WITHOUT …","XOR, e.g. <code>a XOR b</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new identifier with the given value and no quotes.","","","","","","","","","","","","","","","","","","","","Invoked for any expressions that appear in the AST","Invoked for any expressions that appear in the AST","Invoked for any relations (e.g. tables) that appear in the …","Invoked for any relations (e.g. tables) that appear in the …","Invoked for any statements that appear in the AST after …","Invoked for any statements that appear in the AST after …","Invoked for any table factors that appear in the AST after …","Invoked for any table factors that appear in the AST after …","Invoked for any expressions that appear in the AST before …","Invoked for any expressions that appear in the AST before …","Invoked for any relations (e.g. tables) that appear in the …","Invoked for any relations (e.g. tables) that appear in the …","Invoked for any statements that appear in the AST before …","Invoked for any statements that appear in the AST before …","Invoked for any table factors that appear in the AST …","Invoked for any table factors that appear in the AST …","The starting quote if any. Valid quote characters are the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value of the identifier without quotes.","","check this value is a valid duration string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Invokes the provided closure iteratively with a mutable …","Invokes the provided closure on all statements (e.g. <code>SELECT</code>…","","","","","","","","","","","","","","","","Create a new quoted identifier with the given quote and …","","","","","","","","","","","","<code>(&lt;col&gt;, &lt;col&gt;, ...)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>&lt;expr&gt;</code>.","","","","","","","","","","","","","","<code>&lt;search modifier&gt;</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","Referred column identifier list.","Referred column identifier list.","Whether this index starts with KEY (true) or INDEX …","","","Whether this is a <code>FULLTEXT</code> (true) or <code>SPATIAL</code> (false) …","Optional index type.","Whether the type is followed by the keyword <code>KEY</code>, <code>INDEX</code>, or …","Whether this is a <code>PRIMARY KEY</code> or just a <code>UNIQUE</code> constraint","","","","Index name.","","","Optional index name.","","Encapsulates the differences between SQL implementations.","GreptimeDb dialect","MySQL","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Dialect-specific precedence override","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Determine if a character starts a quoted identifier. The …","","Determine if a character is a valid unquoted identifier …","","","","Determine if a character is a valid start character for an …","","","","","","","Determine if quoted characters are proper for identifier","Dialect-specific infix parser override","","Dialect-specific prefix parser override","Dialect-specific statement parser override","","","Does the dialect support <code>FILTER (WHERE expr)</code> for aggregate …","","Returns true if the dialects supports …","","Returns true if the dialect supports …","Returns true if the dialect supports …","","","","","","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::ColumnTypeMismatch</code> …","","SNAFU context selector for the <code>Error::ConvertSqlValue</code> …","","SNAFU context selector for the <code>Error::ConvertToDfStatement</code> …","","SNAFU context selector for the <code>Error::ConvertToGrpcDataType</code>…","","SNAFU context selector for the <code>Error::ConvertValue</code> variant","SQL parser errors.","","SNAFU context selector for the <code>Error::InvalidCast</code> variant","","SNAFU context selector for the <code>Error::InvalidColumnOption</code> …","","SNAFU context selector for the <code>Error::InvalidDatabaseName</code> …","","SNAFU context selector for the <code>Error::InvalidDefault</code> …","","SNAFU context selector for the <code>Error::InvalidSql</code> variant","","SNAFU context selector for the <code>Error::InvalidSqlValue</code> …","","SNAFU context selector for the <code>Error::InvalidTableName</code> …","","SNAFU context selector for the <code>Error::InvalidTableOption</code> …","","SNAFU context selector for the <code>Error::InvalidTimeIndex</code> …","","SNAFU context selector for the <code>Error::MissingTimeIndex</code> …","","SNAFU context selector for the <code>Error::ParseSqlValue</code> variant","","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::SqlTypeNotSupported</code> …","","SNAFU context selector for the <code>Error::Syntax</code> variant","","SNAFU context selector for the <code>Error::TimestampOverflow</code> …","","SNAFU context selector for the <code>Error::Unexpected</code> variant","","","SNAFU context selector for the …","SNAFU context selector for the <code>Error::Unsupported</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coderepTime SQL parser context, a simple wrapper for …","","","","","","","Parses SQL with given dialect","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Parse a comma-separated list wrapped by “()”, and of …","","","","","","","","","","","","","","","","","","","","Parses select and it’s variants.","Parses SHOW statements todo(hl) support <code>show settings</code>/…","Parse SHOW CREATE TABLE statement","Parses <code>SHOW DATABASES</code> statement.","","Parses parser context to a set of statements.","","Parses the set of valid formats","","","","","","","","","","","","","","","","","Raises an “unsupported statement” error.","","","","","","","","","","","","","","","","","","","","Ensure that all columns used in “PARTITION BY RANGE …","Ensure that partition names do not duplicate.","Ensure that value list’s length matches the column list.","Ensure that partition ranges fully cover all values.","Ensure that value lists of partitions are strictly …","","","","","","","","","Options hashmap. Because the trait <code>Visit</code> and <code>VisitMut</code> is …","","Create a <code>ColumnSchema</code> from <code>ColumnDef</code>.","","","","","","","","","Return true when the <code>ColumnDef</code> options contain primary key","","","","","","","","","","","Convert <code>ColumnDef</code> in sqlparser to <code>ColumnDef</code> in gRPC proto.","","","Convert a sql value into datatype’s value","","","","","Transform statements by rules","","","<code>ADD [ COLUMN ] &lt;column_def&gt; [location]</code>","<code>ADD &lt;table_constraint&gt;</code>","","","<code>DROP COLUMN &lt;name&gt;</code>","<code>RENAME &lt;new_table_name&gt;</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Copy tbl [To|From] ‘location’.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Time index name, used in table constraints.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Create if not exists","Create if not exists","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Table name","","","Table name","Table options in <code>WITH</code>.","Table options in <code>WITH</code>. All keys are lowercase.","","set quotes to all Idents from column list","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","SQL structure for <code>DESCRIBE TABLE</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Creates a statement for <code>DESCRIBE TABLE</code>","","","","","","","","","","DROP TABLE statement.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Creates a statement for <code>DROP TABLE</code>","","","","","","","","","","","","Explain statement.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns true when the insert statement can extract literal …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Extracts the literal insert statement body if possible","","","","Options hashmap. Because the trait <code>Visit</code> and <code>VisitMut</code> is …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Query statement instance.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","SQL structure for <code>SHOW CREATE TABLE</code>.","SQL structure for <code>SHOW DATABASES</code>.","Show kind for SQL expressions like <code>SHOW DATABASE</code> or …","SQL structure for <code>SHOW TABLES</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Creates a statement for <code>SHOW DATABASES</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ALTER TABLE","","","","CREATE TABLE","","","","","Comment hints from SQL. It’ll be enabled when using …","","","","","","Tokens parsed by <code>DFParser</code> are converted into these values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","TQL ANALYZE (like SQL ANALYZE): executes the plan and …","","TQL EXPLAIN (like SQL EXPLAIN): doesn’t execute the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TransformRule registry","Transform rule to transform statement or expr","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","Transform statements by rules","","","","","Visit an Expr","Visit a Statement","","SQL data type alias transformer:","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","TRUNCATE TABLE statement.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","Creates a statement for <code>TRUNCATE TABLE</code>","","","","","","","","","","","","","","Use regex to match and replace common seen secret values …","Converts options to HashMap&lt;String, String&gt;. All keys are …"],"i":[0,0,0,0,0,0,0,0,0,0,0,11,11,7,11,1,11,11,11,11,11,11,1,1,1,1,11,0,7,7,7,1,1,1,8,39,40,1,11,11,11,1,1,1,1,1,6,1,3,6,1,11,0,0,0,6,11,11,11,1,7,0,1,1,1,1,6,6,7,8,1,1,8,8,7,1,7,8,11,0,12,11,1,1,1,11,3,6,3,0,11,0,0,6,11,7,7,8,11,0,11,11,11,11,3,1,1,1,1,1,1,11,11,11,11,11,11,11,11,11,11,11,11,1,11,11,11,7,7,11,11,1,7,7,7,7,13,8,11,2,7,6,6,8,8,1,1,0,6,7,11,7,7,7,7,7,7,7,7,7,7,8,7,11,12,8,1,1,11,11,1,11,8,8,1,7,0,1,7,11,11,0,1,1,1,0,1,11,11,11,11,2,8,11,3,6,13,1,1,1,1,1,1,1,1,1,1,0,11,1,1,0,0,0,0,12,2,2,7,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,4,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,4,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,12,12,12,12,12,13,13,13,13,13,14,14,14,14,14,15,15,15,15,15,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,1,2,3,4,5,6,7,8,9,9,10,11,12,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,4,5,14,15,9,5,4,14,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,39,40,39,40,39,40,39,40,39,40,39,40,39,40,39,40,9,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,9,15,8,138,41,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,9,139,140,140,141,139,139,139,140,142,143,144,145,146,147,148,149,150,151,152,148,153,154,155,156,157,158,142,159,153,154,155,160,149,150,151,161,162,163,164,165,166,167,143,168,161,162,163,168,159,164,169,170,156,144,171,172,146,147,157,159,145,157,158,142,159,153,154,155,173,169,172,160,148,171,145,167,167,167,153,154,155,148,171,172,146,147,165,158,173,165,165,174,174,166,166,170,152,175,175,176,177,178,179,178,180,177,179,178,179,176,176,177,180,178,177,177,179,177,0,0,0,0,44,46,47,44,46,47,44,44,44,46,47,44,46,47,44,46,47,44,46,47,44,46,47,44,46,47,44,46,47,44,46,47,44,44,46,47,50,44,46,47,44,46,47,44,46,47,50,44,50,46,50,44,46,47,50,44,46,47,44,46,47,50,50,46,50,50,47,44,50,47,50,47,50,50,44,44,46,47,44,46,47,44,46,47,44,46,47,44,46,47,44,46,47,53,0,53,0,53,0,53,0,53,0,0,53,0,53,0,53,0,53,0,53,0,53,0,53,0,53,0,53,0,53,0,53,0,0,53,0,53,0,53,0,53,0,53,0,53,53,0,0,79,66,53,53,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,58,59,60,61,62,63,64,66,67,68,69,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,81,58,66,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,82,75,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,66,79,58,57,58,59,60,61,62,63,64,66,67,68,69,70,73,74,75,77,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,69,57,60,61,62,64,62,67,68,53,53,53,57,79,82,74,53,63,73,73,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,70,75,77,57,79,58,80,59,60,61,62,63,64,66,67,68,81,82,69,83,84,70,73,74,75,77,53,181,182,183,184,182,185,186,181,187,182,181,184,188,189,183,185,188,190,191,192,186,193,194,195,196,197,196,198,199,183,185,190,191,189,181,185,192,200,201,201,202,186,193,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,110,0,0,110,110,95,95,95,110,95,110,95,110,95,110,95,110,95,110,95,110,95,110,95,110,95,110,95,110,95,95,95,95,95,110,110,110,110,110,95,110,95,110,95,110,95,110,95,110,95,110,95,110,95,110,95,95,95,95,110,95,110,95,110,95,110,95,110,95,110,95,95,110,110,95,110,203,203,204,205,0,111,0,0,111,0,96,96,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,101,97,101,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,111,111,111,111,111,96,96,96,96,96,101,101,101,101,101,97,97,97,97,97,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,101,97,97,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,111,96,101,97,111,111,96,96,101,101,97,97,111,96,101,97,101,97,0,0,0,0,0,0,0,0,0,103,99,98,112,113,103,99,98,112,113,103,99,98,112,113,103,99,98,112,113,99,103,113,103,99,98,112,113,103,99,98,112,113,103,99,98,112,113,103,113,103,99,98,112,113,103,99,98,112,113,103,99,98,112,113,103,113,99,103,99,98,112,113,103,103,103,103,103,99,99,99,99,99,98,98,98,98,98,112,112,112,112,112,113,113,113,113,113,103,103,99,99,98,98,112,113,103,103,0,0,0,103,103,103,99,98,112,113,103,99,98,112,113,103,99,98,112,113,103,112,113,103,99,98,112,113,103,99,98,112,113,103,99,98,112,113,103,99,98,112,113,0,103,98,112,113,103,113,103,99,103,103,99,98,112,113,103,99,98,103,99,98,112,113,103,99,98,112,113,103,99,98,112,113,103,99,98,112,113,103,99,98,112,113,98,103,103,99,99,98,98,112,112,113,113,103,99,98,112,113,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,0,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,0,118,0,118,118,118,118,118,118,118,118,118,118,118,118,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,120,120,0,120,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,124,124,0,0,0,0,124,124,125,126,127,124,125,126,127,124,125,126,127,124,125,126,127,124,125,126,127,124,125,126,127,124,125,126,127,126,124,125,126,127,124,125,126,127,124,125,126,127,124,125,126,127,124,124,124,124,124,125,125,125,125,125,126,126,126,126,126,127,127,127,127,127,124,124,125,126,127,124,125,126,127,124,125,126,127,124,125,126,127,126,124,125,126,127,124,125,126,127,124,125,126,127,124,125,126,127,125,126,125,127,124,125,126,127,124,124,125,126,127,124,125,126,127,124,125,126,127,124,125,126,127,124,125,126,127,124,124,125,125,126,126,127,127,124,125,126,127,91,91,91,91,91,91,91,91,91,0,91,91,91,91,91,0,91,91,91,128,91,128,91,128,91,128,128,91,128,91,128,91,128,91,128,91,128,91,128,91,128,91,91,91,91,91,128,128,128,128,128,128,91,128,91,128,91,128,91,128,91,128,91,128,91,128,91,128,128,91,128,91,128,91,128,91,128,91,128,91,128,91,91,91,128,129,129,129,0,0,0,0,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,130,131,132,129,130,131,132,129,129,129,129,129,130,130,130,130,130,131,131,131,131,131,132,132,132,132,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,130,131,132,130,131,132,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,130,131,132,129,129,130,130,131,131,132,132,129,130,131,132,0,0,133,133,133,133,133,133,133,133,133,133,133,133,0,133,133,133,133,133,133,0,133,133,0,133,134,134,133,0,136,136,136,136,136,136,136,136,136,136,0,136,136,136,136,0,136,136,136,136,136,136,136,136,0,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],16],[[2,2],16],[[3,3],16],[[4,4],16],[[5,5],16],[[6,6],16],[[7,7],16],[[8,8],16],[[9,9],16],[[10,10],16],[[11,11],16],[[12,12],16],[[13,13],16],[[14,14],16],[[15,15],16],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],0,[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[1,1],19],[[2,2],19],[[3,3],19],[[4,4],19],[[5,5],19],[[6,6],19],[[7,7],19],[[8,8],19],[[9,9],19],[[10,10],19],[[11,11],19],[[12,12],19],[[13,13],19],[[14,14],19],[[15,15],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[1,20],[[22,[21]]]],[[1,20],[[22,[21]]]],[[2,20],[[22,[21]]]],[[2,20],[[22,[21]]]],[[3,20],[[22,[21]]]],[[3,20],[[22,[21]]]],[[4,20],[[22,[21]]]],[[4,20],[[22,[21]]]],[[5,20],[[22,[21]]]],[[5,20],[[22,[21]]]],[[6,20],[[22,[21]]]],[[6,20],[[22,[21]]]],[[7,20],[[22,[21]]]],[[7,20],[[22,[21]]]],[[8,20],[[22,[21]]]],[[8,20],[[22,[21]]]],[[9,20],[[22,[21]]]],[[9,20],[[22,[21]]]],[[10,20],[[22,[21]]]],[[10,20],[[22,[21]]]],[[11,20],[[22,[21]]]],[[11,20],[[22,[21]]]],[[12,20],[[22,[21]]]],[[12,20],[[22,[21]]]],[[13,20],[[22,[21]]]],[[13,20],[[22,[21]]]],[[14,20],[[22,[21]]]],[[14,20],[[22,[21]]]],[[15,20],[[22,[21]]]],[[15,20],[[22,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,9],[[]],[[]],[[]],[24,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[[0,[25,26]],27],28],[[1,29]],[[2,29]],[[3,29]],[[4,29]],[[5,29]],[[6,29]],[[7,29]],[[8,29]],[[9,29]],[[10,29]],[[11,29]],[[12,29]],[[13,29]],[[14,29]],[[15,29]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,0,[[[32,[31]]],9],0,0,0,0,[[1,1],[[33,[16]]]],[[2,2],[[33,[16]]]],[[3,3],[[33,[16]]]],[[4,4],[[33,[16]]]],[[5,5],[[33,[16]]]],[[6,6],[[33,[16]]]],[[7,7],[[33,[16]]]],[[8,8],[[33,[16]]]],[[9,9],[[33,[16]]]],[[10,10],[[33,[16]]]],[[11,11],[[33,[16]]]],[[12,12],[[33,[16]]]],[[13,13],[[33,[16]]]],[[14,14],[[33,[16]]]],[[15,15],[[33,[16]]]],[11,34],[11,34],[10,34],[10,34],[35,34],[35,34],[36,34],[36,34],[11,34],[11,34],[10,34],[10,34],[35,34],[35,34],[36,34],[36,34],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],0,0,[8,[[22,[38]]]],[39,34],[40,34],[[1,40],34],[[1,39],34],[[2,40],34],[[2,39],34],[[3,39],34],[[3,40],34],[[4,40],34],[[4,39],34],[[5,40],34],[[5,39],34],[[6,40],34],[[6,39],34],[[7,40],34],[[7,39],34],[[8,40],34],[[8,39],34],[[9,40],34],[[9,39],34],[[10,40],34],[[10,39],34],[[11,39],34],[[11,40],34],[[12,39],34],[[12,40],34],[[13,39],34],[[13,40],34],[[14,39],34],[[14,40],34],[[15,39],34],[[15,40],34],[[41,42],34],[[41,42],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[43,[32,[31]]],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[44,20],45],[[46,20],[[22,[21]]]],[[47,20],[[22,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,[[33,[[22,[49,38]]]]]],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[],30],[[],30],[[],30],[50,19],[[44,43],19],[43,19],[[46,43],19],[43,19],[[44,43],19],[[46,43],19],[[47,43],19],[43,19],[[44,43],19],[[46,43],19],[[47,43],19],[[],19],[[],19],[[],19],[[[52,[51]]],19],[[48,11,49],[[33,[[22,[11,38]]]]]],[[46,48,11,49],[[33,[[22,[11,38]]]]]],[48,[[33,[[22,[11,38]]]]]],[48,[[33,[[22,[35,38]]]]]],[[47,48],[[33,[[22,[35,38]]]]]],[44,19],[[],19],[47,19],[[],19],[47,19],[[],19],[[],19],[[]],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],37],[[],37],[[],37],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[53,54],[[],55],[53,[[33,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[57,[[32,[31]],[32,[31]]]]],53],[[[58,[[32,[31]],[32,[11]]]]],53],[59,53],[[[60,[[32,[31]]]]],53],[[[61,[[32,[31]]]]],53],[[[62,[[32,[31]],[32,[31]]]]],53],[[[63,[[32,[1]]]]],53],[[[64,[[32,[31]]]]],53],[[[66,[[32,[31]],[32,[65]],[32,[65]]]]],53],[[[67,[[32,[31]]]]],53],[[[68,[[32,[31]]]]],53],[[[69,[[32,[31]]]]],53],[[[70,[[32,[31]]]]],53],[[[73,[[32,[71]],[32,[72]]]]],53],[[[74,[[32,[31]]]]],53],[[[75,[[32,[8]],[32,[65]]]]],53],[[[77,[[32,[76]]]]],53],[53,[[33,[55]]]],[[[57,[78,78]]],[[57,[78,78]]]],[[[79,[78,78,78]]],[[79,[78,78,78]]]],[[[58,[78,78]]],[[58,[78,78]]]],[80,80],[59,59],[[[60,[78]]],[[60,[78]]]],[[[61,[78]]],[[61,[78]]]],[[[62,[78,78]]],[[62,[78,78]]]],[[[63,[78]]],[[63,[78]]]],[[[64,[78]]],[[64,[78]]]],[[[66,[78,78,78]]],[[66,[78,78,78]]]],[[[67,[78]]],[[67,[78]]]],[[[68,[78]]],[[68,[78]]]],[[[81,[78]]],[[81,[78]]]],[[[82,[78,78]]],[[82,[78,78]]]],[[[69,[78]]],[[69,[78]]]],[83,83],[84,84],[[[70,[78]]],[[70,[78]]]],[[[73,[78,78]]],[[73,[78,78]]]],[[[74,[78]]],[[74,[78]]]],[[[75,[78,78]]],[[75,[78,78]]]],[[[77,[78]]],[[77,[78]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,[[53,18,[85,[31]]]],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[53,23],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],0,0,0,[[[57,[[32,[31]],[32,[31]]]]],[[22,[53]]]],[[[58,[[32,[31]],[32,[11]]]]],[[22,[53]]]],[59,[[22,[53]]]],[[[60,[[32,[31]]]]],[[22,[53]]]],[[[61,[[32,[31]]]]],[[22,[53]]]],[[[62,[[32,[31]],[32,[31]]]]],[[22,[53]]]],[[[63,[[32,[1]]]]],[[22,[53]]]],[[[64,[[32,[31]]]]],[[22,[53]]]],[[[66,[[32,[31]],[32,[65]],[32,[65]]]]],[[22,[53]]]],[[[67,[[32,[31]]]]],[[22,[53]]]],[[[68,[[32,[31]]]]],[[22,[53]]]],[[[69,[[32,[31]]]]],[[22,[53]]]],[[[70,[[32,[31]]]]],[[22,[53]]]],[[[73,[[32,[71]],[32,[72]]]]],[[22,[53]]]],[[[74,[[32,[31]]]]],[[22,[53]]]],[[[75,[[32,[8]],[32,[65]]]]],[[22,[53]]]],[[[77,[[32,[76]]]]],[[22,[53]]]],[[[57,[86,86]],20],45],[[[79,[86,86,86]],20],45],[[[58,[86,86]],20],45],[[80,20],45],[[59,20],45],[[[60,[86]],20],45],[[[61,[86]],20],45],[[[62,[86,86]],20],45],[[[63,[86]],20],45],[[[64,[86]],20],45],[[[66,[86,86,86]],20],45],[[[67,[86]],20],45],[[[68,[86]],20],45],[[[81,[86]],20],45],[[[82,[86,86]],20],45],[[[69,[86]],20],45],[[83,20],45],[[84,20],45],[[[70,[86]],20],45],[[[73,[86,86]],20],45],[[[74,[86]],20],45],[[[75,[86,86]],20],45],[[[77,[86]],20],45],[[53,20],45],[[53,20],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[57,[[32,[31]],[32,[31]]]]],53],[[[79,[[32,[31]],[32,[31]],[32,[31]]]]],53],[[[58,[[32,[31]],[32,[11]]]]],53],[80,53],[59,53],[[[60,[[32,[31]]]]],53],[[[61,[[32,[31]]]]],53],[[[62,[[32,[31]],[32,[31]]]]],53],[[[63,[[32,[1]]]]],53],[[[64,[[32,[31]]]]],53],[[[66,[[32,[31]],[32,[65]],[32,[65]]]]],53],[[[67,[[32,[31]]]]],53],[[[68,[[32,[31]]]]],53],[[[81,[[32,[31]]]]],53],[[[82,[[32,[8]],[32,[65]]]]],53],[[[69,[[32,[31]]]]],53],[83,53],[84,53],[[[70,[[32,[31]]]]],53],[[[73,[[32,[71]],[32,[72]]]]],53],[[[74,[[32,[31]]]]],53],[[[75,[[32,[8]],[32,[65]]]]],53],[[[77,[[32,[76]]]]],53],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,0,0,0,0,0,0,[53,[[33,[87]]]],[88],[53,[[33,[55]]]],0,0,0,0,[53,89],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],17],[[],17],[[],17],[[90,23],19],[[23,50],[[92,[[85,[91]]]]]],[18],[18],[18],[[90,23,93],92],[[]],[[]],[[],18],[[]],[[],30],[[],19],[[90,94],19],[90,[[92,[91]]]],[90,[[22,[95,38]]]],[[90,[85,[4]],[85,[3]]],92],[90,[[22,[4,38]]]],[90,92],[[90,42],[[92,[85]]]],[90,[[92,[91]]]],[90,[[92,[96]]]],[[90,10],[[92,[97]]]],[90,92],[90,[[92,[91]]]],[90,[[92,[91]]]],[90,[[92,[91]]]],[90,[[92,[91]]]],[90,[[92,[91]]]],[90,[[92,[91]]]],[90,[[92,[91]]]],[90,[[92,[91]]]],[90,[[92,[91]]]],[[23,50],[[92,[11]]]],[90,[[92,[91]]]],[48,[[22,[[33,[6]],38]]]],[90,[[92,[[33,[3]]]]]],[90,[[92,[98]]]],[90,[[92,[[33,[99]]]]]],[90,[[92,[91]]]],[90,[[92,[91]]]],[90,[[92,[91]]]],[90,[[92,[91]]]],[[90,19],[[92,[91]]]],[90,[[92,[91]]]],[[48,100],[[22,[31,38]]]],[[90,23],[[92,[31]]]],[90,[[92,[91]]]],[90,[[22,[91,38]]]],[90,[[22,[91,38]]]],[90,[[92,[91]]]],[[48,23,23],[[22,[31,38]]]],[90,[[92,[91]]]],[90,[[92,[8]]]],0,[90,[[92,[101]]]],[90,31],0,[[],33],[[]],[[],22],[[],22],[[],37],[[90,31],92],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[102,[4]],99],[[92,[[85,[4]]]]]],[99,92],[[99,[85,[4]]],92],[[[85,[[85,[8]]]]],92],[[99,[85,[4]]],[[92,[[85,[[85,[8]]]]]]]],[1,1],[103,92],[[[102,[4]],99],92],[103,92],0,0,0,0,0,0,[[4,19],[[92,[104]]]],[65,[[92,[1]]]],0,0,0,0,0,0,[23,[[33,[1]]]],[4,19],0,0,0,[[23,65,[102,[5]]],[[92,[[33,[105]]]]]],[23,[[92,[76]]]],0,[23,[[92,[[0,[106,86]]]]]],[[23,31,65],[[92,[76]]]],0,0,[4,[[92,[107]]]],[1,[[92,[65]]]],[[[33,[108]]],[[33,[109]]]],[[65,23],[[92,[76]]]],[[23,65,8],[[92,[76]]]],0,0,0,[[[85,[91]]],92],0,[76,[[92,[8]]]],0,0,0,0,0,0,[95,110],0,[[]],[[]],[[]],[[]],[95,95],[110,110],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[18],[18],[18],[18],[18],[18],[[95,95],19],[[110,110],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[95,20],45],[[110,20],45],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[]],[[]],[[],30],[[],30],[[],19],[[],19],[[10,110],95],[95,10],0,[[]],[[]],[[],33],[[],33],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],37],[[],37],[[95,39],34],[[95,40],34],[[110,40],34],[[110,39],34],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[111,111],[96,96],[101,101],[97,97],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,0,[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[111,111],19],[[96,96],19],[[101,101],19],[[97,97],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[111,20],45],[[96,20],45],[[101,20],45],[[97,20],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],19],[[],19],[[],19],[[],19],0,0,0,[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],37],[[],37],[[],37],[[],37],[[111,40],34],[[111,39],34],[[96,39],34],[[96,40],34],[[101,39],34],[[101,40],34],[[97,39],34],[[97,40],34],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[103,103],[99,99],[98,98],[112,112],[113,113],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],0,0,0,[[103,103],19],[[99,99],19],[[98,98],19],[[112,112],19],[[113,113],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[103,20],45],[[103,20],45],[[99,20],45],[[99,20],45],[[98,20],45],[[98,20],45],[[112,20],45],[[113,20],45],[103,31],[103,23],0,0,0,[103,31],[103,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],19],[[],19],[[],19],[[],19],[[],19],[3,19],0,0,0,0,0,0,0,[[99,43]],0,[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],37],[[],37],[[],37],[[],37],[[],37],0,[[103,39],34],[[103,40],34],[[99,40],34],[[99,39],34],[[98,39],34],[[98,40],34],[[112,40],34],[[112,39],34],[[113,39],34],[[113,40],34],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[114,114],[[]],[[],17],[[],17],[[],17],[18],[18],[18],[[114,114],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[114,20],45],[[]],[[]],[[]],[[],18],0,[[]],[[],30],[[],19],[[]],[[],33],[[]],[[],22],[[],22],[[],37],[[114,40],34],[[114,39],34],[[]],0,[[]],[[]],[115,115],[[]],[[],17],[[],17],[[],17],[18],[18],[18],[[115,115],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[115,20],45],[[]],[[]],[[]],[[],18],[[]],[[],30],[[],19],[115,10],0,[10,115],[[]],[[],33],[[]],[[],22],[[],22],[[],37],[[115,39],34],[[115,40],34],[[]],0,[[]],[[]],[116,116],[[]],[[],17],[[],17],[[],17],[18],[18],[18],[[116,116],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[116,20],45],[[]],[[]],[[]],[[],18],[[]],[[],30],[[],19],[10,116],[116,10],0,[[]],[[],33],[[]],[[],22],[[],22],[[],37],[[116,40],34],[[116,39],34],[[]],0,[[]],[[]],[117,117],[[]],[[],17],[[],17],[[],17],[18],[18],[18],[[117,117],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[117,20],45],[[]],[[]],[[]],[[],18],0,[[]],[[],30],[[],19],[[]],[117,31],[[],33],[[]],[[],22],[35,[[22,[117]]]],[[],22],[[],37],[[117,40],34],[[117,39],34],[[]],0,[[]],[[]],[118,19],[118,118],[[]],[118,[[85,[31]]]],[[],17],[[],17],[[],17],[18],[18],[18],[[118,118],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[118,20],45],[[]],[[]],[[]],[[],18],0,[[]],[[],30],[[],19],0,[118,[[92,[[33,[119]]]]]],[[[85,[[85,[11]]]]],[[92,[[85,[[85,[8]]]]]]]],[118,10],[[]],[[],33],[[]],[[],22],[35,[[22,[118]]]],[[],22],[[],37],[118,[[92,[[85,[[85,[8]]]]]]]],[[118,39],34],[[118,40],34],[[]],0,[120,[[121,[31,31]]]],[120,[[121,[31,31]]]],[[]],[[]],[120,120],[[]],[[],17],[[],17],[[],17],[18],[18],[18],[[120,120],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[120,20],45],[[[121,[31,31]]],120],[[]],[122,120],[[]],[[]],[[120,23],[[33,[31]]]],[[],18],[[120,31,31]],[[]],[[],30],[[],19],0,[[]],[[],33],[[]],[[],22],[[],22],[[],37],0,[[120,40],34],[[120,39],34],0,[[]],0,[[]],[[]],[119,119],[[]],[[],17],[[],17],[[],17],[18],[18],[18],[[119,119],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[119,20],45],[[119,20],45],[[]],[[]],[[]],[[],18],0,[[]],[[],30],[[],19],[[]],[[],31],[[],33],[[]],[123,[[22,[119]]]],[[],22],[[],22],[[],37],[[119,40],34],[[119,39],34],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124,124],[125,125],[126,126],[127,127],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[[124,124],19],[[125,125],19],[[126,126],19],[[127,127],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[124,20],45],[[124,20],45],[[125,20],45],[[126,20],45],[[127,20],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],19],[[],19],[[],19],[[],19],0,0,[124,125],0,[[]],[[]],[[]],[[]],[[],31],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],37],[[],37],[[],37],[[],37],[[124,39],34],[[124,40],34],[[125,40],34],[[125,39],34],[[126,40],34],[[126,39],34],[[127,39],34],[[127,40],34],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[91,91],[128,128],[[]],[[]],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[18],[18],[18],[18],[18],[18],[[91,91],19],[[128,128],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,[[91,20],45],[[128,20],45],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[]],[[]],[[],30],[[],30],[[],19],[[],19],0,[[]],[[]],[[],33],[[],33],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],37],[[],37],[[91,40],34],[[91,39],34],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[129,129],[130,130],[131,131],[132,132],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],0,0,0,[[129,129],19],[[130,130],19],[[131,131],19],[[132,132],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[129,20],45],[[130,20],45],[[131,20],45],[[132,20],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],19],[[],19],[[],19],[[],19],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],37],[[],37],[[],37],[[],37],[[129,40],34],[[129,39],34],[[130,39],34],[[130,40],34],[[131,40],34],[[131,39],34],[[132,40],34],[[132,39],34],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[],17],[[],17],[[],17],[133,[[85,[[135,[134]]]]]],[18],[18],[18],[[]],[[]],0,[[],18],[[]],[[],30],[[],19],[[],33],[[]],[[[85,[91]]],92],[[],22],[[],22],0,[[],37],[11,34],[91,92],[[]],0,[[]],[[]],[[],17],[[],17],[[],17],[18],[18],[18],[[]],[[]],[23,[[33,[1]]]],[[],18],[[]],[[],30],[[],19],[1],[[],33],[[]],[[],22],[[],22],[[],37],[[136,11],34],[[136,91],92],[[]],0,[[]],[[]],[137,137],[[]],[[],17],[[],17],[[],17],[18],[18],[18],[[137,137],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[137,20],45],[[]],[[]],[[]],[[],18],[[]],[[],30],[[],19],[10,137],[137,10],0,[[]],[[],33],[[]],[[],22],[[],22],[[],37],[[137,40],34],[[137,39],34],[[]],0,[8,[[33,[31]]]],[23,31],[[[102,[15]]],[[121,[31,31]]]]],"c":[],"p":[[4,"DataType"],[4,"TimezoneInfo"],[4,"TableConstraint"],[3,"ColumnDef"],[3,"ColumnOptionDef"],[4,"ColumnOption"],[4,"BinaryOperator"],[4,"Value"],[3,"Ident"],[3,"ObjectName"],[4,"Expr"],[4,"FunctionArgExpr"],[4,"FunctionArg"],[3,"Function"],[3,"SqlOption"],[4,"Ordering"],[3,"Compat"],[15,"usize"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[15,"str"],[4,"WildcardExpr"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[3,"Request"],[3,"String"],[8,"Into"],[4,"Option"],[4,"ControlFlow"],[4,"Statement"],[4,"TableFactor"],[3,"TypeId"],[4,"ParserError"],[8,"Visitor"],[8,"VisitorMut"],[8,"VisitMut"],[8,"FnMut"],[15,"char"],[3,"GreptimeDbDialect"],[6,"Result"],[3,"MySqlDialect"],[3,"PostgreSqlDialect"],[3,"Parser"],[15,"u8"],[8,"Dialect"],[3,"Chars"],[3,"Peekable"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[3,"UnsupportedSnafu"],[3,"UnsupportedDefaultValueSnafu"],[3,"MissingTimeIndexSnafu"],[3,"InvalidTimeIndexSnafu"],[3,"InvalidSqlSnafu"],[3,"InvalidColumnOptionSnafu"],[3,"SqlTypeNotSupportedSnafu"],[3,"ParseSqlValueSnafu"],[4,"ConcreteDataType"],[3,"ColumnTypeMismatchSnafu"],[3,"InvalidDatabaseNameSnafu"],[3,"InvalidTableNameSnafu"],[3,"InvalidTableOptionSnafu"],[3,"InvalidSqlValueSnafu"],[3,"Timestamp"],[4,"TimeUnit"],[3,"TimestampOverflowSnafu"],[3,"ConvertToDfStatementSnafu"],[3,"ConvertSqlValueSnafu"],[4,"Value"],[3,"ConvertValueSnafu"],[8,"Clone"],[3,"UnexpectedSnafu"],[3,"SyntaxSnafu"],[3,"InvalidDefaultSnafu"],[3,"InvalidCastSnafu"],[3,"SerializeColumnDefaultConstraintSnafu"],[3,"ConvertToGrpcDataTypeSnafu"],[3,"Vec"],[8,"Debug"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"ParserContext"],[4,"Statement"],[6,"Result"],[3,"TokenWithLocation"],[4,"Keyword"],[3,"AlterTable"],[4,"CopyTable"],[3,"CopyTableArgument"],[3,"PartitionEntry"],[3,"Partitions"],[4,"Token"],[3,"CopyDatabaseArgument"],[15,"slice"],[3,"CreateTable"],[3,"ColumnSchema"],[4,"ColumnDefaultConstraint"],[8,"FromStr"],[3,"ColumnDef"],[4,"AddColumnLocation"],[3,"AddColumnLocation"],[4,"AlterTableOperation"],[4,"Copy"],[3,"CreateDatabase"],[3,"CreateExternalTable"],[3,"Delete"],[3,"DescribeTable"],[3,"DropTable"],[3,"Explain"],[3,"Insert"],[3,"Query"],[3,"OptionMap"],[3,"HashMap"],[8,"IntoIterator"],[3,"Query"],[4,"ShowKind"],[3,"ShowDatabases"],[3,"ShowTables"],[3,"ShowCreateTable"],[3,"Hint"],[4,"Tql"],[3,"TqlEval"],[3,"TqlExplain"],[3,"TqlAnalyze"],[3,"RULES"],[8,"TransformRule"],[3,"Arc"],[3,"TypeAliasTransformRule"],[3,"TruncateTable"],[8,"Visit"],[13,"ForeignKey"],[13,"Generated"],[13,"Unique"],[13,"InUnnest"],[13,"Collate"],[13,"MapAccess"],[13,"MatchAgainst"],[13,"AnyOp"],[13,"AllOp"],[13,"Case"],[13,"Cast"],[13,"TryCast"],[13,"SafeCast"],[13,"TypedString"],[13,"Like"],[13,"ILike"],[13,"SimilarTo"],[13,"CompositeAccess"],[13,"InList"],[13,"InSubquery"],[13,"Between"],[13,"UnaryOp"],[13,"Extract"],[13,"Ceil"],[13,"Floor"],[13,"Position"],[13,"Substring"],[13,"Trim"],[13,"Overlay"],[13,"AggregateExpressionWithFilter"],[13,"ArrayIndex"],[13,"IntroducedString"],[13,"JsonAccess"],[13,"BinaryOp"],[13,"Exists"],[13,"AtTimeZone"],[13,"Named"],[13,"Unique"],[13,"ForeignKey"],[13,"Index"],[13,"FulltextOrSpatial"],[13,"Check"],[13,"Unexpected"],[13,"ColumnTypeMismatch"],[13,"InvalidDefault"],[13,"UnsupportedDefaultValue"],[13,"InvalidCast"],[13,"ConvertSqlValue"],[13,"Syntax"],[13,"InvalidTableOption"],[13,"Unsupported"],[13,"SerializeColumnDefaultConstraint"],[13,"ConvertToGrpcDataType"],[13,"ConvertToDfStatement"],[13,"ConvertValue"],[13,"InvalidTimeIndex"],[13,"InvalidSql"],[13,"InvalidColumnOption"],[13,"ParseSqlValue"],[13,"InvalidDatabaseName"],[13,"InvalidTableName"],[13,"SqlTypeNotSupported"],[13,"TimestampOverflow"],[13,"InvalidSqlValue"],[13,"AddColumn"],[13,"DropColumn"],[13,"RenameTable"]]},\
"sqlness_runner":{"doc":"","t":"DLLLLMLLLLLLLLAMMLLLLLLLLLLFMMLLLLLLLALRDDDRDRLLLLLLLLLMLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMLLLLLMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLRDRLLFLLLMLLLLLFFFLLLLLLMLLLLLL","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","case_dir","command","command_for_update","compat","compat_mut","compat_ref","deref","deref_mut","drop","env","env_config_file","fail_fast","fmt","from","from_arg_matches","from_arg_matches_mut","from_subset","group_id","init","into","into_request","is_in_subset","main","server_addr","test_filter","to_subset","to_subset_unchecked","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","util","vzip","DEFAULT_LOG_LEVEL","Env","GreptimeDB","GreptimeDBContext","METASRV_ADDR","ResultDisplayer","SERVER_ADDR","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_db","client","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","connect_db","ctx","data_home","datanode_id","datanode_id","datanode_start_args","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","env","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","frontend_process","generate_config_file","incr_datanode_id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_standalone","metasrv_process","new","new","query","reset_datanode_id","restart_server","result","server_addr","server_processes","start","start_distributed","start_server","start_standalone","stop","stop","stop_server","time","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","NULL_DATA_PLACEHOLDER","NullableColumnIter","PORT_CHECK_INTERVAL","borrow","borrow_mut","check_port","compat","compat_mut","compat_ref","data_iter","deref","deref_mut","drop","from","from_subset","get_binary_dir","get_case_dir","get_workspace_root","init","into","into_iter","into_request","is_in_subset","next","null_iter","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"sqlness_runner"],[39,"sqlness_runner::env"],[163,"sqlness_runner::util"]],"d":["SQL Harness for GrepTimeDB","","","","","Directory of test cases","","","","","","","","","","Environment Configuration File","Fail this run as soon as one case fails if true","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","Address of the server","Name of test cases to run. Accept as a regexp.","","","","","","","","","","","","","","","","","","","","","","","","","Build the DB with <code>cargo build --bin greptime</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Generate config file to …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","stop and restart the server process","","","","","","","","","Stop one <code>Database</code>.","","Start time in millisecond","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper struct for iterate over column with null_mask","Check port every 0.1 second.","","","Spin-waiting a socket address is available, or timeout. …","","","","","","","","Returns the argument unchanged.","","","Get the dir of test cases. This function only works when …","Get the dir that contains workspace manifest (the …","","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,4,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,0,4,0,0,0,0,0,0,0,17,18,20,15,17,18,20,15,15,17,15,15,17,18,20,15,17,18,20,15,17,18,20,15,15,17,15,18,18,15,17,18,20,15,17,18,20,15,17,17,18,20,15,17,20,17,18,20,15,15,17,18,20,15,17,15,18,17,18,20,15,17,18,20,15,17,18,20,15,17,18,20,15,17,17,18,15,17,18,15,20,15,17,15,15,15,15,17,15,15,18,15,20,17,18,20,15,17,18,20,15,17,18,20,15,17,18,20,15,17,18,20,15,17,18,20,15,0,0,0,34,34,0,34,34,34,34,34,34,34,34,34,0,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[0,[1,1],[1,1],[[]],[[]],0,[[],1],[[],1],[[],2],[[],2],[[],2],[3],[3],[3],0,0,0,[[4,5],6],[[]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[[]],[[],[[11,[10]]]],[[],3],[[]],[[],12],[[],13],[[]],0,0,[[],11],[[]],[[],9],[[],9],[[],14],[[4,7],[[9,[8]]]],[[4,7],[[9,[8]]]],0,[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[15,15],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[15,16],17],0,0,[18,19],0,[[15,18]],[3],[3],[3],[3],[3],[3],[3],[3],[17],[3],[3],[3],[3],0,[[20,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[15,16,18],21],[18],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],0,0,[[],18],[[22,[11,[21]]],15],[[17,23,21],[[26,[[25,[24]]]]]],[18],[[15,17]],0,0,0,[[15,16,[11,[27]]],[[26,[[25,[24]]]]]],[15,17],[[15,16,18,13],28],[15,17],[17],[[15,16],[[26,[[25,[24]]]]]],[28],0,[[]],[[],21],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[29,30],13],[[],2],[[],2],[[],2],0,[3],[3],[3],[[]],[[]],[16,21],[[[11,[22]]],21],[[],21],[[],3],[[]],[[]],[[],12],[[],13],[[[34,[31,[32,[13]],31,33]]],11],0,[[],11],[[]],[[],9],[[],9],[[],14],[[]]],"c":[],"p":[[3,"Command"],[3,"Compat"],[15,"usize"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Request"],[15,"bool"],[3,"TypeId"],[3,"Env"],[15,"str"],[3,"GreptimeDB"],[3,"GreptimeDBContext"],[15,"u32"],[3,"ResultDisplayer"],[3,"String"],[3,"PathBuf"],[3,"QueryContext"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Path"],[3,"Child"],[4,"SocketAddr"],[3,"Duration"],[8,"Iterator"],[8,"AsRef"],[8,"Display"],[3,"NullableColumnIter"]]},\
"storage":{"doc":"Storage engine implementation.","t":"DDCAAAAAAMAAMAMAAAMAAAAAAMAAAAAADDMLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLMMLLLLLMMLLLLLLMMLMMMLLLLLLLLLLLMLLLLIIQQQQKKDGDGIDDIDQRQDDMMMLLFMMMLLLLLLMLLLFLLLLMMLMMAMKAMMMMKAMMMMMMMMAMLLLLMALLMMAMMDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIDQQMLLLLFLMLLLLLLLLLLLLLFFLLLLLFLLLLLLLLLKLLLLLLLLLLLLLLLDDMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMLLLLLLLLMLLLLMMDIDRLLLLLMLLLLLLLLLLLLLMLLLLLLLLMLLLLLLMLLMMMMKLMMMMMMMLLLLLLLLLLLLMLMDMFLLLLLLLLLFLLLLLLLMMLLMLLLLLLFFRRRRDMLLLLLLLMLLLLLLLLMMLLLLMMMMMMMMLLLLLLLNDDNNDEDLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMLLLLMLLFFLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDENDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDGNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMLMMMMMMMMLMMMMMMMMMMMMMLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDGLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMLLLLLLLLLLLLNCDCCCCCIGECNDDLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLKLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLMMMMMMLAMKLLKLAMKLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMIDDMLMLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLKKKLLLKMLLLLLLLLLLLLLDNNDDEDEDGNNMLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMMLMMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMMMMDDMAAMMMAAMMMMFMAANNNDDDDDDDDEDDDDNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLMMMMMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLQIQKKRFFFRRDDDDMMLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMLLLLLLLLLLLLLLMLMLLMLLLLLLLMMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLGDLLLLLLLLLLMLLLLLLLLLLLLLLLLDDRDRRDDMMLLLLLLLLLLFLMLLLLLLLLLLLLLLLLLMLLLLLFLLLLLLLLLLLLLLLLLLLLMFFLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLFFLLLLLMLLLFLLMMLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLDIGDDDNDIIGGGDDENMLLLLLLLLLLLLAKLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLKMMLLLLLLALLLLLLLLLLLLMLLLLLLLKMLKMMMMLKLMKMLKKMMMKMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMLLLLLLLKDDDDDDIGMMLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLMMLLLLLLLLLLLLLLMLLMMLKMKFLLMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLDDLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLMMMLLLLLLLLLLFLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDNDNDDDDDDDGNDNDNDNDNDNDENDNDNDNDRRNDNDNDDDDGNDGNDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLMMMMLLLMMMMMMMMMMMMMMLLLLLLLLLLLLMMLLMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDDDDRDDDDDDDDDMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLANENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLDDIIGDDDDDLMMMLLLLLMALLMLLMKLLLLLLALLLLLLLLLLLLLLKKLLLLLLMLLMLLLLLLLLALKLLLMMLMMMMMMMMMLMMLLLLLLLLLLLKLLALDLLLLLLLLLLLLLLLLMMLLLLLLDLLLLLLLLLLLLLLLLLMMMMLLLLLLDNDDDNDEMMMLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLFLLLLLLLLLLLLLLMMMFLLLLLLDGGDDDGDGDDDLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMMMLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLMLMMMMMMMLLLMLLLMLLMMMMLMMMMLLLLLLLLLLLLLLLLLLLMLLLLLLLMMLLLLMMMMLLMLAMMDDDGDDDDLLLLLLLLLLLLLLLLLLMLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLMLLLLLMLLFMMMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLMMMMMLLMLMIDQDIQQRRRIDLLLLLLMMLLLLLLLLLKALLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLMKMMLLLLALMMMLLLKLMMKLMMLLLLLLLLLLLLLLLLLLDLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLGGDDDDIIQMKLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLMLLLLLLLLKLLLLLLLLLLDGDGDGMMAAMMAMMMAMMMIDLLLLLLLKLLMLLLLLLLMLLLLFMLLLLMLLLLLLLDGDLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLMMLMLLLLLLLLLLLLLLDGLLFLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLRDGRLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLMLLMLLLLLLLLLLMLLLDLLLLLLLLLLLLLLLLLLLMLLLLLMMLIGDDDDDDNDGDGDRDDDNEDNDLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLMLLLLLLFLLMMALMMLALKLMLLLLLMMKLMMMMALMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLDDDGMMLLLLLLLLLLLLLLLLFFLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLDDDLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMFLLLMMMMFLLLLLLLLLLLLLLLMLLLDGMLLLLLLLLLLLLMLLLLLLLLLLLDDMLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLMLLLLLLLLLLLLLRGGDDGDGLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMLLMLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLGDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLDRIFLLLLLLLLFLLKLLLLLLLLLLLRDDDDLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLFLMMLMLLLMLMLMLLLLLLLLLLLLLLLLLLLLFLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLF","n":["EngineImpl","ParquetWriter","Source","chunk","codec","compaction","config","engine","error","file_path","file_purger","flush","inner","manifest","max_row_group_size","memtable","metadata","metrics","object_store","proto","read","region","scheduler","schema","snapshot","source","sst","sync","version","wal","window_infer","write_batch","ChunkReaderBuilder","ChunkReaderImpl","batch_reader","batch_size","borrow","borrow","borrow_mut","borrow_mut","build","build_chained","build_reader","build_time_range_predicate","build_windowed","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","compute_memtable_range","deref","deref","deref_mut","deref_mut","drop","drop","file_in_range","files_to_read","filters","filters","from","from","from_subset","from_subset","infer_time_windows","infer_window_for_chain_reader","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","iter_ctx","memtables","new","new","next_chunk","output_ordering","output_ordering","output_ordering","output_ordering","pick_all_ssts","pick_memtables","pick_ssts","project_chunk","projected_schema","projection","projection","region_id","reserve_num_memtables","schema","schema","sst_layer","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","use_chain_reader","use_chain_reader","user_schema","visible_sequence","vzip","vzip","Decoder","Encoder","Error","Error","Item","Item","decode","encode","CompactionHandler","CompactionPickerRef","CompactionRequestImpl","CompactionSchedulerRef","CompactionTask","CompactionTaskImpl","LeveledTimeWindowPicker","Picker","PickerContext","Request","TIME_BUCKETS","Task","TimeBuckets","TwcsPicker","_phantom_data","_phantom_data","_phantom_data","borrow","borrow_mut","compaction_strategy_to_picker","compaction_time_window","compaction_time_window","compaction_time_window","compat","compat_mut","compat_ref","deref","deref_mut","drop","expired_ssts","fit_time_bucket","from","from_subset","infer_time_bucket","init","into","into_request","is_in_subset","manifest","manifest","max","max_active_window_files","max_inactive_window_files","noop","outputs","pick","picker","picker","region_id","reschedule_on_finish","reschedule_on_finish","run","scheduler","schema","sender","shared","shared_data","sst_layer","sst_layer","sst_write_buffer_size","sst_write_buffer_size","task","time_window_seconds","to_subset","to_subset_unchecked","try_from","try_into","ttl","twcs","type_id","vzip","wal","wal","writer","writer","writer","NoopCompactionPicker","NoopCompactionRequest","NoopCompactionScheduler","NoopCompactionTask","_phantom_data","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","complete","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","pick","run","schedule","stop","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","LeveledTimeWindowPicker","Picker","PickerContext","Request","Task","_phantom_data","borrow","borrow","borrow_mut","borrow_mut","calculate_time_buckets","compaction_time_window","compaction_time_window","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","file_time_bucket_span","find_compactable_files","fmt","from","from","from_subset","from_subset","get_expired_ssts","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","pick","pick","pick_level","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with","CompactionHandler","CompactionRequestImpl","_phantom_data","borrow","borrow","borrow_mut","borrow_mut","compaction_time_window","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","complete","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from","from_subset","from_subset","handle_request","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","key","levels","manifest","picker","region_id","reschedule_on_finish","schema","sender","shared","sst_layer","sst_write_buffer_size","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","ttl","type_id","type_id","vzip","vzip","wal","writer","CompactionOutput","CompactionTask","CompactionTaskImpl","MAX_PARALLEL_COMPACTION","borrow","borrow","borrow_mut","borrow_mut","build","compaction_time_window","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","drop","expired_ssts","fmt","fmt","from","from","from_subset","from_subset","init","init","inputs","into","into","into_request","into_request","is_in_subset","is_in_subset","manifest","mark_files_compacting","merge_ssts","output_file_id","output_level","outputs","reschedule_on_finish","run","run","schema","shared_data","sst_layer","sst_write_buffer_size","strict_window","time_window_bound","time_window_sec","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wal","write_manifest_and_apply","writer","TwcsPicker","_phantom_data","assign_to_windows","borrow","borrow_mut","build_output","compat","compat_mut","compat_ref","deref","deref_mut","drop","find_latest_window_in_seconds","fmt","from","from_subset","init","into","into_request","is_in_subset","max_active_window_files","max_inactive_window_files","new","pick","time_window_seconds","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","build_sst_reader","build_time_range_filter","DEFAULT_AUTO_FLUSH_INTERVAL","DEFAULT_MAX_FLUSH_TASKS","DEFAULT_PICKER_SCHEDULE_INTERVAL","DEFAULT_REGION_WRITE_BUFFER_SIZE","EngineConfig","auto_flush_interval","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","compress_manifest","default","deref","deref_mut","drop","fmt","from","from_ref","from_subset","global_ttl","global_write_buffer_size","init","into","into_request","is_in_subset","manifest_checkpoint_margin","manifest_gc_duration","max_files_in_l0","max_flush_tasks","max_purge_tasks","picker_schedule_interval","region_write_buffer_size","sst_write_buffer_size","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Creating","EngineImpl","EngineInner","Opening","Ready","RegionMap","RegionSlot","SlotGuard","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","close","close","close_region","close_region","compaction_scheduler","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","config","create_region","create_region","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_region","file_purger","flush_scheduler","flush_strategy","fmt","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","get_or_occupy_slot","get_ready_region","get_region","get_region","get_region","init","init","init","init","init","inner","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","list_regions","log_store","memtable_builder","name","new","new","new","new","object_store","open_region","open_region","region_manifest_dir","region_sst_dir","region_store_config","regions","regions","remove","remove_region","skip_clean","state_name","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_get_ready_region","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update","update","vzip","vzip","vzip","vzip","vzip","AlterMetadata","AlterMetadataSnafu","BatchCorrupted","BatchCorruptedSnafu","BatchMissingColumn","BatchMissingColumnSnafu","BuildBatch","BuildBatchSnafu","BuildPredicate","BuildPredicateSnafu","ClosedRegion","ClosedRegionSnafu","CompactTaskCancel","CompactTaskCancelSnafu","CompatRead","CompatReadSnafu","CompressObject","CompressObjectSnafu","ConvertChunk","ConvertChunkSnafu","ConvertColumnsToRows","ConvertColumnsToRowsSnafu","ConvertStoreSchema","ConvertStoreSchemaSnafu","CreateDefault","CreateDefaultSnafu","CreateDefaultToRead","CreateDefaultToReadSnafu","CreateRecordBatch","CreateRecordBatchSnafu","DecodeArrow","DecodeArrowSnafu","DecodeJson","DecodeJsonSnafu","DecodeMetaActionList","DecodeMetaActionListSnafu","DecodeParquetTimeRange","DecodeParquetTimeRangeSnafu","DecodeWalHeader","DecodeWalHeaderSnafu","DecompressObject","DecompressObjectSnafu","DeleteObject","DeleteObjectSnafu","DeleteSst","DeleteSstSnafu","DeleteWalNamespace","DeleteWalNamespaceSnafu","DuplicateFlush","DuplicateFlushSnafu","EncodeArrow","EncodeArrowSnafu","EncodeJson","EncodeJsonSnafu","EncodeWalHeader","EncodeWalHeaderSnafu","Error","FilterColumn","FilterColumnSnafu","HasNull","HasNullSnafu","IllegalSchedulerState","IllegalSchedulerStateSnafu","InvalidAlterRequest","InvalidAlterRequestSnafu","InvalidProjection","InvalidProjectionSnafu","InvalidRawRegion","InvalidRawRegionSnafu","InvalidRegionDesc","InvalidRegionDescSnafu","InvalidRegionState","InvalidRegionStateSnafu","InvalidScanIndex","InvalidScanIndexSnafu","JoinError","JoinSnafu","ListObjects","ListObjectsSnafu","ManifestCheckpoint","ManifestCheckpointSnafu","ManifestProtocolForbidRead","ManifestProtocolForbidReadSnafu","ManifestProtocolForbidWrite","ManifestProtocolForbidWriteSnafu","MarkWalObsolete","MarkWalObsoleteSnafu","MoreColumnThanExpected","MoreColumnThanExpectedSnafu","NewRecordBatch","NewRecordBatchSnafu","NoDefaultToRead","NoDefaultToReadSnafu","NotInSchemaToCompat","NotInSchemaToCompatSnafu","ParseSchema","ParseSchemaSnafu","PushBatch","PushBatchSnafu","RateLimited","RateLimitedSnafu","ReadObject","ReadObjectSnafu","ReadParquet","ReadParquetSnafu","ReadWal","ReadWalSnafu","Readline","ReadlineSnafu","RequestTooLarge","RequestTooLargeSnafu","Result","SequenceNotMonotonic","SequenceNotMonotonicSnafu","SortArrays","SortArraysSnafu","StartManifestGcTask","StartManifestGcTaskSnafu","StartPickTask","StartPickTaskSnafu","StopManifestGcTask","StopManifestGcTaskSnafu","StopPickTask","StopPickTaskSnafu","StopScheduler","StopSchedulerSnafu","TtlCalculation","TtlCalculationSnafu","TypeMismatch","TypeMismatchSnafu","UnequalLengths","UnequalLengthsSnafu","UnknownColumn","UnknownColumnSnafu","Utf8","Utf8Snafu","WaitFlush","WaitFlushSnafu","WalDataCorrupted","WalDataCorruptedSnafu","WriteBuffer","WriteBufferSnafu","WriteObject","WriteObjectSnafu","WriteParquet","WriteParquetSnafu","WriteToOldVersion","WriteToOldVersionSnafu","WriteWal","WriteWalSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","column","column","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compress_type","compress_type","data_version","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","end","expect","expect","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","file","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","given","given","given","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_object_to_delete_not_found","message","message","min_version","min_version","msg","msg","msg","msg","msg","name","name","name","name","name","name","name","next","num_rows","path","path","path","path","path","path","prev","provide","reason","region","region","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","schema_version","sequence","source","start","state","status_code","supported_version","supported_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column","column","column","column","compress_type","compress_type","data_version","end","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","error","expect","expect","file","file","given","given","given","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","message","message","min_version","min_version","msg","msg","msg","msg","msg","name","name","name","name","name","name","name","num_rows","path","path","path","path","path","path","prev","reason","region","region","region_id","region_id","region_id","region_id","region_id","region_id","region_id","region_id","schema_version","sequence","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","start","state","supported_version","supported_version","version","FilePurgeHandler","FilePurgeRequest","FilePurgerRef","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","complete","deref","deref","deref_mut","deref_mut","drop","drop","file_id","from","from","from_subset","from_subset","handle_request","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","key","region_id","sst_layer","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Engine","FlushHandle","FlushJob","FlushPicker","FlushRegionRequest","FlushRequest","FlushScheduler","FlushSchedulerRef","FlushStrategy","FlushStrategyRef","FlushType","PickerConfig","Region","RegionStatus","SizeBasedStrategy","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_mutable","clone","clone","clone_into","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","engine_config","eq","equivalent","equivalent","equivalent","equivalent","equivalent","flush_sequence","fmt","fmt","fmt","free_mem","free_mem","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","get_mutable_limitation","global_write_buffer_size","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_global_limit_enabled","is_in_subset","is_in_subset","is_in_subset","is_in_subset","manifest","max_memtable_id","memory_active","memory_used","memtables","mutable_limitation","new","picker","region_id","reserve_mem","reserve_mem","run","schedule_free_mem","schedule_free_mem","scheduler","shared","should_flush","should_flush","should_flush_engine","sst_layer","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wal","write_buffer_size","write_manifest_and_apply","write_memtables_to_layer","writer","FlushItem","FlushPicker","PickerConfig","auto_flush_interval","auto_flush_interval_millis","auto_flush_interval_millis","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","flush_regions_by_interval","fmt","from","from","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","item_id","last_flush_time","mutable_memtable_usage","new","pick_by_interval","pick_by_write_buffer_full","request_flush","schedule_interval","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AutoFlushFunction","Engine","Engine","FlushHandle","FlushHandler","FlushKey","FlushRegionRequest","FlushRequest","FlushScheduler","FlushSchedulerRef","Region","Region","auto_flush_task","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone_into","compaction_picker","compaction_scheduler","compaction_time_window","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","complete","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","engine_config","eq","equivalent","equivalent","equivalent","equivalent","equivalent","execute_flush_region","flush_sequence","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_hash","handle_request","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","manifest","max_memtable_id","memtables","name","new","picker","picker","receiver","region_id","region_id","regions","regions","schedule_engine_flush","schedule_region_flush","scheduler","shared","sst_layer","stop","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait","wal","writer","req","sender","ManifestImpl","MetaActionIteratorImpl","_phantom","action","checkpoint","checkpoint_actions_margin","checkpointer","gc_task","helper","impl_","inner","last_checkpoint_version","last_protocol","log_iter","manifest_compress_type","reader_version","region","storage","Change","Edit","Protocol","RawColumnFamiliesMetadata","RawColumnsMetadata","RawRegionMetadata","RegionChange","RegionCheckpoint","RegionEdit","RegionManifestData","RegionManifestDataBuilder","RegionMetaAction","RegionMetaActionList","RegionRemove","RegionTruncate","RegionVersion","Remove","Truncate","actions","apply_change","apply_edit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","checkpoint","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_families","column_families","columns","columns","committed_sequence","committed_sequence","committed_sequence","committed_sequence","compacted_actions","compaction_time_window","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","decode","decode","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","files","files_to_add","files_to_remove","flushed_sequence","flushed_sequence","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","last_version","last_version","manifest_version","metadata","metadata","metadata","name","new","prev_version","protocol","region_id","region_id","region_version","row_key_end","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_prev_version","set_protocol","set_protocol","timestamp_key_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_column_end","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_action","with_checkpoint","Checkpoint","Checkpointer","MetaAction","as_any","do_checkpoint","NEWLINE","decode_checkpoint","encode_actions","encode_checkpoint","CHECKPOINT_ACTIONS_MARGIN","GC_DURATION_SECS","ManifestGcTask","ManifestImpl","ManifestImplInner","MetaActionIteratorImpl","_phantom","_phantom","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","checkpoint_actions_margin","checkpointer","checkpointer","clone","clone_into","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","create","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","do_checkpoint","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","gc_task","inc_version","init","init","init","init","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","last_checkpoint","last_checkpoint","last_checkpoint_version","last_protocol","last_protocol","last_version","last_version","log_iter","manifest_store","manifest_store","may_do_checkpoint","name","new","new","next_action","protocol","reader_version","save","save_checkpoint","scan","scan","set_flushed_manifest_version","set_last_checkpoint_version","start","stop","store","supported_reader_version","supported_writer_version","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update_state","update_state","version","vzip","vzip","vzip","vzip","with_checkpointer","RegionManifest","RegionManifestCheckpointer","as_any","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","do_checkpoint","drop","flushed_manifest_version","fmt","from","from_subset","init","into","into_request","is_in_subset","set_flushed_manifest_version","set_flushed_manifest_version","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_checkpointer","CHECKPOINT_RE","CheckpointMetadata","DEFAULT_MANIFEST_COMPRESSION_TYPE","DELTA_RE","FALL_BACK_COMPRESS_TYPE","LAST_CHECKPOINT_FILE","ManifestObjectStore","ObjectStoreLogIterator","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checkpoint_file","checkpoint_file_path","checksum","clone","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compress_type","decode","delete","delete_all","delete_checkpoint","delete_until","delta_file","delta_file_path","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","encode","extend_metadata","file_compress_type","file_version","fmt","fmt","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","gen_path","get_paths","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_checkpoint_file","is_delta_file","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","last_checkpoint_path","load_checkpoint","load_last_checkpoint","manifest_compress_type","new","next_log","object_store","object_store","path","path","save","save_checkpoint","scan","serialize","size","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","AllocTracker","BatchIterator","BoxedBatchIterator","DefaultMemtableBuilder","Inserter","IterContext","Key","KeyValues","Memtable","MemtableBuilder","MemtableBuilderRef","MemtableId","MemtableRef","MemtableStats","MemtableVersion","RowOrdering","Unordered","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btree","build","build","bytes_allocated","bytes_allocated","bytes_allocated","clone","clone_into","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","done_allocating","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","estimated_bytes","estimated_memory_size","flush_strategy","flush_strategy","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id","immutables","index_in_batch","init","init","init","init","init","init","inserter","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_done_allocating","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","keys","len","mark_immutable","max_timestamp","memtable_id","min_timestamp","mutable","new","num_rows","on_allocate","op_type","ordering","projected_schema","reset","schema","schema","sequence","sequence","start_index_in_batch","stats","time_range","timestamp","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","values","version","visible_sequence","vzip","vzip","vzip","vzip","vzip","vzip","with_flush_strategy","write","BTreeIterator","BTreeMemtable","InnerKey","IterRow","MapIterWrapper","RowValue","RowsProvider","RwLockMap","adapter","alloc_tracker","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","collect_iter","column_num","compare","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","ctx","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fetch_row","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id","id","index","index_in_batch","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_time_range","is_row_key_equal","is_visible","iter","iter","kvs","last_key","len","map","map","mark_immutable","max_timestamp","min_timestamp","multiunzip","multiunzip","multiunzip","multiunzip","new","new","new","new","next","next","next","next_batch","next_visible_entry","num_rows","op_type","ordering","partial_cmp","prev_key","projected_schema","reset_for_seek","row_by_index","row_key","row_num","rows_to_vectors","schema","schema","schema","schema","sequence","size_hint","stats","time_range","timestamp","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_stats","values","visible_sequence","vzip","vzip","vzip","vzip","vzip","vzip","write","Inserter","SliceIndex","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","end","eq","fmt","from","from","from_subset","from_subset","index_in_batch","init","init","insert_memtable","into","into","into_request","into_request","is_in_subset","is_in_subset","new","range_index","sequence","start","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","validate_input_and_memtable_schemas","vzip","vzip","write_one_mutation","MemtableVersion","RangeKey","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","compare","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","freeze_mutable","from","from","from_ref","from_subset","from_subset","immutable_memtables","immutables","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","memtables_to_flush","mutable","mutable_bytes_allocated","mutable_memtable","new","num_memtables","partial_cmp","remove_immutables","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","total_bytes_allocated","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AddExistColumn","AddExistColumnSnafu","AddNonNullColumn","AddNonNullColumnSnafu","BuildColumnDescriptor","BuildColumnDescriptorSnafu","CfIdExists","CfIdExistsSnafu","CfNameExists","CfNameExistsSnafu","ColIdExists","ColIdExistsSnafu","ColNameExists","ColNameExistsSnafu","ColumnFamiliesMetadata","ColumnFamiliesMetadataBuilder","ColumnFamilyMetadata","ColumnMetadata","ColumnsMetadata","ColumnsMetadataBuilder","ColumnsMetadataRef","ConvertArrowSchema","ConvertArrowSchemaSnafu","ConvertChunk","ConvertChunkSnafu","ConvertSchema","ConvertSchemaSnafu","DropAbsentColumn","DropAbsentColumnSnafu","DropInternalColumn","DropInternalColumnSnafu","DropKeyColumn","DropKeyColumnSnafu","Error","InvalidAlterVersion","InvalidAlterVersionSnafu","InvalidIndex","InvalidIndexSnafu","InvalidProjection","InvalidProjectionSnafu","InvalidSchema","InvalidSchemaSnafu","METADATA_CF_ID_KEY","METADATA_COLUMN_ID_KEY","MetaNotFound","MetaNotFoundSnafu","MissingTimestamp","MissingTimestampSnafu","ParseMetaInt","ParseMetaIntSnafu","RegionMetaImpl","RegionMetadata","RegionMetadataBuilder","RegionMetadataRef","ReservedColumn","ReservedColumnSnafu","Result","ToColumnSchema","ToColumnSchemaSnafu","VersionNumber","add_column_family","add_column_family","alter","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","build","cause","cf_by_id","cf_id","cf_id","cf_names","cfs_meta_builder","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_families","column_ids","column_index_end","column_index_start","column_metadata","columns","columns","columns","columns","columns_meta_builder","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desc","description","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expect","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_column_schema","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","given","id","id","id","id","id","id","id","id_to_cfs","id_to_cfs","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","internal_column_descs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_internal_field_column","iter_field_columns","iter_row_key_columns","iter_user_columns","key","key_value","metadata","msg","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name_to_col_index","name_to_col_index","new","new","next","num_field_columns","num_row_key_columns","provide","push_field_column","push_new_column","push_row_key_column","row_key","row_key","row_key_end","row_key_end","row_key_end","schema","schema","schema","serialize","serialize","source","status_code","timestamp_key_index","timestamp_key_index","timestamp_key_index","to_column_schema","to_descriptor","to_metadata","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_row_key_descriptor","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse_int","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_column_end","user_column_end","user_schema","validate_add_column","validate_alter","validate_drop_column","version","version","version","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","error","expect","given","id","id","key","key_value","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","name","name","name","name","name","name","name","name","name","source","source","source","source","source","COMPACT_ELAPSED","CREATE_REGION_UPDATE_MANIFEST","FLUSH_BYTES_TOTAL","FLUSH_ELAPSED","FLUSH_ERRORS_TOTAL","FLUSH_REASON","FLUSH_REQUESTS_TOTAL","LOG_STORE_WRITE_ELAPSED","MEMTABLE_WRITE_ELAPSED","MERGE_ELAPSED","PREPROCESS_ELAPSED","REGION_COUNT","WINDOW_SCAN_ELAPSED","WINDOW_SCAN_ROWS_PER_WINDOW","WRITE_BUFFER_BYTES","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wal","Delete","MutationType","Put","WalHeader","as_str_name","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","default","deref","deref","deref_mut","deref_mut","drop","drop","encoded_len","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_i32","from_ref","from_ref","from_str_name","from_subset","from_subset","gen_mutation_types","get_hash","hash","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","is_valid","last_manifest_version","mutation_types","mutation_types","partial_cmp","push_mutation_types","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_last_manifest_version","Batch","BatchBuilder","BatchOp","BatchReader","BoxedBatchReader","ChainReader","DedupReader","MergeReader","MergeReaderBuilder","WindowedReader","assert_columns","batch_builder","batch_size","batch_size","borrow","borrow","borrow_mut","borrow_mut","build","builders","chain","clone","clone_into","cold","column","columns","columns","compare_row","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","dedup","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extend_slice_of","filter","find_unique","fmt","from","from","from_ref","from_subset","from_subset","hot","init","init","initialized","into","into","into_request","into_request","is_empty","is_empty","is_in_subset","is_in_subset","merge","new","next_batch","num_columns","num_rows","num_rows","order_options","prev_batch","push_row_of","reader","readers","readers","schema","schema","schema","schema","schema","selected","slice","sources","sources","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unselect_deleted","vzip","vzip","windowed","with_capacity","ChainReader","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","new","next_batch","readers","schema","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","DedupReader","borrow","borrow_mut","compat","compat_mut","compat_ref","dedup_batch","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","new","next_batch","prev_batch","reader","schema","selected","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","BatchCursor","Iter","MergeReader","MergeReaderBuilder","Node","Reader","RowCursor","Source","batch","batch","batch_builder","batch_size","batch_size","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cmp","cold","compare","compare","compare_first_row","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","cursor","cursor_mut","cursor_ref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fetch_batch_from_hottest","fetch_next_batch","fetch_one_row_from_hottest","first_row","first_row","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","hot","init","init","init","init","init","init","initialized","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_behind","is_empty","is_eof","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_valid","last_row","last_row","maybe_fetch_next_batch","new","new","new","next_batch","next_batch","next_non_empty_batch","partial_cmp","pos","pos","push_batch_iter","push_batch_reader","push_next_row_to","push_next_row_to","push_rows_to","push_rows_to","refill_hot","reheap","schema","schema","schema","source","sources","sources","take_batch_slice","take_batch_slice","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_init","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","WindowedReader","borrow","borrow_mut","build_sorted_columns","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","new","next_batch","order_options","readers","schema","sort_by_rows","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","AlterContext","RecoveredMetadata","RecoveredMetadataMap","RegionImpl","RegionInner","RegionWriter","RegionWriterRef","SharedData","SharedDataRef","StoreConfig","WriterCompactRequest","WriterContext","alter","alter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","close","compact","compact","compact","compact_ctx","compaction_picker","compaction_picker","compaction_picker","compaction_scheduler","compaction_scheduler","compaction_scheduler","compaction_scheduler","compaction_strategy","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_write_batch","create","create_snapshot","create_version_with_checkpoint","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","disk_usage_bytes","drop","drop","drop","drop","drop_region","drop_region","engine_config","file_purger","flush","flush","flush_scheduler","flush_scheduler","flush_scheduler","flush_strategy","flush_strategy","flush_strategy","fmt","fmt","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","id","id","id","id","in_memory_metadata","in_memory_metadata","init","init","init","init","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","item_id","last_flush_millis","last_flush_millis","last_flush_millis","last_flush_time","log_store","manifest","manifest","manifest","manifest","manifest","memtable_builder","mutable_memtable_usage","name","name","name","new","open","recover_from_manifest","region_writer","replay_edit","request_flush","shared","shared","shared","shared_data","snapshot","sst_layer","sst_layer","sst_layer","sst_layer","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate","truncate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","update_flush_millis","version_control","version_control","version_control","version_mutex","vzip","vzip","vzip","vzip","wal","wal","wal","wal","write","write","write_buffer_size","write_request","writer","writer","writer","AlterContext","DropContext","RegionWriter","RegionWriterRef","TruncateContext","WriterCompactRequest","WriterContext","WriterInner","alloc_memtable","alter","apply_metadata","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","close","closed","compact","compact_ctx","compaction_picker","compaction_picker","compaction_scheduler","compaction_scheduler","compaction_scheduler","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","engine_config","flush","flush_handle","flush_scheduler","flush_scheduler","flush_strategy","fmt","fmt","from","from","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_closed","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","manifest","manifest","manifest","manifest","manifest","manual_compact","manual_flush","mark_closed","memtable_builder","new","new","on_drop","persist_manifest_version","preprocess_write","region_writer","replay","replay","schedule_compaction","shared","shared","shared","shared","shared_data","should_flush","sst_layer","sst_layer","sst_layer","sst_layer","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","trigger_flush","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_control","version_control","version_control","version_control","version_mutex","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_flush","wal","wal","wal","wal","wal","write","write","write_buffer_size","write_edit_and_apply","writer","Handler","HandlerLoop","Key","LocalScheduler","Request","Request","Request","STATE_AWAIT_TERMINATION","STATE_RUNNING","STATE_STOP","Scheduler","SchedulerConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cancel_token","cancel_token","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","complete","dedup_deque","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","handle_request","handle_request","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","join_handle","key","limiter","max_inflight_tasks","new","poll_and_execute","poll_task","put_back_req","rate_limit","remaining_requests","req_queue","request_handler","request_queue","run","running","running","schedule","schedule","state","state","stop","stop","task_notifier","task_notifier","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DedupDeque","borrow","borrow_mut","clear","compat","compat_mut","compat_ref","default","deque","deref","deref_mut","drop","existing","fmt","from","from_subset","init","into","into_request","is_empty","is_in_subset","len","pop_front","push_back","push_front","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","BoxedRateLimitToken","BoxedRateLimiter","CascadeRateLimiter","CompositeToken","MaxInflightLimiterToken","MaxInflightTaskLimiter","RateLimitToken","RateLimiter","Request","_phantom_data","acquire_token","acquire_token","acquire_token","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","counter","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from_subset","from_subset","from_subset","from_subset","inflight_tasks","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","limits","max_inflight_tasks","new","new","new","released","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","tokens","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_release","try_release","try_release","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ProjectedSchema","ProjectedSchemaRef","RegionSchema","RegionSchemaRef","StoreSchema","StoreSchemaRef","columns","columns","compat","projected","projected_user_schema","projection","region","row_key_end","schema","schema_to_read","store","store_schema","user_column_end","user_schema","CompatWrite","ReadAdapter","arrow_record_batch_to_batch","batch_from_parts","borrow","borrow_mut","compat","compat_mut","compat_ref","compat_write","deref","deref_mut","dest_schema","drop","fields_to_read","fmt","from","from_different_version","from_same_version","from_subset","indices_in_result","init","into","into_request","is_in_subset","is_source_column_compatible","is_source_needed","need_compat","new","source_columns_to_batch","source_key_needed","source_schema","source_value_needed","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ProjectedSchema","ProjectedSchemaRef","Projection","batch_to_chunk","borrow","borrow","borrow_mut","borrow_mut","build_projected_user_schema","build_schema_to_read","columns_to_read","compare_row","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","deref","deref","deref_mut","deref_mut","drop","drop","filter","find_unique","fmt","fmt","from","from","from_subset","from_subset","id_to_read_idx","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","is_needed","new","new","no_projection","num_user_columns","projected_columns","projected_idx_to_read_idx","projected_user_schema","projected_user_schema","projection","schema_to_read","schema_to_read","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","unselect_deleted","validate_projection","vzip","vzip","RegionSchema","RegionSchemaRef","borrow","borrow_mut","build_user_schema","column_metadata","columns","compat","compat_mut","compat_ref","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","field_columns","fmt","from","from_subset","init","into","into_request","is_in_subset","new","num_field_columns","num_row_key_columns","op_type_index","row_key_columns","row_key_end","row_key_indices","sequence_index","store_schema","store_schema","timestamp_column_name","timestamp_index","to_subset","to_subset_unchecked","try_from","try_into","type_id","user_schema","user_schema","value_indices","version","vzip","ROW_KEY_END_KEY","StoreSchema","StoreSchemaRef","USER_COLUMN_END_KEY","arrow_schema","batch_to_arrow_record_batch","borrow","borrow_mut","column_index","column_name","columns","columns","compat","compat_mut","compat_ref","contains_column","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","field_column_index_by_offset","field_columns","fmt","from","from_columns_metadata","from_subset","init","into","into_request","is_in_subset","is_key_column","is_user_column","new","num_columns","op_type_index","parse_index_from_metadata","row_key_end","row_key_end","row_key_indices","schema","schema","sequence_index","timestamp_index","to_subset","to_subset_unchecked","try_from","try_from","try_from","try_into","type_id","user_column_end","user_column_end","value_indices","version","vzip","SnapshotImpl","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","get","init","into","into_request","is_in_subset","new","scan","schema","sequence_to_read","sst_layer","to_subset","to_subset_unchecked","try_from","try_into","type_id","version","visible_sequence","vzip","AccessLayer","AccessLayerRef","BufferedWriter","FileHandle","FileHandleInner","FileId","FileMeta","FsAccessLayer","Iter","LazyParquetBatchReader","Level","LevelMeta","LevelMetaVec","LevelMetas","MAX_LEVEL","ParseIdError","ParseIdSnafu","ReadOptions","Reader","Source","SstInfo","Stream","WriteOptions","add_file","arrow_schema","as_error_source","as_parquet","backtrace","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compacting","compacting","compaction_time_window","compaction_time_window","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","default","default","default","default","delete_sst","delete_sst","deleted","deleted","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize_from_string","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_id","file_id","file_name","file_num","file_path","file_purger","file_purger","file_purger","file_size","file_size","file_size","files","files","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_str","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_expired_files","get_hash","get_hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","level","level","level","level","level","level_num","levels","levels","mark_all_files_deleted","mark_compacting","mark_deleted","merge","meta","meta","new","new","new","new","new","new","new_level_meta_vec","next_batch","next_batch","num_rows","object_store","parquet","parse_str","predicate","projected_schema","provide","pruning","random","read_sst","read_sst","region_id","remove_file","schema","serialize","serialize","source","source","sst_dir","sst_file_path","sst_file_path","sst_layer","sst_layer","sst_write_buffer_size","stream","stream_writer","time_range","time_range","time_range","time_range","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_sst","write_sst","ChunkStream","ParquetReader","ParquetWriter","SendableChunkStream","_file_handle","adapter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chunk_stream","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","decode_timestamp_range","decode_timestamp_range_inner","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","file_handle","file_path","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","max_row_group_size","new","new","new","next_batch","object_store","object_store","predicate","projected_schema","source","stream","time_range","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_rows","write_sst","DatafusionArrowPredicate","FastTimestampRowFilter","PlainTimestampRowFilter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_row_filter","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","evaluate","evaluate","evaluate","fmt","from","from","from","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","lower_bound","new","new","physical_expr","predicate_to_row_filter","projection","projection","projection","projection","projection","projection_mask","time_range","time_unit_lossy","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upper_bound","vzip","vzip","vzip","BufferedWriter","InnerBufferedWriter","arrow_schema","borrow","borrow_mut","close","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","inner","into","into_request","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","try_new","type_id","vzip","write","CowCell","TxnGuard","_guard","borrow","borrow","borrow_mut","borrow_mut","commit","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","fmt","from","from","from_subset","from_subset","get","init","init","inner","inner","into","into","into_request","into_request","is_in_subset","is_in_subset","load","load","lock","mutex","new","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","INIT_COMMITTED_SEQUENCE","LevelMetasRef","MemtableVersionRef","Version","VersionControl","VersionControlRef","VersionEdit","VersionRef","apply_checkpoint","apply_edit","apply_edit","apply_metadata","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","committed_sequence","committed_sequence","compaction_time_window","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","current","current_manifest_version","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","files_to_add","files_to_remove","flushed_sequence","flushed_sequence","flushed_sequence","fmt","fmt","fmt","freeze_mutable","freeze_mutable_and_apply_metadata","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","manifest_version","manifest_version","manifest_version","max_memtable_id","memtables","memtables","metadata","metadata","metadata","mutable_memtable","reset","reset_version","schema","set_committed_sequence","ssts","ssts","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_schema","version","vzip","vzip","vzip","with_manifest_version","with_version","PayloadStream","Wal","WalHeaderDecoder","WalHeaderEncoder","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","decode","decode_entry","delete_namespace","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","namespace","new","obsolete","read_from_wal","region_id","region_id","store","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_to_wal","PlainWindowInference","TIME_WINDOW_SIZE","WindowInfer","align_time_spans_to_windows","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","duration_to_window_size","from","from_subset","infer_window","infer_window","init","into","into_request","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","MAX_BATCH_SIZE","Mutation","NameToVector","Payload","WriteBatch","add_num_rows_to_mutate","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","codec","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_write","compat_write","delete","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","first_vector_len","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_empty","is_empty","is_in_subset","is_in_subset","is_in_subset","is_in_subset","mutations","new","new","new","new_column_with_default_value","num_rows","num_rows_to_mutate","op_type","payload","payload","process_delete_data","process_put_data","put","record_batch","row_key_column_schemas","row_key_end","schema","schema","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate_column","vzip","vzip","vzip","vzip","PayloadDecoder","PayloadEncoder","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","decode","default","deref","deref","deref_mut","deref_mut","drop","drop","encode","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","mutation_types","new","new","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","column_not_in_schema"],"q":[[0,"storage"],[32,"storage::chunk"],[113,"storage::codec"],[121,"storage::compaction"],[197,"storage::compaction::noop"],[295,"storage::compaction::picker"],[354,"storage::compaction::scheduler"],[416,"storage::compaction::task"],[486,"storage::compaction::twcs"],[517,"storage::compaction::writer"],[519,"storage::config"],[562,"storage::engine"],[723,"storage::error"],[2940,"storage::error::Error"],[3114,"storage::file_purger"],[3163,"storage::flush"],[3310,"storage::flush::picker"],[3371,"storage::flush::scheduler"],[3570,"storage::flush::scheduler::FlushRequest"],[3572,"storage::manifest"],[3590,"storage::manifest::action"],[4082,"storage::manifest::checkpoint"],[4087,"storage::manifest::helper"],[4091,"storage::manifest::impl_"],[4228,"storage::manifest::region"],[4257,"storage::manifest::storage"],[4412,"storage::memtable"],[4614,"storage::memtable::btree"],[4825,"storage::memtable::inserter"],[4878,"storage::memtable::version"],[4946,"storage::metadata"],[5987,"storage::metadata::Error"],[6026,"storage::metrics"],[6349,"storage::proto"],[6350,"storage::proto::wal"],[6431,"storage::read"],[6537,"storage::read::chain"],[6562,"storage::read::dedup"],[6590,"storage::read::merge"],[6784,"storage::read::windowed"],[6812,"storage::region"],[7001,"storage::region::writer"],[7218,"storage::scheduler"],[7324,"storage::scheduler::dedup_deque"],[7355,"storage::scheduler::rate_limit"],[7460,"storage::schema"],[7480,"storage::schema::compat"],[7519,"storage::schema::projected"],[7587,"storage::schema::region"],[7636,"storage::schema::store"],[7696,"storage::snapshot"],[7725,"storage::sst"],[8183,"storage::sst::parquet"],[8268,"storage::sst::pruning"],[8350,"storage::sst::stream_writer"],[8377,"storage::sync"],[8433,"storage::version"],[8544,"storage::wal"],[8626,"storage::window_infer"],[8653,"storage::write_batch"],[8771,"storage::write_batch::codec"],[8819,"storage::write_batch::compat"]],"d":["StorageEngine implementation.","Parquet sst writer.","","","","","storage engine config","","","","","","","manifest storage","","","","storage metrics","","","Common structs and utilities for read.","","","","","","","Synchronization utilities","Version control of storage.","","","","Builder to create a new ChunkReaderImpl from scan request.","Chunk reader implementation.","","","","","","","","","","Build time range predicate from schema and filters.","","","","","","","","Returns the time range of memtables to read.","","","","","","","Check if SST file’s time range matches predicate.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Try to infer time window from output ordering. If the …","Infer time window for chain reader according to the time …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Picks all SSTs in all levels","","Picks given SSTs to read.","","","","","","Reserve space for iterating <code>num</code> memtables.","","","","","","","","","","","","","","Partition files and memtables according to their time …","","","","","","","","","","The type that is decoded.","The type that is decoded.","Decodes a message from the bytes buffer.","Encodes a message into the bytes buffer.","","","Region compaction request.","","","","<code>LeveledTimeWindowPicker</code> only handles level 0 to level 1 …","Picker picks input SST files and builds the compaction …","","","A set of predefined time buckets.","","","<code>TwcsPicker</code> picks files of which the max timestamp are in …","","","","","","","","","","","","","","","","","Fits a given time span into time bucket by find the …","Returns the argument unchanged.","","Infers the suitable time bucket duration. Now it simply …","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Whether to immediately reschedule another compaction when …","","","","","Compaction result sender.","","","","","","","","","","","","","","Time-window compaction strategy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>LeveledTimeWindowPicker</code> only handles level 0 to level 1 …","Picker picks input SST files and builds the compaction …","","","","","","","","","Calculates buckets for files. If file does not contain a …","","","","","","","","","","","","","","","","Calculates timestamp span between start and end timestamp.","Finds files that can be compacted in given level. …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Region compaction request.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Whether to immediately reschedule another compaction when …","","Compaction result sender.","","","","","","","","","","","","","","","","","","","Many-to-many compaction can be decomposed to a many-to-one …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Compaction input files.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Mark files are under compaction.","Compacts inputs SSTs, returns …","","Compaction output file level.","","","","","","","","","If the compaction output is strictly windowed.","The left bound of time window.","Time window size in seconds.","","","","","","","","","","","","","","Writes updated SST info into manifest.","","<code>TwcsPicker</code> picks files of which the max timestamp are in …","","Assigns files to windows with predefined window size (in …","","","Builds compaction output from files. For active writing …","","","","","","","Finds the latest active writing window among all files. …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Builds an SST reader that only reads rows within given …","Build time range filter expr from lower (inclusive) and …","Default interval to trigger auto flush in millis.","Default max flush tasks.","Default interval to schedule the picker to flush …","Default region write buffer size.","","Interval to auto flush a region if it has not flushed yet.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Global retention period for all regions.","Limit for global write buffer size. Disabled by default.","","Calls <code>U::from(self)</code>.","","","","","","Max inflight flush tasks.","","Interval to schedule the auto flush picker.","Default write buffer size for a region.","","","","","","","","","The region is during creation.","StorageEngine implementation.","","The region is during opening.","The region is ready for access.","Region slot map.","A slot for region in the engine.","Used to update slot or clean the slot on failure.","","","","","","","","","","","Clear the region map.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the <code>Some(slot)</code> if there is existing slot with …","Returns the ready region or <code>None</code>.","","Gets the region by the specific name.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Collects regions.","","","","","","Returns a new region map.","","","","","Generate region manifest path, parent_dir is resolved in …","Generate region sst path, parent_dir is resolved in …","","","","Remove region by name.","","","","","","","","","","","","","","","","","","","","","Try to get a ready region.","","","","","","","","","","","Update the slot and skip cleaning on drop.","Update the slot by name.","","","","","","","SNAFU context selector for the <code>Error::AlterMetadata</code> variant","","SNAFU context selector for the <code>Error::BatchCorrupted</code> …","","SNAFU context selector for the <code>Error::BatchMissingColumn</code> …","","SNAFU context selector for the <code>Error::BuildBatch</code> variant","","SNAFU context selector for the <code>Error::BuildPredicate</code> …","","SNAFU context selector for the <code>Error::ClosedRegion</code> variant","","SNAFU context selector for the <code>Error::CompactTaskCancel</code> …","","SNAFU context selector for the <code>Error::CompatRead</code> variant","","SNAFU context selector for the <code>Error::CompressObject</code> …","","SNAFU context selector for the <code>Error::ConvertChunk</code> variant","","SNAFU context selector for the <code>Error::ConvertColumnsToRows</code> …","","SNAFU context selector for the <code>Error::ConvertStoreSchema</code> …","","SNAFU context selector for the <code>Error::CreateDefault</code> variant","","SNAFU context selector for the <code>Error::CreateDefaultToRead</code> …","","SNAFU context selector for the <code>Error::CreateRecordBatch</code> …","","SNAFU context selector for the <code>Error::DecodeArrow</code> variant","","SNAFU context selector for the <code>Error::DecodeJson</code> variant","","SNAFU context selector for the <code>Error::DecodeMetaActionList</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::DecodeWalHeader</code> …","","SNAFU context selector for the <code>Error::DecompressObject</code> …","","SNAFU context selector for the <code>Error::DeleteObject</code> variant","","SNAFU context selector for the <code>Error::DeleteSst</code> variant","","SNAFU context selector for the <code>Error::DeleteWalNamespace</code> …","","SNAFU context selector for the <code>Error::DuplicateFlush</code> …","","SNAFU context selector for the <code>Error::EncodeArrow</code> variant","","SNAFU context selector for the <code>Error::EncodeJson</code> variant","","SNAFU context selector for the <code>Error::EncodeWalHeader</code> …","","","SNAFU context selector for the <code>Error::FilterColumn</code> variant","","SNAFU context selector for the <code>Error::HasNull</code> variant","","SNAFU context selector for the <code>Error::IllegalSchedulerState</code>…","","SNAFU context selector for the <code>Error::InvalidAlterRequest</code> …","","SNAFU context selector for the <code>Error::InvalidProjection</code> …","","SNAFU context selector for the <code>Error::InvalidRawRegion</code> …","","SNAFU context selector for the <code>Error::InvalidRegionDesc</code> …","","SNAFU context selector for the <code>Error::InvalidRegionState</code> …","","SNAFU context selector for the <code>Error::InvalidScanIndex</code> …","","SNAFU context selector for the <code>Error::JoinError</code> variant","","SNAFU context selector for the <code>Error::ListObjects</code> variant","","SNAFU context selector for the <code>Error::ManifestCheckpoint</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::MarkWalObsolete</code> …","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::NewRecordBatch</code> …","","SNAFU context selector for the <code>Error::NoDefaultToRead</code> …","","SNAFU context selector for the <code>Error::NotInSchemaToCompat</code> …","","SNAFU context selector for the <code>Error::ParseSchema</code> variant","","SNAFU context selector for the <code>Error::PushBatch</code> variant","","SNAFU context selector for the <code>Error::RateLimited</code> variant","","SNAFU context selector for the <code>Error::ReadObject</code> variant","","SNAFU context selector for the <code>Error::ReadParquet</code> variant","","SNAFU context selector for the <code>Error::ReadWal</code> variant","","SNAFU context selector for the <code>Error::Readline</code> variant","","SNAFU context selector for the <code>Error::RequestTooLarge</code> …","","","SNAFU context selector for the <code>Error::SequenceNotMonotonic</code> …","","SNAFU context selector for the <code>Error::SortArrays</code> variant","","SNAFU context selector for the <code>Error::StartManifestGcTask</code> …","","SNAFU context selector for the <code>Error::StartPickTask</code> variant","","SNAFU context selector for the <code>Error::StopManifestGcTask</code> …","","SNAFU context selector for the <code>Error::StopPickTask</code> variant","","SNAFU context selector for the <code>Error::StopScheduler</code> variant","","SNAFU context selector for the <code>Error::TtlCalculation</code> …","","SNAFU context selector for the <code>Error::TypeMismatch</code> variant","","SNAFU context selector for the <code>Error::UnequalLengths</code> …","","SNAFU context selector for the <code>Error::UnknownColumn</code> variant","","SNAFU context selector for the <code>Error::Utf8</code> variant","","SNAFU context selector for the <code>Error::WaitFlush</code> variant","","SNAFU context selector for the <code>Error::WalDataCorrupted</code> …","","SNAFU context selector for the <code>Error::WriteBuffer</code> variant","","SNAFU context selector for the <code>Error::WriteObject</code> variant","","SNAFU context selector for the <code>Error::WriteParquet</code> variant","","SNAFU context selector for the <code>Error::WriteToOldVersion</code> …","","SNAFU context selector for the <code>Error::WriteWal</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated erroronsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns true if the error is the object path to delete …chema version of data to writeeturns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Engine level flush. Find regions to flush globally.","","","","","","","","Strategy to control whether to flush a region before …","","Type of flush request to send.","","Flush current region.","Current flush-related status of a region.","Flush strategy based on memory usage.","","","","","","","","","Size of the mutable memtable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Storage engine config","","","","","","","Last sequence of data to be flushed.","","","","We have freed <code>mem</code> bytes.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Write buffer size for all memtables.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns true if the global memory limitation is enabled.","","","","","Region manifest service, used to persist metadata.","Max memtable id in these memtables, used to remove …","Memory that hasn’t been scheduled to free (e.g. used by …","Memory in used (e.g. used by mutable and immutable …","Memtables to be flushed.","Mutable memtable memory size limitation, only valid when …","Returns a new SizeBasedStrategy with specific …","","Id of the region this status belongs to.","Reserves <code>mem</code> bytes.","","Execute the flush job.","Tells the strategy we are freeing <code>mem</code> bytes.","","","Shared data of region to be flushed.","Returns whether to trigger a flush operation.","","Returns whether to trigger an engine level flush.","Sst access layer of the region.","","","","","","","","","","","","","","","","","","","","","","","","","","","Region write-ahead logging, used to write data/meta to the …","Write buffer size of the region.","","","Region writer, used to persist log entry that points to …","Item for picker to flush.","Flush task picker.","Config for FlushPicker.","Interval to auto flush a region if it has not flushed yet.","Returns the auto flush interval in millis or a default …","Interval to flush a region automatically.","","","","","","","","","","","","","","","","","","","","Auto flush regions based on last flush time.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Id of the item.","Last flush time in millis.","Mutable memtable usage.","Returns a new FlushPicker.","Picks regions and flushes them by interval.","Picks and flushes regions when the write buffer is full.","Requests the item to schedule a flush for specific <code>reason</code>.","Interval to schedule the picker.","","","","","","","","","","","","","","Task function to pick regions to flush.","Flush the engine.","","A handle to get the flush result.","","Key for FlushRequest.","Region flush request.","Flush request.","Flush scheduler.","","Flush a region.","","Auto flush task.","","","","","","","","","","","","","","","","","","","","Time window for compaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Storage engine config","","","","","","","","Last sequence of data to be flushed.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Region manifest service, used to persist metadata.","Max memtable id in these memtables, used to remove …","Memtables to be flushed.","","Returns a new FlushScheduler.","","","","","","","Regions of the engine.","Schedules a engine flush request.","Schedules a region flush request and return the handle to …","Flush task scheduler.","Shared data of region to be flushed.","Sst access layer of the region.","Stop the scheduler.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TTL of the region.","","","","","","","","","","","","","","","Waits until the flush job is finished.","Region write-ahead logging, used to write data/meta to the …","Region writer, used to persist log entry that points to …","Region flush request.","Flush result sender.","","","","","","","","","","","","","","","","","Region manifest impl","","","","","Minimal data that could be used to persist and recover …","Minimal data that could be used to persist and recover …","Minimal data that could be used to persist and recover …","","","","The region manifest data checkpoint","","","","","","The region version checkpoint","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The committed sequence of the region when this change …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encode self into json in the form of string lines, starts …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The last manifest version that this checkpoint …","","The metadata after changed.","","","","","","The snasphot protocol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to create a checkpoint, return the checkpoint if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Current using protocol","","","","","","","","","","","Current node supported protocols (reader_version, …","","","","","","","","","","","","","","","","","","","","","","","","Update inner state.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Due to backward compatibility, it is possible that the user…","","","","","","","","","","","","","","","","","Returns the checkpoint file path under the <strong>current</strong> …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the delta file path under the <strong>current</strong> compression …","","","","","","","","","","","","","","","","","","","","","Return’s the file compress algorithm by file extension.","Return’s the file manifest version from path","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Return all <code>R</code>s in the root directory that meet the <code>filter</code> …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the last checkpoint path, because the last …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The latest version this checkpoint contains.","","","","","","Memtable memory allocation tracker.","Iterator of memtable.","","Default memtable builder that builds <code>BTreeMemtable</code>.","Wraps logic of inserting key/values in WriteBatch to …","Context for iterating memtable.","The output rows are ordered by key.","Key-value pairs in columnar format.","In memory storage.","","","Unique id for memtables under same region.","","","A version of all memtables.","The ordering of the iterator output.","The output rows are unordered.","The suggested batch size of the iterator.","","","","","","","","","","","","","","","","Returns bytes allocated.","","Bytes allocated by the tracker.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Marks we have finished allocating memory so we can free it …","","","","","","","","","","","","","","The  estimated bytes allocated by this memtable from heap. …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns id of this memtable.","Immutable memtables.","Used to calculate the start index in batch for <code>KeyValues</code>.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Whether allocating is done.","","","","","","","","Iterates the memtable.","","","Mark the memtable is immutable.","The max timestamp that this memtable contains.","","The min timestamp that this memtable contains.","","Returns a new AllocTracker.","Returns the number of rows in the memtable.","Tracks <code>bytes</code> memory is allocated.","","Returns the ordering of the output rows from this iterator.","Schema the reader expect to read.","","Returns schema of the memtable.","Returns the schema of this iterator.","Sequence of the batch to be inserted.","","Start index of these key-value paris in batch. Each row in …","Returns stats of this memtable.","Timestamp range","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Max visible sequence (inclusive).","","","","","","","Returns a new DefaultMemtableBuilder with specific …","Write key/values to the memtable.","","A simple memtable implementation based on std’s <code>BTreeMap</code>.","","","<code>MapIterWrapper</code> removes same user key with invisible …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Projected schema that user expect to read.","Reset the <code>InnerKey</code> so that we can use it to seek next key …","","User defined primary keys","","","","","","Schema of this memtable.","Sequence number of row","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates memtable stats. This function is guarded by …","","","","","","","","","","Wraps logic of inserting key/values in WriteBatch to …","Holds <code>start</code> and <code>end</code> indexes to get a slice <code>[start, end)</code> …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Used to calculate the start index in batch for <code>KeyValues</code>.","","","Insert write batch payload into memtable.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Index in time ranges.","Sequence of the batch to be inserted.","","","","","","","","","","","","","","","","A version of all memtables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clone current memtable version and freeze its mutable …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Immutable memtables.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates a new <code>MemtableVersion</code> that removes immutable …","","","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::AddExistColumn</code> …","","SNAFU context selector for the <code>Error::AddNonNullColumn</code> …","","SNAFU context selector for the <code>Error::BuildColumnDescriptor</code>…","","SNAFU context selector for the <code>Error::CfIdExists</code> variant","","SNAFU context selector for the <code>Error::CfNameExists</code> variant","","SNAFU context selector for the <code>Error::ColIdExists</code> variant","","SNAFU context selector for the <code>Error::ColNameExists</code> variant","","","","","","","","","SNAFU context selector for the <code>Error::ConvertArrowSchema</code> …","","SNAFU context selector for the <code>Error::ConvertChunk</code> variant","","SNAFU context selector for the <code>Error::ConvertSchema</code> variant","","SNAFU context selector for the <code>Error::DropAbsentColumn</code> …","","SNAFU context selector for the <code>Error::DropInternalColumn</code> …","","SNAFU context selector for the <code>Error::DropKeyColumn</code> variant","Error for handling metadata.","","SNAFU context selector for the <code>Error::InvalidAlterVersion</code> …","","SNAFU context selector for the <code>Error::InvalidIndex</code> variant","","SNAFU context selector for the <code>Error::InvalidProjection</code> …","","SNAFU context selector for the <code>Error::InvalidSchema</code> variant","","","","SNAFU context selector for the <code>Error::MetaNotFound</code> variant","","SNAFU context selector for the <code>Error::MissingTimestamp</code> …","","SNAFU context selector for the <code>Error::ParseMetaInt</code> variant","Implementation of RegionMeta.","In memory metadata of region.","","","","SNAFU context selector for the <code>Error::ReservedColumn</code> …","","","SNAFU context selector for the <code>Error::ToColumnSchema</code> …","","","","Returns a new RegionMetadata after alteration, leave <code>self</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Column id set, used to validate column id uniqueness.","Exclusive end index of columns in the column family.","Inclusive start index of columns in the column family.","","","","All columnsonsume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert <code>ColumnSchema</code> in <code>StoreSchema</code> to <code>ColumnMetadata</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map column family id to column family metadata.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if this is an internal column for value …","Returns an iterator to all value columns (internal columns …","Returns an iterator to all row key columns.","","","","","","","","","","","","","","","","","","","","Column family name.","Maps column name to index of columns, used to fast lookup …","","","","","","","","","","","","","","Exclusive end index of row key columns.","","","","Latest schema of the region.","","","","","","Index of timestamp key column.","","Convert <code>self</code> to <code>ColumnSchema</code> for building a <code>StoreSchema</code>. …xclusive end index of user columns.","","","Checks whether the <code>req</code> is valid, returns <code>Err</code> if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Elapsed time of a compact job.","Elapsed time of updating manifest when creating regions.","Counter of flushed bytes.","","Counter of scheduled failed flush jobs.","Reason to flush.","Counter of scheduled flush requests.","Timer for logstore write","Elapsed time of inserting memtable.","Elapsed time for merging SST files.","Elapsed time of preprocessing write batch.","Gauge for open regions","Elapsed time for windowed scan","Rows per window during window scan","Global write buffer size in bytes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","String value of the enum field names used in the ProtoBuf …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>i32</code> to a <code>MutationType</code>, or <code>None</code> if <code>value</code> is not …","","","Creates an enum from field names used in the ProtoBuf …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>MutationType</code>.","","Returns an iterator which yields the valid enum values …","Type of each mutation in payload, now only arrow payload …","","Appends the provided enum value to <code>mutation_types</code>.","","","","","","","","","","","","","","","","","Storage internal representation of a batch of rows.","Reusable Batch builder.","Compute operations for Batch.","Async batch reader.","Pointer to BatchReader.","A reader that simply chain the outputs of input readers.","A reader that dedup rows from inner reader.","A reader that would sort and merge <code>Batch</code> from multiple …","","WindowedReader provides a windowed record batch reader …","","Buffered batch.","Suggested row number of each batch.","","","","","","Create a new Batch and reset this builder.","","","","","Holds <code>Node</code> whose key range of current batch <strong>isn’t</strong> …","","","Rows organized in columnar format.","Compare <code>i-th</code> in <code>left</code> to <code>j-th</code> row in <code>right</code> by key (row key …","","","","","","","","","","","","","","","","","","","","","Extend the builder by slice of batch.","Filters the <code>batch</code>, returns elements matching the <code>filter</code> …","Find unique rows in <code>batch</code> by row key.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Holds <code>Node</code> whose key range of current batch <strong>is</strong> overlapped …","","","Whether the reader has been initialized.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if no rows in this builder.","","","","Merge reader.","Create a new <code>Batch</code> from <code>columns</code>.","Fetch next Batch.","","Returns number of rows already in this builder.","","<code>order_options</code> defines how records within windows are …","Previous batch from the reader.","Push <code>i-th</code> row of batch into the builder.","The inner reader.","Each reader reads a slice of time window","Each reader reads a slice of time window","Schema to read","Projected schema to read.","Schema of data source.","","Schema to read","Reused bitmap buffer.","Slice the batch, returning a new batch.","Input data sources.","","","","","","","","","","","","","Unselect deleted rows according to the <code>OpType</code>.","","","","Create a new <code>BatchBuilder</code> from data types with given …","A reader that simply chain the outputs of input readers.","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Returns a new ChainReader with specific input <code>readers</code>.","","Each reader reads a slice of time window","Schema to read","","","","","","","A reader that dedup rows from inner reader.","","","","","","Take <code>batch</code> and then returns a new batch with no duplicated …","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Previous batch from the reader.","The inner reader.","Projected schema to read.","Reused bitmap buffer.","","","","","","","A <code>BatchCursor</code> wraps the <code>Batch</code> and allows reading the <code>Batch</code> …","","A reader that would sort and merge <code>Batch</code> from multiple …","","A <code>Node</code> represent an individual input data source to be …","","Reference to a row in BatchCursor.","Batch data source.","","Current buffered <code>Batch</code>.","Buffered batch.","","Suggested row number of each batch.","","","","","","","","","","","","","","","","Holds <code>Node</code> whose key range of current batch <strong>isn’t</strong> …","","","Compare first row of two nodes.","","","","","","","","","","","","","","","","","","","Current batch to be read.","Returns the mutable reference to the cursor.","Returns the reference to the cursor.","","","","","","","","","","","","","","","","","","","","","","","","","Fetch at most <code>fetch_row_num</code> from the hottest node and …","","Fetch one row from the hottest node.","Returns first row in cursor.","Returns first row of current batch.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Holds <code>Node</code> whose key range of current batch <strong>is</strong> overlapped …","","","","","","","Whether the reader has been initialized.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns true if the key range of current batch in <code>self</code> is …","","Returns true if no more batch could be fetched from this …","","","","","","","Returns true if there are remaining rows to read.","Returns last row in cursor.","Returns last row of current batch.","Fetch next batch and reset its cursor if <code>self</code> isn’t EOF …","","","Create a new <code>BatchCursor</code>.","","","Fetch next non empty batch.","","","Index of current row.","","","Push next row from <code>self</code> to the <code>builder</code>.","Push next row from <code>self</code> to the <code>builder</code> and advance the …","Push at most <code>length</code> rows from <code>self</code> to the <code>builder</code>.","Push at most <code>length</code> rows from <code>self</code> to the <code>builder</code> and …","Move nodes in <code>cold</code> heap, whose key range is overlapped …","Fetch next batch from this node and reset its cursor, then …","Schema of data source.","Schema of data source.","","Data source of this <code>Node</code>.","Input data sources.","","Take batch from this node.","Take slice of batch with at most <code>length</code> rows from the …","","","","","","","","","","","","","","","","","","","Initialize the reader if it has not yet been initialized.","","","","","","","","","","","","","","","","","","","","WindowedReader provides a windowed record batch reader …","","","Builds sorted columns from <code>order_options</code>. Returns a vector …","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Creates a new WindowedReader from given schema and a set …","","<code>order_options</code> defines how records within windows are …","Each reader reads a slice of time window","Schema to read","","","","","","","","","","","Region implementation.","","Region writer manages all write operations to the region.","","Shared data of region.","","Storage related config for region.","Structs needed by triggering a compaction.","","","","","","","","","","","","","","","","","Compact the region manually.","Compact the region manually.","","","","","","","","","","","","","","","","","","","","","","","Create a new region and also persist the region metadata …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Get ID of this region.","","","","","","","","","","","Inner writer guarded by write lock, the write lock is used …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns last flush timestamp in millis.","Returns last flush timestamp in millis.","Last flush time in millis.","","","","","","","","","","","","","Create a new region without persisting manifest.","Open an existing region and recover its data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update flush time to current time.","Returns the VersionControl of the region.","","","Version lock, protects read-write-update to region <code>Version</code>.","","","","","","","","","","Write to writer directly.","","","","","","","","Region writer manages all write operations to the region.","","","Structs needed by triggering a compaction.","","","Create a new mutable memtable.","Alter schema of the region.","","","","","","","","","","","","","","","","","<code>WriterInner</code> will reject any future writing, if the closed …","Compact manually.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flush task manually","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Inner writer guarded by write lock, the write lock is used …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allocate a sequence and persist the manifest version using …","Preprocess before write.","","Replay data to memtables.","","Schedule compaction task, returns whether the task is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version lock, protects read-write-update to region <code>Version</code>.","","","","","","","","Wait flush task if any","","","","","","Write to region in the write lock.","Write <code>WriteBatch</code> to region, now the schema of batch needs …","Size in bytes to freeze the mutable memtable.","Write and apply the region edit.","","","","Type of request key.","Request scheduler based on local state.","Request that can be scheduled. It must contain a key for …","","","","","","Scheduler defines a set of API to schedule requests.","Scheduler config.","","","","","","","Token used to halt the scheduler.","","","","","","","","","","","Notify the request result.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Join handle of spawned request handling loop.","Returns the request key.","","","Creates a new scheduler instance with given config and …","Polls and executes requests as many as possible until rate …","","Puts request back to the front of request queue.","","Returns remaining requests number.","","","Request FIFO with key deduplication.","Runs scheduled requests dispatch loop.","","","Schedules a request. Returns true if request is scheduled. …","","State of scheduler.","","Stops scheduler. If <code>await_termination</code> is set to true, the …","","Tasks use a cooperative manner to notify scheduler that …","","","","","","","","","","","","","","","","","","","","Deque with key deduplication.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Pops a pair from the back of deque. Returns None if the …","Pushes a key value to the back of deque. Returns true if …","Pushes a key value to the front of deque. Returns true if …","","","","","","","","","A composite rate limiter that allows token acquisition …","Composite token that releases all acquired token when …","","Limits max inflight tasks number.","","Rate limiter","","","Acquires a token from rate limiter. Returns <code>Err</code> on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Releases the token.","","","","","","","","","","","Schema with projection info.","","Schema of region.","","Schema that contains storage engine specific metadata, …","","Metadata of columns.","","Utilities for resolving schema compatibility problems.","","User schema after projection.","Projection info, <code>None</code> means don’t need to do projection.","","","","Schema used to read from data sources.","","store schema contains all columns of the region, including …","","Schema that only contains columns that user defined, …","Make schema compatible to write to target with another …","Adapter to help reading data with source schema as data …","Convert RecordBatch read from the parquet file into Batch.","Construct a new Batch from row key, value, sequence and …","","","","","","Makes the schema of <code>self</code> compatible with <code>dest_schema</code>.","","","Schema user expects to read.","","Returns list of fields indices need to read from the …","","Returns the argument unchanged.","","","","For each column in dest schema, stores the index in read …","","Calls <code>U::from(self)</code>.","","","Checks whether column with <code>source_column</code> could be read as …","For each column in source schema, stores whether we need …","","Creates a new ReadAdapter that could convert data with …","","Returns a bool slice to denote which key column in source …","Schema of data source.","Returns a bool slice to denote which value column in …","","","","","","","Schema with projection info.","","Metadata about projection.","Convert Batch into Chunk.","","","","","","","Sorted and deduplicated indices of columns to read, …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Maps column id to its index in <code>columns_to_read</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns true if column with given <code>column_id</code> is needed (in …","","Create a new <code>ProjectedSchema</code> with given <code>projected_columns</code>.","Create a <code>ProjectedSchema</code> that read all columns.","Number of user columns to read.","Column indices of projection.","Maps index of <code>projected_columns</code> to index of the column in …","","User schema after projection.","Projection info, <code>None</code> means don’t need to do projection.","","Schema used to read from data sources.","","","","","","","","","","","","","","","Schema of region.","","","","","","Metadata of columns.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the schema actually stores, which would also …","store schema contains all columns of the region, including …","","","","","","","","Returns the schema of the region, excluding internal …","Schema that only contains columns that user defined, …","","","","","Schema that contains storage engine specific metadata, …","","","","","","","Panic","","","","","","","","","","","","","","","","","Returns the index of the value column according its <code>offset</code>.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the ending index of row key columns.","","","","","","Returns the index of timestamp column. We always assume …","","","","","","","","","","","","","Snapshot implementation.","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Max sequence number (inclusive) visible to user.","","SST access layer.","","Parquet writer that buffers row groups in memory and …","","Actually data of FileHandle.","Unique id for [SST File].","Immutable metadata of a sst file.","Sst access layer.","Writes rows from memtable to parquet","","","Metadata of files in same SST level.","","Metadata of all SSTs under a region.","Maximum level of SSTs.","","SNAFU context selector for the <code>ParseIdError</code> error","","Writes row from ChunkReaderImpl (maybe a set of SSTs) to …","Parquet writer data source.","","Record batch stream yielded by table scan","","","","","Append <code>.parquet</code> to file id to make a complete file name","","Suggested size of each batch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if current file is under compaction.","","","Compaction time window in seconds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deletes a SST file with given name.","Deletes a SST file with given file id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compared to normal file names, FileId ignore the extension","","Returns number of SST files in level.","","","","","","Size of the file.","","","Handles to the files in this level.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Returns expired SSTs from current level.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the level of level meta.","Returns level as usize so it can be used as index.","","SST level of the file.","Returns total level number.","","","","Sets the compacting flag.","","Merge <code>self</code> with files to add/remove to create a new …","","","","","","Create a new LevelMetas and initialized each level.","","","","","","","","Parquet sst format.","Parses id from string.","","The schema that user expected to read, might not the same …","","","Returns a new unique FileId randomly.","Read SST file with given <code>file_handle</code> and schema.","Read SST file with given <code>file_handle</code> and schema.","Region of file.","","","","","","","","Returns the sst file path.","","","","","","","","","Timestamp range of file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes SST file with given <code>file_id</code> and returns the SST …","Writes SST file with given <code>file_id</code>.","","","Parquet sst writer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterates memtable and writes rows to Parquet file. A chunk …","","","<code>FastTimestampRowFilter</code> is used to filter rows within given …","PlainTimestampRowFilter iterates each element in timestamp …","","","","","","","Builds row filters according to predicates.","","","","","","","","","","","","","","","","","","","Selects the rows matching given time range.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parquet writer that buffers row groups in memory and …","","","","","Close parquet writer.","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Write a record batch to stream writer.","A thread safe clone-on-write cell.","A RAII implementation of a write transaction of the CowCell…","","","","","","Commit updates to the cell and release the lock.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get a read only clone from the cell.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Acquire a write txn, blocking the current thread.","","Create a new cell.","","","","","","","","","","","","","","","","Version contains metadata and state of region.","Controls version of in memory state for a region.","","","","","Apply VersionEdit to the version.","","Updates metadata of the version.","","","","","","","","","","Latest sequence that is committed and visible to user.","","","","","","","","","","","Returns current version.","","","","","","","","","","","","","","","Inclusive max sequence of flushed data.","","","","Freeze all mutable memtables.","Freeze all mutable memtables and then apply the new …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Current version of manifest.","","","Mutable and immutable memtables.","Metadata of current version.","","Metadata of the region.","","","","","Set committed sequence to <code>value</code>.","","SSTs of the region.","","","","","","","","","","","","","","","","","","","","","","Create a new <code>Version</code> with given <code>metadata</code> and initial …","Construct a new version control from existing <code>version</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data format:","PlainWindowInference simply finds the minimum time span …","A set of predefined time windows.","WindowInfer infers the time windows that can be used to …","Given a set of time spans and a min duration, this …","","","","","","","","","Find the most suitable time window size according to the …","Returns the argument unchanged.","","Infers time windows according to the SST files and …","","","Calls <code>U::from(self)</code>.","","","","","","","","","Max number of updates in a write batch.","A write operation to the region.","Vectors in NameToVector have same length.","Data of WriteBatch.","Implementation of WriteRequest.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the length of the first vector in <code>data</code>.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns true if there is no mutation in the payload.","","","","","","","Creates a new payload with given <code>schema</code>.","Creates a new <code>WriteBatch</code>.","Creates a new column and fills it by default value.","","Number of rows this batch need to mutate (put, delete, …","Type of the mutation.","","","Validates <code>data</code> and converts it into a RecordBatch.","Validates <code>data</code> and converts it into a RecordBatch.","","Data of the mutation.","Returns all row key columns in the schema.","The ending index of row key columns.","","Schema of the payload.","","","","","","","","","","","","","","","","","","","","","Checks whether <code>col</code> matches given <code>column_schema</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,407,0,0,67,0,407,0,0,0,407,0,0,0,0,0,0,407,0,0,0,0,0,0,0,0,3,1,3,1,3,1,1,1,1,1,1,3,1,3,1,3,1,1,3,1,3,1,3,1,1,1,1,1,3,1,3,1,1,1,3,1,3,1,3,1,3,1,1,1,3,1,3,3,1,3,1,1,1,1,3,3,1,1,1,1,3,1,1,3,1,3,1,3,1,3,1,3,1,1,1,3,1,3,1,0,0,435,436,435,436,436,435,0,0,0,0,0,0,0,0,0,437,0,437,0,0,46,53,62,34,34,0,45,50,51,34,34,34,34,34,34,51,34,34,34,0,34,34,34,34,50,51,34,62,62,0,51,437,0,50,50,50,51,438,0,51,50,50,51,50,51,50,51,0,62,34,34,34,34,50,0,34,34,50,51,0,50,51,0,0,0,0,38,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,37,38,37,39,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,37,39,42,38,38,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,38,37,39,42,0,0,0,437,437,46,45,46,45,46,0,45,45,45,46,45,46,45,46,46,45,46,45,46,45,46,0,0,46,45,46,45,46,0,45,46,45,46,45,46,45,46,46,437,46,46,45,46,45,46,45,46,45,46,45,46,45,46,45,0,0,53,50,53,50,53,50,50,53,50,53,50,53,50,53,50,53,50,53,50,53,50,50,53,50,53,53,50,53,50,53,50,53,50,53,50,50,50,50,50,50,50,50,50,50,50,50,53,50,53,50,53,50,53,50,50,53,50,53,50,50,0,0,0,0,51,52,51,52,52,51,51,52,51,52,51,52,51,52,51,52,51,51,52,51,51,52,51,52,51,52,51,52,52,51,52,51,52,51,52,51,51,51,52,52,51,51,438,51,51,51,51,51,52,52,52,51,52,51,52,51,52,51,52,51,52,51,52,51,51,51,0,62,0,62,62,62,62,62,62,62,62,62,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,0,0,0,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,68,0,0,68,68,0,0,0,67,75,66,70,68,67,75,66,70,68,66,67,68,67,68,67,70,67,70,70,67,75,66,70,68,67,75,66,70,68,67,75,66,70,68,70,67,70,66,67,75,66,70,68,67,75,66,70,68,67,75,75,66,70,68,67,70,70,70,68,67,75,66,70,68,67,68,67,75,66,70,68,66,68,67,66,70,67,75,66,70,68,67,67,75,66,70,68,67,75,66,70,68,67,75,66,70,68,66,70,70,75,67,75,66,70,70,67,70,0,0,70,75,70,66,70,75,68,67,68,67,75,66,70,68,67,75,66,70,68,67,75,66,70,68,68,67,75,66,70,68,67,75,66,70,68,75,66,67,75,66,70,68,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,0,82,82,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,87,89,91,92,93,94,95,96,97,98,100,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,87,101,148,103,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,125,126,100,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,89,107,109,87,89,91,92,93,94,95,96,97,98,100,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,136,140,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,96,107,109,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,82,95,110,91,92,93,98,112,113,115,144,147,149,104,107,108,109,82,105,122,123,124,125,126,127,96,82,102,118,141,131,134,137,138,95,139,159,116,100,116,82,89,94,82,91,92,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,101,118,87,119,120,121,122,123,124,125,126,127,128,129,130,89,131,132,133,134,91,92,93,135,136,94,137,138,95,139,96,140,141,97,142,143,98,144,145,146,147,100,101,102,148,103,149,104,150,105,107,108,109,110,151,152,153,111,112,113,114,154,155,156,157,158,115,159,116,160,161,162,163,164,165,82,439,440,441,442,443,444,445,446,447,448,449,450,451,443,444,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,460,471,472,469,470,473,439,447,474,448,449,450,451,452,453,454,455,446,475,456,457,458,476,477,478,460,479,480,481,482,483,472,471,484,485,486,487,488,489,490,491,492,445,440,493,441,442,494,495,496,497,469,498,470,499,461,462,500,501,502,503,504,505,463,464,506,507,508,509,510,466,467,511,468,482,499,476,477,478,488,502,512,507,489,492,494,495,469,498,470,497,449,450,451,443,444,452,472,493,473,484,475,458,480,481,482,483,465,508,445,508,473,474,475,480,481,483,471,484,486,487,489,490,491,492,441,494,496,500,504,505,506,509,510,511,446,479,476,477,440,0,0,0,171,172,171,172,171,172,171,172,171,172,171,171,172,171,172,171,172,171,171,172,171,172,172,171,172,171,172,171,172,171,172,171,171,171,171,172,171,172,171,172,171,172,171,172,171,172,174,0,0,0,0,0,0,0,0,0,0,0,174,0,0,176,173,174,175,176,173,174,175,173,173,174,173,174,176,173,174,175,176,173,174,175,176,173,174,175,175,176,173,174,175,176,173,174,175,176,173,174,175,176,174,174,174,174,174,174,176,173,174,175,239,175,176,176,173,174,175,173,174,176,173,174,175,0,175,176,173,174,175,176,173,174,175,176,173,174,175,175,176,173,174,175,176,176,175,175,176,175,175,0,173,239,175,176,239,175,0,176,239,175,175,176,173,174,176,173,174,175,176,173,174,175,176,173,174,175,176,173,174,175,176,173,174,175,176,173,174,175,176,173,176,176,176,0,0,0,177,177,178,177,178,177,178,178,178,177,178,177,178,177,178,177,177,178,177,178,177,178,0,178,177,178,178,177,178,177,178,177,178,177,178,177,178,179,179,179,178,178,178,179,177,178,177,178,177,178,177,178,177,178,177,178,177,178,0,183,182,0,0,0,0,0,0,0,183,182,192,183,54,192,189,181,182,185,183,54,192,189,181,182,185,181,182,182,54,189,54,183,54,192,189,181,182,185,183,54,192,189,181,182,185,183,54,192,189,181,182,185,183,183,54,192,189,181,182,185,183,54,192,189,181,182,185,183,54,192,189,181,182,185,54,182,182,182,182,182,182,0,54,182,185,183,54,192,189,181,182,185,182,183,54,192,189,181,182,185,182,189,182,183,54,192,189,181,182,185,183,54,192,189,181,182,185,183,54,192,189,181,182,185,183,54,192,189,181,182,185,183,54,54,54,181,192,189,181,185,54,185,189,181,192,192,192,54,54,192,182,183,54,192,189,181,182,185,183,54,192,189,181,182,185,183,54,192,189,181,182,185,183,54,192,189,181,182,185,54,183,54,192,189,181,182,185,183,54,192,189,181,182,185,185,54,54,513,513,0,0,219,0,0,212,212,212,0,0,212,212,219,219,0,219,0,0,204,204,204,0,0,0,0,0,0,0,0,0,0,0,0,0,204,204,205,193,193,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,193,203,197,198,199,194,200,195,201,202,196,203,204,205,197,198,199,194,200,195,201,202,196,203,204,205,197,199,197,198,194,201,196,193,203,195,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,203,205,197,198,199,196,193,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,203,205,197,198,199,194,200,195,201,202,196,203,204,205,197,197,197,197,197,198,198,198,198,198,199,199,199,199,199,194,194,194,194,194,200,200,200,200,200,195,195,195,195,195,201,201,201,201,201,202,202,202,202,202,196,196,196,196,196,203,203,203,203,203,204,204,204,204,204,205,205,205,205,205,202,195,195,195,202,197,198,199,194,200,195,201,202,196,193,203,204,205,197,197,198,198,199,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,197,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,203,203,202,194,196,193,197,205,205,203,200,201,195,198,197,198,199,194,200,195,201,202,196,203,204,205,205,203,205,198,197,198,199,194,200,195,201,202,196,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,197,198,199,194,200,195,201,202,196,193,203,204,205,198,197,196,193,197,198,199,194,200,195,201,202,196,193,203,204,205,205,193,217,0,217,217,217,0,0,0,0,0,0,0,0,0,0,219,218,219,216,212,218,219,216,212,218,216,212,212,212,212,212,219,216,212,218,219,216,212,218,219,216,212,218,212,219,216,212,218,219,216,212,218,212,219,216,212,218,212,218,219,216,212,218,212,219,216,212,218,212,218,219,216,212,218,216,212,219,216,212,218,219,216,212,218,219,216,212,218,212,218,212,219,219,212,218,219,212,218,212,216,212,218,219,218,219,218,212,212,218,212,212,212,212,218,218,218,212,219,216,212,218,219,216,212,218,219,216,212,218,219,216,212,218,219,216,212,218,212,212,218,218,219,216,212,218,212,0,0,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,223,222,222,222,222,222,222,222,223,0,0,0,0,0,0,0,0,225,227,230,225,227,220,224,230,225,227,220,224,0,220,224,220,220,230,225,227,220,224,230,225,227,220,224,230,225,227,220,224,220,224,220,220,220,220,0,220,230,225,225,227,227,220,224,230,225,227,220,224,224,230,225,227,220,224,224,224,0,0,220,224,230,225,227,220,224,220,230,225,227,220,224,0,220,230,225,227,220,224,230,225,227,220,224,230,225,227,220,224,0,0,230,225,227,220,224,230,220,220,220,0,220,230,230,220,220,220,220,220,220,224,224,220,230,225,227,220,224,230,225,227,220,224,230,225,227,220,224,230,225,227,220,224,230,225,227,220,224,224,230,225,227,220,224,0,0,0,0,0,0,235,0,0,0,0,0,0,0,0,0,235,234,236,232,233,234,235,231,236,232,233,234,235,231,0,514,231,232,233,232,234,234,236,232,233,234,235,231,236,232,233,234,235,231,236,232,233,234,235,231,233,234,231,236,232,233,234,235,231,236,232,233,234,235,231,232,236,232,232,233,234,235,231,235,235,235,235,235,235,233,236,232,231,232,233,234,235,231,236,232,233,234,235,231,234,236,232,233,234,235,231,515,259,255,236,232,233,234,235,231,0,236,232,233,234,235,231,236,232,233,234,235,231,232,236,236,232,233,234,235,231,515,236,236,515,233,231,233,259,232,515,232,236,516,234,236,515,516,255,236,236,515,234,236,234,236,232,233,234,235,231,236,232,233,234,235,231,236,232,233,234,235,231,236,232,233,234,235,231,236,232,233,234,235,231,236,0,234,236,232,233,234,235,231,231,515,0,0,0,0,0,0,0,0,247,245,245,247,249,244,241,242,245,247,249,244,241,242,241,242,241,242,241,0,252,241,245,247,249,244,241,242,245,247,249,244,241,242,245,247,249,244,241,242,247,245,247,249,244,241,242,245,247,249,244,241,242,245,247,249,244,241,242,241,241,241,241,241,241,244,245,241,242,245,247,249,244,241,242,241,242,245,247,249,244,241,242,245,245,244,241,245,247,249,244,241,242,245,247,249,244,241,242,247,249,244,245,247,249,244,241,242,252,245,247,249,244,241,242,241,241,241,245,249,244,247,244,245,247,245,245,245,249,249,244,244,245,247,249,244,247,249,244,247,249,245,241,247,241,249,247,241,252,241,252,0,245,247,245,247,241,244,245,249,241,241,242,245,247,249,244,241,242,245,247,249,244,241,242,245,247,249,244,241,242,245,247,249,244,241,242,245,247,249,244,241,242,245,242,249,245,247,249,244,241,242,245,0,0,255,254,255,254,255,254,255,254,255,254,255,254,255,254,255,254,254,254,254,255,254,255,254,255,255,254,255,255,254,255,254,255,254,255,254,255,254,255,254,255,254,255,254,255,254,255,254,0,255,254,255,0,0,259,258,259,258,258,258,258,258,259,258,259,258,259,258,259,258,259,258,259,258,258,258,258,258,258,258,259,258,259,259,258,258,259,258,259,259,259,258,259,258,259,258,259,258,259,259,259,259,259,259,258,259,258,259,258,259,258,259,259,258,259,258,259,258,259,258,266,0,266,0,266,0,266,0,266,0,266,0,266,0,0,0,0,0,0,0,0,266,0,266,0,266,0,266,0,266,0,266,0,0,266,0,266,0,266,0,266,0,0,0,266,0,266,0,266,0,0,0,0,0,266,0,0,266,0,0,260,263,207,266,266,266,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,260,267,268,270,271,272,273,275,276,277,278,279,280,281,282,283,284,263,266,209,294,264,263,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,293,207,294,208,209,264,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,293,207,294,208,209,264,207,284,264,264,208,208,207,208,284,260,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,266,260,284,263,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,294,266,294,264,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,207,294,208,209,264,207,207,207,207,207,294,294,294,294,294,208,208,208,208,208,209,209,209,209,209,264,264,264,264,264,275,267,268,270,271,272,273,275,276,277,278,279,280,281,282,283,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,266,293,207,294,208,209,264,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,208,209,209,264,284,263,294,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,293,207,294,208,209,264,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,275,260,207,294,260,270,271,207,209,263,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,0,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,0,208,208,208,281,288,293,283,260,207,294,260,267,268,272,276,277,278,279,280,291,207,264,208,284,260,293,266,208,208,266,284,284,284,260,284,208,208,284,293,207,207,294,264,266,266,208,208,284,294,207,294,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,293,207,294,208,209,264,208,266,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,260,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,207,207,294,208,209,264,284,263,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,0,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,208,208,207,207,207,207,260,293,207,260,207,260,267,268,270,271,286,272,273,275,276,277,278,279,280,287,288,281,289,290,282,291,292,283,266,293,207,294,208,209,264,284,263,517,518,519,519,520,521,522,517,523,524,520,521,525,526,527,528,517,522,518,529,530,531,532,533,533,523,524,526,534,535,536,537,538,531,525,528,529,531,532,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,303,305,305,307,307,309,309,310,310,311,311,313,313,314,314,315,315,316,316,317,317,318,318,319,319,320,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,303,305,307,309,310,311,313,314,315,316,317,318,319,320,0,321,0,321,0,321,322,321,322,321,322,322,321,322,321,321,321,322,321,322,321,322,321,322,321,322,321,322,321,322,321,322,322,321,321,321,321,321,321,322,321,322,321,321,322,321,321,322,321,0,321,321,322,321,322,321,322,321,322,321,321,322,322,322,321,322,322,321,322,321,322,321,322,321,321,322,321,322,321,322,321,322,0,0,0,0,0,0,0,0,0,0,250,336,336,335,328,250,328,250,328,328,0,250,250,336,250,250,250,539,328,250,328,250,328,250,0,250,328,250,328,250,328,250,250,250,250,250,250,250,328,539,539,250,328,250,250,328,250,336,328,250,336,328,250,328,250,328,250,328,250,0,250,333,250,328,250,343,334,328,334,332,343,332,334,336,335,343,334,250,336,335,250,328,250,328,250,328,250,328,250,328,250,539,328,250,0,328,0,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,0,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,0,341,0,0,0,341,0,0,338,340,336,335,336,335,341,337,336,335,338,340,341,337,336,335,338,340,335,337,336,337,338,337,341,337,336,335,338,340,341,337,336,335,338,340,341,337,336,335,338,340,337,337,337,341,337,336,335,338,340,341,337,336,335,338,340,341,337,336,335,338,340,337,337,337,337,337,337,336,336,336,337,340,341,337,338,340,341,337,336,335,338,340,341,337,336,335,338,340,336,341,337,336,335,338,340,336,341,337,336,335,338,340,341,337,336,335,338,340,337,340,337,341,337,336,335,338,340,340,337,340,337,337,335,340,341,336,341,337,338,340,335,335,337,340,337,340,336,336,337,336,335,337,336,335,337,340,341,337,336,335,338,340,341,337,336,335,338,340,341,337,336,335,338,340,336,341,337,336,335,338,340,341,337,336,335,338,340,341,337,336,335,338,340,335,0,343,343,0,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,0,343,343,343,343,343,343,0,0,0,0,0,0,0,0,0,0,0,0,74,345,74,81,345,354,74,81,345,354,74,74,74,345,74,74,345,364,362,345,360,362,81,345,360,81,74,81,345,354,74,81,345,354,74,81,345,354,345,74,345,74,74,81,345,354,74,81,345,354,74,74,81,345,354,74,345,81,81,74,345,362,81,345,362,81,345,74,354,74,81,345,354,74,74,81,345,354,74,74,354,354,74,345,74,81,345,354,74,360,74,81,345,354,74,81,345,354,74,81,345,354,74,74,354,354,74,81,364,362,361,81,345,81,74,74,354,354,74,74,74,364,74,74,362,361,345,364,74,364,362,81,345,74,74,81,345,354,74,81,345,354,74,345,74,81,345,354,74,81,345,354,81,74,81,345,354,354,74,345,354,360,74,81,345,354,364,362,361,345,74,345,81,74,0,362,345,0,0,0,0,0,0,0,0,359,360,359,364,362,361,365,370,360,359,364,362,361,365,370,360,359,360,359,360,364,362,360,362,365,360,364,362,361,365,370,360,359,364,362,361,365,370,360,359,364,362,361,365,370,360,359,364,362,361,365,370,360,359,364,362,361,365,370,360,359,364,362,361,365,370,360,359,359,360,359,362,365,362,360,359,364,362,361,365,370,360,359,364,362,361,365,370,360,359,364,362,361,365,370,360,359,360,364,362,361,365,370,360,359,364,362,361,365,370,360,359,359,364,362,361,365,370,360,359,364,362,361,365,370,359,359,359,359,360,359,360,360,359,364,360,359,0,362,361,365,370,364,359,364,362,365,370,364,362,361,365,370,360,359,364,362,361,365,370,360,359,359,360,364,362,361,365,370,360,359,364,362,361,365,370,360,359,359,364,362,361,365,370,360,359,362,361,365,370,360,364,362,361,365,370,360,359,360,364,362,361,365,370,360,359,359,360,362,0,0,43,0,0,373,540,0,0,0,0,0,351,374,191,351,374,191,351,374,351,374,191,351,374,191,351,374,191,43,0,191,351,374,191,351,374,191,351,351,374,191,351,191,351,374,191,351,374,191,373,374,351,374,191,351,374,191,351,374,191,351,374,191,351,43,374,191,351,374,374,374,0,351,374,374,351,374,351,374,540,351,351,374,540,351,351,374,351,374,191,351,374,191,351,374,191,351,374,191,351,374,191,351,374,191,0,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,0,0,0,0,0,0,0,0,541,378,541,378,375,378,380,375,382,378,380,375,382,378,380,375,382,378,380,375,382,378,380,375,382,380,378,380,375,382,378,380,375,382,378,380,375,382,378,380,375,382,378,380,375,382,378,378,380,375,382,378,380,375,382,378,380,375,382,378,380,375,382,375,378,378,380,375,380,378,380,375,382,378,380,375,382,382,378,380,375,382,378,380,375,382,542,380,382,378,380,375,382,378,380,375,382,0,0,0,0,0,0,386,342,0,0,339,339,0,342,342,339,0,386,342,386,0,0,383,383,383,383,383,383,383,543,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,0,383,383,383,383,383,383,383,383,383,383,383,383,383,0,0,0,339,387,339,387,339,339,339,387,339,387,339,387,339,387,339,387,387,339,387,339,387,339,339,339,387,339,387,339,387,339,387,387,339,387,339,387,339,387,339,339,387,339,339,387,387,387,339,339,339,339,339,387,339,387,339,387,339,387,339,387,339,339,339,387,339,0,0,386,386,0,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,0,0,0,0,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,0,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,0,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,0,0,0,0,0,0,0,0,403,0,0,0,0,0,0,0,0,0,403,0,0,403,0,47,420,394,393,394,404,398,404,403,397,402,23,47,12,394,395,393,59,396,399,398,404,403,397,402,23,47,12,394,395,393,59,396,399,394,23,47,12,395,393,59,23,47,12,395,393,59,12,398,23,23,398,404,403,397,402,23,47,12,394,395,393,59,396,399,398,404,403,397,402,23,47,12,394,395,393,59,396,399,398,404,403,397,402,23,47,12,394,395,393,59,396,399,47,393,59,396,544,397,12,398,398,404,403,397,402,23,47,12,394,395,393,59,396,399,398,404,403,397,402,23,47,12,394,395,393,59,396,399,394,393,59,0,398,398,404,403,397,402,23,47,12,394,395,393,59,396,399,394,393,59,399,393,393,393,393,393,59,59,59,59,59,12,59,12,47,12,23,398,23,12,59,399,47,47,398,397,23,47,12,394,394,395,393,393,59,396,399,398,404,403,397,402,23,47,12,394,395,393,59,396,399,23,47,12,395,393,59,393,398,404,403,397,402,23,47,12,394,395,393,59,396,399,47,393,59,393,59,398,404,403,397,402,23,47,12,394,395,393,59,396,399,420,402,12,398,404,403,397,402,23,47,12,394,395,393,59,396,399,395,398,404,403,397,402,23,47,12,394,395,393,59,396,399,398,404,403,397,402,23,47,12,394,395,393,59,396,399,23,47,12,47,59,23,23,23,23,12,12,23,12,398,398,397,402,23,47,12,0,403,402,399,397,0,393,404,404,394,0,393,544,397,59,47,403,393,59,394,394,397,544,397,398,23,396,402,0,12,404,59,399,23,47,12,395,393,59,394,393,398,404,403,397,402,23,47,12,394,395,393,59,396,399,398,404,403,397,402,23,47,12,394,395,393,59,396,399,398,404,403,397,402,23,47,12,394,395,393,59,396,399,398,404,403,397,402,23,47,12,394,395,393,59,396,399,398,404,403,397,402,23,47,12,394,395,393,59,396,399,398,404,403,397,402,23,47,12,394,395,393,59,396,399,544,397,0,0,0,0,405,405,407,401,405,407,401,405,401,407,401,405,407,401,405,407,401,405,0,0,407,401,405,407,401,405,407,401,405,401,407,407,401,405,407,401,405,407,401,405,407,401,405,407,401,405,407,401,405,407,407,401,405,405,407,401,401,401,407,405,401,407,401,405,407,401,405,407,401,405,407,401,405,407,401,405,407,401,405,407,407,0,0,0,413,416,417,413,416,417,0,413,416,417,413,416,417,413,416,417,413,416,417,413,416,417,413,416,417,413,416,417,417,413,416,417,413,416,417,413,416,417,413,416,417,413,416,417,413,416,417,413,413,416,417,0,413,416,417,413,416,417,416,0,413,416,417,413,416,417,413,416,417,413,416,417,413,416,417,413,413,416,417,0,0,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,0,0,422,422,423,422,423,422,422,423,422,423,422,423,422,422,422,423,422,422,423,422,423,423,422,423,422,423,423,422,423,422,423,422,423,422,423,422,423,422,422,423,423,423,422,423,422,423,422,423,422,423,422,423,422,423,0,0,0,0,0,0,0,0,352,356,352,352,356,425,352,356,425,352,352,352,356,356,425,356,425,352,356,425,352,356,425,352,356,356,356,425,352,356,425,352,356,425,352,425,425,352,425,352,356,425,352,356,356,356,425,352,352,356,425,352,356,425,352,356,425,352,356,425,352,356,425,352,352,425,352,425,352,352,356,352,352,352,352,356,352,356,352,352,352,356,425,352,356,425,352,356,425,352,356,425,352,356,425,352,352,356,356,425,352,352,356,0,0,0,0,428,426,366,428,426,366,366,366,428,426,366,428,426,366,428,426,366,426,366,366,428,426,366,428,426,366,428,426,366,428,366,428,426,366,366,428,426,366,428,426,366,428,426,366,428,426,366,428,426,366,366,366,366,366,366,366,366,366,428,426,366,428,426,366,428,426,366,428,426,366,428,426,366,428,426,366,366,366,0,0,0,0,430,430,430,430,430,430,430,430,0,430,430,545,430,430,430,430,430,430,430,430,430,430,430,0,0,0,0,0,348,431,256,257,348,431,256,257,348,0,0,431,256,257,348,431,256,257,348,431,256,257,348,257,348,348,431,256,257,348,431,256,257,348,431,256,257,348,256,257,0,256,257,348,431,256,257,348,431,256,257,348,431,256,257,348,431,256,257,348,431,256,257,348,431,256,431,256,257,348,256,431,256,348,0,431,348,257,348,348,348,348,348,257,348,348,348,256,431,256,257,348,431,256,257,348,431,256,257,348,431,256,257,348,431,256,257,348,0,431,256,257,348,0,0,433,434,433,434,433,434,433,434,433,434,433,434,433,434,433,434,433,434,434,433,434,433,434,433,434,433,434,433,434,433,434,433,433,434,433,434,433,434,433,434,433,434,433,434,433,434,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[]],[[]],[[]],[[]],[1,[[4,[3]]]],[[1,5,6],[[4,[7]]]],[[1,5,6],[[4,[7]]]],[1,6],[[1,5,6,[8,[6]],[8,[9]]],[[4,[7]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[1,[[11,[6]]]],[2],[2],[2],[2],[2],[2],[[12,6],13],0,[[1,[8,[14]]],1],0,[[]],[[]],[[]],[[]],[[1,[15,[9]]],[[11,[[8,[6]]]]]],[[1,6],[[8,[6]]]],[[],2],[[],2],[[]],[[]],[[],16],[[],16],[[],13],[[],13],0,0,[[5,7,[11,[[8,[9]]]]],3],[[17,18,19],1],[3,[[22,[[21,[20]]]]]],[3,[[11,[[8,[9]]]]]],[[1,[11,[[8,[9]]]]],1],0,0,[[1,23],[[4,[1]]]],[[1,24],1],[[1,[15,[12]]],1],[[3,25],25],[3,5],[[1,[11,[[8,[2]]]]],1],0,0,[[1,2],1],0,0,0,[[],11],[[],11],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[1,13],1],0,[3,28],[[1,29],1],[[]],[[]],0,0,0,0,0,0,[[[15,[30]]],26],[[[8,[30]]],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[31,[[33,[32]]]],0,0,0,[[],10],[[],10],[[],10],[2],[2],[2],0,[[34,35],35],[[]],[[]],[36,35],[[],2],[[]],[[],16],[[],13],0,0,[34,35],0,0,0,0,[[],[[4,[11]]]],0,0,0,0,0,[[],[[22,[[21,[20]]]]]],0,0,0,0,0,0,0,0,0,0,0,[[],11],[[]],[[],26],[[],26],0,0,[[],27],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[37,4]],[[],38],[[],37],[[],39],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[38,40],41],[[37,40],41],[[39,40],41],[[42,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],[37],[39,[[4,[11]]]],[42,[[22,[[21,[20]]]]]],[[[38,[43]]],[[4,[13]]]],[[[38,[43]],13],[[22,[[21,[20]]]]]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[35,[15,[12]]],[[44,[35,[8,[12]]]]]],[45,[[11,[35]]]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],46],[2],[2],[2],[2],[2],[2],[[35,35,35],[[8,[35]]]],[47,[[8,[12]]]],[[46,40],41],[[]],[[]],[[]],[[]],[[[15,[47]],[11,[48]],49],[[4,[[8,[12]]]]]],[[],2],[[],2],[[]],[[]],[[],16],[[],16],[[],13],[[],13],[[],46],[[],[[4,[11]]]],[[[46,[32]],[50,[32]]],[[4,[[11,[[51,[32]]]]]]]],[[45,47,[8,[52]]],[[11,[35]]]],[[],11],[[],11],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[]],[[]],[[[11,[35]]],45],0,0,0,[[]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[50,[32]],4]],[[],[[53,[32]]]],[2],[2],[2],[2],[2],[2],[[]],[[[54,[32]]],[[50,[32]]]],[[]],[[]],[[]],[[[53,[32]],55,[57,[56]]],[[22,[[21,[20]]]]]],[[],2],[[],2],[[]],[[]],[[],16],[[],16],[[],13],[[],13],[[[50,[32]]],17],[[[50,[32]]],[[57,[23]]]],0,0,0,0,[[[50,[32]]],18],0,0,0,0,[[],11],[[],11],[[]],[[]],[[],26],[[],26],[[],26],[[],26],0,[[],27],[[],27],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[52,17,18,19,58],[[4,[[11,[59]]]]]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[2],[2],[2],[2],[2],[[[51,[32]]]],[2],0,[[[51,[32]],40],41],[[52,40],41],[[]],[[]],[[]],[[]],[[],2],[[],2],0,[[]],[[]],[[],16],[[],16],[[],13],[[],13],0,[[[51,[32]],13]],[[[51,[32]]],4],0,0,0,0,[[],[[22,[[21,[20]]]]]],[[[51,[32]]],[[22,[[21,[20]]]]]],0,0,0,0,0,0,0,[[],11],[[],11],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[]],[[]],0,[[[51,[32]],[60,[59]],[60,[59]]],4],0,0,0,[[36,35],[[61,[35,[8,[12]]]]]],[[]],[[]],[[62,[61,[35,[8,[12]]]],[11,[35]],35],[[8,[52]]]],[[],10],[[],10],[[],10],[2],[2],[2],[[36,35],[[11,[35]]]],[[62,40],41],[[]],[[]],[[],2],[[]],[[],16],[[],13],0,0,[[2,2,[11,[35]]],62],[[[62,[32]]],[[4,[11]]]],0,[[],11],[[]],[[],26],[[],26],[[],27],[[]],[[17,18,19,[15,[12]]],[[4,[3]]]],[[63,64],[[11,[14]]]],0,0,0,0,0,0,[[]],[[]],[65,65],[[]],[[],10],[[],10],[[],10],0,[[],65],[2],[2],[2],[[65,40],41],[[]],[[]],[[]],0,0,[[],2],[[]],[[],16],[[],13],0,0,0,0,0,0,0,0,[[]],[[],11],[[]],[[],26],[[],26],[[],27],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[66,[32]]]],[[[67,[32]]],[[67,[32]]]],[[[68,[32]]],[[68,[32]]]],[[]],[[]],[[[67,[32]],69],[[22,[[21,[20]]]]]],[[[70,[32]]],4],[[[67,[32]],69,63,71],[[22,[[21,[20]]]]]],[[[70,[32]],63,71],4],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[[67,[32]],69,72,73],[[22,[[21,[20]]]]]],[[[70,[32]],72,73],[[4,[[74,[32]]]]]],[[],[[66,[32]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[[75,[32]]]],[2],[2],[2],[2],[[[67,[32]],69],[[22,[[21,[20]]]]]],0,0,0,[[[68,[[0,[76,32]]]],40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[66,[32]],63,[68,[32]]],[[11,[[68,[32]]]]]],[[[68,[32]]],[[11,[[74,[32]]]]]],[[[67,[32]],69,63],[[4,[11]]]],[[[66,[32]],63],[[11,[[74,[32]]]]]],[[[70,[32]],63],[[11,[[74,[32]]]]]],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],[[],13],[[[66,[32]]],[[8,[[74,[32]]]]]],0,0,0,[[65,[57,[32]],77,[78,[32]]],[[4,[[67,[32]]]]]],[[63,[66,[32]]],[[75,[32]]]],[[],[[66,[32]]]],[[65,[57,[32]],77,[78,[32]]],[[4,[[70,[32]]]]]],0,[[[67,[32]],69,63,79],[[22,[[21,[20]]]]]],[[[70,[32]],63,79],[[4,[[11,[[74,[32]]]]]]]],[[63,63],80],[[63,63],80],[[[70,[32]],63,[11,[2]],63,65,[11,[48]],31],[[4,[[81,[32]]]]]],0,0,[[[66,[32]],63]],[[[70,[32]],63]],0,[[[68,[32]]],63],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[[68,[32]]],[[4,[[74,[32]]]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[[75,[32]],[68,[32]]]],[[[66,[32]],63,[68,[32]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[82,83],[[],84],[82,[[11,[85]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[87,[[86,[80]]]]],82],[[[89,[[86,[88]],[86,[88]]]]],82],[[[91,[[86,[90]],[86,[90]]]]],82],[[[92,[[86,[90]],[86,[90]]]]],82],[[[93,[[86,[80]]]]],82],[[[94,[[86,[63]]]]],82],[[[95,[[86,[17]],[86,[80]]]]],82],[[[96,[[86,[29]],[86,[29]]]]],82],[97,82],[[[98,[[86,[80]]]]],82],[[[100,[[86,[99]],[86,[99]]]]],82],[[[101,[[86,[80]],[86,[99]]]]],82],[[[102,[[86,[80]]]]],82],[[[103,[[86,[80]]]]],82],[[[104,[[86,[80]]]]],82],[[[105,[[86,[2]]]]],82],[[[107,[[86,[80]],[86,[106]],[86,[106]]]]],82],[[[108,[[86,[80]]]]],82],[[[109,[[86,[80]],[86,[2]],[86,[2]]]]],82],[[[110,[[86,[80]]]]],82],[111,82],[[[112,[[86,[80]]]]],82],[[[113,[[86,[80]]]]],82],[114,82],[[[115,[[86,[80]]]]],82],[[[116,[[86,[17]],[86,[29]]]]],82],[82,[[11,[84]]]],[[[118,[117]]],[[118,[117]]]],[[[87,[117]]],[[87,[117]]]],[119,119],[120,120],[121,121],[[[122,[117]]],[[122,[117]]]],[[[123,[117]]],[[123,[117]]]],[[[124,[117]]],[[124,[117]]]],[[[125,[117,117]]],[[125,[117,117]]]],[[[126,[117,117]]],[[126,[117,117]]]],[[[127,[117]]],[[127,[117]]]],[128,128],[129,129],[130,130],[[[89,[117,117]]],[[89,[117,117]]]],[[[131,[117]]],[[131,[117]]]],[132,132],[133,133],[[[134,[117]]],[[134,[117]]]],[[[91,[117,117]]],[[91,[117,117]]]],[[[92,[117,117]]],[[92,[117,117]]]],[[[93,[117]]],[[93,[117]]]],[135,135],[[[136,[117]]],[[136,[117]]]],[[[94,[117]]],[[94,[117]]]],[[[137,[117]]],[[137,[117]]]],[[[138,[117]]],[[138,[117]]]],[[[95,[117,117]]],[[95,[117,117]]]],[[[139,[117]]],[[139,[117]]]],[[[96,[117,117]]],[[96,[117,117]]]],[[[140,[117]]],[[140,[117]]]],[[[141,[117]]],[[141,[117]]]],[97,97],[142,142],[143,143],[[[98,[117]]],[[98,[117]]]],[[[144,[117]]],[[144,[117]]]],[145,145],[146,146],[[[147,[117]]],[[147,[117]]]],[[[100,[117,117]]],[[100,[117,117]]]],[[[101,[117,117]]],[[101,[117,117]]]],[[[102,[117]]],[[102,[117]]]],[[[148,[117]]],[[148,[117]]]],[[[103,[117]]],[[103,[117]]]],[[[149,[117]]],[[149,[117]]]],[[[104,[117]]],[[104,[117]]]],[150,150],[[[105,[117]]],[[105,[117]]]],[[[107,[117,117,117]]],[[107,[117,117,117]]]],[[[108,[117]]],[[108,[117]]]],[[[109,[117,117,117]]],[[109,[117,117,117]]]],[[[110,[117]]],[[110,[117]]]],[151,151],[152,152],[153,153],[111,111],[[[112,[117]]],[[112,[117]]]],[[[113,[117]]],[[113,[117]]]],[114,114],[154,154],[155,155],[156,156],[157,157],[158,158],[[[115,[117]]],[[115,[117]]]],[[[159,[117]]],[[159,[117]]]],[[[116,[117,117]]],[[116,[117,117]]]],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[[82,2,[8,[80]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[82,63],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,0,0,[[[87,[[86,[80]]]]],[[26,[82]]]],[[[89,[[86,[88]],[86,[88]]]]],[[26,[82]]]],[[[91,[[86,[90]],[86,[90]]]]],[[26,[82]]]],[[[92,[[86,[90]],[86,[90]]]]],[[26,[82]]]],[[[93,[[86,[80]]]]],[[26,[82]]]],[[[94,[[86,[63]]]]],[[26,[82]]]],[[[95,[[86,[17]],[86,[80]]]]],[[26,[82]]]],[[[96,[[86,[29]],[86,[29]]]]],[[26,[82]]]],[97,[[26,[82]]]],[[[98,[[86,[80]]]]],[[26,[82]]]],[[[100,[[86,[99]],[86,[99]]]]],[[26,[82]]]],[[[101,[[86,[80]],[86,[99]]]]],[[26,[82]]]],[[[102,[[86,[80]]]]],[[26,[82]]]],[[[103,[[86,[80]]]]],[[26,[82]]]],[[[104,[[86,[80]]]]],[[26,[82]]]],[[[105,[[86,[2]]]]],[[26,[82]]]],[[[107,[[86,[80]],[86,[106]],[86,[106]]]]],[[26,[82]]]],[[[108,[[86,[80]]]]],[[26,[82]]]],[[[109,[[86,[80]],[86,[2]],[86,[2]]]]],[[26,[82]]]],[[[110,[[86,[80]]]]],[[26,[82]]]],[111,[[26,[82]]]],[[[112,[[86,[80]]]]],[[26,[82]]]],[[[113,[[86,[80]]]]],[[26,[82]]]],[114,[[26,[82]]]],[[[115,[[86,[80]]]]],[[26,[82]]]],[[[116,[[86,[17]],[86,[29]]]]],[[26,[82]]]],0,0,[[[118,[76]],40],41],[[[87,[76]],40],41],[[119,40],41],[[120,40],41],[[121,40],41],[[[122,[76]],40],41],[[[123,[76]],40],41],[[[124,[76]],40],41],[[[125,[76,76]],40],41],[[[126,[76,76]],40],41],[[[127,[76]],40],41],[[128,40],41],[[129,40],41],[[130,40],41],[[[89,[76,76]],40],41],[[[131,[76]],40],41],[[132,40],41],[[133,40],41],[[[134,[76]],40],41],[[[91,[76,76]],40],41],[[[92,[76,76]],40],41],[[[93,[76]],40],41],[[135,40],41],[[[136,[76]],40],41],[[[94,[76]],40],41],[[[137,[76]],40],41],[[[138,[76]],40],41],[[[95,[76,76]],40],41],[[[139,[76]],40],41],[[[96,[76,76]],40],41],[[[140,[76]],40],41],[[[141,[76]],40],41],[[97,40],41],[[142,40],41],[[143,40],41],[[[98,[76]],40],41],[[[144,[76]],40],41],[[145,40],41],[[146,40],41],[[[147,[76]],40],41],[[[100,[76,76]],40],41],[[[101,[76,76]],40],41],[[[102,[76]],40],41],[[[148,[76]],40],41],[[[103,[76]],40],41],[[[149,[76]],40],41],[[[104,[76]],40],41],[[150,40],41],[[[105,[76]],40],41],[[[107,[76,76,76]],40],41],[[[108,[76]],40],41],[[[109,[76,76,76]],40],41],[[[110,[76]],40],41],[[151,40],41],[[152,40],41],[[153,40],41],[[111,40],41],[[[112,[76]],40],41],[[[113,[76]],40],41],[[114,40],41],[[154,40],41],[[155,40],41],[[156,40],41],[[157,40],41],[[158,40],41],[[[115,[76]],40],41],[[[159,[76]],40],41],[[[116,[76,76]],40],41],[[160,40],41],[[161,40],41],[[162,40],41],[[163,40],41],[[164,40],41],[[165,40],41],[[82,40],41],[[82,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[118,[[86,[80]]]]],82],[[[87,[[86,[80]]]]],82],[119,82],[120,82],[121,82],[[[122,[[86,[80]]]]],82],[[[123,[[86,[80]]]]],82],[[[124,[[86,[80]]]]],82],[[[125,[[86,[166]],[86,[80]]]]],82],[[[126,[[86,[166]],[86,[80]]]]],82],[[[127,[[86,[80]]]]],82],[128,82],[129,82],[130,82],[[[89,[[86,[88]],[86,[88]]]]],82],[[[131,[[86,[17]]]]],82],[132,82],[133,82],[[[134,[[86,[17]]]]],82],[[[91,[[86,[90]],[86,[90]]]]],82],[[[92,[[86,[90]],[86,[90]]]]],82],[[[93,[[86,[80]]]]],82],[135,82],[[[136,[[86,[80]]]]],82],[[[94,[[86,[63]]]]],82],[[[137,[[86,[17]]]]],82],[[[138,[[86,[167]]]]],82],[[[95,[[86,[17]],[86,[80]]]]],82],[[[139,[[86,[17]]]]],82],[[[96,[[86,[29]],[86,[29]]]]],82],[[[140,[[86,[80]]]]],82],[[[141,[[86,[80]]]]],82],[97,82],[142,82],[143,82],[[[98,[[86,[80]]]]],82],[[[144,[[86,[80]]]]],82],[145,82],[146,82],[[[147,[[86,[80]]]]],82],[[[100,[[86,[99]],[86,[99]]]]],82],[[[101,[[86,[80]],[86,[99]]]]],82],[[[102,[[86,[80]]]]],82],[[[148,[[86,[80]]]]],82],[[[103,[[86,[80]]]]],82],[[[149,[[86,[80]]]]],82],[[[104,[[86,[80]]]]],82],[150,82],[[[105,[[86,[2]]]]],82],[[[107,[[86,[80]],[86,[106]],[86,[106]]]]],82],[[[108,[[86,[80]]]]],82],[[[109,[[86,[80]],[86,[2]],[86,[2]]]]],82],[[[110,[[86,[80]]]]],82],[151,82],[152,82],[153,82],[111,82],[[[112,[[86,[80]]]]],82],[[[113,[[86,[80]]]]],82],[114,82],[154,82],[155,82],[156,82],[157,82],[158,82],[[[115,[[86,[80]]]]],82],[[[159,[[86,[17]]]]],82],[[[116,[[86,[17]],[86,[29]]]]],82],[160,82],[161,82],[162,82],[163,82],[164,82],[165,82],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[82,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[82,[[11,[168]]]],0,0,0,0,0,0,0,0,[169],0,0,0,0,0,0,0,0,0,0,0,0,0,[82,[[11,[84]]]],0,0,[82,170],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],80],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[171,4]],[2],[2],[2],[2],[2],[2],0,[[]],[[]],[[]],[[]],[[172,55,[57,[56]]],[[22,[[21,[20]]]]]],[[],2],[[],2],[[]],[[]],[[],16],[[],16],[[],13],[[],13],[171],0,0,[[],11],[[],11],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[173,173],[174,174],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],175],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[[174,174],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[173,40],41],[[174,40],41],[[175,40],41],[2],[[175,2]],[[]],[[[54,[32]]],[[176,[32]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[2]]],2],0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[175,13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,[[[11,[2]]],175],0,0,[2],[[175,2]],[[[176,[32]]],4],[2],[[175,2]],0,0,[173,[[11,[174]]]],[[175,173],[[11,[174]]]],[175,13],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],0,0,[[[176,[32]],[15,[59]]],4],[[[176,[32]]],[[4,[[8,[59]]]]]],0,0,0,0,0,[177,35],0,[[]],[[]],[[]],[[]],[178,178],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],177],[2],[2],[2],[2],[2],[2],[[[15,[179]],35],2],[[178,40],41],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[],16],[[],16],[[],13],[[],13],[[],167],[[],35],[[],2],[177,178],[[178,[15,[179]]],2],[[178,[15,[179]]]],[180,[[22,[[21,[20]]]]]],0,[[]],[[],11],[[],11],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[181,[32]]],[[22,[[21,[20]]]]]],[182,182],[[]],0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[183,[32]],4]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[[182,182],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[54,[32]],[184,[4]],[78,[32]]]],0,[[182,40],41],[[185,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[186,187]],188],167],[[[189,[32]],[183,[32]],55,[57,[56]]],[[22,[[21,[20]]]]]],[[182,190]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[183,[32]]],182],0,0,0,[[[181,[32]]],63],[[191,[78,[32]],[57,[[66,[32]]]],177],[[4,[[192,[32]]]]]],0,0,0,[[[54,[32]]],17],0,0,0,[[[192,[32]]],4],[[[192,[32]],[54,[32]]],[[4,[185]]]],0,0,0,[[[192,[32]]],4],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[185,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[13,166],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[193,194]],[[193,88,195]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[193,196],0,[197,197],[198,198],[199,199],[194,194],[200,200],[195,195],[201,201],[202,202],[196,196],[203,203],[204,204],[205,205],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[15,[30]],90],[[4,[203]]]],[[[15,[30]],90],4],[[],197],[[],198],[[],199],[[],196],[[],193],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[206,[[26,[197]]]],[206,[[26,[198]]]],[206,[[26,[199]]]],[206,[[26,[194]]]],[206,[[26,[200]]]],[206,[[26,[195]]]],[206,[[26,[201]]]],[206,[[26,[202]]]],[206,[[26,[196]]]],[206,[[26,[203]]]],[206,[[26,[204]]]],[206,[[26,[205]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[203,[[4,[[8,[30]]]]]],[205,[[4,[[8,[30]]]]]],[[197,197],13],[[198,198],13],[[199,199],13],[[194,194],13],[[200,200],13],[[195,195],13],[[201,201],13],[[202,202],13],[[196,196],13],[[203,203],13],[[204,204],13],[[205,205],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,[[197,40],41],[[198,40],41],[[199,40],41],[[194,40],41],[[200,40],41],[[195,40],41],[[201,40],41],[[202,40],41],[[196,40],41],[[193,40],41],[[203,40],41],[[204,40],41],[[205,40],41],[207,197],[[]],[[]],[208,198],[209,199],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[203,88],0,0,0,0,0,0,[[[8,[204]]],205],0,0,0,0,0,0,[[197,210],26],[[198,210],26],[[199,210],26],[[194,210],26],[[200,210],26],[[195,210],26],[[201,210],26],[[202,210],26],[[196,210],26],[[203,210],26],[[204,210],26],[[205,210],26],[[205,88]],[[203,211]],[[205,211]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[204,205],[[[11,[196]]],193],0,0,0,[[],83],[212,[[22,[[21,[20]]]]]],0,[[[15,[30]],90],[[4,[203]]]],[[88,[15,[213]]],[[4,[[8,[30]]]]]],[203,[[4,[[8,[30]]]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[216,[214,215]]],[[22,[[21,[20]]]]]],0,[[[212,[214,215]]],[[11,[[57,[217]]]]]],0,[[[212,[[0,[117,214]],[0,[117,215]]]]],[[212,[[0,[117,214]],[0,[117,215]]]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[63,77,166],[[212,[214,215]]]],[2],[2],[2],[2],[2],[2],[2],[2],[[[212,[214,215]]],[[22,[[21,[20]]]]]],[2],[2],[2],[2],[[[212,[[0,[76,214]],[0,[76,215]]]],40],41],[[[218,[[0,[76,214]],[0,[76,215]]]],40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[218,[214,215]]],88],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],[[[212,[214,215]]],[[22,[[21,[20]]]]]],[[[218,[214,215]]],[[4,[[11,[214]]]]]],0,[[[219,[215]]],[[11,[211]]]],0,[[[212,[214,215]]],88],[[[218,[214,215]]],88],0,[[[212,[214,215]]],[[57,[220]]]],[[[218,[214,215]]],[[57,[220]]]],[[[212,[214,215]],88],4],[[[216,[214,215]]],63],[[63,77,166,[11,[221]],[11,[48]],[11,[[57,[217]]]]],[[212,[214,215]]]],[[63,77,166],[[218,[214,215]]]],[[[219,[215]]],[[22,[[21,[20]]]]]],0,0,[[[218,[214,215]],215],[[4,[88]]]],[[[212,[214,215]],203],4],[[[212,[214,215]],88,88],[[22,[[21,[20]]]]]],[[[218,[214,215]],88,88],[[4,[[219,[215]]]]]],[[[212,[203,205]],88]],[[[212,[214,215]],88]],[[[212,[214,215]]],[[22,[[21,[20]]]]]],[[[212,[214,215]]],[[22,[[21,[20]]]]]],0,0,0,[[]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[[212,[214,215]],215],[[22,[[21,[20]]]]]],[[[212,[214,215]],88,[11,[211]]]],[[[218,[214,215]],88,[11,[211]]]],0,[[]],[[]],[[]],[[]],[[63,77,166,[11,[221]],[11,[48]]],[[212,[203,205]]]],0,0,[222,83],[[]],[[]],[[],10],[[],10],[[],10],[2],[2],[[222,[212,[203,205]]],[[22,[[21,[20]]]]]],[2],0,[[222,40],41],[[]],[[]],[[],2],[[]],[[],16],[[],13],[[223,88]],[[222,88]],[[],11],[[]],[[],26],[[],26],[[],27],[[]],[[63,77,166,[11,[221]],[11,[48]]],223],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,80],[[220,88],80],0,[220,220],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[[15,[30]]],[[4,[224]]]],[[220,88,88],[[22,[[21,[20]]]]]],[[220,88],[[22,[[21,[20]]]]]],[[220,88],[[22,[[21,[20]]]]]],[[220,88,13],[[22,[[21,[20]]]]]],[88,80],[[220,88],80],[2],[225,226],[2],[2],[227,226],[2],[2],[2],[2],[2],[2],[2],[206,[[26,[224]]]],[2],[2],[2],[2],[2],[224,[[4,[[228,[[15,[30]]]]]]]],0,[63,166],[63,88],[[220,40],41],[[224,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[63,63,166],80],[[220,229],[[4,[8]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[63,13],[63,13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[220,80],[[220,88],[[22,[[21,[20]]]]]],[220,[[22,[[21,[20]]]]]],[13,166],[[63,77,166],220],[230,[[22,[[21,[20]]]]]],0,0,[220,63],0,[[220,88,[15,[30]]],[[22,[[21,[20]]]]]],[[220,88,[15,[30]]],[[22,[[21,[20]]]]]],[[220,88,88],[[22,[[21,[20]]]]]],[[224,210],26],0,[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[18,24],[[231,18],24],[232,2],[233,2],0,[234,234],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],233],[[],234],[[],231],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[232],[2],[232],[2],[2],[2],[2],[2],[[235,235],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[236,2],0,0,[[232,40],41],[[233,40],41],[[234,40],41],[[235,40],41],[[231,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],237],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[236,13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[234,[[4,[238]]]],0,[236,2],[[]],0,0,0,0,[[[11,[[57,[239]]]]],232],[[],2],[[232,2]],0,[[],235],0,[[236,240,2]],[[],18],[[],5],0,0,0,[[],233],0,0,[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[[57,[239]]]]],231],[236,4],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[241,241],[242,242],[[]],[[]],[[241,241],243],[[36,2]],[[],2],[[],243],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[241,241],13],[[],13],[[],13],[[],13],[[],13],[[],13],[244],[[245,40],41],[[241,40],41],[[242,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[245,237],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[241,[11,[6]]],13],[[241,241],13],[[241,29],13],[[245,234],[[4,[238]]]],0,0,0,0,0,0,[245],0,0,[[]],[[]],[[]],[[]],[[237,18,[11,[[57,[239]]]]],245],[[234,18,[57,[[246,[[61,[241,242]]]]]]],[[4,[247]]]],[[[248,[241,242]],29,[11,[6]]],[[249,[241,242]]]],[236,244],[247,[[11,[[4,[250]]]]]],[[[249,[241,242]]],11],[244,11],[247,[[4,[[11,[250]]]]]],[[[249,[241,242]]],11],[245,2],0,[247,235],[[241,241],[[11,[243]]]],0,0,[241],[2,[[8,[251]]]],0,[[],2],[[36,[15,[13]],252],[[8,[253]]]],[245,18],[247,5],0,0,0,[244],[245,233],0,[241,251],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[245,2,[11,[251]],[11,[251]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[245,236],4],0,0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[2],[2],[2],[2],[2],[2],0,[[254,254],13],[[254,40],41],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[255,256,24],4],[[]],[[]],[[],16],[[],16],[[],13],[[],13],[29,255],0,0,0,[[],11],[[],11],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[256,24]],[[]],[[]],[[255,257,24,236],4],0,0,[[]],[[]],[[]],[[]],[258,258],[[]],[[258,258],243],[[],243],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[2],[2],[2],[2],[2],[2],[[258,258],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[259,40],41],[[258,40],41],[[259,24],259],[[]],[[]],[[]],[[]],[[]],[259,[[15,[24]]]],0,[[],2],[[],2],[[]],[[]],[[],16],[[],16],[[],13],[[],13],[259],0,[259,2],[259,24],[24,259],[259,2],[[258,258],[[11,[243]]]],[[259,237],259],[[]],[[],11],[[],11],[[]],[[]],[259,2],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[260,261],[[262,[260]]]],[[263,264],[[262,[263]]]],[[207,265],[[262,[207]]]],[266,83],[[],84],[266,[[11,[85]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[260,[[262,[207]]]],[[[267,[[86,[80]]]]],266],[[[268,[[86,[80]]]]],266],[[[270,[[86,[269]]]]],266],[[[271,[[86,[269]]]]],266],[[[272,[[86,[80]]]]],266],[273,266],[[[275,[[86,[274]],[86,[274]]]]],266],[[[276,[[86,[80]]]]],266],[[[277,[[86,[80]]]]],266],[[[278,[[86,[80]]]]],266],[[[279,[[86,[80]]]]],266],[[[280,[[86,[80]]]]],266],[[[281,[[86,[80]]]]],266],[282,266],[[[283,[[86,[80]]]]],266],[284,[[262,[208]]]],[263,209],[266,[[11,[84]]]],[[209,285],[[11,[264]]]],0,0,0,0,[[[267,[117]]],[[267,[117]]]],[[[268,[117]]],[[268,[117]]]],[[[270,[117]]],[[270,[117]]]],[[[271,[117]]],[[271,[117]]]],[286,286],[[[272,[117]]],[[272,[117]]]],[273,273],[[[275,[117,117]]],[[275,[117,117]]]],[[[276,[117]]],[[276,[117]]]],[[[277,[117]]],[[277,[117]]]],[[[278,[117]]],[[278,[117]]]],[[[279,[117]]],[[279,[117]]]],[[[280,[117]]],[[280,[117]]]],[287,287],[[[288,[117]]],[[288,[117]]]],[[[281,[117]]],[[281,[117]]]],[289,289],[290,290],[282,282],[[[291,[117]]],[[291,[117]]]],[292,292],[[[283,[117]]],[[283,[117]]]],[293,293],[207,207],[294,294],[208,208],[209,209],[264,264],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[208,2],294],[208,[[15,[294]]]],0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[266,2,[8,[80]]]],[[],260],[[],284],[[],263],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[266,63],[206,[[26,[294]]]],[206,[[26,[264]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[207,207],13],[[294,294],13],[[208,208],13],[[209,209],13],[[264,264],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[[267,[[86,[80]]]]],[[26,[266]]]],[[[268,[[86,[80]]]]],[[26,[266]]]],[[[270,[[86,[269]]]]],[[26,[266]]]],[[[271,[[86,[269]]]]],[[26,[266]]]],[[[272,[[86,[80]]]]],[[26,[266]]]],[273,[[26,[266]]]],[[[275,[[86,[274]],[86,[274]]]]],[[26,[266]]]],[[[276,[[86,[80]]]]],[[26,[266]]]],[[[277,[[86,[80]]]]],[[26,[266]]]],[[[278,[[86,[80]]]]],[[26,[266]]]],[[[279,[[86,[80]]]]],[[26,[266]]]],[[[280,[[86,[80]]]]],[[26,[266]]]],[[[281,[[86,[80]]]]],[[26,[266]]]],[282,[[26,[266]]]],[[[283,[[86,[80]]]]],[[26,[266]]]],[[[267,[76]],40],41],[[[268,[76]],40],41],[[[270,[76]],40],41],[[[271,[76]],40],41],[[286,40],41],[[[272,[76]],40],41],[[273,40],41],[[[275,[76,76]],40],41],[[[276,[76]],40],41],[[[277,[76]],40],41],[[[278,[76]],40],41],[[[279,[76]],40],41],[[[280,[76]],40],41],[[287,40],41],[[[288,[76]],40],41],[[[281,[76]],40],41],[[289,40],41],[[290,40],41],[[282,40],41],[[[291,[76]],40],41],[[292,40],41],[[[283,[76]],40],41],[[266,40],41],[[266,40],41],[[293,40],41],[[207,40],41],[[294,40],41],[[208,40],41],[[209,40],41],[[264,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[198,208],[199,209],[[]],[[]],[[]],[[]],[295,[[262,[294]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[260,17],260],[207,17],[294,269],0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],[[297,[296]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[267,[[86,[80]]]]],266],[[[268,[[86,[80]]]]],266],[[[270,[[86,[269]]]]],266],[[[271,[[86,[269]]]]],266],[286,266],[[[272,[[86,[80]]]]],266],[273,266],[[[275,[[86,[274]],[86,[274]]]]],266],[[[276,[[86,[80]]]]],266],[[[277,[[86,[80]]]]],266],[[[278,[[86,[80]]]]],266],[[[279,[[86,[80]]]]],266],[[[280,[[86,[80]]]]],266],[287,266],[[[288,[[86,[80]]]]],266],[[[281,[[86,[80]]]]],266],[289,266],[290,266],[282,266],[[[291,[[86,[80]]]]],266],[292,266],[[[283,[[86,[80]]]]],266],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[63,13],[208,36],[208,36],[208,36],0,0,0,0,[[260,[86,[80]]],260],[207,63],[294,63],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],260],[298,293],[266,[[11,[168]]]],[208,2],[208,2],[169],[[284,285,296],[[262,[284]]]],[[284,285,296],[[262,[284]]]],[[284,296],[[262,[284]]]],[[260,299],[[262,[260]]]],[[284,299],[[262,[284]]]],[208,2],0,0,[293,28],[207,18],0,[[294,210],26],[[264,210],26],[266,[[11,[84]]]],[266,170],[208,2],0,0,[294,[[262,[295]]]],[207,72],[294,300],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[208,299],[[],80],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,[[262,[260]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[197,[[262,[207]]]],[72,[[262,[207]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[300,63,[11,[301]]],[[262,[301]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[208,2],0,[207,28],[[207,302],262],[[207,265],262],[[207,63],262],[[260,274],260],[293,99],[207,99],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[2],[303,304],[2],[305,306],[307,308],[2],[309,304],[2],[2],[310,308],[311,312],[2],[313,304],[2],[314,304],[2],[2],[315,304],[2],[316,312],[2],[317,304],[318,304],[2],[2],[319,304],[2],[320,304],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[321,63],[[]],[[]],[[]],[[]],[322],[322,322],[321,321],[[]],[[]],[[321,321],243],[[],243],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],322],[[],321],[2],[2],[2],[2],[2],[2],[322,2],[[322,322],13],[[321,321],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[322,40],41],[[321,40],41],[[]],[[]],[323,[[11,[321]]]],[[]],[[]],[63,[[11,[321]]]],[[]],[[]],[256,[[8,[323]]]],[[[0,[186,187]],188],167],[[321,190]],[[],2],[[],2],[[]],[[]],[[],16],[[],16],[[],13],[[],13],[323,13],0,[322,[[326,[[325,[[324,[323]]]]]]]],0,[[321,321],[[11,[243]]]],[[322,321]],[[]],[[]],[[],11],[[],11],[[]],[[]],[[],26],[[],26],[323,[[26,[321,327]]]],[[],26],[[],26],[[],27],[[],27],[[]],[[]],[167,322],0,0,0,0,0,0,0,0,0,0,[[[15,[253]]]],0,0,0,[[]],[[]],[[]],[[]],[328,[[4,[250]]]],0,0,[250,250],[[]],0,[[250,2],253],[250,[[15,[253]]]],0,[[250,2,250,2],243],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[],250],[2],[2],[2],[2],[2],[2],[[250,250],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[328,250,2,2],4],[[250,329],[[4,[250]]]],[[250,330,[11,[250]]]],[[250,40],41],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],0,[[]],[[]],[[],16],[[],16],[328,13],[250,13],[[],13],[[],13],0,[[[8,[253]]],250],[[],[[22,[[21,[20]]]]]],[250,2],[328,2],[250,2],0,0,[[328,250,2],4],0,0,0,0,0,0,0,0,0,[[250,2,2],250],0,0,[[]],[[],11],[[],11],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[250,330]],[[]],[[]],0,[[331,2],328],0,[[]],[[]],[[],10],[[],10],[[],10],[2],[2],[2],[[]],[[]],[[],2],[[]],[[],16],[[],13],[[5,8],332],[[[332,[333]]],[[22,[[21,[20]]]]]],0,0,[[],11],[[]],[[],26],[[],26],[[],27],[[]],0,[[]],[[]],[[],10],[[],10],[[],10],[[334,250],[[4,[250]]]],[2],[2],[2],[[]],[[]],[[],2],[[]],[[],16],[[],13],[5,334],[[[334,[333]]],[[22,[[21,[20]]]]]],0,0,0,0,[[],11],[[]],[[],26],[[],26],[[],27],[[]],0,0,0,0,0,0,0,0,0,0,0,[[335,2],335],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[335,336],[[337,337],243],0,[[],243],[[338,339,338],243],[[337,337],243],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[337,340],[337,340],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[337,337],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[336,2],[[4,[[11,[250]]]]]],[336,[[4,[[11,[250]]]]]],[336,4],[337,338],[340,338],[[341,40],41],[[337,40],41],[[338,40],41],[[340,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[337,337],13],[340,13],[337,13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[340,13],[337,338],[340,338],[337,[[4,[13]]]],[[5,341],[[4,[337]]]],[5,335],[250,340],[341,[[4,[[11,[250]]]]]],[336,[[22,[[21,[20]]]]]],[341,[[4,[[11,[250]]]]]],[[337,337],[[11,[243]]]],0,0,[[335,238],335],[[335,7],335],[[337,328],4],[[340,328],4],[[337,328,2],4],[[340,328,2],4],[336],[[336,337],4],0,0,0,0,0,0,[[337,2],250],[[340,2],250],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[336,4],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[5,2],335],0,[[]],[[]],[[342,[15,[9]]],8],[[],10],[[],10],[[],10],[2],[2],[2],[[]],[[]],[[],2],[[]],[[],16],[[],13],[[5,8,[8,[9]]],343],[[[343,[333]]],[[22,[[21,[20]]]]]],0,0,0,[[5,[8,[344]],[15,[9]]],[[4,[[8,[344]]]]]],[[],11],[[]],[[],26],[[],26],[[],27],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[74,[32]],265],[[22,[[21,[20]]]]]],[[[345,[32]],265],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[32]]],[[74,[32]]]],[[]],[[[74,[32]],346],4],[[[345,[32]],346],4],[[[74,[32]],347],[[22,[[21,[20]]]]]],[[[74,[32]],347],4],[[[345,[32]],347],4],0,0,0,0,0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[[345,[32]],348],4],[[207,[81,[32]]],[[4,[[74,[32]]]]]],[[[345,[32]]],349],[[203,350,19,[57,[[351,[171]]]]],[[4,[[11,[352]]]]]],[2],[2],[2],[2],[2],[2],[2],[2],[[[74,[32]]],167],[2],[2],[2],[2],[[[74,[32]]],[[22,[[21,[20]]]]]],[[[345,[32]]],4],0,0,[[[74,[32]],353],[[22,[[21,[20]]]]]],[[[345,[32]],353],4],0,0,0,0,0,0,[[[74,[32]],40],41],[[354,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[32]]],17],[[[74,[32]]],17],[354,17],0,[[[74,[32]]],293],[[[345,[32]]],293],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],[[[74,[32]]],167],[[[74,[32]]],35],[354,35],0,[[[74,[32]]],35],0,0,0,0,0,0,0,[[[74,[32]]],2],[[[74,[32]]],63],[354,63],0,[[352,[81,[32]]],[[74,[32]]]],[[80,[81,[32]],79],[[4,[[11,[[74,[32]]]]]]]],[[223,350,19,[57,[[351,[171]]]]],4],0,[[88,204,[11,[352]]],[[11,[352]]]],[[[74,[32]],180],[[22,[[21,[20]]]]]],0,0,0,0,[[[74,[32]],355],[[4,[349]]]],0,0,0,0,[[]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[[74,[32]]],[[22,[[21,[20]]]]]],[[[345,[32]]],4],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[],27],[[],27],[[],27],[[],27],[354],[[[74,[32]]],356],[[[345,[32]]],356],0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[[74,[32]],357,348],[[22,[[21,[20]]]]]],[[[345,[32]],357,348],[[4,[358]]]],0,[[[74,[32]]]],0,0,0,0,0,0,0,0,0,0,0,[[359,[57,[356]]],24],[[[360,[32]],[361,[32]],265],4],[[359,[362,[32]],29,[11,[363]],356],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[360,[32]]],4],0,[[[360,[32]],[364,[32]]],4],0,0,0,0,0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[[[360,[32]],[362,[32]],353],4],0,0,0,0,[[[360,[[0,[76,32]]]],40],41],[[359,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[359,13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,[[359,[364,[32]],[33,[32]],[78,[32]],58],4],[[359,[362,[32]],180],4],[359],0,[[350,[57,[65]],[11,[48]],2,[78,[32]],[33,[32]]],[[360,[32]]]],[[350,[57,[65]],[11,[48]],2],359],[[[360,[32]],[365,[32]]],4],[[[360,[32]],[366,[32]],[57,[356]],88],4],[[359,[362,[32]]],4],0,[[[360,[32]],367,[362,[32]]],4],[[359,368,367,[362,[32]]],4],[[369,[78,[32]],[50,[32]]],13],0,0,0,0,0,[[359,369,[57,[356]],[57,[239]]],[[11,[174]]]],0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[359,[362,[32]],180],4],[[[360,[32]],[370,[32]]],4],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[[362,[32]]],[[57,[356]]]],[[[361,[32]]],[[57,[356]]]],[[[365,[32]]],[[57,[356]]]],[[[370,[32]]],[[57,[356]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[360,[32]]],4],0,0,0,0,0,[[[360,[32]],357,348,[362,[32]]],[[4,[358]]]],[[359,368,357,348,[362,[32]]],[[4,[358]]]],0,[[[360,[32]],[366,[32]],369,223,195,[11,[237]]],4],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[4],0,[[],191],[2],[2],[2],[2],[2],[2],[[[351,[43]]]],[2],[2],[2],[[[351,[[0,[43,371,372]]]],40],41],[[191,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[55,[57,[56]]],[[22,[[21,[20]]]]]],[[[374,[43,373]],43,55,[57,[56]]],4],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],0,[[]],0,0,[[191,[0,[373,371,372]]],[[351,[43]]]],[[[374,[43,373]],[57,[[375,[43]]]]]],[[[374,[43,373]]],11],[[[374,[43,373]],43]],0,[[[351,[43]]],2],0,0,0,[[[374,[43,373]]]],[[[351,[43]]],13],[[[374,[43,373]]],13],[[],[[4,[13]]]],[[[351,[[0,[43,371]]]]],[[4,[13]]]],0,0,[13,[[22,[[21,[20]]]]]],[[[351,[[0,[43,371]]]],13],[[22,[[21,[20]]]]]],0,0,[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[]],[[]],[[]],0,[[]],[[]],[[[377,[[0,[376,186,117]]]]]],[[],10],[[],10],[[],10],[[],377],0,[2],[2],[2],0,[[[377,[76,76]],40],41],[[]],[[]],[[],2],[[]],[[],16],[[[377,[[0,[376,186,117]]]]],13],[[],13],[[[377,[[0,[376,186,117]]]]],2],[[[377,[[0,[376,186,117]]]]],11],[[[377,[[0,[376,186,117]]]],[0,[376,186,117]]],13],[[[377,[[0,[376,186,117]]]],[0,[376,186,117]]],13],[[],11],[[]],[[],26],[[],26],[[],27],[[]],0,0,0,0,0,0,0,0,0,0,[[],[[4,[55]]]],[378,[[4,[55]]]],[375,[[4,[55]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],0,0,[2,378],[[[57,[379]]],380],[[[8,[381]]],375],0,[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[380],[382],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[383,384],[[4,[250]]]],[[383,[8,[253]],[8,[253]],253,253],[[4,[250]]]],[[]],[[]],[[],10],[[],10],[[],10],[28,4],[2],[2],0,[2],[383,[[8,[2]]]],[[383,40],41],[[]],[[385,5],[[4,[383]]]],[[385,5],[[4,[383]]]],[[]],0,[[],2],[[]],[[],16],[[],13],[[294,294],[[4,[13]]]],0,[383,13],[[385,5],[[4,[383]]]],[[383,[8,[253]],2],[[4,[250]]]],[383,[[15,[13]]]],0,[383,[[15,[13]]]],[[],11],[[]],[[],26],[[],26],[[],27],[[]],0,0,0,[[339,250],25],[[]],[[]],[[]],[[]],[[386,387],[[262,[28]]]],[[386,387],[[262,[385]]]],0,[[339,250,2,250,2],243],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],387],[2],[2],[2],[2],[2],[2],[[339,250,329],[[4,[250]]]],[[339,250,330,[11,[250]]]],[[387,40],41],[[339,40],41],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[]],[[]],[[],16],[[],16],[[],13],[[],13],[[339,269],13],[[386,[8,[2]]],387],[[18,[11,[[8,[2]]]]],[[262,[339]]]],[18,339],0,0,0,[339,28],0,0,[339,385],0,[[],11],[[],11],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[339,250,330]],[[386,[15,[2]]],262],[[]],[[]],0,0,[[]],[[]],[[208,99],[[262,[388]]]],[[386,2],294],0,[[],10],[[],10],[[],10],[2],[2],[2],[[386,386],13],[[],13],[[],13],[[],13],[[],13],[[],13],[386,36],[[386,40],41],[[]],[[]],[[],2],[[]],[[],16],[[],13],[[389,99],[[262,[386]]]],[386,2],[386,2],[386,2],[386,36],[386,2],[386,36],[386,2],[386,385],0,[386,63],[386,2],[[],11],[[]],[[],26],[[],26],[[],27],[386,28],0,[386,36],[386,99],[[]],0,0,0,0,[342,[[57,[390]]]],[[342,250],[[26,[384,82]]]],[[]],[[]],[[342,63],2],[[342,2],63],[342,[[15,[294]]]],0,[[],10],[[],10],[[],10],[[342,63],13],[2],[2],[2],[[342,342],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[342,2],2],[342,[[15,[294]]]],[[342,40],41],[[]],[[208,99],[[262,[342]]]],[[]],[[],2],[[]],[[],16],[[],13],[[342,63],13],[[342,63],13],[[[8,[294]],99,2,2],[[262,[342]]]],[342,2],[342,2],[[[44,[80,80]],63],[[262,[2]]]],[342,2],0,[342,36],[342,28],0,[342,2],[342,2],[[],11],[[]],[[],26],[390,[[26,[342]]]],[[[57,[390]]],[[26,[342]]]],[[],26],[[],27],[342,2],0,[342,36],[342,99],[[]],0,[[]],[[]],[[],10],[[],10],[[],10],[2],[2],[2],[[]],[[]],[[349,355,391],[[22,[[21,[20]]]]]],[[],2],[[]],[[],16],[[],13],[[[57,[352]],29,19],349],[[349,355,392],[[22,[[21,[20]]]]]],[349,28],[[349,[11,[29]]],29],0,[[],11],[[]],[[],26],[[],26],[[],27],0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[47,12]],0,[[],84],[393,80],[394,[[11,[85]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[394,[[11,[84]]]],[23,23],[47,47],[12,12],[395,395],[393,393],[59,59],[[]],[[]],[[]],[[]],[[]],[[]],[12,13],0,[23,[[11,[35]]]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],47],[[],393],[[],59],[[],396],[393,[[22,[[21,[20]]]]]],[[397,393],[[22,[[21,[20]]]]]],[12,13],0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[394,63],[206,[[26,[393]]]],[206,[[26,[59]]]],[206,[[26,[393]]]],[2],[398],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[394,394],13],[[393,393],13],[[59,59],13],[[399,399],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[12,393],0,[12,80],[47,2],[12,80],[23,[[57,[[351,[171]]]]]],0,0,[12,167],0,0,[47,36],0,[[398,40],41],[[397,40],41],[[23,40],41],[[47,40],41],[[12,40],41],[[394,40],41],[[394,40],41],[[395,40],41],[[393,40],41],[[393,40],41],[[59,40],41],[[396,40],41],[[399,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,[[26,[393,394]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[47,49],[[8,[12]]]],[[[0,[186,187]],188],167],[[[0,[186,187]],188],167],[[393,190]],[[59,190]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[395,394],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[23,400],47],[47,400],[12,400],0,0,[23,2],[23,[[15,[47]]]],0,[23,[[8,[393]]]],[[12,13]],[12],[[23,36,36,[11,[35]]],23],[12,59],0,[[59,19,[57,[[351,[171]]]]],398],[[63,77],397],[401,402],[[19,[57,[[351,[171]]]]],23],[400,47],[[59,19,[57,[[351,[171]]]]],12],[[],[[297,[47]]]],[403,[[4,[[11,[250]]]]]],[402,[[22,[[21,[20]]]]]],0,0,0,[63,[[26,[393,394]]]],0,0,[169],0,[[],393],[[12,404],[[22,[[21,[20]]]]]],[[397,12,404],[[22,[[21,[20]]]]]],0,[[47,393],[[11,[12]]]],[403,28],[[393,210],26],[[59,210],26],[394,[[11,[84]]]],0,0,[63,80],[[397,63],80],0,0,0,0,0,[12,11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],80],[[],80],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[393,403,396],[[22,[[21,[20]]]]]],[[397,393,403,396],[[22,[[21,[20]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[401,[[4,[405]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[406,28],[[4,[11]]]],[[406,2,106],[[4,[11]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],0,[[63,403,77],407],[[12,77,5,408,6],401],[[12,383,[22,[[21,[409]]]]],[[4,[405]]]],[405,[[22,[[21,[20]]]]]],0,0,0,0,0,0,0,[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[407,[11,[[44,[80,80]]]],396],[[4,[[11,[399]]]]]],[[407,396],[[4,[[11,[399]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[6,408,[57,[342]],410,411],[[11,[412]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[413,384],[[26,[414,415]]]],[[416,384],[[26,[414,415]]]],[[417,384],[[26,[414,415]]]],[[417,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],0,[[411,35,35],413],[[6,411],416],0,[[408,411,418],[[4,[[8,[[21,[419]]]]]]]],[413,411],[416,411],[417,411],0,0,0,0,[[6,64],13],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],0,[[]],[[]],[[]],0,0,0,[[]],[[]],[420,4],[[],10],[[],10],[[],10],[2],[2],[2],[[]],[[]],[[],2],0,[[]],[[],16],[[],13],[[],11],[[]],[[],26],[[],26],[[80,77,28,[11,[421]],2],[[4,[420]]]],[[],27],[[]],[[420,250],4],0,0,0,[[]],[[]],[[]],[[]],[[[422,[117]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[[422,[117]]],117],[2],[2],[2],[[[422,[117]]],117],[2],[2],[2],[[[423,[76]],40],41],[[]],[[]],[[]],[[]],[423,57],[[],2],[[],2],0,0,[[]],[[]],[[],16],[[],16],[[],13],[[],13],[[],424],[[]],[[[423,[117]]],[[422,[117]]]],0,[[],423],[[],11],[[],11],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[]],[[]],0,0,0,0,0,0,0,0,[[352,[11,[29]],88,36]],[[356,425]],[[352,425]],[[352,298,88]],[[]],[[]],[[]],[[]],[[]],[[]],[352,352],[[]],[356,29],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[356,[[57,[352]]]],[356,88],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,0,[352,29],0,0,[[356,40],41],[[425,40],41],[[352,40],41],[[356,24]],[[356,298,88,24]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],[352,88],0,0,0,[352,[[57,[259]]]],0,[356,298],[352,298],0,[352,24],[[352,88,[57,[259]],[57,[23]],29]],[[356,88,[57,[259]],[57,[23]]]],[352,18],[[356,29]],[352,[[57,[23]]]],0,[[]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[352,28],0,[[]],[[]],[[]],[[298,88,24,19,[57,[[351,[171]]]]],352],[352,356],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[366,[32]]],[[366,[32]]]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[426,[15,[30]]],4],[[[366,[32]],427],4],[[[366,[32]]],4],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[428,322,[8,[30]]],4],[[[366,[[0,[76,32]]]],40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],13],[[],13],[[],13],0,[[17,[57,[32]]],[[366,[32]]]],[[[366,[32]],29],4],[[[366,[32]],29],[[4,[[22,[[21,[409]]]]]]]],[[[366,[32]]],17],0,0,[[]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[[366,[32]],29,[15,[30]]],[[4,[167]]]],[[[366,[32]],29,322,[11,[256]]],[[4,[429]]]],0,0,0,[[15,35],60],[[]],[[]],[[],10],[[],10],[[],10],[2],[2],[2],[[35,35],35],[[]],[[]],[[[15,[59]],[15,[233]],13],[[8,[6]]]],[[430,[15,[59]],[15,[233]],13],[[8,[6]]]],[[],2],[[]],[[],16],[[],13],[[],11],[[]],[[],26],[[],26],[[],27],[[]],0,0,0,0,0,[[348,2],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[257,28],4],[[348,28],4],[[348,[44,[80,253]]],4],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[256,256],13],[[257,257],13],[[[44,[80,253]]],2],[[256,40],41],[[257,40],41],[[348,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[431,13],[256,13],[[],13],[[],13],[[],13],[[],13],0,[[[44,[80,253]]],[[4,[431]]]],[28,256],[[28,2],348],[[295,2],[[4,[253]]]],[431,2],0,0,[348,256],0,[[348,431],[[4,[432]]]],[[348,431],[[4,[432]]]],[[348,[44,[80,253]]],4],0,[348,[[15,[295]]]],0,[348,28],0,[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[],27],[[],27],[[295,253],4],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[433,[15,[30]]],[[4,[256]]]],[[],434],[2],[2],[2],[2],[2],[2],[[434,256,[8,[30]]],4],[[]],[[]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[],16],[[],16],[[],13],[[],13],0,[[[15,[323]]],433],[[],434],[[],11],[[],11],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],27],[[],27],[[]],[[]],[[28,[15,[295]]],[[11,[80]]]]],"c":[6392],"p":[[3,"ChunkReaderBuilder"],[15,"usize"],[3,"ChunkReaderImpl"],[6,"Result"],[6,"ProjectedSchemaRef"],[6,"TimestampRange"],[6,"BoxedBatchReader"],[3,"Vec"],[3,"OrderOption"],[3,"Compat"],[4,"Option"],[3,"FileHandle"],[15,"bool"],[3,"Expr"],[15,"slice"],[3,"Request"],[3,"RegionId"],[6,"RegionSchemaRef"],[6,"AccessLayerRef"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"LevelMetas"],[6,"MemtableRef"],[3,"Chunk"],[4,"Result"],[3,"TypeId"],[6,"SchemaRef"],[6,"SequenceNumber"],[15,"u8"],[4,"CompactionStrategy"],[8,"LogStore"],[6,"CompactionPickerRef"],[3,"TimeBuckets"],[15,"i64"],[8,"Iterator"],[3,"NoopCompactionRequest"],[3,"NoopCompactionScheduler"],[3,"NoopCompactionPicker"],[3,"Formatter"],[6,"Result"],[3,"NoopCompactionTask"],[8,"Request"],[3,"HashMap"],[3,"PickerContext"],[3,"LeveledTimeWindowPicker"],[3,"LevelMeta"],[3,"Duration"],[3,"Timestamp"],[3,"CompactionRequestImpl"],[3,"CompactionTaskImpl"],[3,"CompactionOutput"],[3,"CompactionHandler"],[3,"FlushRegionRequest"],[6,"BoxedRateLimitToken"],[3,"Notify"],[3,"Arc"],[3,"ReadableSize"],[3,"FileMeta"],[3,"HashSet"],[3,"BTreeMap"],[3,"TwcsPicker"],[15,"str"],[4,"TimeUnit"],[3,"EngineConfig"],[3,"RegionMap"],[3,"EngineImpl"],[4,"RegionSlot"],[3,"EngineContext"],[3,"EngineInner"],[3,"CloseOptions"],[3,"RegionDescriptor"],[3,"CreateOptions"],[3,"RegionImpl"],[3,"SlotGuard"],[8,"Debug"],[3,"Operator"],[6,"CompactionSchedulerRef"],[3,"OpenOptions"],[3,"String"],[3,"StoreConfig"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"BatchMissingColumnSnafu"],[6,"ManifestVersion"],[3,"InvalidScanIndexSnafu"],[6,"ProtocolVersion"],[3,"ManifestProtocolForbidReadSnafu"],[3,"ManifestProtocolForbidWriteSnafu"],[3,"DecodeMetaActionListSnafu"],[3,"InvalidRegionStateSnafu"],[3,"WalDataCorruptedSnafu"],[3,"SequenceNotMonotonicSnafu"],[3,"ClosedRegionSnafu"],[3,"BuildBatchSnafu"],[15,"u32"],[3,"WriteToOldVersionSnafu"],[3,"NotInSchemaToCompatSnafu"],[3,"CompatReadSnafu"],[3,"NoDefaultToReadSnafu"],[3,"UnknownColumnSnafu"],[3,"RequestTooLargeSnafu"],[4,"ConcreteDataType"],[3,"TypeMismatchSnafu"],[3,"HasNullSnafu"],[3,"UnequalLengthsSnafu"],[3,"BatchCorruptedSnafu"],[3,"MoreColumnThanExpectedSnafu"],[3,"DecodeParquetTimeRangeSnafu"],[3,"RateLimitedSnafu"],[3,"IllegalSchedulerStateSnafu"],[3,"ManifestCheckpointSnafu"],[3,"DuplicateFlushSnafu"],[8,"Clone"],[3,"InvalidRegionDescSnafu"],[3,"WriteParquetSnafu"],[3,"WriteBufferSnafu"],[3,"NewRecordBatchSnafu"],[3,"ReadObjectSnafu"],[3,"WriteObjectSnafu"],[3,"DeleteObjectSnafu"],[3,"CompressObjectSnafu"],[3,"DecompressObjectSnafu"],[3,"ListObjectsSnafu"],[3,"Utf8Snafu"],[3,"EncodeJsonSnafu"],[3,"DecodeJsonSnafu"],[3,"WriteWalSnafu"],[3,"EncodeWalHeaderSnafu"],[3,"DecodeWalHeaderSnafu"],[3,"WaitFlushSnafu"],[3,"ReadlineSnafu"],[3,"ReadParquetSnafu"],[3,"ReadWalSnafu"],[3,"MarkWalObsoleteSnafu"],[3,"DeleteWalNamespaceSnafu"],[3,"ConvertStoreSchemaSnafu"],[3,"InvalidRawRegionSnafu"],[3,"InvalidProjectionSnafu"],[3,"PushBatchSnafu"],[3,"FilterColumnSnafu"],[3,"InvalidAlterRequestSnafu"],[3,"AlterMetadataSnafu"],[3,"CreateDefaultSnafu"],[3,"CreateDefaultToReadSnafu"],[3,"ConvertChunkSnafu"],[3,"CreateRecordBatchSnafu"],[3,"DecodeArrowSnafu"],[3,"EncodeArrowSnafu"],[3,"ParseSchemaSnafu"],[3,"StartManifestGcTaskSnafu"],[3,"StopManifestGcTaskSnafu"],[3,"StopSchedulerSnafu"],[3,"DeleteSstSnafu"],[3,"TtlCalculationSnafu"],[3,"CompactTaskCancelSnafu"],[3,"StartPickTaskSnafu"],[3,"StopPickTaskSnafu"],[3,"ConvertColumnsToRowsSnafu"],[3,"SortArraysSnafu"],[3,"BuildPredicateSnafu"],[3,"JoinSnafu"],[4,"CompressionType"],[15,"u64"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"FilePurgeRequest"],[3,"FilePurgeHandler"],[3,"RegionStatus"],[4,"FlushType"],[3,"SizeBasedStrategy"],[3,"FlushJob"],[3,"PickerConfig"],[3,"FlushPicker"],[8,"FlushItem"],[4,"FlushReason"],[3,"AutoFlushFunction"],[4,"FlushKey"],[4,"FlushRequest"],[3,"Sender"],[3,"FlushHandle"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[3,"FlushHandler"],[8,"Hasher"],[3,"SchedulerConfig"],[3,"FlushScheduler"],[3,"RegionManifestDataBuilder"],[3,"RegionChange"],[3,"RegionEdit"],[3,"RegionManifestData"],[3,"RawRegionMetadata"],[3,"RawColumnsMetadata"],[3,"RawColumnFamiliesMetadata"],[3,"RegionRemove"],[3,"RegionTruncate"],[3,"RegionVersion"],[3,"RegionCheckpoint"],[4,"RegionMetaAction"],[3,"RegionMetaActionList"],[8,"Deserializer"],[3,"RegionMetadata"],[3,"ColumnsMetadata"],[3,"ColumnFamiliesMetadata"],[8,"Serializer"],[3,"ProtocolAction"],[3,"ManifestImpl"],[8,"Serialize"],[8,"Checkpoint"],[8,"MetaAction"],[3,"ManifestGcTask"],[8,"Checkpointer"],[3,"ManifestImplInner"],[3,"MetaActionIteratorImpl"],[3,"ManifestObjectStore"],[15,"u16"],[3,"RegionManifestCheckpointer"],[6,"RegionManifest"],[3,"CheckpointMetadata"],[3,"DELTA_RE"],[3,"Regex"],[3,"CHECKPOINT_RE"],[8,"AsRef"],[8,"Fn"],[3,"ObjectStoreLogIterator"],[3,"DefaultMemtableBuilder"],[3,"AllocTracker"],[3,"MemtableStats"],[3,"IterContext"],[4,"RowOrdering"],[3,"KeyValues"],[6,"MemtableId"],[6,"BoxedBatchIterator"],[8,"FlushStrategy"],[4,"OpType"],[3,"InnerKey"],[3,"RowValue"],[4,"Ordering"],[3,"IterRow"],[3,"BTreeMemtable"],[3,"RwLock"],[3,"BTreeIterator"],[3,"Range"],[3,"MapIterWrapper"],[3,"Batch"],[4,"Value"],[8,"RowsProvider"],[6,"VectorRef"],[3,"SliceIndex"],[3,"Inserter"],[3,"Payload"],[3,"Mutation"],[3,"RangeKey"],[3,"MemtableVersion"],[3,"RegionMetadataBuilder"],[3,"ColumnFamilyDescriptor"],[6,"Result"],[3,"ColumnFamiliesMetadataBuilder"],[3,"ColumnFamilyMetadata"],[3,"AlterRequest"],[4,"Error"],[3,"ColNameExistsSnafu"],[3,"CfNameExistsSnafu"],[6,"ColumnId"],[3,"CfIdExistsSnafu"],[3,"ColIdExistsSnafu"],[3,"ReservedColumnSnafu"],[3,"MissingTimestampSnafu"],[6,"VersionNumber"],[3,"InvalidAlterVersionSnafu"],[3,"AddExistColumnSnafu"],[3,"AddNonNullColumnSnafu"],[3,"DropAbsentColumnSnafu"],[3,"DropKeyColumnSnafu"],[3,"DropInternalColumnSnafu"],[3,"MetaNotFoundSnafu"],[3,"InvalidIndexSnafu"],[3,"InvalidProjectionSnafu"],[3,"ColumnsMetadataBuilder"],[6,"ColumnFamilyId"],[3,"InvalidSchemaSnafu"],[3,"ToColumnSchemaSnafu"],[3,"ParseMetaIntSnafu"],[3,"BuildColumnDescriptorSnafu"],[3,"ConvertArrowSchemaSnafu"],[3,"ConvertChunkSnafu"],[3,"ConvertSchemaSnafu"],[3,"RegionMetaImpl"],[3,"ColumnMetadata"],[3,"ColumnSchema"],[3,"ColumnDescriptor"],[15,"array"],[6,"RegionMetadataRef"],[3,"RowKeyDescriptor"],[6,"Metadata"],[8,"FromStr"],[3,"AddColumn"],[3,"CREATE_REGION_UPDATE_MANIFEST"],[3,"Histogram"],[3,"FLUSH_REQUESTS_TOTAL"],[6,"IntCounterVec"],[3,"FLUSH_ERRORS_TOTAL"],[6,"IntCounter"],[3,"FLUSH_ELAPSED"],[3,"FLUSH_BYTES_TOTAL"],[3,"REGION_COUNT"],[6,"IntGauge"],[3,"LOG_STORE_WRITE_ELAPSED"],[3,"COMPACT_ELAPSED"],[3,"MERGE_ELAPSED"],[3,"WRITE_BUFFER_BYTES"],[3,"MEMTABLE_WRITE_ELAPSED"],[3,"PREPROCESS_ELAPSED"],[3,"WINDOW_SCAN_ELAPSED"],[3,"WINDOW_SCAN_ROWS_PER_WINDOW"],[4,"MutationType"],[3,"WalHeader"],[15,"i32"],[3,"Iter"],[3,"Cloned"],[3,"FilterMap"],[3,"DecodeError"],[3,"BatchBuilder"],[3,"BooleanVector"],[6,"BitVec"],[8,"IntoIterator"],[3,"ChainReader"],[8,"BatchReader"],[3,"DedupReader"],[3,"MergeReaderBuilder"],[3,"MergeReader"],[3,"Node"],[3,"RowCursor"],[3,"ProjectedSchema"],[3,"BatchCursor"],[4,"Source"],[3,"StoreSchema"],[3,"WindowedReader"],[6,"ArrayRef"],[3,"RegionInner"],[3,"CloseContext"],[3,"CompactContext"],[3,"WriteBatch"],[3,"SnapshotImpl"],[6,"MemtableBuilderRef"],[3,"LocalScheduler"],[3,"Version"],[3,"FlushContext"],[3,"SharedData"],[3,"ReadContext"],[3,"VersionControl"],[3,"WriteContext"],[3,"WriteResponse"],[3,"WriterInner"],[3,"RegionWriter"],[3,"AlterContext"],[3,"WriterContext"],[6,"RecoveredMetadata"],[3,"WriterCompactRequest"],[3,"DropContext"],[3,"Wal"],[6,"RecoveredMetadataMap"],[3,"Mutex"],[6,"SharedDataRef"],[3,"TruncateContext"],[8,"Send"],[8,"Sync"],[8,"Handler"],[3,"HandlerLoop"],[3,"CascadeRateLimiter"],[8,"Eq"],[3,"DedupDeque"],[3,"MaxInflightTaskLimiter"],[3,"AtomicUsize"],[3,"MaxInflightLimiterToken"],[6,"BoxedRateLimiter"],[3,"CompositeToken"],[3,"ReadAdapter"],[3,"RecordBatch"],[6,"StoreSchemaRef"],[3,"RegionSchema"],[3,"Projection"],[3,"Schema"],[6,"ColumnsMetadataRef"],[3,"Schema"],[3,"GetRequest"],[3,"ScanRequest"],[3,"FileId"],[3,"ParseIdError"],[3,"ParseIdSnafu"],[3,"WriteOptions"],[3,"FsAccessLayer"],[3,"FileHandleInner"],[3,"SstInfo"],[6,"Level"],[3,"ParquetReader"],[3,"LazyParquetBatchReader"],[4,"Source"],[3,"ReadOptions"],[3,"ChunkStream"],[3,"FileMetaData"],[3,"ParquetWriter"],[3,"Predicate"],[8,"Stream"],[3,"SchemaDescriptor"],[3,"ProjectionMask"],[3,"RowFilter"],[3,"FastTimestampRowFilter"],[3,"BooleanArray"],[4,"ArrowError"],[3,"PlainTimestampRowFilter"],[3,"DatafusionArrowPredicate"],[6,"SchemaRef"],[8,"ArrowPredicate"],[3,"BufferedWriter"],[3,"WriterProperties"],[3,"TxnGuard"],[3,"CowCell"],[3,"DynGuard"],[3,"VersionEdit"],[3,"WalHeaderDecoder"],[8,"Entry"],[3,"WalHeaderEncoder"],[6,"Id"],[3,"PlainWindowInference"],[3,"NameToVector"],[3,"RecordBatch"],[3,"PayloadDecoder"],[3,"PayloadEncoder"],[8,"Encoder"],[8,"Decoder"],[8,"Picker"],[8,"CompactionTask"],[13,"BatchMissingColumn"],[13,"NotInSchemaToCompat"],[13,"CreateDefaultToRead"],[13,"NoDefaultToRead"],[13,"CompressObject"],[13,"DecompressObject"],[13,"WriteToOldVersion"],[13,"InvalidScanIndex"],[13,"WriteParquet"],[13,"NewRecordBatch"],[13,"ReadObject"],[13,"WriteObject"],[13,"DeleteObject"],[13,"ListObjects"],[13,"Utf8"],[13,"EncodeJson"],[13,"DecodeJson"],[13,"EncodeWalHeader"],[13,"DecodeWalHeader"],[13,"WaitFlush"],[13,"Readline"],[13,"ReadParquet"],[13,"DecodeArrow"],[13,"EncodeArrow"],[13,"StopScheduler"],[13,"DeleteSst"],[13,"CompactTaskCancel"],[13,"ConvertColumnsToRows"],[13,"SortArrays"],[13,"JoinError"],[13,"TypeMismatch"],[13,"UnequalLengths"],[13,"ConvertStoreSchema"],[13,"SequenceNotMonotonic"],[13,"InvalidRegionDesc"],[13,"WriteBuffer"],[13,"WriteWal"],[13,"ManifestProtocolForbidRead"],[13,"ManifestProtocolForbidWrite"],[13,"DecodeMetaActionList"],[13,"InvalidRegionState"],[13,"ReadWal"],[13,"MarkWalObsolete"],[13,"WalDataCorrupted"],[13,"DeleteWalNamespace"],[13,"InvalidRawRegion"],[13,"ClosedRegion"],[13,"InvalidProjection"],[13,"PushBatch"],[13,"BuildBatch"],[13,"FilterColumn"],[13,"InvalidAlterRequest"],[13,"AlterMetadata"],[13,"CreateDefault"],[13,"CompatRead"],[13,"ConvertChunk"],[13,"UnknownColumn"],[13,"CreateRecordBatch"],[13,"RequestTooLarge"],[13,"HasNull"],[13,"BatchCorrupted"],[13,"ParseSchema"],[13,"MoreColumnThanExpected"],[13,"DecodeParquetTimeRange"],[13,"IllegalSchedulerState"],[13,"StartManifestGcTask"],[13,"StopManifestGcTask"],[13,"TtlCalculation"],[13,"ManifestCheckpoint"],[13,"DuplicateFlush"],[13,"StartPickTask"],[13,"StopPickTask"],[13,"BuildPredicate"],[13,"RateLimited"],[13,"Region"],[8,"MemtableBuilder"],[8,"Memtable"],[8,"BatchIterator"],[13,"ParseMetaInt"],[13,"BuildColumnDescriptor"],[13,"InvalidAlterVersion"],[13,"CfIdExists"],[13,"ColIdExists"],[13,"MetaNotFound"],[13,"ColNameExists"],[13,"CfNameExists"],[13,"InvalidSchema"],[13,"ReservedColumn"],[13,"MissingTimestamp"],[13,"ToColumnSchema"],[13,"ConvertArrowSchema"],[13,"InvalidIndex"],[13,"ConvertChunk"],[13,"ConvertSchema"],[13,"InvalidProjection"],[13,"AddExistColumn"],[13,"AddNonNullColumn"],[13,"DropAbsentColumn"],[13,"DropKeyColumn"],[13,"DropInternalColumn"],[8,"BatchOp"],[8,"Scheduler"],[8,"RateLimiter"],[8,"RateLimitToken"],[8,"CompatWrite"],[8,"AccessLayer"],[8,"WindowInfer"]]},\
"store_api":{"doc":"Storage related APIs","t":"AAAAAAAAAIGKNDENDNDLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMDQQIQKKLLKKAKMALLLLLLKAKKKKLLLLLLIGQGQGKKKQIQGKGIKIQQQQQQQQIRRIIGIQQIQAKKKKKKKKKKKKKKKKKKKKKKKLLAKDGRDRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLFLLLLLLLLLLLLLLLQQQIIKKKKKKKKKKDNDNDNDNDNDEDDGGNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLMMMMMMMMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMRRRFFFFNNIGELLLLLLLLLLLLLLLKKKLLLKKKLKKLLLLLLLDENNNENNNNNNNNNNDDDDDDDDDDEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMMMMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDNEDNNDIDDEDDEDDEGGDDEEDNNNNNDQQQQQNNDENDDNSNNNNNNRRNNQNDNNDQIQDDEGDIGGDDDEDDDDGGIQINGNNNDNNNNNNNNNNNNNDIQDLKLMLLLLLMLLLLLLLLLLLLLLMMALLLLLLLLKKLLLLLMMMMMMMMMKMMLALLLLLLLKMMMLLLMMLMMMLKMALLLLKMKKLLLLLALLLLLLLLLLLLLLLLLLLLMMMMLLKMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLKMMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMLLLLLMMMLLMLLMMALLMMLKLMMMMMMMMMLLKLLLLKMMMMLKMKMMAMAAMMKKKMLLLAKLLLLLLMMMLLLMMLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLALLLLKLKLLMMMLLLLLMMLLLKMMKMMDIQLLMLLLLLLLKLLKLLLLLKLSRRHRNRNRRDERNNNRLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLDDEDDEGGRRRDDEGDGGDDEGNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMMMLLLMMLLLLLMMLLLLLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMLLLMMMMMMLLLLLLLLLLLLLLMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRDEDDQDQIRRRNDLLLLLLLLLLLLLLLLLLLLLLLLKKMMKLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLMMKMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMIKKDDQDENNNQNNIDQDQKLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKMKLLLLLKMLLLLLLMLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLKMMLLKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLMMKKDNEDNQDDILLLLLLLLLLLLLLLLLLLLKMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMDDDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLQDQIMLLLLLLLLLKLLLKKLLLLLLLRG","n":["data_source","error","logstore","manifest","metadata","path_utils","region_engine","region_request","storage","DataSource","DataSourceRef","get_stream","BuildColumnDescriptor","BuildColumnDescriptorSnafu","Error","InvalidDefaultConstraint","InvalidDefaultConstraintSnafu","InvalidRawRegionRequest","InvalidRawRegionRequestSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cause","clone","clone","clone","clone_into","clone_into","clone_into","constraint","debug_fmt","description","err","fail","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","into","into","into","into","into_error","into_error","into_error","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","next","provide","source","status_code","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","constraint","err","error","location","location","location","source","AppendResponse","Entry","Error","LogStore","Namespace","append","append_batch","borrow","borrow_mut","create_namespace","delete_namespace","entry","entry","entry_id","entry_stream","fmt","from","from_subset","into","into_request","is_in_subset","list_namespaces","namespace","namespace","obsolete","read","stop","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Entry","Epoch","Error","Id","Namespace","Offset","data","id","namespace","Entry","EntryStream","Error","SendableEntryStream","start_id","Id","Namespace","id","Checkpoint","Checkpoint","Error","Error","Error","Error","Error","Error","Iter","LogIterator","MAX_VERSION","MIN_VERSION","Manifest","ManifestLogStorage","ManifestVersion","MetaAction","MetaAction","MetaAction","MetaActionIterator","MetaActionIterator","action","decode","decode","delete","delete_all","delete_checkpoint","delete_until","do_checkpoint","encode","encode","last_checkpoint","last_version","last_version","load_checkpoint","load_last_checkpoint","next_action","next_log","save","save_checkpoint","scan","scan","set_prev_version","set_protocol","set_protocol","start","stop","storage","update","ProtocolAction","ProtocolVersion","READER_VERSION","VersionHeader","WRITER_VERSION","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","into","into","into_request","into_request","is_in_subset","is_in_subset","is_readable","is_writable","min_reader_version","min_writer_version","new","prev_version","serialize","serialize","supported_protocol_version","to_owned","to_owned","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Error","Error","Iter","LogIterator","ManifestLogStorage","delete","delete_all","delete_checkpoint","delete_until","load_checkpoint","load_last_checkpoint","next_log","save","save_checkpoint","scan","ColumnMetadata","ConvertDatatypes","ConvertDatatypesSnafu","InvalidMeta","InvalidMetaSnafu","InvalidRawRegionRequest","InvalidRawRegionRequestSnafu","InvalidRegionRequest","InvalidRegionRequestSnafu","InvalidSchema","InvalidSchemaSnafu","MetadataError","RegionMetadata","RegionMetadataBuilder","RegionMetadataRef","Result","SerdeJson","SerdeJsonSnafu","SkippedFields","add_columns","alter","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","bump_version","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_by_id","column_by_name","column_id","column_index_by_id","column_metadatas","column_metadatas","column_schema","debug_fmt","description","deserialize","deserialize","drop_columns","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","err","fail","fail","fail","field_columns","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_existing","from_json","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id_to_index","id_to_index","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","next","primary_key","primary_key","primary_key","primary_key_columns","primary_key_index","provide","push_column_metadata","reason","region_id","region_id","region_id","schema","schema","schema_version","schema_version","semantic_type","serialize","serialize","source","status_code","time_index","time_index","time_index_column","time_index_field","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_column_def","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","validate_column_metadata","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","err","err","error","location","location","location","location","location","location","reason","region_id","source","source","CLUSTER_DIR","DATA_DIR","WAL_DIR","region_dir","region_name","table_dir","table_dir_with_catalog_and_schema","Follower","Leader","RegionEngine","RegionEngineRef","RegionRole","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_ref","from_subset","get_metadata","handle_query","handle_request","into","into_request","is_in_subset","name","region_disk_usage","role","serialize","set_writable","stop","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","AddColumn","AddColumnLocation","AddColumns","After","Alter","AlterKind","Close","Compact","Create","Delete","Drop","DropColumns","First","Flush","Open","Put","RegionAlterRequest","RegionCloseRequest","RegionCompactRequest","RegionCreateRequest","RegionDeleteRequest","RegionDropRequest","RegionFlushRequest","RegionOpenRequest","RegionPutRequest","RegionReadRequest","RegionRequest","RegionTruncateRequest","Truncate","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","column_metadata","column_metadatas","default","engine","engine","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","kind","location","need_alter","need_alter","need_alter","options","options","primary_key","region_dir","region_dir","request","request_type","row_group_size","rows","rows","schema_version","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_request_body","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","validate","validate","validate","validate_column_to_drop","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column_name","columns","names","AddColumn","AddColumns","AlterOperation","AlterRequest","Binary","Boolean","Chunk","ChunkReader","CloseContext","CloseOptions","ColumnDefaultConstraint","ColumnDescriptor","ColumnDescriptorBuilder","ColumnDescriptorBuilderError","ColumnFamilyDescriptor","ColumnFamilyDescriptorBuilder","ColumnFamilyDescriptorBuilderError","ColumnFamilyId","ColumnId","ColumnSchema","CompactContext","CompactionStrategy","ConcreteDataType","CreateOptions","Date","DateTime","Dictionary","DropColumns","Duration","EngineContext","Error","Error","Error","Error","Error","Float32","Float64","FlushContext","FlushReason","Function","GetRequest","GetResponse","GlobalBufferFull","INITIAL_VERSION","Int16","Int32","Int64","Int8","Interval","List","MAX_REGION_SEQ","MIN_OP_TYPE","Manually","MemtableFull","Meta","Null","OpenOptions","Others","Periodically","ReadContext","Reader","Region","Region","RegionDescriptor","RegionDescriptorBuilder","RegionDescriptorBuilderError","RegionGroup","RegionId","RegionMeta","RegionNumber","RegionSeq","RegionStat","RowKeyDescriptor","RowKeyDescriptorBuilder","RowKeyDescriptorBuilderError","ScanRequest","ScanResponse","Schema","SchemaBuilder","SchemaRef","SequenceNumber","Snapshot","Snapshot","StorageEngine","String","TableId","Time","Timestamp","Twcs","TwcsOptions","UInt16","UInt32","UInt64","UInt8","UninitializedField","UninitializedField","UninitializedField","UninitializedField","ValidationError","ValidationError","ValidationError","ValidationError","Value","WriteContext","WriteRequest","WriteRequest","WriteResponse","add_metadata","alter","arrow_schema","arrow_schema","as_arrow_type","as_duration","as_list","as_time","as_timestamp","batch_size","binary_datatype","boolean_datatype","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","can_arrow_type_cast_to","cf_id","cf_id","chunk","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","close_region","cmp","column_index_by_name","column_name_by_index","column_schema_by_name","column_schemas","column_schemas","column_schemas","columns","columns","columns","columns","columns","comment","comment","compact","compaction_strategy","compaction_strategy","compare","consts","contains_column","create_default","create_default","create_default_vector","create_default_vector","create_default_vector_for_padding","create_mutable_vector","create_region","data_type","data_type","data_type","date_datatype","datetime_datatype","default","default_cf","default_cf","default_constraint","default_constraint","default_constraint","default_constraint","default_value","delete","desc","descriptors","deserialize","deserialize","deserialize","dictionary_datatype","disk_usage_bytes","disk_usage_bytes","drop_region","drop_region","duration_datatype","duration_microsecond_datatype","duration_millisecond_datatype","duration_nanosecond_datatype","duration_second_datatype","engine","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extra_cfs","extra_cfs","fields","filters","float32_datatype","float64_datatype","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow_interval_unit","from_arrow_time_unit","from_arrow_type","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","get","get_hash","get_region","hash","id","id","id","id","id","in_memory_metadata","int16_datatype","int32_datatype","int64_datatype","int8_datatype","interval_datatype","interval_day_time_datatype","interval_month_day_nano_datatype","interval_year_month_datatype","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_boolean","is_empty","is_float","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_key","is_null","is_nullable","is_nullable","is_nullable","is_nullable","is_numeric","is_signed","is_string","is_stringifiable","is_time_index","is_time_index","is_time_index","is_time_index","is_timestamp","is_unsigned","limit","list_datatype","logical_type_id","max_active_window_files","max_inactive_window_files","metadata","metadata","metadata","metadata","metadata","mut_metadata","name","name","name","name","name","name","name","name","name","name_to_index","name_to_index","new","new","next_chunk","null_datatype","null_value","num_columns","numerics","open_region","operation","output_ordering","parent_dir","parent_dir","partial_cmp","project_chunk","projection","put","reader","reason","region","region_id","requests","responses","row_key","row_key","scan","schema","schema","sequence","serialize","serialize","serialize","snapshot","snapshot","string_datatype","time_datatype","time_microsecond_datatype","time_millisecond_datatype","time_nanosecond_datatype","time_second_datatype","time_window_seconds","timestamp","timestamp","timestamp_column","timestamp_datatype","timestamp_index","timestamp_index","timestamp_index","timestamp_microsecond_datatype","timestamp_millisecond_datatype","timestamp_nanosecond_datatype","timestamp_second_datatype","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate","try_cast","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_columns","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_project","ttl","ttl","type_id","type_id","type_id","type_id","type_id","types","uint16_datatype","uint32_datatype","uint64_datatype","uint8_datatype","user_schema","validate","version","version","version","version","version","version","vzip","vzip","vzip","vzip","vzip","wait","wait","with_default_constraint","with_metadata","with_time_index","write","write_buffer_size","write_buffer_size","write_request","columns","names","Chunk","ChunkReader","Error","borrow","borrow_mut","columns","fmt","from","from_subset","into","into_request","is_in_subset","new","next_chunk","output_ordering","output_ordering","project_chunk","to_subset","to_subset_unchecked","try_from","try_into","type_id","user_schema","vzip","BASE","DEFAULT_CF_ID","DEFAULT_CF_NAME","INTERNAL_COLUMN_VEC","KEY_CF_ID","MetricName","OP_TYPE_COLUMN_NAME","OpType","PRIMARY_KEY_COLUMN_NAME","READ_BATCH_SIZE","ReservedColumnId","ReservedColumnType","SEQUENCE_COLUMN_NAME","Sequence","Tsid","Version","WRITE_ROW_GROUP_SIZE","borrow","borrow","borrow_mut","borrow_mut","from","from","from_subset","from_subset","into","into","into_request","into_request","is_in_subset","is_in_subset","is_internal_column","metric_name","op_type","sequence","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","tsid","type_id","type_id","version","vzip","vzip","ColumnDescriptor","ColumnDescriptorBuilder","ColumnDescriptorBuilderError","ColumnFamilyDescriptor","ColumnFamilyDescriptorBuilder","ColumnFamilyDescriptorBuilderError","ColumnFamilyId","ColumnId","MAX_REGION_SEQ","REGION_GROUP_MASK","REGION_SEQ_MASK","RegionDescriptor","RegionDescriptorBuilder","RegionDescriptorBuilderError","RegionGroup","RegionId","RegionNumber","RegionSeq","RowKeyDescriptor","RowKeyDescriptorBuilder","RowKeyDescriptorBuilderError","TableId","UninitializedField","UninitializedField","UninitializedField","UninitializedField","ValidationError","ValidationError","ValidationError","ValidationError","as_error_source","as_error_source","as_error_source","as_error_source","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cf_id","cf_id","cf_id","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","columns","columns","columns","columns","columns","columns_capacity","columns_capacity","comment","comment","comment","create_empty","create_empty","create_empty","create_empty","data_type","data_type","data_type","default","default","default","default","default","default_cf","default_cf","default_cf","default_constraint","default_constraint","default_constraint","default_constraint","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extra_cfs","extra_cfs","extra_cfs","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_u64","get_hash","hash","id","id","id","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_nullable","is_nullable","is_nullable","is_nullable","is_time_index","is_time_index","is_time_index","is_time_index","name","name","name","name","name","name","name","name","name","new","new","new","provide","provide","provide","provide","push_column","push_column","push_extra_column_family","region_group","region_number","region_sequence","row_key","row_key","row_key","serialize","serialize","table_id","timestamp","timestamp","timestamp","to_column_schema","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_group_and_seq","COMPACTION_STRATEGY_KEY","COMPACTION_STRATEGY_TWCS_VALUE","CloseOptions","CompactionStrategy","CreateOptions","EngineContext","Error","OpenOptions","Region","StorageEngine","TWCS_MAX_ACTIVE_WINDOW_FILES_KEY","TWCS_MAX_INACTIVE_WINDOW_FILES_KEY","TWCS_TIME_WINDOW_SECONDS_KEY","Twcs","TwcsOptions","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close_region","compaction_strategy","compaction_strategy","create_region","default","default","default","default","default","default","drop_region","flush","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","get_region","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","max_active_window_files","max_inactive_window_files","open_region","parent_dir","parent_dir","time_window_seconds","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","ttl","ttl","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","write_buffer_size","write_buffer_size","RegionMeta","schema","version","CloseContext","CompactContext","Error","FlushContext","FlushReason","GlobalBufferFull","Manually","MemtableFull","Meta","Others","Periodically","Region","RegionStat","Snapshot","WriteContext","WriteRequest","alter","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compact","default","default","default","default","default","disk_usage_bytes","disk_usage_bytes","drop_region","eq","equivalent","equivalent","equivalent","equivalent","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id","in_memory_metadata","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","reason","region_id","region_stat","region_stat","snapshot","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wait","wait","write","write_request","AddColumn","AddColumns","AlterOperation","AlterRequest","DropColumns","Error","GetRequest","ScanRequest","WriteRequest","apply","apply_add","apply_drop","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","delete","desc","eq","equivalent","equivalent","equivalent","equivalent","filters","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_key","limit","operation","output_ordering","projection","put","sequence","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","columns","names","GetResponse","ScanResponse","WriteResponse","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","reader","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Error","ReadContext","Reader","Snapshot","batch_size","borrow","borrow_mut","clone","clone_into","default","fmt","from","from_ref","from_subset","get","into","into_request","is_in_subset","scan","schema","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","MIN_OP_TYPE","SequenceNumber"],"q":[[0,"store_api"],[9,"store_api::data_source"],[12,"store_api::error"],[106,"store_api::error::Error"],[113,"store_api::logstore"],[146,"store_api::logstore::entry"],[155,"store_api::logstore::entry_stream"],[160,"store_api::logstore::namespace"],[163,"store_api::manifest"],[211,"store_api::manifest::action"],[276,"store_api::manifest::storage"],[291,"store_api::metadata"],[576,"store_api::metadata::MetadataError"],[589,"store_api::path_utils"],[596,"store_api::region_engine"],[635,"store_api::region_request"],[931,"store_api::region_request::AddColumnLocation"],[932,"store_api::region_request::AlterKind"],[934,"store_api::storage"],[1432,"store_api::storage::AlterOperation"],[1434,"store_api::storage::chunk"],[1458,"store_api::storage::consts"],[1507,"store_api::storage::descriptors"],[1878,"store_api::storage::engine"],[2026,"store_api::storage::metadata"],[2029,"store_api::storage::region"],[2182,"store_api::storage::requests"],[2295,"store_api::storage::requests::AlterOperation"],[2297,"store_api::storage::responses"],[2343,"store_api::storage::snapshot"],[2370,"store_api::storage::types"]],"d":["","","LogStore APIs.","metadata service","Metadata of region and column.","Path constants for table engines, cluster states and WAL","Region Engine’s definition","","Storage APIs.","This trait represents a common data source abstraction …","","Retrieves a stream of record batches based on the provided …","","SNAFU context selector for the <code>Error::BuildColumnDescriptor</code>…","","","SNAFU context selector for the …","","SNAFU context selector for the …","","","","","","","","","","","","Consume the selector and return the associated error","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>LogStore</code> serves as a Write-Ahead-Log for storage engine.","","Append an <code>Entry</code> to WAL with given namespace and return …","Append a batch of entries atomically and return the offset …","","","Create a new <code>Namespace</code>.","Delete an existing <code>Namespace</code> with given ref.","","Create an entry of the associate Entry type","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","List all existing namespaces.","","Create a namespace of the associate Namespace type","Mark all entry ids <code>&lt;=id</code> of given <code>namespace</code> as obsolete so …","Create a new <code>EntryStream</code> to asynchronously generates <code>Entry</code> …","Stop components of logstore.","","","","","","","Entry is the minimal data storage unit in <code>LogStore</code>.","","","","","","Return contained data of entry.","Return entry id that monotonically increments.","","","","","","","","","","The checkpoint by checkpoint","","","","","","","","","","","","Manifest service","","","The action to alter metadata","","","","","Common actions for manifest","Decode self from byte slice with reader protocol version, …","Decode self from byte slice with reader protocol version, …","Delete logs in [start, end) and ignore checkpoints.","Delete all logs and checkpoints, and remove the manifest …","Delete the checkpoint by version","Delete logs and checkpoints which version is less than …","Do a checkpoint, it will create a checkpoint and compact …","Encode this action into a byte vector","Encode this checkpoint into a byte vector","Returns the last success checkpoint","The last compacted action’s version of checkpoint","Returns the last(or latest) manifest version.","Load the checkpoint by version","Load the latest checkpoint","","","Save a log","Save a checkpoint.","Scan the logs in [start, end)","Scan actions which version in range [start, end)","Set previous valid manifest version.","Set a protocol action into meta action","Set a protocol action into checkpoint","Start the service","Stop the service","","Update metadata by the action","Protocol action that used to block older clients from …","","Current reader and writer versions TODO(dennis): …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The maximum protocol version we are currently allowed to …","","","","","","","","","","","","","","","","","","","","","Delete logs in [start, end) and ignore checkpoints.","Delete all logs and checkpoints, and remove the manifest …","Delete the checkpoint by version","Delete logs and checkpoints which version is less than …","Load the checkpoint by version","Load the latest checkpoint","","Save a log","Save a checkpoint.","Scan the logs in [start, end)","Metadata of a column.","","SNAFU context selector for the …","","SNAFU context selector for the <code>MetadataError::InvalidMeta</code> …","","SNAFU context selector for the …","","SNAFU context selector for the …","","SNAFU context selector for the <code>MetadataError::InvalidSchema</code>…","","General static metadata of a region.","Builder to build RegionMetadata.","","","","SNAFU context selector for the <code>MetadataError::SerdeJson</code> …","Fields skipped in serialization.","Adds columns to the metadata if not exist.","Applies the alter <code>kind</code> to the builder.","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the builder and build a RegionMetadata.","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Increases the schema version by 1.","","","","","","","","","","","","","","","","","","Find column by id.","Finds a column by name.","Immutable and unique id of a region.","Find column index by id.","","Columns in the region. Has the same order as columns in …","Schema of this column. Is the same as <code>column_schema</code> in …","","","","","Drops columns from the metadata if exist.","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Returns all field columns.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a builder from existing RegionMetadata.","Decode the metadata from a JSON str.","","","","","","","","","","","","","","","","","","","","Map column id to column’s index in column_metadatas.","Map column id to column’s index in column_metadatas.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new builder.","Constructs skipped fields from <code>column_metadatas</code>.","","Sets the primary key of the region.","","Maintains an ordered list of primary keys","Returns all primary key columns.","Returns a column’s index in primary key if it is a …","","Pushes a new column metadata to this region’s metadata.","","","Immutable and unique id of a region.","","Last schema.","Latest schema constructed from column_metadatas.","","Current version of the region schema.","Semantic type of this column (e.g. tag or timestamp).","","","","","Id of the time index column.","Id of the time index column.","Returns the time index column","Returns the arrow field of the time index column.","Encode the metadata to a JSON string.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct <code>Self</code> from protobuf struct RegionColumnDef","","","","","","","","","","","","","","","","","","","","","","","Checks whether the metadata is valid.","Checks whether it is a valid column.","","","","","","","","","","","","","","","","","","","","","","","","","Cluster state dir","Data dir for table engines","All paths relative to data_home(file storage) or root …","","Generate region name in the form of “{TABLE_ID}_…","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Retrieves region’s metadata.","Handles substrait query and return a stream of record …","Handles request to the region.","Calls <code>U::from(self)</code>.","","","Name of this engine","Retrieves region’s disk usage.","Indicates region role.","","Sets writable mode for a region.","Stops the engine","","","","","","","","Adds a column.","Location to add a column.","Add columns to the region.","Add the column after specific column.","","Kind of the alteration.","","","","","","Drop columns from the region, only fields are allowed to …","Add the column to the first position of columns.","","","","Alter metadata of a region.","Close region request.","","","Request to delete data from a region.","","","Open region request.","Request to put data into a region.","","","Truncate region request.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Metadata of the column to add.","Columns in this region.","","Region engine name","Region engine name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Kind of alteration to do.","Location to add the column. If location is None, the …","Returns true if we need to apply the request to the region.","Returns true if we need to apply the alteration to the …","Returns true if no column to add to the region.","Options of the created region.","Options of the opened region.","Columns in the primary key.","Directory for region’s data home. Usually is composed by …","Data directory of the region.","","Returns the type name of the RegionRequest.","","Rows to put.","Keys to rows to delete.","The version of the schema before applying the alteration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert Body to a group of RegionRequest with region id. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type name of the request.","Checks whether the request is valid, returns an error if …","Returns an error if the the alter kind is invalid.","Returns an error if the column to add is invalid.","Returns an error if the column to drop is invalid.","","","","","","","","","","","","","","","","Add the column after this column.","Columns to add.","Name of columns to drop.","Operation to add a column.","Add columns to the region.","Operation to alter a region.","Alter region request.","","","A bunch of rows in columnar format.","<code>ChunkReader</code> is similar to async iterator of Chunk.","","Options to close a region.","Column’s default constraint.","A ColumnDescriptor contains information to create a column.","Builder for <code>ColumnDescriptor</code>.","Error type for ColumnDescriptorBuilder","A ColumnFamilyDescriptor contains information to create a …","Builder for <code>ColumnFamilyDescriptor</code>.","Error type for ColumnFamilyDescriptorBuilder","Id of column family. Unique in each region.","Id of column. Unique in each region.","Schema of a column, used as an immutable struct.","","Options for compactions","","Options to create a region.","","","","Drop columns from the region, only value columns are …","","Storage engine context.","","","","","","","","Context for flush operations.","Reason of flush operation.","","","","Global write buffer is full.","Initial version of the schema.","","","","","","","The max valid region sequence number.","","Flush manually.","Memtable is full.","","","Options to open a region.","Other reasons.","Auto flush periodically.","Context for read.","","Chunks of rows in storage engine.","","A RegionDescriptor contains information to create a region.","Builder for <code>RegionDescriptor</code>.","Error type for RegionDescriptorBuilder","Group number of one region. Unique in each region.","Id of the region. It’s generated by concatenating table …","Metadata of a region.","Id of regions under the same table. Unique in each table. …","Sequence number of region inside one table. Unique in each …","","A RowKeyDescriptor contains information about row key.","Builder for <code>RowKeyDescriptor</code>.","Error type for RowKeyDescriptorBuilder","","","A common schema, should be immutable.","","","Represents a sequence number of data in storage. The …","A consistent read-only view of region.","","Storage engine provides primitive operations to store and …","","Id of table. Universal unique.","","","TWCS","TWCS compaction options.","","","","","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","Custom validation error","Custom validation error","","Context for write operations.","Write request holds a collection of updates to apply to a …","","","Add key value pair to metadata.","","","","Convert this type as arrow::datatypes::DataType.","Try to cast data type as a <code>DurationType</code>.","Try to cast the type as a <code>ListType</code>.","Try to cast data type as a <code>TimeType</code>.","Try to cast data type as a <code>TimestampType</code>.","Suggested batch size of chunk.","","","","","","","","","","","","","","Checks if the data type can cast to another data type.","","","","","","","","","","","","Close the engine.","Closes given region.","","","Retrieve the column’s name by index","","","","","","","","Descriptors of columns in this column family.","Descriptors of columns in this column family.","","","","Compaction strategy","Compaction strategy","","Constants.","","Creates a default value for this column.","Create a default value for given <code>data_type</code>.","Creates a vector with default value for this column.","Create a vector that contains <code>num_rows</code> default values for …","Creates a vector for padding.","Creates a mutable vector with given <code>capacity</code> of this type.","Creates and returns the created region.","","","","","","","Default column family.","Default column family.","","Default constraint of column, default is None, which means …","Default constraint of column, default is None, which means …","","Returns the default value of this type.","Delete rows by <code>keys</code>.","Descriptor of the column to add.","","","","","","","","Drops given region.","","","Creates a [Duration(DurationMicrosecondType)] datatype.","Creates a [Duration(DurationMillisecondType)] datatype.","Creates a [Duration(DurationNanosecondType)] datatype.","Creates a [Duration(DurationSecondType)] datatype.","Storage Engine traits.","","","","","","","","","","","","","","","","","","","","","Extra column families defined by user.","Extra column families defined by user.","","Filters pushed down","","","Flush memtable of the region to disk.","Flush region","If true, flush the closing region.","","","","","","","If true, allows to flush a closed region","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Converts from arrow timestamp unit to","Convert arrow data type to ConcreteDataType.","","","","","","","","","","","","Returns the opened region with given name.","","","","","","","Returns the in memory metadata of this region.","","","","","","Creates a [Interval(IntervalDayTimeType)] datatype.","Creates a [Interval(IntervalMonthDayNanoType)] datatype.","Creates a [Interval(IntervalYearMonthType)] datatype.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Is the column a key column.","","","Is column nullable, default is true.","Is column nullable, default is true.","","","","","","","Is time index column, default is true.","Is time index column, default is true.","","","","limit can be used to reduce the amount scanned from the …","","Returns id of the Logical data type.","Max num of files that can be kept in active writing time …","Max num of files that can be kept in inactive time window.","","","","","","","Returns name of the region.","Name of this data type.","","","","","Region name.","Region name.","","","","","Create a schema from a vector of ColumnSchema.","Fetch next chunk from the reader.","","Returns a default null constraint.","","","Opens an existing region. Returns <code>Ok(None)</code> if region does …","Operation to do.","Expected output ordering. This is only a hint and isn’t …","Region parent directory","Region parent directory","","","Indices of columns to read, <code>None</code> to read all columns.","Add put operation to the request.","Reader to read result chunks.","Flush reason.","Region holds chunks of rows stored in the storage engine, …","","","","Row key descriptor of this region.","Row key descriptor of this region.","","Returns the schema of the region.","","Max sequence number to read, None for latest sequence.","","","","","Create a snapshot for read.","","Returns the time data type with <code>TimeUnit</code>.","Creates a [Time(TimeMicrosecond)] datatype.","Creates a [Time(TimeMillisecondType)] datatype.","Creates a [Time(TimeNanosecond)] datatype.","Creates a [Time(TimeSecondType)] datatype.","Compaction time window defined when creating tables.","Timestamp key column.","Timestamp key column.","","","Returns index of the timestamp key column.","","","","","","","","","","","","","","","","","","","","","","","","Casts the value to specific DataType. Return None if cast …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to Create a schema from a vector of ColumnSchema.","Generate a new projected schema","Region SST files TTL","Region SST files TTL","","","","","","Common types.","","","","","Schema of the chunks returned by this reader. This schema …","Check whether the constraint is valid for columns with …","Returns the version of the region metadata.","","","The version of the schema before applying the alteration.","","","","","","","","If true, the flush will wait until the flush is done. …","Whether to wait the compaction result.","","Creates a new <code>ColumnSchema</code> with given metadata.","","Write updates to region.","Region memtable max size in bytes","Region memtable max size in bytes","Create write request","Columns to add.","Name of columns to drop.","A bunch of rows in columnar format.","<code>ChunkReader</code> is similar to async iterator of Chunk.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Fetch next chunk from the reader.","","","","","","","","","Schema of the chunks returned by this reader. This schema …","","","Id for default column family.","Names for default column family.","Internal Column Name","Column family Id for row key columns.","","Name for reserved column: op_type","","Name for reserved column: primary_key","","Column id reserved by the engine.","","Name for reserved column: sequence","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Id for storing metric name column.","Id for <code>__op_type</code> column.","Id for <code>__sequence</code> column.","","","","","","","","","Id for storing TSID column.","","","Column id for version column. Version column is a special …","","","A ColumnDescriptor contains information to create a column.","Builder for <code>ColumnDescriptor</code>.","Error type for ColumnDescriptorBuilder","A ColumnFamilyDescriptor contains information to create a …","Builder for <code>ColumnFamilyDescriptor</code>.","Error type for ColumnFamilyDescriptorBuilder","Id of column family. Unique in each region.","Id of column. Unique in each region.","The max valid region sequence number.","","","A RegionDescriptor contains information to create a region.","Builder for <code>RegionDescriptor</code>.","Error type for RegionDescriptorBuilder","Group number of one region. Unique in each region.","Id of the region. It’s generated by concatenating table …","Id of regions under the same table. Unique in each table. …","Sequence number of region inside one table. Unique in each …","A RowKeyDescriptor contains information about row key.","Builder for <code>RowKeyDescriptor</code>.","Error type for RowKeyDescriptorBuilder","Id of table. Universal unique.","Uninitialized field","Uninitialized field","Uninitialized field","Uninitialized field","Custom validation error","Custom validation error","Custom validation error","Custom validation error","","","","","Returns the region id as u64.","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>ColumnDescriptor</code>.","Builds a new <code>RowKeyDescriptor</code>.","Builds a new <code>ColumnFamilyDescriptor</code>.","Builds a new <code>RegionDescriptor</code>.","","","","","","","","","","","","","","","Descriptors of columns in this column family.","","","Descriptors of columns in this column family.","Descriptors of columns in this column family.","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","Default column family.","Default column family.","Default column family.","Default constraint of column, default is None, which means …","","Default constraint of column, default is None, which means …","Default constraint of column, default is None, which means …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extra column families defined by user.","Extra column families defined by user.","Extra column families defined by user.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Construct a new RegionId from u64.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Is column nullable, default is true.","","Is column nullable, default is true.","Is column nullable, default is true.","Is time index column, default is true.","","Is time index column, default is true.","Is time index column, default is true.","","","Region name.","","","","","Region name.","Region name.","Construct a new RegionId from table id and region number.","","","","","","","","Descriptors of columns in this column family.","Extra column families defined by user.","Returns the group number of the region","Returns the region number of the region.","Return the sequence number of the region","Row key descriptor of this region.","Row key descriptor of this region.","Row key descriptor of this region.","","","Returns the table id of the region.","Timestamp key column.","Timestamp key column.","Timestamp key column.","Convert ColumnDescriptor to ColumnSchema. Fields not in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new RegionId from table id, region group and …","","","Options to close a region.","Options for compactions","Options to create a region.","Storage engine context.","","Options to open a region.","","Storage engine provides primitive operations to store and …","","","","TWCS","TWCS compaction options.","","","","","","","","","","","","","","","","","","","","","","","","","Close the engine.","Closes given region.","Compaction strategy","Compaction strategy","Creates and returns the created region.","","","","","","","Drops given region.","Flush region","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Returns the opened region with given name.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Max num of files that can be kept in active writing time …","Max num of files that can be kept in inactive time window.","Opens an existing region. Returns <code>Ok(None)</code> if region does …","Region parent directory","Region parent directory","Compaction time window defined when creating tables.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Region SST files TTL","Region SST files TTL","","","","","","","","","","","","","Region memtable max size in bytes","Region memtable max size in bytes","Metadata of a region.","Returns the schema of the region.","Returns the version of the region metadata.","","","","Context for flush operations.","Reason of flush operation.","Global write buffer is full.","Flush manually.","Memtable is full.","","Other reasons.","Auto flush periodically.","Chunks of rows in storage engine.","","","Context for write operations.","","","Returns reason as <code>str</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flush memtable of the region to disk.","If true, flush the closing region.","","","","","","","If true, allows to flush a closed region","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Returns the in memory metadata of this region.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns name of the region.","Flush reason.","","","","Create a snapshot for read.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, the flush will wait until the flush is done. …","Whether to wait the compaction result.","Write updates to region.","Create write request","Operation to add a column.","Add columns to the region.","Operation to alter a region.","Alter region request.","Drop columns from the region, only value columns are …","","","","Write request holds a collection of updates to apply to a …","Apply the operation to the RegionDescriptor.","Add <code>columns</code> to the RegionDescriptor.","Drop columns from the RegionDescriptor by their <code>names</code>.","","","","","","","","","","","","","","","","","","Delete rows by <code>keys</code>.","Descriptor of the column to add.","","","","","","Filters pushed down","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Is the column a key column.","limit can be used to reduce the amount scanned from the …","Operation to do.","Expected output ordering. This is only a hint and isn’t …","Indices of columns to read, <code>None</code> to read all columns.","Add put operation to the request.","Max sequence number to read, None for latest sequence.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The version of the schema before applying the alteration.","","","","","","Columns to add.","Name of columns to drop.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Reader to read result chunks.","","","","","","","","","","","","","","","","","","","","Context for read.","","A consistent read-only view of region.","Suggested batch size of chunk.","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Represents a sequence number of data in storage. The …"],"i":[0,0,0,0,0,0,0,0,0,0,0,178,5,0,0,5,0,5,0,5,5,5,12,14,15,5,12,14,15,5,12,5,12,14,15,12,14,15,14,5,5,12,12,12,14,15,5,5,12,14,15,5,12,14,15,12,14,15,5,12,14,15,5,12,14,15,12,14,15,5,12,14,15,5,5,5,5,5,12,14,15,5,12,14,15,5,12,14,15,5,12,14,15,5,12,14,15,5,12,14,15,5,12,14,15,5,179,180,181,180,179,181,179,0,182,182,0,182,182,182,35,35,182,182,0,182,35,0,35,35,35,35,35,35,182,0,182,182,182,182,35,35,35,35,35,35,0,0,183,0,183,0,183,183,183,184,0,184,0,184,0,0,185,0,186,187,188,189,190,191,186,190,0,0,0,0,0,0,0,191,186,0,186,0,187,188,190,190,190,190,186,187,188,186,188,186,190,190,191,189,190,190,190,186,187,187,188,186,186,0,186,0,0,0,0,0,40,41,40,41,40,41,40,41,40,40,41,40,41,40,40,40,40,41,41,41,41,40,40,41,40,41,40,41,40,41,40,41,40,41,40,41,40,40,40,40,40,41,40,41,0,40,41,40,40,41,40,41,40,41,40,41,40,41,40,41,189,190,190,0,0,190,190,190,190,190,190,189,190,190,190,0,48,0,48,0,48,0,48,0,48,0,0,0,0,0,0,48,0,0,44,44,48,48,48,44,60,54,49,55,50,56,57,51,53,48,44,60,54,49,55,50,56,57,51,53,48,44,50,51,53,44,48,54,49,55,50,56,57,51,53,54,49,55,50,56,57,51,53,49,49,54,49,44,49,54,48,48,54,49,44,54,49,54,54,54,54,49,49,49,49,51,53,50,51,53,49,54,49,55,50,56,57,51,53,48,48,44,60,54,49,55,50,56,57,51,53,48,44,49,54,49,55,50,56,57,51,53,44,60,54,49,55,50,56,57,51,53,48,60,49,44,60,54,49,55,50,56,57,51,53,48,55,50,56,57,51,53,44,60,54,49,55,50,56,57,51,53,48,44,60,54,49,55,50,56,57,51,53,48,44,60,48,44,44,49,49,49,48,44,50,44,49,53,60,49,44,49,54,54,49,48,48,60,49,49,49,49,54,49,55,50,56,57,51,53,48,44,60,54,49,55,50,56,57,51,53,48,44,60,54,49,55,50,56,57,51,53,48,44,60,54,49,55,50,56,57,51,53,48,54,44,60,54,49,55,50,56,57,51,53,48,44,60,54,49,55,50,56,57,51,53,48,49,49,44,60,54,49,55,50,56,57,51,53,48,192,193,194,195,196,194,197,192,193,196,193,195,197,0,0,0,0,0,0,0,65,65,0,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,198,198,198,65,65,65,198,198,198,65,198,198,65,65,65,65,65,65,65,0,0,47,71,67,0,67,67,67,67,67,47,71,67,67,67,0,0,0,0,0,0,0,0,0,0,0,0,67,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,68,68,45,68,69,68,76,70,47,45,71,70,70,70,70,47,47,47,47,45,45,45,45,71,71,71,71,67,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,68,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,70,45,70,47,45,68,76,68,68,76,73,67,69,72,74,70,68,67,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,67,72,73,74,68,75,76,77,70,70,47,47,45,45,71,71,69,78,79,67,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,67,70,47,45,47,67,72,73,74,68,75,76,77,70,47,45,71,69,78,79,199,200,201,0,173,0,0,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,91,91,173,91,0,202,203,204,205,206,91,91,0,0,99,0,0,170,87,91,91,91,91,91,91,0,0,170,170,205,91,0,170,170,0,206,0,204,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,205,0,91,0,91,91,168,0,91,91,91,91,155,158,161,163,155,158,161,163,99,0,0,205,0,85,205,87,87,91,91,91,91,91,135,91,91,91,98,99,87,85,91,98,99,87,85,85,91,159,160,0,91,98,99,87,91,98,99,87,204,204,91,87,87,87,87,87,85,145,156,157,159,160,153,154,205,108,144,91,0,87,98,99,98,99,98,91,204,153,154,98,91,91,85,162,107,98,153,154,98,91,202,174,0,91,98,99,91,205,172,204,205,91,91,91,91,91,0,91,98,99,87,91,91,91,91,98,98,98,98,99,99,99,99,87,87,87,87,162,107,85,1,91,91,205,101,171,91,91,98,99,99,87,112,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,98,99,87,85,91,91,91,91,98,99,87,91,98,99,87,85,206,91,204,91,205,153,154,162,107,205,91,91,91,91,91,91,91,91,91,98,99,87,85,91,98,99,87,85,91,87,91,91,98,99,87,85,174,91,98,153,154,98,91,91,91,91,98,153,154,98,91,91,1,91,91,169,169,0,98,87,98,85,98,205,91,153,154,159,160,162,107,98,87,85,98,87,203,91,99,87,91,204,86,1,108,144,91,203,1,202,176,112,0,172,0,0,162,107,206,207,206,1,91,98,99,0,205,91,91,91,91,91,91,169,156,157,87,91,87,87,85,91,91,91,91,91,98,99,87,91,99,91,98,99,87,85,91,98,99,87,85,205,91,91,91,98,98,99,99,87,87,87,87,87,85,85,85,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,98,99,87,85,87,87,108,144,91,98,99,87,85,0,91,91,91,91,203,99,207,87,85,86,87,85,91,98,99,87,85,112,103,98,98,98,205,108,144,205,208,209,0,0,203,145,145,145,145,145,145,145,145,145,145,203,203,203,203,145,145,145,145,145,203,145,210,0,0,0,0,211,0,211,0,0,0,0,0,211,211,211,0,211,210,211,210,211,210,211,210,211,210,211,210,211,210,0,210,210,210,211,210,211,210,211,210,211,210,210,211,210,210,211,210,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155,158,161,163,155,158,161,163,155,158,161,163,52,52,153,155,154,156,158,157,159,161,160,162,163,107,52,153,155,154,156,158,157,159,161,160,162,163,107,153,156,159,162,159,159,160,52,154,157,160,107,52,154,157,160,107,156,159,156,157,159,160,156,159,153,153,154,153,156,159,162,153,153,154,52,153,156,159,162,162,162,107,153,154,153,154,52,154,52,52,154,157,160,107,52,52,52,52,154,154,154,154,157,157,157,157,160,160,160,160,107,107,107,107,162,162,107,52,52,155,155,154,158,158,157,161,161,160,163,163,107,52,52,153,155,155,155,154,156,158,158,158,157,159,161,161,161,160,162,163,163,163,107,52,154,157,160,107,52,153,155,154,156,158,157,159,161,160,162,163,107,52,52,52,153,162,153,154,162,107,52,153,155,154,156,158,157,159,161,160,162,163,107,52,153,155,154,156,158,157,159,161,160,162,163,107,52,153,155,154,156,158,157,159,161,160,162,163,107,153,154,153,154,153,154,153,154,153,159,162,153,154,159,160,162,107,52,153,156,155,158,161,163,156,159,162,52,52,52,162,162,107,52,154,52,156,156,157,154,52,154,157,160,107,52,155,158,161,163,52,153,155,154,156,158,157,159,161,160,162,163,107,52,153,155,154,156,158,157,159,161,160,162,163,107,52,153,155,154,156,158,157,159,161,160,162,163,107,52,153,155,154,156,158,157,159,161,160,162,163,107,52,153,155,154,156,158,157,159,161,160,162,163,107,153,52,153,155,154,156,158,157,159,161,160,162,163,107,52,0,0,0,0,0,0,204,0,204,0,0,0,0,168,0,100,108,144,101,168,169,100,108,144,101,168,169,100,108,144,101,168,169,100,108,144,101,168,169,204,204,108,144,204,100,108,144,101,168,169,204,101,100,108,144,101,168,169,100,108,144,101,168,168,169,100,108,144,101,168,169,100,108,144,101,168,169,204,100,108,144,101,168,169,100,108,144,101,168,169,100,108,144,101,168,169,169,169,204,108,144,169,100,108,144,101,168,169,100,108,144,101,168,169,100,108,144,101,168,169,100,108,144,101,168,169,100,108,144,101,168,169,108,144,100,108,144,101,168,169,100,108,144,101,168,169,108,144,0,207,207,0,0,205,0,0,170,170,170,205,170,170,0,0,205,0,205,205,170,172,151,171,112,103,170,172,151,171,112,103,170,151,171,112,103,170,151,171,112,103,170,205,172,151,171,112,103,205,172,205,170,170,170,170,170,205,171,172,151,171,112,103,170,112,172,151,151,171,112,103,170,151,171,112,103,170,172,151,171,112,103,170,205,205,172,151,171,112,103,170,172,151,171,112,103,170,172,151,171,112,103,170,205,112,172,205,205,205,151,171,112,103,170,172,151,171,112,103,170,172,151,171,112,103,170,205,172,151,171,112,103,170,172,151,171,112,103,170,172,151,171,112,103,170,172,151,171,112,103,170,112,103,205,205,0,173,0,0,173,202,0,0,0,173,173,173,1,136,174,173,86,1,136,174,173,86,1,174,173,1,174,173,1,202,174,1,1,1,1,1,1,1,136,174,173,86,1,136,174,173,86,1,174,173,1,136,174,173,86,1,136,174,173,86,1,136,174,173,86,1,136,174,173,86,174,1,86,1,1,202,1,1,174,173,1,136,174,173,86,1,136,174,173,86,1,136,174,174,173,173,86,1,136,174,173,86,1,136,174,173,86,86,1,136,174,173,86,208,209,0,0,0,175,176,177,175,176,177,175,176,177,175,176,177,175,176,177,175,176,177,175,176,177,175,176,177,176,175,176,177,175,176,177,175,176,177,175,176,177,175,176,177,175,176,177,206,0,206,0,135,135,135,135,135,135,135,135,135,135,206,135,135,135,206,206,135,135,135,135,135,135,135,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],0,0,0,0,0,0,0,[5,6],[[],7],[5,[[9,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[[11,[10]]]]],5],[5,[[9,[7]]]],[[[12,[13]]],[[12,[13]]]],[[[14,[13]]],[[14,[13]]]],[15,15],[[]],[[]],[[]],0,[[5,16,[17,[10]]]],[5,18],0,[[[12,[[11,[10]]]]],[[4,[5]]]],[[[12,[19]],20],21],[[[14,[19]],20],21],[[15,20],21],[[5,20],21],[[5,20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[[11,[10]]]]],5],[[[14,[[11,[10]]]]],5],[15,5],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[5,[[9,[24]]]],[25],[5,[[9,[7]]]],[5,26],[[]],[[]],[[]],[[],10],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],[[30,[[29,[28]]]]]],[17,[[30,[[29,[28]]]]]],[[]],[[]],[[],[[30,[[29,[28]]]]]],[[],[[30,[[29,[28]]]]]],0,[[[33,[[32,[31]]]],34]],0,0,[[35,20],21],[[]],[[]],[[]],[[],22],[[],23],[[],[[30,[[29,[28]]]]]],0,[36],[34,[[30,[[29,[28]]]]]],[34,[[30,[[29,[28]]]]]],[[],[[30,[[29,[28]]]]]],[[],9],[[]],[[],4],[[],4],[[],27],[[]],0,0,0,0,0,0,[[],[[32,[31]]]],[[],34],[[]],0,0,0,0,[[],37],0,0,[[],36],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[32,[31]],38],4],[[[32,[31]],38],4],[[39,39],[[30,[[29,[28]]]]]],[39,[[30,[[29,[28]]]]]],[39,[[30,[[29,[28]]]]]],[[39,23],[[30,[[29,[28]]]]]],[[],[[30,[[29,[28]]]]]],[[],[[4,[[17,[31]]]]]],[[],[[4,[[17,[31]]]]]],[[],[[30,[[29,[28]]]]]],[[],39],[[],39],[39,[[30,[[29,[28]]]]]],[[],[[30,[[29,[28]]]]]],[[],[[30,[[29,[28]]]]]],[[],[[30,[[29,[28]]]]]],[[39,[32,[31]]],[[30,[[29,[28]]]]]],[[39,[32,[31]]],[[30,[[29,[28]]]]]],[[39,39],[[30,[[29,[28]]]]]],[[39,39],[[30,[[29,[28]]]]]],[39],[40],[40],[[],[[30,[[29,[28]]]]]],[[],[[30,[[29,[28]]]]]],0,[[],[[30,[[29,[28]]]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[40,40],[41,41],[[]],[[]],[[],40],[42,[[4,[40]]]],[42,[[4,[41]]]],[[40,40],23],[[41,41],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[40,20],21],[[40,20],21],[[41,20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],23],[[],23],[[40,38],23],[[40,38],23],0,0,[[],40],0,[[40,43],4],[[41,43],4],[[]],[[]],[[]],[[],10],[[],9],[[],9],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[]],[[]],0,0,0,0,0,[[39,39],[[30,[[29,[28]]]]]],[39,[[30,[[29,[28]]]]]],[39,[[30,[[29,[28]]]]]],[[39,23],[[30,[[29,[28]]]]]],[39,[[30,[[29,[28]]]]]],[[],[[30,[[29,[28]]]]]],[[],[[30,[[29,[28]]]]]],[[39,[32,[31]]],[[30,[[29,[28]]]]]],[[39,[32,[31]]],[[30,[[29,[28]]]]]],[[39,39],[[30,[[29,[28]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[44,[17,[45]]],46],[[44,47],[[46,[44]]]],[48,6],[[],7],[48,[[9,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,[[46,[49]]]],[[[50,[[11,[10]]]]],48],[[[51,[[11,[10]]]]],48],[[[53,[[11,[52]],[11,[10]]]]],48],[44,44],[48,[[9,[7]]]],[54,54],[49,49],[55,55],[[[50,[13]]],[[50,[13]]]],[56,56],[57,57],[[[51,[13]]],[[51,[13]]]],[[[53,[13,13]]],[[53,[13,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,58],[[9,[54]]]],[[49,18],[[9,[54]]]],0,[[49,58],[[9,[16]]]],0,0,0,[[48,16,[17,[10]]]],[48,18],[42,[[4,[54]]]],[42,[[4,[49]]]],[[44,[32,[10]]]],[[54,54],23],[[49,49],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,[[[50,[[11,[10]]]]],[[4,[48]]]],[[[51,[[11,[10]]]]],[[4,[48]]]],[[[53,[[11,[52]],[11,[10]]]]],[[4,[48]]]],[49,59],[[54,20],21],[[49,20],21],[[55,20],21],[[[50,[19]],20],21],[[56,20],21],[[57,20],21],[[[51,[19]],20],21],[[[53,[19,19]],20],21],[[48,20],21],[[48,20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,44],[18,[[46,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,48],[[[50,[[11,[10]]]]],48],[56,48],[57,48],[[[51,[[11,[10]]]]],48],[[[53,[[11,[52]],[11,[10]]]]],48],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[52,44],[[[32,[54]]],[[46,[60]]]],[48,[[9,[24]]]],[[44,[17,[58]]],44],0,0,[49,59],[[49,58],[[9,[16]]]],[25],[[44,54],44],0,0,0,0,0,0,0,0,0,[[54,43],4],[[49,43],4],[48,[[9,[7]]]],[48,26],0,0,[49,54],[49,61],[49,[[46,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[62,[[46,[54]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[49,46],[54,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,52],10],[[63,64],10],[[18,63],10],[[18,18,63],10],0,0,0,0,0,[[]],[[]],[65,65],[[]],[42,[[4,[65]]]],[[65,65],23],[[],23],[[],23],[[],23],[[],23],[[65,20],21],[[]],[66,65],[[]],[[]],[52,[[30,[[29,[28]]]]]],[[52,1],[[30,[[29,[28]]]]]],[[52,67],[[30,[[29,[28]]]]]],[[]],[[],22],[[],23],[[],18],[52,[[30,[[29,[28]]]]]],[52,[[9,[65]]]],[[65,43],4],[[52,23],[[4,[3]]]],[[],[[30,[[29,[28]]]]]],[[]],[[],9],[[]],[[],4],[[],4],[[],27],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,68],[[]],0,0,[[],69],0,0,[[70,70],23],[[47,47],23],[[45,45],23],[[71,71],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[67,20],21],[[67,20],21],[[72,20],21],[[73,20],21],[[74,20],21],[[68,20],21],[[75,20],21],[[76,20],21],[[77,20],21],[[70,20],21],[[47,20],21],[[45,20],21],[[71,20],21],[[69,20],21],[[78,20],21],[[79,20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,[[70,49],23],[[47,49],23],[[45,49],23],0,0,0,0,0,0,[67,18],0,0,0,0,[[]],[[],10],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[80,[[46,[70]]]],[[],4],[81,[[46,[47]]]],[[],4],[82,[[46,[45]]]],[83,[[46,[71]]]],[[],4],[[],4],[[],4],[[],4],[84,[[46,[17]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[67,18],[[70,49],46],[[47,49],46],[[45,49],46],[[18,49],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[85,[11,[10]],[11,[10]]],85],[86,[[30,[[29,[28]]]]]],[87,[[90,[88,89]]]],0,[91,92],[91,[[9,[93]]]],[91,[[9,[94]]]],[91,[[9,[95]]]],[91,[[9,[96]]]],0,[[],91],[[],91],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,[[4,[87,97]]]],[[91,91],23],0,0,0,[91,91],[98,98],[99,99],[87,87],[[]],[[]],[[]],[[]],[100,[[30,[[29,[28]]]]]],[[100,18,101],[[30,[[29,[28]]]]]],[[91,91],102],[[87,18],[[9,[16]]]],[[87,16],18],[[87,18],[[9,[98]]]],[87,[[32,[98]]]],0,0,0,0,0,0,0,0,0,[103,[[30,[[29,[28]]]]]],0,0,[[],102],0,[[87,18],23],[98,[[4,[[9,[104]],97]]]],[[99,91,23],[[4,[104,97]]]],[[98,16],[[4,[[9,[[90,[105,89]]]],97]]]],[[99,91,23,16],[[4,[[90,[105,89]],97]]]],[[98,16],[[90,[105,89]]]],[[91,16],[[29,[106,89]]]],[[100,107,108],[[30,[[29,[28]]]]]],0,0,0,[[],91],[[],91],[[],85],0,0,[98,[[9,[99]]]],0,0,0,[91,104],[[[110,[10,109]]],4],0,0,[42,[[4,[91]]]],[42,[[4,[98]]]],[42,[[4,[99]]]],[[91,91],91],[[],37],0,[100,[[30,[[29,[28]]]]]],[[],[[30,[[29,[28]]]]]],[111,91],[[],91],[[],91],[[],91],[[],91],0,[[91,91],23],[[98,98],23],[[99,99],23],[[87,87],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,0,0,[[],91],[[],91],[112,[[30,[[29,[28]]]]]],0,0,[[91,20],[[4,[113]]]],[[91,20],[[4,[113]]]],[[98,20],[[4,[113]]]],[[99,20],[[4,[113]]]],[[99,20],[[4,[113]]]],[[87,20],[[4,[113]]]],0,[114,91],[115,91],[116,91],[117,91],[118,91],[119,91],[120,91],[121,91],[122,91],[[]],[123,91],[91,91],[124,91],[125,91],[126,91],[96,91],[127,91],[94,91],[93,91],[95,91],[128,91],[129,91],[130,91],[131,91],[132,91],[[]],[[]],[[]],[[]],[133,91],[134,91],[92,91],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[135,136],[[30,[[29,[28]]]]]],[[[0,[137,138]],139],37],[[100,18],[[4,[9]]]],[[91,140]],[[],52],0,0,0,0,[[]],[[],91],[[],91],[[],91],[[],91],[141,91],[[],91],[[],91],[[],91],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[91,23],[87,23],[91,23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[91,23],[98,23],0,0,0,[91,23],[91,23],[91,23],[91,23],[98,23],0,0,0,[91,23],[91,23],0,[91,91],[91,142],0,0,0,[98,[[110,[10,10,143]]]],[87,[[110,[10,10,143]]]],0,0,[98,[[110,[10,10,143]]]],[[],18],[91,18],0,0,0,0,0,0,0,0,0,[[[11,[10]],91,23],98],[[[17,[98,89]]],87],[[],[[30,[[29,[28]]]]]],[[],91],[[],99],[87,16],[[],[[17,[91,89]]]],[[100,18,144],[[30,[[29,[28]]]]]],0,0,0,0,[[91,91],[[9,[102]]]],[145,145],0,[[[110,[10,109]]],4],0,0,0,0,0,0,0,0,[[135,1],[[30,[[29,[28]]]]]],[[],146],[[],146],0,[[91,43],4],[[98,43],4],[[99,43],4],0,[135,4],[[],91],[111,91],[[],91],[[],91],[[],91],[[],91],0,0,0,[87,[[9,[98]]]],[111,91],[87,[[9,[16]]]],0,0,[[],91],[[],91],[[],91],[[],91],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[],[[30,[[29,[28]]]]]],[[91,104],[[9,[104]]]],[92,[[4,[91,97]]]],[[],4],[[],4],[147,[[4,[98,97]]]],[[[32,[31]]],[[4,[99,97]]]],[[],4],[148,[[4,[87,97]]]],[[],4],[88,[[4,[87,97]]]],[[[90,[149,89]]],[[4,[87,97]]]],[[[90,[88,89]]],[[4,[87,97]]]],[[[17,[98,89]]],[[4,[85,97]]]],[[],4],[[[17,[98,89]]],[[4,[85,97]]]],[91,[[4,[95]]]],[91,[[4,[114]]]],[91,[[4,[118]]]],[91,[[4,[120]]]],[91,[[4,[126]]]],[91,[[4,[125]]]],[91,[[4,[117]]]],[91,[[4,[93]]]],[91,[[4,[123]]]],[91,[[4,[116]]]],[91,[[4,[121]]]],[[],4],[91,[[4,[115]]]],[91,[[4,[131]]]],[91,[[4,[128]]]],[91,[[4,[127]]]],[91,[[4,[124]]]],[91,[[4,[130]]]],[91,[[4,[119]]]],[91,[[4,[132]]]],[91,[[4,[94]]]],[91,[[4,[129]]]],[91,[[4,[96]]]],[[],4],[[],4],[[],4],[[],4],[[[17,[98,89]]],[[4,[87,97]]]],[[87,[32,[16]]],[[4,[87,97]]]],0,0,[[],27],[[],27],[[],27],[[],27],[[],27],0,[[],91],[[],91],[[],91],[[],91],[[],146],[[99,91,23],[[4,[97]]]],[[],150],[87,150],[[85,150],85],0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,[[98,[9,[99]]],[[4,[98,97]]]],[[98,[110,[10,10,143]]],98],[[98,23],98],[151,[[30,[[29,[28]]]]]],0,0,[[]],0,0,0,0,0,[[]],[[]],0,[[145,20],21],[[]],[[]],[[]],[[],22],[[],23],[[[17,[109]]],145],[[],[[30,[[29,[28]]]]]],[[],[[9,[[17,[152]]]]]],[[],[[9,[[17,[152]]]]]],[145,145],[[],9],[[]],[[],4],[[],4],[[],27],[[],146],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],23],[[],23],[18,23],[[],58],[[],58],[[],58],[[],9],[[],9],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],58],[[],27],[[],27],[[],58],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],7],[[],7],[[],7],[[],7],[52,37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153,[[4,[154,155]]]],[156,[[4,[157,158]]]],[159,[[4,[160,161]]]],[162,[[4,[107,163]]]],[[159,164],159],0,0,[52,52],[154,154],[157,157],[160,160],[107,107],[[]],[[]],[[]],[[]],[[]],[[156,[17,[154]]],156],[[159,[17,[154]]],159],0,0,0,0,[[156,16],156],[[159,16],159],[[153,[11,[10]]],153],0,0,[[],153],[[],156],[[],159],[[],162],[[153,91],153],0,0,[[],52],[[],153],[[],156],[[],159],[[],162],[[162,160],162],0,0,[[153,[9,[99]]],153],[154,[[9,[99]]]],0,0,[42,[[4,[52]]]],[42,[[4,[154]]]],[[52,52],23],[[52,37],23],[[154,154],23],[[157,157],23],[[160,160],23],[[107,107],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[162,[17,[160]]],162],0,0,[[52,20],21],[[52,20],21],[[155,20],21],[[155,20],21],[[154,20],21],[[158,20],21],[[158,20],21],[[157,20],21],[[161,20],21],[[161,20],21],[[160,20],21],[[163,20],21],[[163,20],21],[[107,20],21],[[]],[37,52],[[]],[165,155],[[]],[10,155],[[]],[[]],[[]],[10,158],[165,158],[[]],[[]],[[]],[10,161],[165,161],[[]],[[]],[165,163],[10,163],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,52],[[[0,[137,138]],139],37],[[52,140]],[[153,58],153],[[162,[11,[52]]],162],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[153,23],153],[154,23],0,0,[[153,23],153],[154,23],0,0,[[153,[11,[10]]],153],[[159,[11,[10]]],159],[[162,[11,[10]]],162],0,0,0,0,0,0,[[63,64],52],[[58,[11,[10]],91],153],[154,156],[25],[25],[25],[25],[156,156],[159,159],[162,162],[52,166],[52,64],[52,167],[[162,157],162],0,0,[[52,43],4],[[154,43],4],[52,63],[[156,154],156],0,0,[154,98],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[153,[[4,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[63,166,167],52],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100,100],[108,108],[144,144],[101,101],[168,168],[169,169],[[]],[[]],[[]],[[]],[[]],[[]],[100,[[30,[[29,[28]]]]]],[[100,18,101],[[30,[[29,[28]]]]]],0,0,[[100,107,108],[[30,[[29,[28]]]]]],[[],100],[[],108],[[],144],[[],101],[[],168],[[],169],[100,[[30,[[29,[28]]]]]],0,[[100,20],21],[[108,20],21],[[144,20],21],[[101,20],21],[[168,20],21],[[169,20],21],[[]],[[]],[[]],[[]],[[[110,[10,10]]],168],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[100,18],[[4,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,[[100,18,144],[[30,[[29,[28]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],146],[[],150],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[86,[[30,[[29,[28]]]]]],[170,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[151,151],[171,171],[112,112],[103,103],[170,170],[[]],[[]],[[]],[[]],[[]],[103,[[30,[[29,[28]]]]]],[[],172],[[],151],[[],171],[[],112],[[],103],[[],37],0,[[],[[30,[[29,[28]]]]]],[[170,170],23],[[],23],[[],23],[[],23],[[],23],[112,[[30,[[29,[28]]]]]],0,[[172,20],21],[[151,20],21],[[171,20],21],[[112,20],21],[[103,20],21],[[170,20],21],0,[[]],[[]],[144,151],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],18],0,0,[[],172],[[],172],[135,4],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[30,[[29,[28]]]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[151,[[30,[[29,[28]]]]]],[[]],0,0,0,0,0,0,0,0,0,[[173,107]],[[[32,[174]],107]],[[[32,[10]],107]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[174,174],[173,173],[[]],[[]],[[]],[[],1],[[[110,[10,109]]],4],0,[[1,1],23],[[],23],[[],23],[[],23],[[],23],0,[[1,20],21],[[136,20],21],[[174,20],21],[[173,20],21],[[86,20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,0,0,0,[[[110,[10,109]]],4],0,[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[82,[[4,[174]]]],[[],4],[81,[[4,[173]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[],27],[[],27],[[],27],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[175,20],21],[[[176,[19]],20],21],[[177,20],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],0,[[],9],[[],9],[[],9],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[],27],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[135,135],[[]],[[],135],[[135,20],21],[[]],[[]],[[]],[[135,136],[[30,[[29,[28]]]]]],[[]],[[],22],[[],23],[[135,1],[[30,[[29,[28]]]]]],[[],146],[[]],[[],9],[[]],[[],4],[[],4],[[],27],[[]],0,0],"c":[],"p":[[3,"ScanRequest"],[6,"SendableRecordBatchStream"],[3,"BoxedError"],[4,"Result"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[4,"Option"],[3,"String"],[8,"Into"],[3,"InvalidRawRegionRequestSnafu"],[8,"Clone"],[3,"InvalidDefaultConstraintSnafu"],[3,"BuildColumnDescriptorSnafu"],[15,"usize"],[3,"Vec"],[15,"str"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Request"],[15,"bool"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"TypeId"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"u8"],[15,"slice"],[8,"AsRef"],[6,"Id"],[3,"AppendResponse"],[6,"Id"],[15,"u64"],[6,"ProtocolVersion"],[6,"ManifestVersion"],[3,"ProtocolAction"],[3,"VersionHeader"],[8,"Deserializer"],[8,"Serializer"],[3,"RegionMetadataBuilder"],[3,"AddColumn"],[6,"Result"],[4,"AlterKind"],[4,"MetadataError"],[3,"RegionMetadata"],[3,"InvalidMetaSnafu"],[3,"InvalidRawRegionRequestSnafu"],[3,"RegionId"],[3,"InvalidRegionRequestSnafu"],[3,"ColumnMetadata"],[3,"InvalidSchemaSnafu"],[3,"SerdeJsonSnafu"],[3,"ConvertDatatypesSnafu"],[6,"ColumnId"],[8,"Iterator"],[3,"SkippedFields"],[6,"FieldRef"],[3,"RegionColumnDef"],[6,"TableId"],[6,"RegionNumber"],[4,"RegionRole"],[4,"RegionRole"],[4,"RegionRequest"],[3,"RegionCreateRequest"],[3,"RegionFlushRequest"],[3,"RegionAlterRequest"],[4,"AddColumnLocation"],[3,"RegionPutRequest"],[3,"RegionReadRequest"],[3,"RegionDeleteRequest"],[3,"RegionDropRequest"],[3,"RegionOpenRequest"],[3,"RegionCloseRequest"],[3,"RegionCompactRequest"],[3,"RegionTruncateRequest"],[3,"AlterRequest"],[4,"Kind"],[3,"AddColumn"],[3,"AddColumnLocation"],[4,"Body"],[3,"SchemaBuilder"],[3,"AlterRequest"],[3,"Schema"],[3,"Schema"],[3,"Global"],[3,"Arc"],[4,"ConcreteDataType"],[4,"DataType"],[4,"DurationType"],[3,"ListType"],[4,"TimeType"],[4,"TimestampType"],[4,"Error"],[3,"ColumnSchema"],[4,"ColumnDefaultConstraint"],[3,"EngineContext"],[3,"CloseOptions"],[4,"Ordering"],[3,"CompactContext"],[4,"Value"],[8,"Vector"],[8,"MutableVector"],[3,"RegionDescriptor"],[3,"CreateOptions"],[6,"VectorRef"],[3,"HashMap"],[4,"TimeUnit"],[3,"FlushContext"],[3,"Error"],[3,"Int8Type"],[3,"DictionaryType"],[3,"NullType"],[3,"UInt32Type"],[3,"Float64Type"],[3,"UInt16Type"],[3,"DateType"],[3,"Int16Type"],[3,"ColumnDataTypeWrapper"],[4,"IntervalType"],[3,"BinaryType"],[3,"StringType"],[3,"UInt8Type"],[3,"DateTimeType"],[3,"BooleanType"],[3,"UInt64Type"],[3,"Int64Type"],[3,"Int32Type"],[3,"Float32Type"],[4,"IntervalUnit"],[4,"TimeUnit"],[3,"ReadContext"],[3,"GetRequest"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[4,"IntervalUnit"],[4,"LogicalTypeId"],[3,"RandomState"],[3,"OpenOptions"],[3,"Chunk"],[6,"SchemaRef"],[3,"Field"],[3,"RawSchema"],[3,"DFSchema"],[15,"u32"],[3,"WriteContext"],[3,"OrderOption"],[3,"ColumnDescriptorBuilder"],[3,"ColumnDescriptor"],[4,"ColumnDescriptorBuilderError"],[3,"RowKeyDescriptorBuilder"],[3,"RowKeyDescriptor"],[4,"RowKeyDescriptorBuilderError"],[3,"ColumnFamilyDescriptorBuilder"],[3,"ColumnFamilyDescriptor"],[4,"ColumnFamilyDescriptorBuilderError"],[3,"RegionDescriptorBuilder"],[4,"RegionDescriptorBuilderError"],[6,"ColumnFamilyId"],[3,"UninitializedFieldError"],[6,"RegionGroup"],[6,"RegionSeq"],[4,"CompactionStrategy"],[3,"TwcsOptions"],[4,"FlushReason"],[3,"CloseContext"],[3,"RegionStat"],[4,"AlterOperation"],[3,"AddColumn"],[3,"WriteResponse"],[3,"ScanResponse"],[3,"GetResponse"],[8,"DataSource"],[13,"InvalidDefaultConstraint"],[13,"InvalidRawRegionRequest"],[13,"BuildColumnDescriptor"],[8,"LogStore"],[8,"Entry"],[8,"EntryStream"],[8,"Namespace"],[8,"Manifest"],[8,"MetaAction"],[8,"Checkpoint"],[8,"LogIterator"],[8,"ManifestLogStorage"],[8,"MetaActionIterator"],[13,"InvalidRawRegionRequest"],[13,"InvalidRegionRequest"],[13,"SerdeJson"],[13,"InvalidSchema"],[13,"InvalidMeta"],[13,"ConvertDatatypes"],[8,"RegionEngine"],[13,"After"],[13,"AddColumns"],[13,"DropColumns"],[8,"WriteRequest"],[8,"ChunkReader"],[8,"StorageEngine"],[8,"Region"],[8,"Snapshot"],[8,"RegionMeta"],[13,"AddColumns"],[13,"DropColumns"],[3,"ReservedColumnId"],[4,"ReservedColumnType"]]},\
"substrait":{"doc":"","t":"DQQIKAKAADLLLLLLLLLLLLLLLLLLLLLLLNDNDNDNDNDNDNDNDENDNDNDNDGNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLL","n":["DFLogicalSubstraitConvertor","Error","Plan","SubstraitPlan","decode","df_substrait","encode","error","extension_serializer","DFLogicalSubstraitConvertor","borrow","borrow_mut","compat","compat_mut","compat_ref","decode","deref","deref_mut","drop","encode","from","from_subset","init","into","into_request","is_in_subset","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip","ConvertDfSchema","ConvertDfSchemaSnafu","DFInternal","DFInternalSnafu","DecodeDfPlan","DecodeDfPlanSnafu","DecodeRel","DecodeRelSnafu","EmptyExpr","EmptyExprSnafu","EmptyPlan","EmptyPlanSnafu","EncodeDfPlan","EncodeDfPlanSnafu","EncodeRel","EncodeRelSnafu","Error","Internal","InternalSnafu","InvalidParameters","InvalidParametersSnafu","MissingField","MissingFieldSnafu","ResolveTable","ResolveTableSnafu","Result","SchemaNotMatch","SchemaNotMatchSnafu","UnknownPlan","UnknownPlanSnafu","UnsupportedConcreteType","UnsupportedConcreteTypeSnafu","UnsupportedExpr","UnsupportedExprSnafu","UnsupportedPlan","UnsupportedPlanSnafu","UnsupportedSubstraitType","UnsupportedSubstraitTypeSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","field","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","name","name","next","plan","provide","reason","source","status_code","storage_schema","substrait_schema","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","error","error","error","error","error","field","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","name","name","plan","reason","source","source","source","storage_schema","substrait_schema","table_name","ty","ty","ExtensionSerializer","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","deserialize_logical_plan","drop","from","from_subset","init","into","into_request","is_in_subset","serialize_logical_plan","to_subset","to_subset_unchecked","try_from","try_into","try_into","type_id","vzip"],"q":[[0,"substrait"],[9,"substrait::df_substrait"],[33,"substrait::error"],[621,"substrait::error::Error"],[657,"substrait::extension_serializer"]],"d":["","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","SNAFU context selector for the <code>Error::ConvertDfSchema</code> …","","SNAFU context selector for the <code>Error::DFInternal</code> variant","","SNAFU context selector for the <code>Error::DecodeDfPlan</code> variant","","SNAFU context selector for the <code>Error::DecodeRel</code> variant","","SNAFU context selector for the <code>Error::EmptyExpr</code> variant","","SNAFU context selector for the <code>Error::EmptyPlan</code> variant","","SNAFU context selector for the <code>Error::EncodeDfPlan</code> variant","","SNAFU context selector for the <code>Error::EncodeRel</code> variant","","","SNAFU context selector for the <code>Error::Internal</code> variant","","SNAFU context selector for the <code>Error::InvalidParameters</code> …","","SNAFU context selector for the <code>Error::MissingField</code> variant","","SNAFU context selector for the <code>Error::ResolveTable</code> variant","","","SNAFU context selector for the <code>Error::SchemaNotMatch</code> …","","SNAFU context selector for the <code>Error::UnknownPlan</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::UnsupportedExpr</code> …","","SNAFU context selector for the <code>Error::UnsupportedPlan</code> …","","SNAFU context selector for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeserialize user defined logical plan node (…","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Serialize this node to a byte array. This serialization …","","","","","","",""],"i":[0,57,57,0,57,0,57,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,0,18,0,18,0,18,0,18,0,0,18,0,18,0,18,0,18,0,18,0,18,0,18,18,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,29,30,31,32,33,35,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,29,30,31,32,33,35,31,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,18,31,18,32,18,18,35,35,42,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,24,25,25,27,27,28,28,37,37,38,38,29,29,30,30,31,31,32,32,39,39,40,40,33,33,35,35,41,41,42,42,43,43,44,44,18,18,27,28,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,24,25,27,28,37,38,29,30,31,32,39,40,33,35,41,42,43,44,18,58,59,60,61,62,63,64,65,66,67,58,59,68,69,63,70,60,71,72,73,74,75,61,62,64,65,63,70,71,74,75,73,73,75,66,67,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52],"f":[0,0,0,0,[[[0,[1,2]],[4,[3]],5,5],[[8,[[7,[6]]]]]],0,[[],[[10,[9]]]],0,0,0,[[]],[[]],[[],11],[[],11],[[],11],[[12,[0,[1,2]],[4,[3]],5,5],[[8,[[7,[6]]]]]],[13],[13],[13],[12,[[10,[9]]]],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[],16],[[]],[[],10],[[],10],[[],10],[[],17],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,19],[[],20],[18,[[16,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[[23,[22]]]]],18],[[[25,[[23,[22]]]]],18],[[[27,[[23,[26]]]]],18],[[[28,[[23,[22]]]]],18],[29,18],[30,18],[[[31,[[23,[22]],[23,[22]]]]],18],[[[32,[[23,[22]]]]],18],[33,18],[[[35,[[23,[34]],[23,[34]]]]],18],[18,[[16,[20]]]],[[[24,[36]]],[[24,[36]]]],[[[25,[36]]],[[25,[36]]]],[[[27,[36]]],[[27,[36]]]],[[[28,[36]]],[[28,[36]]]],[37,37],[38,38],[29,29],[30,30],[[[31,[36,36]]],[[31,[36,36]]]],[[[32,[36]]],[[32,[36]]]],[39,39],[40,40],[33,33],[[[35,[36,36]]],[[35,[36,36]]]],[41,41],[[[42,[36]]],[[42,[36]]]],[43,43],[44,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[18,13,[45,[22]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[18,5],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[[24,[[23,[22]]]]],[[10,[18]]]],[[[25,[[23,[22]]]]],[[10,[18]]]],[[[27,[[23,[26]]]]],[[10,[18]]]],[[[28,[[23,[22]]]]],[[10,[18]]]],[29,[[10,[18]]]],[30,[[10,[18]]]],[[[31,[[23,[22]],[23,[22]]]]],[[10,[18]]]],[[[32,[[23,[22]]]]],[[10,[18]]]],[33,[[10,[18]]]],[[[35,[[23,[34]],[23,[34]]]]],[[10,[18]]]],0,[[[24,[46]],47],48],[[[25,[46]],47],48],[[[27,[46]],47],48],[[[28,[46]],47],48],[[37,47],48],[[38,47],48],[[29,47],48],[[30,47],48],[[[31,[46,46]],47],48],[[[32,[46]],47],48],[[39,47],48],[[40,47],48],[[33,47],48],[[[35,[46,46]],47],48],[[41,47],48],[[[42,[46]],47],48],[[43,47],48],[[44,47],48],[[18,47],48],[[18,47],48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[24,[[23,[22]]]]],18],[[[25,[[23,[22]]]]],18],[[[27,[[23,[26]]]]],18],[[[28,[[23,[22]]]]],18],[37,18],[38,18],[29,18],[30,18],[[[31,[[23,[22]],[23,[22]]]]],18],[[[32,[[23,[22]]]]],18],[39,18],[40,18],[33,18],[[[35,[[23,[34]],[23,[34]]]]],18],[41,18],[[[42,[[23,[22]]]]],18],[43,18],[44,18],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,[18,[[16,[49]]]],0,[50],0,[18,[[16,[20]]]],[18,51],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],11],[[],11],[[],11],[13],[13],[[52,5,[54,[53]]],[[56,[[4,[55]]]]]],[13],[[]],[[]],[[],13],[[]],[[],14],[[],15],[[52,55],[[56,[[45,[53]]]]]],[[],16],[[]],[[],10],[[],10],[[],10],[[],17],[[]]],"c":[],"p":[[8,"Buf"],[8,"Send"],[8,"CatalogList"],[3,"Arc"],[15,"str"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Bytes"],[4,"Result"],[3,"Compat"],[3,"DFLogicalSubstraitConvertor"],[15,"usize"],[3,"Request"],[15,"bool"],[4,"Option"],[3,"TypeId"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[3,"String"],[8,"Into"],[3,"UnsupportedPlanSnafu"],[3,"UnsupportedExprSnafu"],[4,"ConcreteDataType"],[3,"UnsupportedConcreteTypeSnafu"],[3,"UnsupportedSubstraitTypeSnafu"],[3,"EmptyPlanSnafu"],[3,"EmptyExprSnafu"],[3,"MissingFieldSnafu"],[3,"InvalidParametersSnafu"],[3,"UnknownPlanSnafu"],[6,"SchemaRef"],[3,"SchemaNotMatchSnafu"],[8,"Clone"],[3,"DecodeRelSnafu"],[3,"EncodeRelSnafu"],[3,"DFInternalSnafu"],[3,"InternalSnafu"],[3,"ConvertDfSchemaSnafu"],[3,"ResolveTableSnafu"],[3,"EncodeDfPlanSnafu"],[3,"DecodeDfPlanSnafu"],[3,"Vec"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"ExtensionSerializer"],[15,"u8"],[15,"slice"],[8,"UserDefinedLogicalNode"],[6,"Result"],[8,"SubstraitPlan"],[13,"DecodeRel"],[13,"EncodeRel"],[13,"DFInternal"],[13,"EncodeDfPlan"],[13,"DecodeDfPlan"],[13,"MissingField"],[13,"UnsupportedPlan"],[13,"UnsupportedExpr"],[13,"UnsupportedConcreteType"],[13,"UnsupportedSubstraitType"],[13,"EmptyPlan"],[13,"EmptyExpr"],[13,"InvalidParameters"],[13,"Internal"],[13,"UnknownPlan"],[13,"SchemaNotMatch"],[13,"ConvertDfSchema"],[13,"ResolveTable"]]},\
"table":{"doc":"","t":"CCDCCCCLLLLLLLLMALAALLLLLLLAOAMAAAAALLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNGNNIIGGDKKLLLLLLLMLLLLKLLLLLLLLLLKKLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLKKMMKLLLLLLLLLKKLLLLLLLLLLLLNDNDNDNDNDNDNDENDNDNDNDNDNDGNDNDNDNDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNEGNNNNNENNNNNNDDNDGDDDEGDDEEGNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMLLLLLLMMMLMMMLMMMLMMMLLLLLMMMLLLMMMLMMMLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLALLLLLLLLLLMMLLLLDLLLLLLLLLLLOLLLLLMLLLLMLLLLLLDNEDDDDEDDDDNDNRRRRDNDDRNRDDRMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLMMMMMMMMDDLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMLLLLLLMLLLLLLLLIIGGAKAKAAKKLKKDLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLDLLLLLLLLLLLMLLLLLLLLMLMLLLLLLLLLLRRDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLLLLMMMLLLLLLLLLLLLLLLDDDAAAAMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFDDLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLL","n":["ColumnStatistics","Error","RegionStat","Result","Table","TableRef","TableStatistics","borrow","borrow_mut","compat","compat_mut","compat_ref","default","deref","deref_mut","disk_usage_bytes","dist_table","drop","engine","error","fmt","from","from_subset","init","into","into_request","is_in_subset","metadata","meter_insert_request","predicate","region_id","requests","stats","table","test_util","thin_table","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","DistTable","DummyDataSource","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","from_subset","from_subset","get_stream","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","table","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CloseTableResult","EngineContext","NotFound","OwnedTableReference","PartialClosed","Released","TableEngine","TableEngineProcedure","TableEngineProcedureRef","TableEngineRef","TableReference","alter_table","alter_table_procedure","bare","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","catalog","clone","clone","clone_into","clone_into","close","close_table","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","create_table","create_table_procedure","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop_table","drop_table_procedure","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_subset","from_subset","from_subset","full","get_hash","get_table","hash","init","init","init","into","into","into","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","name","open_table","schema","table","table_exists","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","truncate_table","truncate_table_procedure","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BuildColumnDescriptor","BuildColumnDescriptorSnafu","ColumnExists","ColumnExistsSnafu","ColumnNotExists","ColumnNotExistsSnafu","Datafusion","DatafusionSnafu","DuplicatedExecuteCall","DuplicatedExecuteCallSnafu","EngineExist","EngineExistSnafu","EngineNotFound","EngineNotFoundSnafu","Error","InvalidAlterRequest","InvalidAlterRequestSnafu","InvalidTable","InvalidTableSnafu","MissingTimeIndexColumn","MissingTimeIndexColumnSnafu","ParseTableOption","ParseTableOptionSnafu","RegionSchemaMismatch","RegionSchemaMismatchSnafu","RemoveColumnInIndex","RemoveColumnInIndexSnafu","Result","SchemaBuild","SchemaBuildSnafu","SchemaConversion","SchemaConversionSnafu","TableOperation","TableOperationSnafu","TableProjection","TableProjectionSnafu","TablesRecordBatch","TablesRecordBatchSnafu","Unsupported","UnsupportedSnafu","as_any","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build","build","build","build","build","build","build","build","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_name","column_name","column_name","column_name","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","debug_fmt","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine","engine","err","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_error","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","key","msg","next","operation","provide","source","status_code","table","table","table","table_id","table_name","table_name","table_name","table_name","table_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column_name","column_name","column_name","column_name","engine","engine","err","error","error","error","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","operation","source","source","source","source","table","table","table","table_id","table_name","table_name","table_name","table_name","table_name","value","ArrowCompute","BadArrayAccess","Base","CastTimeType","CastType","Conversion","ConvertError","ConvertResult","DefaultValueType","Deserialize","DuplicateColumn","DuplicateMeta","Exact","FilterPushDownType","Inexact","InvalidTimestampIndex","InvalidTimestampPrecision","NullDefault","ParseSchemaVersion","ProjectArrowSchema","RawTableInfo","RawTableMeta","Serialize","SplitResult","TableId","TableIdent","TableInfo","TableInfoBuilder","TableInfoBuilderError","TableInfoRef","TableMeta","TableMetaBuilder","TableMetaBuilderError","TableType","TableVersion","Temporary","ToScalarValue","TryFromValue","UninitializedField","UninitializedField","UnknownVector","Unsupported","UnsupportedArrowType","UnsupportedDefaultExpr","UnsupportedOperation","ValidationError","ValidationError","View","add_columns","alloc_new_column","as_any","as_error_source","as_error_source","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder_with_alter_kind","catalog_name","catalog_name","catalog_name","catalog_name","cause","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_names","columns_at_after","columns_at_first","columns_at_last","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_empty","create_empty","created_on","created_on","created_on","created_on","debug_fmt","default","default","default","default_value_indices","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desc","desc","desc","desc","description","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine","engine","engine","engine","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field_column_names","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","full_table_name","ident","ident","ident","ident","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","meta","meta","meta","meta","name","name","name","name","new","new","new_external_table","new_meta_builder","next","next_column_id","next_column_id","next_column_id","next_column_id","options","options","options","options","partition_key_indices","partition_key_indices","partition_key_indices","partition_key_indices","primary_key_indices","primary_key_indices","primary_key_indices","primary_key_indices","provide","provide","provide","region_ids","region_numbers","region_numbers","region_numbers","region_numbers","remove_columns","row_key_column_names","schema","schema","schema","schema","schema_name","schema_name","schema_name","schema_name","serialize","serialize","serialize","serialize","serialize","source","split_requests_by_column_location","status_code","table_id","table_id","table_id","table_type","table_type","table_type","table_type","table_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_indices","value_indices","value_indices","value_indices","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","arrow_type","column","error","error","error","error","error","error","expr","from","index","index","json","key","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","location","msg","msg","op","precision","reason","reason","reason","size","value","vector_type","Predicate","TimeRangePredicateBuilder","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","empty","exprs","extract_from_between_expr","extract_from_binary_expr","extract_from_in_list_expr","extract_time_range_from_expr","filters","from","from","from_ref","from_subset","from_subset","get_timestamp_filter","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","new","prune_primary_key","prune_row_groups","prune_with_stats","stats","to_owned","to_physical_exprs","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","ts_col_name","ts_col_unit","type_id","type_id","vzip","vzip","RowGroupPruningStatistics","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","field_by_name","from","from_subset","impl_min_max_values","init","into","into_request","is_in_subset","max_values","meta_data","min_values","new","null_counts","num_containers","schema","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","AddColumnRequest","AddColumns","AlterKind","AlterTableRequest","CloseTableRequest","CompactTableRequest","CopyDatabaseRequest","CopyDirection","CopyTableRequest","CreateDatabaseRequest","CreateTableRequest","DeleteRequest","DropColumns","DropTableRequest","Export","FILE_TABLE_FORMAT_KEY","FILE_TABLE_LOCATION_KEY","FILE_TABLE_META_KEY","FILE_TABLE_PATTERN_KEY","FlushTableRequest","Import","InsertRequest","OpenTableRequest","REGIONS_KEY","RenameTable","TTL_KEY","TableOptions","TruncateTableRequest","WRITE_BUFFER_SIZE_KEY","alter_kind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","catalog_name","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column_schema","columns_values","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","connection","connection","create_if_not_exists","create_if_not_exists","db_name","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","desc","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","direction","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","engine","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extra_options","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_key","is_rename_table","key_column_values","location","location","location","pattern","primary_key_indices","region_number","region_number","region_numbers","region_numbers","region_numbers","schema","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","schema_name","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","table_id","table_id","table_id","table_id","table_id","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_name","table_options","table_ref","table_ref","table_ref","table_ref","table_ref","table_version","time_range","timestamp_range","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_table_option","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait","wait","with","with","write_buffer_size","columns","names","new_table_name","ColumnStatistics","TableStatistics","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","column_statistics","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","default","default","deref","deref","deref_mut","deref_mut","distinct_count","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","from_subset","from_subset","init","init","into","into","into_request","into_request","is_exact","is_in_subset","is_in_subset","max_value","min_value","null_count","num_rows","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","total_byte_size","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Table","TableIdProvider","TableIdProviderRef","TableRef","adapter","as_any","metrics","next_table_id","numbers","scan","scan_to_stream","schema","supports_filters_pushdown","table_info","table_type","DfTableProviderAdapter","as_any","borrow","borrow_mut","compat","compat_mut","compat_ref","deref","deref_mut","drop","from","from_subset","init","into","into_request","is_in_subset","new","scan","scan_req","schema","supports_filters_pushdown","table","table","table_type","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","with_ordering_hint","MemoryUsageMetrics","borrow","borrow_mut","clone","clone_into","compat","compat_mut","compat_ref","deref","deref_mut","drop","drop","end_time","fmt","from","from_ref","from_subset","init","into","into_request","is_in_subset","mem_used","new","output_rows","record_mem_usage","record_output","to_owned","to_subset","to_subset_unchecked","try_done","try_from","try_into","type_id","vzip","NUMBERS_TABLE_NAME","NUMBER_COLUMN","NumbersDataSource","NumbersStream","NumbersTable","already_run","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","from_ref","from_subset","from_subset","from_subset","get_stream","init","init","init","into","into","into","into_request","into_request","into_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","limit","new","poll_next","schema","schema","schema","schema","table","table_info","table_with_name","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","StreamScanAdapter","StreamWithMetricWrapper","as_any","borrow","borrow","borrow_mut","borrow_mut","children","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","execute","fmt","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","into_streaming_request","is_in_subset","is_in_subset","metric","metric","metrics","new","output_ordering","output_ordering","output_partitioning","poll_next","schema","schema","schema","stream","stream","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip","with_new_children","with_output_ordering","EmptyTable","MemTable","MockTableEngine","empty_table","memtable","mock_engine","table_info","tables","EmptyDataSource","EmptyTable","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","from_table_info","get_stream","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","schema","table","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MemTable","MemtableDataSource","MemtableStream","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","default_numbers_table","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_subset","from_subset","from_subset","get_stream","init","init","init","into","into","into","into_request","into_request","into_request","into_streaming_request","is_in_subset","is_in_subset","is_in_subset","new_with_catalog","new_with_region","poll_next","recordbatch","recordbatch","schema","schema","table","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","vzip","vzip","vzip","MockTableEngine","alter_table","alter_table_procedure","borrow","borrow_mut","close","compat","compat_mut","compat_ref","create_table","create_table_procedure","default","deref","deref_mut","drop","drop_table","drop_table_procedure","from","from_subset","get_table","init","into","into_request","is_in_subset","name","new","open_table","table_exists","tables","to_subset","to_subset_unchecked","truncate_table","truncate_table_procedure","try_from","try_into","type_id","vzip","test_table_info","ThinTable","ThinTableAdapter","as_any","borrow","borrow","borrow_mut","borrow_mut","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","data_source","data_source","deref","deref","deref_mut","deref_mut","drop","drop","filter_pushdown","from","from","from_subset","from_subset","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","new","new","scan_to_stream","schema","supports_filters_pushdown","table","table_info","table_info","table_type","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"table"],[42,"table::dist_table"],[90,"table::engine"],[202,"table::error"],[813,"table::error::Error"],[857,"table::metadata"],[1385,"table::metadata::ConvertError"],[1430,"table::predicate"],[1494,"table::predicate::stats"],[1524,"table::requests"],[2075,"table::requests::AlterKind"],[2078,"table::stats"],[2152,"table::table"],[2167,"table::table::adapter"],[2198,"table::table::metrics"],[2232,"table::table::numbers"],[2316,"table::table::scan"],[2379,"table::test_util"],[2387,"table::test_util::empty_table"],[2433,"table::test_util::memtable"],[2508,"table::test_util::mock_engine"],[2545,"table::test_util::table_info"],[2546,"table::thin_table"]],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Table and TableEngine requests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","CloseTableResult","Table engine context.","","","","","Table engine abstraction.","Procedures for table engine.","","","Represents a resolved path to a table of the form …","Alter table schema, options etc. by given request,","Returns a procedure that alters a table by specific <code>request</code>…","","","","","","","","","","","","","Close the engine.","Closes the (partial) given table.","","","","","","","","","","Create a table by given request.","Returns a procedure that creates a table by specific …","","","","","","","","","","","Drops the given table. Return true if the table is …","Returns a procedure that drops a table by specific <code>request</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the table by it’s name.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Return engine name","Open an existing table by given <code>request</code>, returns the …","","","Returns true when the given table is exists.","","","","","","","","","","","Returns a procedure that truncates a table by specific …","","","","","","","","","","","","","","SNAFU context selector for the <code>Error::BuildColumnDescriptor</code>…","","SNAFU context selector for the <code>Error::ColumnExists</code> variant","","SNAFU context selector for the <code>Error::ColumnNotExists</code> …","","SNAFU context selector for the <code>Error::Datafusion</code> variant","","SNAFU context selector for the <code>Error::DuplicatedExecuteCall</code>…","","SNAFU context selector for the <code>Error::EngineExist</code> variant","","SNAFU context selector for the <code>Error::EngineNotFound</code> …","Default error implementation of table.","","SNAFU context selector for the <code>Error::InvalidAlterRequest</code> …","","SNAFU context selector for the <code>Error::InvalidTable</code> variant","","SNAFU context selector for the …","","SNAFU context selector for the <code>Error::ParseTableOption</code> …","","SNAFU context selector for the <code>Error::RegionSchemaMismatch</code> …","","SNAFU context selector for the <code>Error::RemoveColumnInIndex</code> …","","","SNAFU context selector for the <code>Error::SchemaBuild</code> variant","","SNAFU context selector for the <code>Error::SchemaConversion</code> …","","SNAFU context selector for the <code>Error::TableOperation</code> …","","SNAFU context selector for the <code>Error::TableProjection</code> …","","SNAFU context selector for the <code>Error::TablesRecordBatch</code> …","","SNAFU context selector for the <code>Error::Unsupported</code> variant","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coden ordinary physical table.","","","","","","","","","","The provider guarantees that all returned data satisfies …","Indicates whether and how a filter expression can be …","The expression can be used to help minimise the data …","","","","","","Struct used to serialize and deserialize <code>TableInfo</code>.","Struct used to serialize and deserialize <code>TableMeta</code>.","","The result after splitting requests by column location …","","Identifier of the table.","","Builder for <code>TableInfo</code>.","Error type for TableInfoBuilder","","The table metadata Note: if you add new fields to this …","Builder for <code>TableMeta</code>.","Error type for TableMetaBuilder","Indicates the type of this table for metadata/catalog …","","A transient table.","","","Uninitialized field","Uninitialized field","","The expression cannot be used by the provider.","","","","Custom validation error","Custom validation error","A non-materialised table that itself uses a query …","","Allocate a new column for the table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a new <code>TableMeta</code>.","Builds a new <code>TableInfo</code>.","Returns the new TableMetaBuilder after applying given …","","","","","","","","","","","","","","","","","","","","","","all column names should be added.","column requests should be added after already exist …","column requests should be added at first place.","column requests should be added at last place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create an empty builder, with all fields set to <code>None</code> or …","Create an empty builder, with all fields set to <code>None</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comment of the table.","Comment of the table.","Comment of the table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Returns the full table name in the form of …","Id and version of the table.","Id and version of the table.","Id and version of the table.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Name of the table.","Name of the table.","Name of the table.","","","","","","","","","","","Table options.","Table options.","Table options.","","","","","","The indices of columns in primary key. Note that the index …","The indices of columns in primary key. Note that the index …","The indices of columns in primary key. Note that the index …","","","","","","","","","","","","","","","","","","","","","","","","","","Split requests into different groups using column location …","","","","Unique id of this table.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version of the table, bumped when metadata (such as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>TimeRangePredicateBuilder</code> extracts time range from logical …","","","","","","","","","","","","","","","","","","","","Builds an empty predicate from given schema.","logical exprs","","","Extract time range filter from <code>IN (...)</code> expr.","Extract time range filter from <code>WHERE</code>/<code>IN (...)</code>/<code>BETWEEN</code> …","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Creates a new <code>Predicate</code> by converting logical exprs to …","Prunes primary keys","Evaluates the predicate against row group metadata. …","Evaluates the predicate against the <code>stats</code>. Returns a …","","","Builds physical exprs according to provided schema.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Add column request","","","Alter table request","Close table request","","","","Copy table request","","Create table request","Delete (by primary key) request","","Drop table request","","","","","","","","","Open table request","","","","","Truncate table requestxtra options that may not applicable to all table engines.","flush regions","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Values of each column in this table’s primary key and …","","","","","","","","","","Do nothing if region_numbers is empty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Time-to-live of table. Expired data will be automatically …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait until the flush is done.","Wait until the compaction is done.","","","Memtable size of memtable.","","","","Statistics for a column within a relation","Statistics for a relation Fields are optional and can be …","","","","","","","","","Statistics on a column level","","","","","","","","","","","","","Number of distinct values","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","If true, any field that is <code>Some(..)</code> is the actual value in …","","","Maximum value of column","Minimum value of column","Number of null values on column","The number of table rows","","","","","","","total bytes of the table rows","","","","","","","","","Table abstraction.","","","","","Returns the table as <code>Any</code> so that it can be downcast to a …","","","","","","Get a reference to the schema for this table","Tests whether the table provider can make use of any or …","Get a reference to the table info.","Get the type of this table for metadata/catalog purposes.","Adapt greptime’s TableRef to DataFusion’s TableProvider…","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","This metrics struct is used to record and hold memory usage","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","Create a new MemoryUsageMetrics structure, and set …","","","","","","","Record the end time of the query","","","","","","","","","numbers table for test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adapt greptime’s SendableRecordBatchStream to GreptimeDB…","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a 1 column 100 rows table, with table name “…","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The <code>ThinTable</code> struct will replace the <code>Table</code> trait. …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,0,2,0,0,2,2,2,2,2,2,2,0,0,0,2,0,0,0,0,0,2,2,2,2,2,2,0,0,12,11,12,11,11,11,12,11,12,11,12,11,12,11,12,11,12,11,12,11,11,12,11,12,12,11,12,11,12,11,12,11,11,11,12,11,12,11,12,11,12,11,12,11,12,11,0,0,31,0,31,31,0,0,0,0,0,160,161,26,26,31,18,26,31,18,26,26,18,26,18,160,160,26,31,18,26,31,18,26,31,18,160,161,18,26,31,18,26,31,18,26,31,18,160,161,26,26,26,26,26,26,26,26,31,18,26,31,18,26,18,26,31,18,26,26,160,26,26,31,18,26,31,18,26,31,18,26,31,18,160,160,26,26,160,26,18,26,26,31,18,26,31,18,160,161,26,31,18,26,31,18,26,31,18,26,31,18,41,0,41,0,41,0,41,0,41,0,41,0,41,0,0,41,0,41,0,41,0,41,0,41,0,41,0,0,41,0,41,0,41,0,41,0,41,0,41,0,41,41,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,46,47,48,49,50,51,52,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,48,49,51,64,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,46,47,55,46,47,48,49,50,51,52,53,54,55,56,57,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,54,63,41,53,41,41,41,50,52,55,56,48,49,51,64,57,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,54,58,59,46,47,61,62,48,63,49,50,51,64,52,65,53,54,55,56,57,41,162,163,164,165,166,167,168,169,170,165,171,169,172,166,167,170,173,162,174,163,175,164,165,176,171,168,177,178,174,179,172,173,174,180,175,176,168,177,162,163,164,165,178,171,77,77,84,77,77,77,0,0,77,77,77,77,83,0,83,77,77,77,77,77,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,84,77,77,78,81,77,83,77,77,77,78,81,84,71,71,77,78,81,77,77,101,83,84,85,74,78,71,79,81,80,86,87,77,101,83,84,85,74,78,71,79,81,80,86,87,77,74,79,71,79,79,80,87,77,83,84,85,74,71,80,86,87,83,84,85,74,71,80,86,87,101,101,101,101,101,83,84,85,74,78,71,79,81,80,86,87,77,101,83,84,85,74,78,71,79,81,80,86,87,77,101,83,84,85,74,78,71,79,81,80,86,87,77,74,79,74,74,71,86,77,85,74,79,74,101,83,84,85,74,78,71,79,81,80,86,87,77,101,83,84,85,74,78,71,79,81,80,86,87,77,79,79,80,87,77,83,84,85,86,87,101,83,84,85,74,78,71,79,81,80,86,87,77,74,74,71,86,83,84,85,71,80,86,87,83,83,83,83,83,84,84,84,84,84,85,85,85,85,85,71,71,71,71,71,80,80,80,80,80,86,86,86,86,86,87,87,87,87,87,71,83,84,84,85,78,78,71,81,81,80,86,87,77,77,101,83,83,84,85,85,74,78,78,78,71,79,81,81,81,80,86,86,87,87,77,83,84,85,74,71,80,86,87,101,83,84,85,74,78,71,79,81,80,86,87,77,80,79,79,80,87,101,83,84,85,74,78,71,79,81,80,86,87,77,101,83,84,85,74,78,71,79,81,80,86,87,77,101,83,84,85,74,78,71,79,81,80,86,87,77,101,83,84,85,74,78,71,79,81,80,86,87,77,79,79,80,87,79,79,80,87,85,79,74,71,77,74,74,71,86,74,74,71,86,74,74,71,86,74,74,71,86,78,81,77,80,74,74,71,86,71,71,74,74,71,86,79,79,80,87,83,84,85,86,87,77,71,77,79,80,85,79,79,80,87,79,83,84,85,74,71,80,86,87,84,78,81,77,101,83,84,85,74,78,71,79,81,80,86,87,77,101,83,84,85,74,78,71,79,81,80,86,87,77,101,83,84,85,74,78,71,71,79,81,80,80,86,87,77,101,83,84,85,74,78,71,79,81,80,86,87,77,101,83,84,85,74,78,71,79,81,80,86,87,77,74,74,71,86,85,101,83,84,85,74,78,71,79,81,80,86,87,77,181,182,183,184,185,186,187,188,189,190,191,192,184,193,183,184,190,191,194,181,195,185,192,196,186,187,188,189,197,198,193,199,200,182,201,194,196,195,200,198,199,201,191,185,195,0,0,104,106,104,106,104,106,106,104,106,104,106,104,106,104,106,104,106,104,106,106,106,104,104,104,104,104,104,106,106,104,106,104,104,106,104,106,104,106,104,106,104,106,106,106,106,0,106,106,104,106,104,106,104,106,104,106,104,104,104,106,104,106,0,117,117,117,117,117,117,117,117,117,117,117,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,82,0,0,0,0,0,0,0,0,0,0,82,0,126,0,0,0,0,0,126,0,0,0,82,0,0,0,0,19,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,28,38,19,29,27,124,125,127,121,122,40,123,120,28,96,38,19,72,82,29,27,121,122,40,123,120,28,96,38,19,72,82,29,27,121,122,40,123,72,124,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,127,123,120,28,120,96,121,122,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,28,28,96,19,72,82,29,27,40,123,127,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,28,96,96,96,96,96,96,96,27,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,38,19,72,82,29,27,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,28,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,72,19,125,72,127,123,127,28,121,122,28,38,27,28,28,38,19,29,27,124,125,127,121,122,40,123,28,96,19,72,82,29,27,40,123,38,19,29,27,40,28,38,19,29,27,124,125,127,121,122,40,28,28,19,29,27,40,19,123,127,120,28,96,38,19,72,82,29,27,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,96,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,0,120,28,96,38,19,72,82,29,27,124,125,126,127,121,122,40,123,121,122,127,123,96,202,203,204,0,0,129,130,129,130,129,130,129,130,129,129,130,129,130,129,130,129,130,129,130,129,130,130,129,130,129,130,129,129,129,129,129,130,130,130,130,130,129,130,129,130,129,130,129,130,129,130,129,130,129,130,129,129,130,130,130,130,129,129,130,129,130,129,130,129,129,130,129,130,129,130,129,130,0,0,0,0,0,205,0,206,0,0,205,205,205,205,205,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,0,0,0,0,0,140,139,140,138,139,140,138,138,138,139,140,138,139,140,138,139,140,138,139,140,138,139,140,138,139,140,138,138,139,140,138,138,139,140,138,139,139,140,138,139,140,138,139,140,138,140,139,140,138,140,139,140,140,138,139,140,138,138,138,138,139,140,138,139,140,138,139,140,138,139,140,138,140,139,140,138,139,140,138,0,0,143,143,150,143,150,143,143,150,143,150,143,150,143,150,143,150,143,150,143,143,143,150,143,150,143,150,143,150,143,150,150,143,150,143,150,143,143,143,143,143,150,143,150,143,143,150,143,150,143,150,143,150,143,150,150,143,150,143,150,143,143,0,0,0,0,0,0,0,156,0,0,207,151,207,151,207,151,207,151,207,151,207,151,207,151,207,151,207,151,207,151,207,151,207,151,207,151,207,151,207,151,151,207,207,151,207,151,207,151,207,151,207,151,207,151,0,0,0,208,152,155,208,152,155,208,152,155,208,152,155,208,152,155,208,208,152,155,208,152,155,208,152,155,208,152,155,208,152,155,152,208,152,155,208,152,155,208,152,155,155,208,152,155,208,208,155,152,155,155,155,208,208,152,155,208,152,155,208,152,155,208,152,155,155,208,152,155,208,152,155,0,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,0,0,0,157,159,157,159,157,159,157,159,157,159,157,157,157,159,157,159,157,159,157,159,159,157,159,157,159,157,159,157,159,157,159,157,159,157,157,157,157,157,157,159,157,159,157,159,157,159,157,159,157,159,157,159,157],"f":[0,0,0,0,0,0,0,[[]],[[]],[[],1],[[],1],[[],1],[[],2],[3],[3],0,0,[3],0,0,[[2,4],[[6,[5]]]],[[]],[[]],[[],3],[[]],[[],7],[[],8],0,0,0,0,0,0,0,0,0,[[],9],[[]],[[],6],[[],6],[[],10],[[]],0,0,[[]],[[]],[[]],[[]],[11,11],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[12,13],[[6,[14,15]]]],[[],3],[[],3],[[]],[[]],[[],7],[[],7],[[],8],[[],8],[16,17],[[]],[[],9],[[],9],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[18,19],[[22,[[21,[20]]]]]],[[18,19],[[24,[23]]]],[25,26],[[]],[[]],[[]],[[]],[[]],[[]],0,[26,26],[18,18],[[]],[[]],[[],[[22,[[21,[20]]]]]],[[18,27],[[22,[[21,[20]]]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[18,28],[[22,[[21,[20]]]]]],[[18,28],[[24,[23]]]],[[],18],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[18,29],[[22,[[21,[20]]]]]],[[18,29],[[24,[23]]]],[[26,26],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[26,4],30],[[26,4],30],[[31,4],30],[[18,4],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[25,25,25],26],[[[0,[32,33]],34],35],[[18,36],[[24,[[9,[17]]]]]],[[26,37]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],25],[[18,38],[[22,[[21,[20]]]]]],0,0,[[18,36],8],[[]],[[]],[[],39],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[18,40],[[22,[[21,[20]]]]]],[[18,40],[[24,[23]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[41,42],[[],43],[41,[[9,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[46,[[45,[39]]]]],41],[[[47,[[45,[39]]]]],41],[[[48,[[45,[39]],[45,[39]]]]],41],[[[49,[[45,[39]],[45,[39]]]]],41],[[[50,[[45,[39]]]]],41],[[[51,[[45,[39]],[45,[39]]]]],41],[[[52,[[45,[39]]]]],41],[[[53,[[45,[39]]]]],41],[[[54,[[45,[39]],[45,[39]]]]],41],[[[55,[[45,[39]],[45,[39]]]]],41],[[[56,[[45,[36]]]]],41],[[[57,[[45,[39]]]]],41],[41,[[9,[43]]]],[58,58],[59,59],[[[46,[60]]],[[46,[60]]]],[[[47,[60]]],[[47,[60]]]],[61,61],[62,62],[[[48,[60,60]]],[[48,[60,60]]]],[[[63,[60]]],[[63,[60]]]],[[[49,[60,60]]],[[49,[60,60]]]],[[[50,[60]]],[[50,[60]]]],[[[51,[60,60]]],[[51,[60,60]]]],[[[64,[60,60]]],[[64,[60,60]]]],[[[52,[60]]],[[52,[60]]]],[65,65],[[[53,[60]]],[[53,[60]]]],[[[54,[60,60]]],[[54,[60,60]]]],[[[55,[60,60]]],[[55,[60,60]]]],[[[56,[60]]],[[56,[60]]]],[[[57,[60]]],[[57,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[41,3,[66,[39]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[41,25],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,0,0,[[[46,[[45,[39]]]]],[[6,[41]]]],[[[47,[[45,[39]]]]],[[6,[41]]]],[[[48,[[45,[39]],[45,[39]]]]],[[6,[41]]]],[[[49,[[45,[39]],[45,[39]]]]],[[6,[41]]]],[[[50,[[45,[39]]]]],[[6,[41]]]],[[[51,[[45,[39]],[45,[39]]]]],[[6,[41]]]],[[[52,[[45,[39]]]]],[[6,[41]]]],[[[53,[[45,[39]]]]],[[6,[41]]]],[[[54,[[45,[39]],[45,[39]]]]],[[6,[41]]]],[[[55,[[45,[39]],[45,[39]]]]],[[6,[41]]]],[[[56,[[45,[36]]]]],[[6,[41]]]],[[[57,[[45,[39]]]]],[[6,[41]]]],[[58,4],30],[[59,4],30],[[[46,[67]],4],30],[[[47,[67]],4],30],[[61,4],30],[[62,4],30],[[[48,[67,67]],4],30],[[[63,[67]],4],30],[[[49,[67,67]],4],30],[[[50,[67]],4],30],[[[51,[67,67]],4],30],[[[64,[67,67]],4],30],[[[52,[67]],4],30],[[65,4],30],[[[53,[67]],4],30],[[[54,[67,67]],4],30],[[[55,[67,67]],4],30],[[[56,[67]],4],30],[[[57,[67]],4],30],[[41,4],30],[[41,4],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,41],[59,41],[[[46,[[45,[39]]]]],41],[[[47,[[45,[39]]]]],41],[61,41],[62,41],[[[48,[[45,[39]],[45,[39]]]]],41],[[[63,[[45,[39]]]]],41],[[[49,[[45,[39]],[45,[39]]]]],41],[[[50,[[45,[39]]]]],41],[[[51,[[45,[39]],[45,[39]]]]],41],[[[64,[[45,[39]],[45,[39]]]]],41],[[[52,[[45,[39]]]]],41],[65,41],[[[53,[[45,[39]]]]],41],[[[54,[[45,[39]],[45,[39]]]]],41],[[[55,[[45,[39]],[45,[39]]]]],41],[[[56,[[45,[36]]]]],41],[[[57,[[45,[39]]]]],41],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,[41,[[9,[68]]]],0,[69],[41,[[9,[43]]]],[41,70],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[71,25,[73,[72]]],[[24,[74]]]],[[71,25,75],[[24,[76]]]],[77,42],[[],43],[[],43],[[],43],[77,[[9,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,[[6,[71,78]]]],[79,[[6,[80,81]]]],[[71,25,82],[[24,[74]]]],[[79,[45,[39]]],79],0,0,0,[77,[[9,[43]]]],[83,83],[84,84],[85,85],[74,74],[71,71],[80,80],[86,86],[87,87],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],74],[[],79],[[74,[89,[88]]],74],0,0,0,[[77,3,[66,[39,90]]]],[[],85],[[],74],[[],79],[74,[[6,[[66,[3]],39]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[79,[45,[[9,[39]]]]],79],0,0,0,[77,25],[91,[[6,[83]]]],[91,[[6,[84]]]],[91,[[6,[85]]]],[91,[[6,[86]]]],[91,[[6,[87]]]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[74,[45,[39]]],74],0,0,0,[[83,83],8],[[84,84],8],[[85,85],8],[[71,71],8],[[80,80],8],[[86,86],8],[[87,87],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[71,92],[[83,4],30],[[84,4],30],[[84,4],30],[[85,4],30],[[78,4],30],[[78,4],30],[[71,4],30],[[81,4],30],[[81,4],30],[[80,4],30],[[86,4],30],[[87,4],30],[[77,4],[[6,[5]]]],[[77,4],[[6,[5]]]],[[]],[93,83],[[]],[[]],[36,85],[[]],[[]],[94,78],[[]],[39,78],[[]],[[]],[94,81],[[]],[39,81],[[]],[[]],[71,86],[80,87],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,39],[[79,[45,[85]]],79],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[79,71],79],0,0,0,[[79,[45,[39]]],79],0,0,0,[36,85],[[[45,[39]],71],79],[[],74],[71,74],[77,[[9,[68]]]],[[74,95],74],0,0,0,[[74,96],74],0,0,0,[[74,[66,[3]]],74],0,0,0,[[74,[66,[3]]],74],0,0,0,[69],[69],[69],[80,[[66,[97]]]],[[74,[45,[[66,[98]]]]],74],0,0,0,[[71,25,[73,[39]]],[[24,[74]]]],[71,92],[[74,99],74],0,0,0,[[79,[45,[39]]],79],0,0,0,[[83,100],6],[[84,100],6],[[85,100],6],[[86,100],6],[[87,100],6],[77,[[9,[43]]]],[[71,25,[73,[72]]],[[24,[101]]]],[77,70],[[79,36],79],[80,36],0,[[79,84],79],0,0,0,[[79,102],79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[86,[[103,[71]]]],[[],6],[[],6],[[],6],[87,[[103,[80]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[74,[66,[3]]],74],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[104,105],[106,106],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[3],[3],[[],106],0,[[104,107,8,107,107],[[9,[105]]]],[[104,107,108,107],[[9,[105]]]],[[104,107,8,[73,[107]]],[[9,[105]]]],[[104,107],[[9,[105]]]],0,[[]],[[]],[[]],[[]],[[]],[[104,107,107],9],[[],3],[[],3],[[]],[[]],[[],7],[[],7],[[],8],[[],8],[[25,109,[73,[110]]],104],[[[66,[110]]],106],[[106,111],[[24,[8]]]],[[106,[73,[112]],99],[[66,[8]]]],[[106,113,114],[[66,[8]]]],0,[[]],[[106,114],[[24,[[66,[[116,[115]]]]]]]],[[],9],[[],9],[[]],[[]],[[],6],[[],6],[[],6],[[],6],0,0,[[],10],[[],10],[[]],[[]],0,[[]],[[]],[[],1],[[],1],[[],1],[3],[3],[3],[[117,25],9],[[]],[[]],0,[[],3],[[]],[[],7],[[],8],[[117,118],[[9,[119]]]],0,[[117,118],[[9,[119]]]],[[[73,[112]],99],117],[[117,118],[[9,[119]]]],[117,3],0,[[],9],[[]],[[],6],[[],6],[[],10],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[120,120],[28,28],[96,96],[38,38],[19,19],[72,72],[82,82],[29,29],[27,27],[121,121],[122,122],[40,40],[123,123],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,0,0,[[],96],[[],121],[[],122],[[],123],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,[91,[[6,[28]]]],[91,[[6,[96]]]],[91,[[6,[19]]]],[91,[[6,[72]]]],[91,[[6,[82]]]],[91,[[6,[29]]]],[91,[[6,[27]]]],[91,[[6,[40]]]],[91,[[6,[123]]]],0,[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,[[96,96],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,[[120,4],30],[[28,4],30],[[96,4],30],[[38,4],30],[[19,4],30],[[72,4],30],[[82,4],30],[[29,4],30],[[27,4],30],[[124,4],30],[[125,4],30],[[126,4],30],[[127,4],30],[[121,4],30],[[122,4],30],[[40,4],30],[[123,4],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[19,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[28,100],6],[[96,100],6],[[19,100],6],[[72,100],6],[[82,100],6],[[29,100],6],[[27,100],6],[[40,100],6],[[123,100],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[28,26],[19,26],[29,26],[27,26],[40,26],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[[128,[39,39]]],[[6,[96]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[25,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[129,129],[130,130],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],129],[[],130],[3],[3],[3],[3],0,[3],[3],[[129,129],8],[[130,130],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[129,4],30],[[130,4],30],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],7],[[],7],0,[[],8],[[],8],0,0,0,0,[[]],[[]],[[],9],[[],9],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[]],[[]],0,0,0,0,0,[[],42],0,[[],[[22,[[21,[20]]]]]],0,0,[13,[[22,[[21,[20]]]]]],[[],99],[[[73,[110]]],[[24,[[66,[83]]]]]],[[],16],[[],84],0,[131,42],[[]],[[]],[[],1],[[],1],[[],1],[3],[3],[3],[[]],[[]],[[],3],[[]],[[],7],[[],8],[17,131],[[131,132,[9,[[66,[3]]]],[73,[107]],[9,[3]]],[[22,[[21,[20]]]]]],0,[131,114],[[131,[73,[107]]],[[133,[[66,[93]]]]]],[131,17],0,[131,134],[[],9],[[]],[[],6],[[],6],[[],10],[[]],[[131,[73,[135]]]],0,[[]],[[]],[136,136],[[]],[[],1],[[],1],[[],1],[3],[3],[3],[136],0,[[136,4],30],[[]],[[]],[[]],[[],3],[[]],[[],7],[[],8],0,[[137,3],136],0,[[136,3]],[[136,3]],[[]],[[],9],[[]],[136],[[],6],[[],6],[[],10],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[138,138],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[138,4],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[139,13],[[6,[14,15]]]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],0,[99,139],[[[22,[140]],141],[[142,[9]]]],[140,99],[[],99],0,0,[36,17],[[36,39,39],16],[[36,39],17],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[22,141],[[142,[[9,[6]]]]]],[[],10],[[],10],[[],10],[[]],[[]],[[]],0,0,[143,42],[[]],[[]],[[]],[[]],[143,[[66,[144]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[3],[3],[[143,3,[116,[145]]],[[146,[14]]]],[[143,4],30],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],7],[[],7],[[],7],[[],8],[[],8],0,0,[143,[[9,[147]]]],[14,143],[143,[[9,[[73,[148]]]]]],0,[143,149],[[[22,[150]],141],[[142,[9]]]],[143,99],[150,99],0,0,0,[[],9],[[],9],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[22,141],[[142,[[9,[6]]]]]],[[],10],[[],10],[[]],[[]],[[143,[66,[144]]],[[146,[144]]]],[[143,[66,[148]]],143],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[80,17],[[151,13],[[6,[14,15]]]],[[],3],[[],3],[[]],[[]],[[],7],[[],7],[[],8],[[],8],0,[28,17],[[],9],[[],9],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],17],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[152,13],[[6,[14,15]]]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[[45,[39]],153,36,39,39,[66,[154]]],17],[[[45,[39]],153,[66,[154]]],17],[[[22,[155]],141],[[142,[9]]]],0,0,[155,99],0,[[[45,[39]],153],17],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[22,141],[[142,[[9,[6]]]]]],[[],10],[[],10],[[],10],[[]],[[]],[[]],0,[[156,18,19],[[22,[[21,[20]]]]]],[[156,18,19],[[24,[23]]]],[[]],[[]],[156,[[22,[[21,[20]]]]]],[[],1],[[],1],[[],1],[[156,18,28],[[22,[[21,[20]]]]]],[[156,18,28],[[24,[23]]]],[[],156],[3],[3],[3],[[156,18,29],[[22,[[21,[20]]]]]],[[156,18,29],[[24,[23]]]],[[]],[[]],[[156,18,36],[[24,[[9,[17]]]]]],[[],3],[[]],[[],7],[[],8],[156,25],[[],156],[[156,18,38],[[22,[[21,[20]]]]]],[[156,18,36],8],0,[[],9],[[]],[[156,18,40],[[22,[[21,[20]]]]]],[[156,18,40],[[24,[23]]]],[[],6],[[],6],[[],10],[[]],[[98,25,25,25,99],80],0,0,[157,42],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[157,158],0,[3],[3],[3],[3],[3],[3],0,[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[],7],[[],7],[[],8],[[],8],[[16,83],159],[[159,158],157],[[157,13],[[22,[[21,[20]]]]]],[157,99],[[157,[73,[110]]],[[24,[[66,[83]]]]]],0,[157,16],0,[157,84],[[],9],[[],9],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[]],[[]]],"c":[],"p":[[3,"Compat"],[3,"RegionStat"],[15,"usize"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"Request"],[15,"bool"],[4,"Option"],[3,"TypeId"],[3,"DistTable"],[3,"DummyDataSource"],[3,"ScanRequest"],[6,"SendableRecordBatchStream"],[3,"BoxedError"],[6,"TableInfoRef"],[6,"TableRef"],[3,"EngineContext"],[3,"AlterTableRequest"],[8,"Future"],[3,"Box"],[3,"Pin"],[6,"BoxedProcedure"],[6,"Result"],[15,"str"],[3,"TableReference"],[3,"CloseTableRequest"],[3,"CreateTableRequest"],[3,"DropTableRequest"],[6,"Result"],[4,"CloseTableResult"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[6,"TableId"],[8,"Hasher"],[3,"OpenTableRequest"],[3,"String"],[3,"TruncateTableRequest"],[4,"Error"],[8,"Any"],[8,"Error"],[3,"Backtrace"],[8,"Into"],[3,"EngineNotFoundSnafu"],[3,"EngineExistSnafu"],[3,"ColumnExistsSnafu"],[3,"ColumnNotExistsSnafu"],[3,"DuplicatedExecuteCallSnafu"],[3,"RemoveColumnInIndexSnafu"],[3,"RegionSchemaMismatchSnafu"],[3,"UnsupportedSnafu"],[3,"ParseTableOptionSnafu"],[3,"InvalidAlterRequestSnafu"],[3,"InvalidTableSnafu"],[3,"MissingTimeIndexColumnSnafu"],[3,"DatafusionSnafu"],[3,"SchemaConversionSnafu"],[8,"Clone"],[3,"TableProjectionSnafu"],[3,"TablesRecordBatchSnafu"],[3,"SchemaBuildSnafu"],[3,"BuildColumnDescriptorSnafu"],[3,"TableOperationSnafu"],[3,"Vec"],[8,"Debug"],[8,"StackError"],[3,"Demand"],[4,"StatusCode"],[3,"TableMeta"],[3,"AddColumnRequest"],[15,"slice"],[3,"TableMetaBuilder"],[3,"ColumnSchema"],[3,"ColumnDescriptor"],[4,"ConvertError"],[4,"TableMetaBuilderError"],[3,"TableInfoBuilder"],[3,"TableInfo"],[4,"TableInfoBuilderError"],[4,"AlterKind"],[4,"FilterPushDownType"],[4,"TableType"],[3,"TableIdent"],[3,"RawTableMeta"],[3,"RawTableInfo"],[3,"Utc"],[3,"DateTime"],[3,"Global"],[8,"Deserializer"],[8,"Iterator"],[4,"TableProviderFilterPushDown"],[3,"UninitializedFieldError"],[6,"ColumnId"],[3,"TableOptions"],[3,"RegionId"],[15,"u32"],[6,"SchemaRef"],[8,"Serializer"],[3,"SplitResult"],[6,"TableVersion"],[6,"ConvertResult"],[3,"TimeRangePredicateBuilder"],[6,"TimestampRange"],[3,"Predicate"],[4,"Expr"],[4,"Operator"],[4,"TimeUnit"],[3,"Expr"],[3,"RecordBatch"],[3,"RowGroupMetaData"],[8,"PruningStatistics"],[6,"SchemaRef"],[8,"PhysicalExpr"],[3,"Arc"],[3,"RowGroupPruningStatistics"],[3,"Column"],[6,"ArrayRef"],[3,"CreateDatabaseRequest"],[3,"FlushTableRequest"],[3,"CompactTableRequest"],[3,"CopyDatabaseRequest"],[3,"InsertRequest"],[3,"DeleteRequest"],[4,"CopyDirection"],[3,"CopyTableRequest"],[3,"HashMap"],[3,"TableStatistics"],[3,"ColumnStatistics"],[3,"DfTableProviderAdapter"],[3,"SessionState"],[6,"Result"],[4,"TableType"],[3,"OrderOption"],[3,"MemoryUsageMetrics"],[3,"ExecutionPlanMetricsSet"],[3,"NumbersTable"],[3,"NumbersDataSource"],[3,"NumbersStream"],[3,"Context"],[4,"Poll"],[3,"StreamScanAdapter"],[6,"PhysicalPlanRef"],[3,"TaskContext"],[6,"Result"],[3,"MetricsSet"],[3,"PhysicalSortExpr"],[4,"Partitioning"],[3,"StreamWithMetricWrapper"],[3,"EmptyDataSource"],[3,"MemtableDataSource"],[3,"RecordBatch"],[6,"RegionNumber"],[3,"MemtableStream"],[3,"MockTableEngine"],[3,"ThinTableAdapter"],[6,"DataSourceRef"],[3,"ThinTable"],[8,"TableEngine"],[8,"TableEngineProcedure"],[13,"ColumnExists"],[13,"ColumnNotExists"],[13,"RemoveColumnInIndex"],[13,"BuildColumnDescriptor"],[13,"EngineNotFound"],[13,"EngineExist"],[13,"InvalidAlterRequest"],[13,"Datafusion"],[13,"TableProjection"],[13,"ParseTableOption"],[13,"SchemaConversion"],[13,"TablesRecordBatch"],[13,"SchemaBuild"],[13,"DuplicatedExecuteCall"],[13,"RegionSchemaMismatch"],[13,"InvalidTable"],[13,"MissingTimeIndexColumn"],[13,"Unsupported"],[13,"TableOperation"],[13,"UnsupportedArrowType"],[13,"DuplicateColumn"],[13,"Serialize"],[13,"Deserialize"],[13,"ParseSchemaVersion"],[13,"CastTimeType"],[13,"ArrowCompute"],[13,"ProjectArrowSchema"],[13,"UnsupportedDefaultExpr"],[13,"Conversion"],[13,"BadArrayAccess"],[13,"InvalidTimestampIndex"],[13,"DuplicateMeta"],[13,"UnknownVector"],[13,"UnsupportedOperation"],[13,"CastType"],[13,"NullDefault"],[13,"DefaultValueType"],[13,"ToScalarValue"],[13,"InvalidTimestampPrecision"],[13,"TryFromValue"],[13,"AddColumns"],[13,"DropColumns"],[13,"RenameTable"],[8,"Table"],[8,"TableIdProvider"],[3,"EmptyTable"],[3,"MemTable"]]},\
"tests_integration":{"doc":"","t":"AAAAAAAAADDMLLLLLLLFLLLMLLLLLLLFMMLLLLLLLLLLMLLLLLLLLMMLLMLLLLLMMLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLMLLLLLLLLLLMLLMMLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLNNNDNNNNNNNNDEEDLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLFFFFFFFFFFFFMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["cluster","grpc","influxdb","instance","opentsdb","otlp","prom_store","standalone","test_util","GreptimeDbCluster","GreptimeDbClusterBuilder","_dir_guards","and","and","borrow","borrow","borrow_mut","borrow_mut","build","build_datanode_clients","build_datanodes","build_frontend","build_metasrv","cluster_name","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","create_datanode","create_datanode_client","datanode_instances","datanodes","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","frontend","init","init","into","into","into_request","into_request","is_in_subset","is_in_subset","kv_backend","kv_backend","lift_into","lift_into","meta_srv","new","or","or","sculpt","sculpt","storage_guards","store_config","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","wait_datanodes_alive","with_datanodes","with_store_config","GreptimeDbStandalone","GreptimeDbStandaloneBuilder","and","and","borrow","borrow","borrow_mut","borrow_mut","build","compat","compat","compat_mut","compat_mut","compat_ref","compat_ref","datanode_opts","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_subset","from_subset","guard","init","init","instance","instance_name","into","into","into_request","into_request","is_in_subset","is_in_subset","lift_into","lift_into","new","or","or","plugin","sculpt","sculpt","store_type","subset","subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","with_store_type","Azblob","Azblob","File","FileDirGuard","Gcs","Gcs","None","Oss","Oss","S3","S3","S3WithCache","StorageGuard","StorageType","TempDirGuard","TestGuard","__clone_box","and","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_output_stream","clone","clone_into","compat","compat","compat","compat","compat","compat_mut","compat_mut","compat_mut","compat_mut","compat_mut","compat_ref","compat_ref","compat_ref","compat_ref","compat_ref","create_datanode_opts","create_test_table","create_tmp_dir_and_datanode_opts","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from_ref","from_subset","from_subset","from_subset","from_subset","from_subset","get_test_store_config","home_guard","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","lift_into","lift_into","lift_into","lift_into","lift_into","new","or","or","or","or","or","prepare_another_catalog_and_schema","remove_all","s3_test_config","sculpt","sculpt","sculpt","sculpt","sculpt","setup_grpc_server","setup_grpc_server_with","setup_grpc_server_with_user_provider","setup_mysql_server","setup_mysql_server_with_user_provider","setup_pg_server","setup_pg_server_with_user_provider","setup_standalone_instance","setup_test_http_app","setup_test_http_app_with_frontend","setup_test_http_app_with_frontend_and_user_provider","setup_test_prom_app_with_frontend","storage_guard","subset","subset","subset","subset","subset","temp_dir","test_on","to_owned","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"tests_integration"],[9,"tests_integration::cluster"],[84,"tests_integration::standalone"],[147,"tests_integration::test_util"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,4,4,3,4,3,4,3,3,0,3,3,3,3,4,3,4,3,4,3,3,0,4,3,4,3,4,3,4,3,4,3,4,3,4,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,4,4,3,3,4,3,4,3,3,3,3,0,0,27,26,27,26,27,26,26,27,26,27,26,27,26,27,27,26,27,26,27,26,27,26,27,26,27,27,26,27,26,27,26,27,26,27,26,27,26,26,27,26,26,27,26,26,27,26,27,26,27,26,27,26,27,27,26,26,27,26,27,26,26,40,28,28,0,40,28,40,40,28,40,28,28,0,0,0,0,28,40,36,35,41,28,40,36,35,41,28,40,36,35,41,28,0,28,28,40,36,35,41,28,40,36,35,41,28,40,36,35,41,28,0,0,0,40,36,35,41,28,40,36,35,41,28,40,36,35,41,28,28,28,28,28,28,28,28,28,40,36,35,41,28,28,40,36,35,41,28,0,36,40,36,35,41,28,40,36,35,41,28,40,36,35,41,28,40,36,35,41,28,40,36,35,41,28,35,40,36,35,41,28,0,36,0,40,36,35,41,28,0,0,0,0,0,0,0,0,0,0,0,0,36,40,36,35,41,28,35,28,28,28,40,36,35,41,28,40,36,35,41,28,40,36,35,41,28,40,40,36,36,35,35,41,41,28,28,40,36,35,41,28,40,36,35,41,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[]],[[]],[[]],[[]],[3,4],[[[6,[5]],[9,[7,8]],10]],[[3,11,10]],[[3,11,[6,[5]]],[[6,[12]]]],[[3,[6,[5]]],11],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[3,14,11],8],[8],0,0,[15],[15],[15],[15],[15],[15],[[]],[[]],[[]],[[]],0,[[],15],[[],15],[[]],[[]],[[],16],[[],16],[[],17],[[],17],0,0,[[]],[[]],0,[18,3],[1,[[19,[1,1]]]],[1,[[19,[1,1]]]],[[]],[[]],0,0,[[],[[21,[20]]]],[[],[[21,[20]]]],[[],22],[[],22],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],23],[[],23],[[]],[[]],[[3,24,10]],[[3,10],3],[[3,25],3],0,0,[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[]],[[]],[[]],[[]],[26,27],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[15],[15],[15],[15],[15],[15],[[]],[[]],[[]],[[]],0,[[],15],[[],15],0,0,[[]],[[]],[[],16],[[],16],[[],17],[[],17],[[]],[[]],[18,26],[1,[[19,[1,1]]]],[1,[[19,[1,1]]]],0,[[]],[[]],0,[[],[[21,[20]]]],[[],[[21,[20]]]],[[],22],[[],22],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],23],[[],23],[[]],[[]],[[26,28],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[29],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[1,[[2,[1,1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[30,18]],[28,28],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[25,31],14],[[12,18]],[[28,18]],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[[28,28],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[28,32],33],[[28,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[34,35],[1,[[19,[1,1]]]],[1,[[19,[1,1]]]],[1,[[19,[1,1]]]],[1,[[19,[1,1]]]],[1,[[19,[1,1]]]],[12],[36],[[],37],[[]],[[]],[[]],[[]],[[]],[[28,18]],[[28,18,[22,[38]],[22,[39]]]],[[28,18,[22,[38]]]],[[28,18]],[[28,18,[22,[38]]]],[[28,18]],[[28,18,[22,[38]]]],[[18,28],27],[[28,18]],[[28,18]],[[28,18,[22,[38]]]],[[28,18]],0,[[],[[21,[20]]]],[[],[[21,[20]]]],[[],[[21,[20]]]],[[],[[21,[20]]]],[[],[[21,[20]]]],0,[28,17],[[]],[[],31],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],23],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[8,"Policy"],[3,"And"],[3,"GreptimeDbClusterBuilder"],[3,"GreptimeDbCluster"],[3,"DatanodeClients"],[3,"Arc"],[6,"DatanodeId"],[3,"Datanode"],[3,"HashMap"],[15,"u32"],[3,"MockInfo"],[3,"Instance"],[3,"Compat"],[3,"DatanodeOptions"],[15,"usize"],[3,"Request"],[15,"bool"],[15,"str"],[3,"Or"],[4,"CNil"],[4,"Result"],[4,"Option"],[3,"TypeId"],[6,"MetaPeerClientRef"],[4,"ObjectStoreConfig"],[3,"GreptimeDbStandaloneBuilder"],[3,"GreptimeDbStandalone"],[4,"StorageType"],[3,"Private"],[4,"Output"],[3,"String"],[3,"Formatter"],[6,"Result"],[3,"TempDir"],[3,"FileDirGuard"],[3,"TestGuard"],[3,"S3Config"],[6,"UserProviderRef"],[3,"GrpcServerConfig"],[4,"TempDirGuard"],[3,"StorageGuard"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
